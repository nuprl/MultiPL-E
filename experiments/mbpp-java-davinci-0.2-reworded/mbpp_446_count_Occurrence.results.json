{
  "name": "mbpp_446_count_Occurrence",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_446_count_Occurrence.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmp9msbc2zn.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp9msbc2zn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (Object obj : (List) lst) {\n            if (obj.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmp82v8wuul.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp82v8wuul.java:23: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp82v8wuul.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp82v8wuul.java:24: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpfcs9pehf.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfcs9pehf.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpfcs9pehf.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfcs9pehf.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object obj : list) {\n                    if (obj instanceof Pair) {\n                        Pair<Object, Object> pair2 = (Pair<Object, Object>) obj;\n                        if (pair.getValue0().equals(pair2.getValue0()) && pair.getValue1().equals(pair2.getValue1())) {\n                            count++;\n                        }\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmp_ur980eq.java:29: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp_ur980eq.java:29: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp_ur980eq.java:30: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp_ur980eq.java:30: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List) lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187160,
      "stdout": "",
      "stderr": "/tmp/tmp_mz4ij8o.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp_mz4ij8o.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp_mz4ij8o.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp_mz4ij8o.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object x : (List) lst) {\n            if (x.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187160,
      "stdout": "",
      "stderr": "/tmp/tmpxav34ob7.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxav34ob7.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpxav34ob7.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxav34ob7.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object obj : list) {\n                    if (obj.equals(pair.getValue0()) || obj.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpu4n2ca77.java:29: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpu4n2ca77.java:29: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpu4n2ca77.java:30: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpu4n2ca77.java:30: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object i : (List) lst) {\n            if (i.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpj8cyuicp.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpj8cyuicp.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpj8cyuicp.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpj8cyuicp.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object i : (List) lst) {\n            if (i.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpj8cyuicp.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpj8cyuicp.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpj8cyuicp.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpj8cyuicp.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmp9msbc2zn.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp9msbc2zn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List) lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187160,
      "stdout": "",
      "stderr": "/tmp/tmp_mz4ij8o.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp_mz4ij8o.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp_mz4ij8o.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp_mz4ij8o.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpl1gbpdh_.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpl1gbpdh_.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpl1gbpdh_.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpl1gbpdh_.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object obj : (List) lst) {\n            if (obj.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpse0huh7t.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpse0huh7t.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpse0huh7t.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpse0huh7t.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object obj : list) {\n                    if (obj instanceof Pair) {\n                        Pair<Object, Object> pair2 = (Pair<Object, Object>) obj;\n                        if (pair.getValue0().equals(pair2.getValue0()) && pair.getValue1().equals(pair2.getValue1())) {\n                            count++;\n                        }\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpbklw41fg.java:32: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpbklw41fg.java:32: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpbklw41fg.java:33: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpbklw41fg.java:33: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object o : list) {\n                    if (o.equals(pair.getValue0()) || o.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqreamlws.java:26: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqreamlws.java:26: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqreamlws.java:27: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqreamlws.java:27: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for(Object o : (List)lst) {\n            if(o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187164,
      "stdout": "",
      "stderr": "/tmp/tmpk0kb1e5e.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpk0kb1e5e.java:23: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpk0kb1e5e.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpk0kb1e5e.java:24: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmp9msbc2zn.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp9msbc2zn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof ArrayList) {\n                ArrayList<Object> list = (ArrayList<Object>) lst;\n                for (Object obj : list) {\n                    if (obj.equals(pair.getValue0()) || obj.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187164,
      "stdout": "",
      "stderr": "/tmp/tmpseloiooq.java:26: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpseloiooq.java:26: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpseloiooq.java:27: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpseloiooq.java:27: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object e : (List) lst) {\n            if (e.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187164,
      "stdout": "",
      "stderr": "/tmp/tmpar60o7o8.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpar60o7o8.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpar60o7o8.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpar60o7o8.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream()\n            .filter(x -> x.equals(tup))\n            .count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187164,
      "stdout": "",
      "stderr": "/tmp/tmp5achn_3g.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp5achn_3g.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp5achn_3g.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp5achn_3g.java:17: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object obj : list) {\n                    if (obj instanceof Pair) {\n                        Pair<Object, Object> pair2 = (Pair<Object, Object>) obj;\n                        if (pair.getValue0().equals(pair2.getValue0()) && pair.getValue1().equals(pair2.getValue1())) {\n                            count++;\n                        }\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmp_ur980eq.java:29: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp_ur980eq.java:29: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp_ur980eq.java:30: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp_ur980eq.java:30: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List)lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187164,
      "stdout": "",
      "stderr": "/tmp/tmpiuwgyfwv.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpiuwgyfwv.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpiuwgyfwv.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpiuwgyfwv.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if(tup instanceof Pair) {\n            Pair<Integer, Integer> pair = (Pair<Integer, Integer>) tup;\n            if(lst instanceof ArrayList) {\n                ArrayList<Integer> list = (ArrayList<Integer>) lst;\n                for(int i = 0; i < list.size() - 1; i++) {\n                    if(list.get(i) == pair.getValue0() && list.get(i + 1) == pair.getValue1()) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187166,
      "stdout": "",
      "stderr": "/tmp/tmpzq_5wshg.java:29: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpzq_5wshg.java:29: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpzq_5wshg.java:30: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpzq_5wshg.java:30: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmp9msbc2zn.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp9msbc2zn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List) lst) {\n            if (o.equals(tup)) {\n                count += 1;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187166,
      "stdout": "",
      "stderr": "/tmp/tmp5gy9l7o8.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp5gy9l7o8.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp5gy9l7o8.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp5gy9l7o8.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for(Object x : (List)lst) {\n            if(x.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187166,
      "stdout": "",
      "stderr": "/tmp/tmp26_plyuo.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp26_plyuo.java:23: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp26_plyuo.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp26_plyuo.java:24: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187166,
      "stdout": "",
      "stderr": "/tmp/tmppu4i132m.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppu4i132m.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppu4i132m.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppu4i132m.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        List<Object> list = (List<Object>) lst;\n        return list.stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187166,
      "stdout": "",
      "stderr": "/tmp/tmpe4rzwtd6.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpe4rzwtd6.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpe4rzwtd6.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpe4rzwtd6.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List) lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187160,
      "stdout": "",
      "stderr": "/tmp/tmp_mz4ij8o.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp_mz4ij8o.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp_mz4ij8o.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp_mz4ij8o.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187166,
      "stdout": "",
      "stderr": "/tmp/tmppu4i132m.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppu4i132m.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppu4i132m.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppu4i132m.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187166,
      "stdout": "",
      "stderr": "/tmp/tmppu4i132m.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppu4i132m.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppu4i132m.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppu4i132m.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object obj : list) {\n                    if (obj.equals(pair.getValue0()) || obj.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187167,
      "stdout": "",
      "stderr": "/tmp/tmp4ejz3x54.java:26: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp4ejz3x54.java:26: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp4ejz3x54.java:27: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp4ejz3x54.java:27: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187166,
      "stdout": "",
      "stderr": "/tmp/tmppu4i132m.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppu4i132m.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppu4i132m.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppu4i132m.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object i : (List<Object>) lst) {\n            if (i.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187168,
      "stdout": "",
      "stderr": "/tmp/tmp1ia6d60f.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp1ia6d60f.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1ia6d60f.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp1ia6d60f.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpfcs9pehf.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfcs9pehf.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpfcs9pehf.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfcs9pehf.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        long count = 0;\n        for (Object i : (List) lst) {\n            if (i.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187168,
      "stdout": "",
      "stderr": "/tmp/tmpf37rrtit.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpf37rrtit.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpf37rrtit.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpf37rrtit.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmp9msbc2zn.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp9msbc2zn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object elem : (List) lst) {\n            if (elem.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187167,
      "stdout": "",
      "stderr": "/tmp/tmp525t7q_c.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp525t7q_c.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp525t7q_c.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp525t7q_c.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        long count = 0;\n        for (Object i : (List)lst) {\n            if (i.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187168,
      "stdout": "",
      "stderr": "/tmp/tmp66vfm2gf.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp66vfm2gf.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp66vfm2gf.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp66vfm2gf.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object o : list) {\n                    if (o.equals(pair.getValue0()) || o.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqreamlws.java:26: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqreamlws.java:26: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqreamlws.java:27: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqreamlws.java:27: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpfcs9pehf.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfcs9pehf.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpfcs9pehf.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfcs9pehf.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object e : (List) lst) {\n            if (e.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187164,
      "stdout": "",
      "stderr": "/tmp/tmpar60o7o8.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpar60o7o8.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpar60o7o8.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpar60o7o8.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmp9msbc2zn.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp9msbc2zn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpfcs9pehf.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfcs9pehf.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpfcs9pehf.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfcs9pehf.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmp9msbc2zn.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp9msbc2zn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object obj : (List) lst) {\n            if (obj.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpse0huh7t.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpse0huh7t.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpse0huh7t.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpse0huh7t.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return (long) lst.getClass().getMethod(\"stream\").invoke(lst)\n            .getClass().getMethod(\"filter\", Object.class)\n            .invoke(lst.getClass().getMethod(\"stream\").invoke(lst),\n                    new Object[] {\n                        new Function() {\n                            public Object apply(Object x) {\n                                return tup.getClass().getMethod(\"contains\", Object.class).invoke(tup, x);\n                            }\n                        }\n                    })\n            .getClass().getMethod(\"count\").invoke(lst.getClass().getMethod(\"stream\").invoke(lst));\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187169,
      "stdout": "",
      "stderr": "/tmp/tmp421izwqg.java:15: error: cannot find symbol\n                        new Function() {\n                            ^\n  symbol:   class Function\n  location: class Problem\n/tmp/tmp421izwqg.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp421izwqg.java:24: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp421izwqg.java:25: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp421izwqg.java:25: error: constructor Objec",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return Stream.of((Object[]) lst)\n            .filter(x -> x.equals(tup))\n            .count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187169,
      "stdout": "",
      "stderr": "/tmp/tmplphztpbf.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmplphztpbf.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmplphztpbf.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmplphztpbf.java:17: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object obj : list) {\n                    if (obj.equals(pair.getValue0()) || obj.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187167,
      "stdout": "",
      "stderr": "/tmp/tmp4ejz3x54.java:26: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp4ejz3x54.java:26: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp4ejz3x54.java:27: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp4ejz3x54.java:27: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpfcs9pehf.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfcs9pehf.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpfcs9pehf.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfcs9pehf.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmp9msbc2zn.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp9msbc2zn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List)lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187164,
      "stdout": "",
      "stderr": "/tmp/tmpiuwgyfwv.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpiuwgyfwv.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpiuwgyfwv.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpiuwgyfwv.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List) lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187160,
      "stdout": "",
      "stderr": "/tmp/tmp_mz4ij8o.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp_mz4ij8o.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp_mz4ij8o.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp_mz4ij8o.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmp9msbc2zn.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp9msbc2zn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object elem : (List<Object>) lst) {\n            if (elem.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187169,
      "stdout": "",
      "stderr": "/tmp/tmp30zmo8mc.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp30zmo8mc.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp30zmo8mc.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp30zmo8mc.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object o : list) {\n                    if (o.equals(pair.getValue0()) || o.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqreamlws.java:26: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqreamlws.java:26: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqreamlws.java:27: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqreamlws.java:27: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object x : (List<Object>) lst) {\n            if (x.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187169,
      "stdout": "",
      "stderr": "/tmp/tmpsras3uo3.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpsras3uo3.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpsras3uo3.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpsras3uo3.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187166,
      "stdout": "",
      "stderr": "/tmp/tmppu4i132m.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppu4i132m.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppu4i132m.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppu4i132m.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object obj : list) {\n                    if (obj.equals(pair.getValue0()) || obj.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187167,
      "stdout": "",
      "stderr": "/tmp/tmp4ejz3x54.java:26: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp4ejz3x54.java:26: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp4ejz3x54.java:27: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp4ejz3x54.java:27: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpfcs9pehf.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfcs9pehf.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpfcs9pehf.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfcs9pehf.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List) lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187160,
      "stdout": "",
      "stderr": "/tmp/tmp_mz4ij8o.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp_mz4ij8o.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp_mz4ij8o.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp_mz4ij8o.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187166,
      "stdout": "",
      "stderr": "/tmp/tmppu4i132m.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppu4i132m.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppu4i132m.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppu4i132m.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof ArrayList) {\n                ArrayList<Object> list = (ArrayList<Object>) lst;\n                for (Object obj : list) {\n                    if (obj instanceof Pair) {\n                        Pair<Object, Object> p = (Pair<Object, Object>) obj;\n                        if (p.getValue0().equals(pair.getValue0()) && p.getValue1().equals(pair.getValue1())) {\n                            count++;\n                        }\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187169,
      "stdout": "",
      "stderr": "/tmp/tmpy0sxe8qg.java:30: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpy0sxe8qg.java:30: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpy0sxe8qg.java:31: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpy0sxe8qg.java:31: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof ArrayList) {\n                ArrayList<Object> list = (ArrayList<Object>) lst;\n                for (Object obj : list) {\n                    if (obj.equals(pair.getValue0()) || obj.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187164,
      "stdout": "",
      "stderr": "/tmp/tmpseloiooq.java:26: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpseloiooq.java:26: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpseloiooq.java:27: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpseloiooq.java:27: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List) lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187160,
      "stdout": "",
      "stderr": "/tmp/tmp_mz4ij8o.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp_mz4ij8o.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp_mz4ij8o.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp_mz4ij8o.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object obj : (List) lst) {\n            if (obj.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpse0huh7t.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpse0huh7t.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpse0huh7t.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpse0huh7t.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmp9msbc2zn.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp9msbc2zn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List) lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187160,
      "stdout": "",
      "stderr": "/tmp/tmp_mz4ij8o.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp_mz4ij8o.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp_mz4ij8o.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp_mz4ij8o.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if(tup instanceof Pair) {\n            Pair<?, ?> pair = (Pair<?, ?>) tup;\n            if(lst instanceof List) {\n                List<?> list = (List<?>) lst;\n                for(Object o : list) {\n                    if(o.equals(pair.getValue0()) || o.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187171,
      "stdout": "",
      "stderr": "/tmp/tmp2xew13yt.java:29: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp2xew13yt.java:29: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp2xew13yt.java:30: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp2xew13yt.java:30: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        long count = 0;\n        for(Object o : (List)lst) {\n            if(o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187171,
      "stdout": "",
      "stderr": "/tmp/tmp2x15sqrq.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp2x15sqrq.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp2x15sqrq.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp2x15sqrq.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187171,
      "stdout": "",
      "stderr": "/tmp/tmpjpaj3zim.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjpaj3zim.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpjpaj3zim.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjpaj3zim.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187171,
      "stdout": "",
      "stderr": "/tmp/tmps4h888g2.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmps4h888g2.java:17: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmps4h888g2.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmps4h888g2.java:18: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmp9msbc2zn.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp9msbc2zn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair t = (Pair) tup;\n            if (lst instanceof List) {\n                List l = (List) lst;\n                for (Object o : l) {\n                    if (o instanceof Pair) {\n                        Pair p = (Pair) o;\n                        if (p.getValue0().equals(t.getValue0()) && p.getValue1().equals(t.getValue1())) {\n                            count++;\n                        }\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187171,
      "stdout": "",
      "stderr": "/tmp/tmp88i1y7rj.java:29: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp88i1y7rj.java:29: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp88i1y7rj.java:30: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp88i1y7rj.java:30: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return (long) lst.getClass().getMethod(\"stream\").invoke(lst)\n            .getClass().getMethod(\"filter\", java.util.function.Predicate.class)\n            .invoke(lst, (Predicate<Object>) (x) -> x.equals(tup))\n            .getClass().getMethod(\"count\").invoke(lst);\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187172,
      "stdout": "",
      "stderr": "/tmp/tmpyc20d5bv.java:13: error: cannot find symbol\n            .invoke(lst, (Predicate<Object>) (x) -> x.equals(tup))\n                          ^\n  symbol:   class Predicate\n  location: class Problem\n/tmp/tmpyc20d5bv.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpyc20d5bv.java:17: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpyc20d5bv.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpyc20d5bv.java:18:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        long count = 0;\n        for (Object o : (List<Object>)lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187172,
      "stdout": "",
      "stderr": "/tmp/tmpr8uy8uzv.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpr8uy8uzv.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpr8uy8uzv.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpr8uy8uzv.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmp9msbc2zn.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp9msbc2zn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmp9msbc2zn.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp9msbc2zn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        long count = 0;\n        for (Object i : (List) lst) {\n            if (i.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187168,
      "stdout": "",
      "stderr": "/tmp/tmpf37rrtit.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpf37rrtit.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpf37rrtit.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpf37rrtit.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmp9msbc2zn.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp9msbc2zn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187171,
      "stdout": "",
      "stderr": "/tmp/tmpjpaj3zim.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjpaj3zim.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpjpaj3zim.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjpaj3zim.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187166,
      "stdout": "",
      "stderr": "/tmp/tmppu4i132m.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppu4i132m.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppu4i132m.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppu4i132m.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            Object first = pair.getValue0();\n            Object second = pair.getValue1();\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object o : list) {\n                    if (o instanceof Pair) {\n                        Pair<Object, Object> pair2 = (Pair<Object, Object>) o;\n                        Object first2 = pair2.getValue0();\n                        Object second2 = pair2.getValue1();\n                        if (first.equals(first2) && second.equals(second2)) {\n                            count++;\n                        }\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187173,
      "stdout": "",
      "stderr": "/tmp/tmp9q91xp3y.java:33: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9q91xp3y.java:33: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp9q91xp3y.java:34: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9q91xp3y.java:34: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                return list.stream().filter(x -> x.equals(pair.getValue0()) || x.equals(pair.getValue1())).count();\n            }\n        }\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187173,
      "stdout": "",
      "stderr": "/tmp/tmpaxe1qocx.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpaxe1qocx.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpaxe1qocx.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpaxe1qocx.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object x : (List) lst) {\n            if (x.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187160,
      "stdout": "",
      "stderr": "/tmp/tmpxav34ob7.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxav34ob7.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpxav34ob7.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxav34ob7.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpfcs9pehf.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfcs9pehf.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpfcs9pehf.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfcs9pehf.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmp9msbc2zn.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp9msbc2zn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object item : (List<Object>) lst) {\n            if (item.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187173,
      "stdout": "",
      "stderr": "/tmp/tmpsy9jq8hl.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpsy9jq8hl.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpsy9jq8hl.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpsy9jq8hl.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object x : (List) lst) {\n            if (x.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187160,
      "stdout": "",
      "stderr": "/tmp/tmpxav34ob7.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxav34ob7.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpxav34ob7.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxav34ob7.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpfcs9pehf.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfcs9pehf.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpfcs9pehf.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfcs9pehf.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(e -> e.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187174,
      "stdout": "",
      "stderr": "/tmp/tmpin8tu0u3.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpin8tu0u3.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpin8tu0u3.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpin8tu0u3.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmp9msbc2zn.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp9msbc2zn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9msbc2zn.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        List<Object> list = (List<Object>) lst;\n        long count = 0;\n        for (Object o : list) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187174,
      "stdout": "",
      "stderr": "/tmp/tmppsnzzpae.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppsnzzpae.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppsnzzpae.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppsnzzpae.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187161,
      "stdout": "",
      "stderr": "/tmp/tmpg3oqr1_q.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpg3oqr1_q.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpg3oqr1_q.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        List<Object> l = (List<Object>)lst;\n        return l.stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187175,
      "stdout": "",
      "stderr": "/tmp/tmpnj6pegy9.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpnj6pegy9.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnj6pegy9.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpnj6pegy9.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        List<Object> list = (List<Object>) lst;\n        long count = 0;\n        for (Object o : list) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187174,
      "stdout": "",
      "stderr": "/tmp/tmppsnzzpae.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppsnzzpae.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppsnzzpae.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppsnzzpae.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187166,
      "stdout": "",
      "stderr": "/tmp/tmppu4i132m.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppu4i132m.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppu4i132m.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppu4i132m.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        List<Object> list = (List<Object>) lst;\n        return list.stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187175,
      "stdout": "",
      "stderr": "/tmp/tmpqfems4ot.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqfems4ot.java:18: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqfems4ot.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqfems4ot.java:19: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List) lst) {\n            if (o.equals(tup)) count++;\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187174,
      "stdout": "",
      "stderr": "/tmp/tmp003urdlc.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp003urdlc.java:18: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp003urdlc.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp003urdlc.java:19: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof ArrayList) {\n                ArrayList<Object> list = (ArrayList<Object>) lst;\n                for (Object item : list) {\n                    if (item.equals(pair.getValue0()) || item.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187176,
      "stdout": "",
      "stderr": "/tmp/tmpy48dpj5c.java:26: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpy48dpj5c.java:26: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpy48dpj5c.java:27: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpy48dpj5c.java:27: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List)lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187164,
      "stdout": "",
      "stderr": "/tmp/tmpiuwgyfwv.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpiuwgyfwv.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpiuwgyfwv.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpiuwgyfwv.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187171,
      "stdout": "",
      "stderr": "/tmp/tmpjpaj3zim.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjpaj3zim.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpjpaj3zim.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjpaj3zim.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(e -> e.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187176,
      "stdout": "",
      "stderr": "/tmp/tmpzy4cs1fu.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpzy4cs1fu.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpzy4cs1fu.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpzy4cs1fu.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            for (Object obj : (List<Object>) lst) {\n                if (obj.equals(pair.getValue0()) || obj.equals(pair.getValue1())) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187176,
      "stdout": "",
      "stderr": "/tmp/tmpajornluq.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpajornluq.java:23: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpajornluq.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpajornluq.java:24: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (Object o : (List)lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187176,
      "stdout": "",
      "stderr": "/tmp/tmpzqetecul.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpzqetecul.java:23: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpzqetecul.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpzqetecul.java:24: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187162,
      "stdout": "",
      "stderr": "/tmp/tmpqokuqvue.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqokuqvue.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqokuqvue.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for(Object o : (List)lst) {\n            if(o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187164,
      "stdout": "",
      "stderr": "/tmp/tmpk0kb1e5e.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpk0kb1e5e.java:23: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpk0kb1e5e.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpk0kb1e5e.java:24: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1667187159,
      "stdout": "",
      "stderr": "/tmp/tmpq11at626.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                               ^\n  required: A#1,B#1\n  found: String,String,String,String,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found: List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpq11at626.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                               ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq11at626.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (lon",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
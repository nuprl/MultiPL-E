{
  "name": "mbpp_446_count_Occurrence",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_446_count_Occurrence.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmprtebslcj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprtebslcj.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (Object obj : (List) lst) {\n            if (obj.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpl5s6jzg6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpl5s6jzg6.java:23: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpl5s6jzg6.java:23: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpl5s6jzg6.java:24: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpl5s6jzg6.java:24: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpl5s6jzg6.java:25: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpl5s6jzg6.java:25: error: constructor Object in class Obj",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmppn1hta_u.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmppn1hta_u.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppn1hta_u.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppn1hta_u.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:17: error: constructor Object in class Obj",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object obj : list) {\n                    if (obj instanceof Pair) {\n                        Pair<Object, Object> pair2 = (Pair<Object, Object>) obj;\n                        if (pair.getValue0().equals(pair2.getValue0()) && pair.getValue1().equals(pair2.getValue1())) {\n                            count++;\n                        }\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpj127cqo8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpj127cqo8.java:12: error: cannot find symbol\n        if (tup instanceof Pair) {\n                           ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpj127cqo8.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpj127cqo8.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n                                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpj127cqo8.java:17: error: cannot find symbol\n                    if (obj instanceof Pair) {\n                                       ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpj127cqo8.java:18: error: cannot find symbol\n                        Pair<Object, Object> pair2 = (Pair<Object, Object>) obj;\n                        ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpj127cqo8.java:18: error: cannot find symbol\n                        Pair<Object, Object> pair2 = (Pair<Object, Object>) obj;\n                                                      ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpj127cqo8.java:29: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpj127cqo8.java:29: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpj127cqo8.java:30: error: cannot find symbol\n    assert(countOccurrence(Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List) lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpyj_5gg75.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpyj_5gg75.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpyj_5gg75.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpyj_5gg75.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpyj_5gg75.java:21: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object x : (List) lst) {\n            if (x.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmprnqzc2ow.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprnqzc2ow.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprnqzc2ow.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprnqzc2ow.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprnqzc2ow.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprnqzc2ow.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprnqzc2ow.java:22: error: constructor Object in class Obj",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object obj : list) {\n                    if (obj.equals(pair.getValue0()) || obj.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmph4bh22zm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmph4bh22zm.java:15: error: cannot find symbol\n        if (tup instanceof Pair) {\n                           ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmph4bh22zm.java:16: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmph4bh22zm.java:16: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n                                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmph4bh22zm.java:29: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmph4bh22zm.java:29: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmph4bh22zm.java:30: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmph4bh22zm.java:30: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmph4bh22zm.j",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object i : (List) lst) {\n            if (i.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpdrck97of.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpdrck97of.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpdrck97of.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpdrck97of.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpdrck97of.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpdrck97of.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpdrck97of.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object i : (List) lst) {\n            if (i.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpdrck97of.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpdrck97of.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpdrck97of.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpdrck97of.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpdrck97of.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpdrck97of.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpdrck97of.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmprtebslcj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprtebslcj.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List) lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpyj_5gg75.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpyj_5gg75.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpyj_5gg75.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpyj_5gg75.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpyj_5gg75.java:21: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp4i1s2zsg.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp4i1s2zsg.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp4i1s2zsg.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp4i1s2zsg.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp4i1s2zsg.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp4i1s2zsg.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp4i1s2zsg.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object obj : (List) lst) {\n            if (obj.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmplm9_f19m.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmplm9_f19m.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmplm9_f19m.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmplm9_f19m.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmplm9_f19m.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmplm9_f19m.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmplm9_f19m.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object obj : list) {\n                    if (obj instanceof Pair) {\n                        Pair<Object, Object> pair2 = (Pair<Object, Object>) obj;\n                        if (pair.getValue0().equals(pair2.getValue0()) && pair.getValue1().equals(pair2.getValue1())) {\n                            count++;\n                        }\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp8wa7x4vt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp8wa7x4vt.java:15: error: cannot find symbol\n        if (tup instanceof Pair) {\n                           ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8wa7x4vt.java:16: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8wa7x4vt.java:16: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n                                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8wa7x4vt.java:20: error: cannot find symbol\n                    if (obj instanceof Pair) {\n                                       ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8wa7x4vt.java:21: error: cannot find symbol\n                        Pair<Object, Object> pair2 = (Pair<Object, Object>) obj;\n                        ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8wa7x4vt.java:21: error: cannot find symbol\n                        Pair<Object, Object> pair2 = (Pair<Object, Object>) obj;\n                                                      ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8wa7x4vt.java:32: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp8wa7x4vt.java:32: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp8wa7x4vt.java:33: error: cannot find symbol\n    assert(countOccurrence(Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object o : list) {\n                    if (o.equals(pair.getValue0()) || o.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp8rcwh1f9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp8rcwh1f9.java:12: error: cannot find symbol\n        if (tup instanceof Pair) {\n                           ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8rcwh1f9.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8rcwh1f9.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n                                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8rcwh1f9.java:26: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp8rcwh1f9.java:26: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp8rcwh1f9.java:27: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp8rcwh1f9.java:27: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp8rcwh1f9.j",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for(Object o : (List)lst) {\n            if(o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp4om38wqw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp4om38wqw.java:23: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp4om38wqw.java:23: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp4om38wqw.java:24: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp4om38wqw.java:24: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp4om38wqw.java:25: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp4om38wqw.java:25: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmprtebslcj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprtebslcj.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof ArrayList) {\n                ArrayList<Object> list = (ArrayList<Object>) lst;\n                for (Object obj : list) {\n                    if (obj.equals(pair.getValue0()) || obj.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp72g8s8by.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp72g8s8by.java:12: error: cannot find symbol\n        if (tup instanceof Pair) {\n                           ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp72g8s8by.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp72g8s8by.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n                                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp72g8s8by.java:26: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp72g8s8by.java:26: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp72g8s8by.java:27: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp72g8s8by.java:27: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp72g8s8by.j",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object e : (List) lst) {\n            if (e.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpxntk9dig.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpxntk9dig.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpxntk9dig.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpxntk9dig.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpxntk9dig.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpxntk9dig.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpxntk9dig.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream()\n            .filter(x -> x.equals(tup))\n            .count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp_lh8in1t.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_lh8in1t.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp_lh8in1t.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp_lh8in1t.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp_lh8in1t.java:17: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp_lh8in1t.java:18: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp_lh8in1t.java:18: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object obj : list) {\n                    if (obj instanceof Pair) {\n                        Pair<Object, Object> pair2 = (Pair<Object, Object>) obj;\n                        if (pair.getValue0().equals(pair2.getValue0()) && pair.getValue1().equals(pair2.getValue1())) {\n                            count++;\n                        }\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpj127cqo8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpj127cqo8.java:12: error: cannot find symbol\n        if (tup instanceof Pair) {\n                           ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpj127cqo8.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpj127cqo8.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n                                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpj127cqo8.java:17: error: cannot find symbol\n                    if (obj instanceof Pair) {\n                                       ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpj127cqo8.java:18: error: cannot find symbol\n                        Pair<Object, Object> pair2 = (Pair<Object, Object>) obj;\n                        ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpj127cqo8.java:18: error: cannot find symbol\n                        Pair<Object, Object> pair2 = (Pair<Object, Object>) obj;\n                                                      ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpj127cqo8.java:29: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpj127cqo8.java:29: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpj127cqo8.java:30: error: cannot find symbol\n    assert(countOccurrence(Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List)lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpduwrqlv6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpduwrqlv6.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpduwrqlv6.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpduwrqlv6.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpduwrqlv6.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpduwrqlv6.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpduwrqlv6.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if(tup instanceof Pair) {\n            Pair<Integer, Integer> pair = (Pair<Integer, Integer>) tup;\n            if(lst instanceof ArrayList) {\n                ArrayList<Integer> list = (ArrayList<Integer>) lst;\n                for(int i = 0; i < list.size() - 1; i++) {\n                    if(list.get(i) == pair.getValue0() && list.get(i + 1) == pair.getValue1()) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpqri4arfp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpqri4arfp.java:15: error: cannot find symbol\n        if(tup instanceof Pair) {\n                          ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpqri4arfp.java:16: error: cannot find symbol\n            Pair<Integer, Integer> pair = (Pair<Integer, Integer>) tup;\n            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpqri4arfp.java:16: error: cannot find symbol\n            Pair<Integer, Integer> pair = (Pair<Integer, Integer>) tup;\n                                           ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpqri4arfp.java:29: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpqri4arfp.java:29: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqri4arfp.java:30: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpqri4arfp.java:30: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqr",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmprtebslcj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprtebslcj.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List) lst) {\n            if (o.equals(tup)) {\n                count += 1;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpx3vc7o7g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpx3vc7o7g.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpx3vc7o7g.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpx3vc7o7g.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpx3vc7o7g.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpx3vc7o7g.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpx3vc7o7g.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for(Object x : (List)lst) {\n            if(x.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp9vcyxfl7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp9vcyxfl7.java:23: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp9vcyxfl7.java:23: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp9vcyxfl7.java:24: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp9vcyxfl7.java:24: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp9vcyxfl7.java:25: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp9vcyxfl7.java:25: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp1i6n00y3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1i6n00y3.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1i6n00y3.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1i6n00y3.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:17: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        List<Object> list = (List<Object>) lst;\n        return list.stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "/tmp/tmpc0gtf9br.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpc0gtf9br.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpc0gtf9br.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpc0gtf9br.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpc0gtf9br.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpc0gtf9br.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpc0gtf9br.java:17: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List) lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpyj_5gg75.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpyj_5gg75.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpyj_5gg75.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpyj_5gg75.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpyj_5gg75.java:21: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp1i6n00y3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1i6n00y3.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1i6n00y3.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1i6n00y3.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:17: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp1i6n00y3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1i6n00y3.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1i6n00y3.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1i6n00y3.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:17: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object obj : list) {\n                    if (obj.equals(pair.getValue0()) || obj.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmphrkgzsvs.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmphrkgzsvs.java:12: error: cannot find symbol\n        if (tup instanceof Pair) {\n                           ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphrkgzsvs.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphrkgzsvs.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n                                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphrkgzsvs.java:26: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmphrkgzsvs.java:26: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmphrkgzsvs.java:27: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmphrkgzsvs.java:27: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmphrkgzsvs.j",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp1i6n00y3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1i6n00y3.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1i6n00y3.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1i6n00y3.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:17: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object i : (List<Object>) lst) {\n            if (i.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpdb3uccoc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpdb3uccoc.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpdb3uccoc.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpdb3uccoc.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpdb3uccoc.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpdb3uccoc.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpdb3uccoc.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmppn1hta_u.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmppn1hta_u.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppn1hta_u.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppn1hta_u.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:17: error: constructor Object in class Obj",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        long count = 0;\n        for (Object i : (List) lst) {\n            if (i.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp7_ut97zi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp7_ut97zi.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp7_ut97zi.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp7_ut97zi.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp7_ut97zi.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp7_ut97zi.java:23: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp7_ut97zi.java:23: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmprtebslcj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprtebslcj.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object elem : (List) lst) {\n            if (elem.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpmhwe8hfh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpmhwe8hfh.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpmhwe8hfh.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpmhwe8hfh.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpmhwe8hfh.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpmhwe8hfh.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpmhwe8hfh.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        long count = 0;\n        for (Object i : (List)lst) {\n            if (i.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpmyu674q7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpmyu674q7.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpmyu674q7.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpmyu674q7.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpmyu674q7.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpmyu674q7.java:23: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpmyu674q7.java:23: error: constructor Object in class Obj",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object o : list) {\n                    if (o.equals(pair.getValue0()) || o.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp8rcwh1f9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp8rcwh1f9.java:12: error: cannot find symbol\n        if (tup instanceof Pair) {\n                           ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8rcwh1f9.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8rcwh1f9.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n                                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8rcwh1f9.java:26: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp8rcwh1f9.java:26: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp8rcwh1f9.java:27: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp8rcwh1f9.java:27: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp8rcwh1f9.j",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmppn1hta_u.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmppn1hta_u.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppn1hta_u.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppn1hta_u.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:17: error: constructor Object in class Obj",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object e : (List) lst) {\n            if (e.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpxntk9dig.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpxntk9dig.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpxntk9dig.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpxntk9dig.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpxntk9dig.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpxntk9dig.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpxntk9dig.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmprtebslcj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprtebslcj.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmppn1hta_u.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmppn1hta_u.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppn1hta_u.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppn1hta_u.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:17: error: constructor Object in class Obj",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmprtebslcj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprtebslcj.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object obj : (List) lst) {\n            if (obj.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmplm9_f19m.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmplm9_f19m.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmplm9_f19m.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmplm9_f19m.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmplm9_f19m.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmplm9_f19m.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmplm9_f19m.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return (long) lst.getClass().getMethod(\"stream\").invoke(lst)\n            .getClass().getMethod(\"filter\", Object.class)\n            .invoke(lst.getClass().getMethod(\"stream\").invoke(lst),\n                    new Object[] {\n                        new Function() {\n                            public Object apply(Object x) {\n                                return tup.getClass().getMethod(\"contains\", Object.class).invoke(tup, x);\n                            }\n                        }\n                    })\n            .getClass().getMethod(\"count\").invoke(lst.getClass().getMethod(\"stream\").invoke(lst));\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpkpql_09b.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpkpql_09b.java:15: error: cannot find symbol\n                        new Function() {\n                            ^\n  symbol:   class Function\n  location: class Problem\n/tmp/tmpkpql_09b.java:24: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpkpql_09b.java:24: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpkpql_09b.java:25: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpkpql_09b.java:25: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return Stream.of((Object[]) lst)\n            .filter(x -> x.equals(tup))\n            .count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmptl8b5kk0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmptl8b5kk0.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmptl8b5kk0.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmptl8b5kk0.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmptl8b5kk0.java:17: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmptl8b5kk0.java:18: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmptl8b5kk0.java:18: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object obj : list) {\n                    if (obj.equals(pair.getValue0()) || obj.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmphrkgzsvs.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmphrkgzsvs.java:12: error: cannot find symbol\n        if (tup instanceof Pair) {\n                           ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphrkgzsvs.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphrkgzsvs.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n                                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphrkgzsvs.java:26: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmphrkgzsvs.java:26: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmphrkgzsvs.java:27: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmphrkgzsvs.java:27: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmphrkgzsvs.j",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmppn1hta_u.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmppn1hta_u.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppn1hta_u.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppn1hta_u.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:17: error: constructor Object in class Obj",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmprtebslcj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprtebslcj.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List)lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpduwrqlv6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpduwrqlv6.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpduwrqlv6.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpduwrqlv6.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpduwrqlv6.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpduwrqlv6.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpduwrqlv6.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List) lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpyj_5gg75.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpyj_5gg75.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpyj_5gg75.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpyj_5gg75.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpyj_5gg75.java:21: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmprtebslcj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprtebslcj.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object elem : (List<Object>) lst) {\n            if (elem.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "/tmp/tmp2sk06ppx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp2sk06ppx.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp2sk06ppx.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp2sk06ppx.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp2sk06ppx.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp2sk06ppx.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp2sk06ppx.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object o : list) {\n                    if (o.equals(pair.getValue0()) || o.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp8rcwh1f9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp8rcwh1f9.java:12: error: cannot find symbol\n        if (tup instanceof Pair) {\n                           ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8rcwh1f9.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8rcwh1f9.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n                                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8rcwh1f9.java:26: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp8rcwh1f9.java:26: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp8rcwh1f9.java:27: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp8rcwh1f9.java:27: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp8rcwh1f9.j",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object x : (List<Object>) lst) {\n            if (x.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpa_0a7qjd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpa_0a7qjd.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpa_0a7qjd.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpa_0a7qjd.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpa_0a7qjd.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpa_0a7qjd.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpa_0a7qjd.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp1i6n00y3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1i6n00y3.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1i6n00y3.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1i6n00y3.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:17: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object obj : list) {\n                    if (obj.equals(pair.getValue0()) || obj.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmphrkgzsvs.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmphrkgzsvs.java:12: error: cannot find symbol\n        if (tup instanceof Pair) {\n                           ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphrkgzsvs.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphrkgzsvs.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n                                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphrkgzsvs.java:26: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmphrkgzsvs.java:26: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmphrkgzsvs.java:27: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmphrkgzsvs.java:27: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmphrkgzsvs.j",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmppn1hta_u.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmppn1hta_u.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppn1hta_u.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppn1hta_u.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:17: error: constructor Object in class Obj",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List) lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpyj_5gg75.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpyj_5gg75.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpyj_5gg75.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpyj_5gg75.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpyj_5gg75.java:21: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp1i6n00y3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1i6n00y3.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1i6n00y3.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1i6n00y3.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:17: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof ArrayList) {\n                ArrayList<Object> list = (ArrayList<Object>) lst;\n                for (Object obj : list) {\n                    if (obj instanceof Pair) {\n                        Pair<Object, Object> p = (Pair<Object, Object>) obj;\n                        if (p.getValue0().equals(pair.getValue0()) && p.getValue1().equals(pair.getValue1())) {\n                            count++;\n                        }\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmp7ckry9nc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp7ckry9nc.java:13: error: cannot find symbol\n        if (tup instanceof Pair) {\n                           ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp7ckry9nc.java:14: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp7ckry9nc.java:14: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n                                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp7ckry9nc.java:18: error: cannot find symbol\n                    if (obj instanceof Pair) {\n                                       ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp7ckry9nc.java:19: error: cannot find symbol\n                        Pair<Object, Object> p = (Pair<Object, Object>) obj;\n                        ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp7ckry9nc.java:19: error: cannot find symbol\n                        Pair<Object, Object> p = (Pair<Object, Object>) obj;\n                                                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp7ckry9nc.java:30: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp7ckry9nc.java:30: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp7ckry9nc.java:31: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof ArrayList) {\n                ArrayList<Object> list = (ArrayList<Object>) lst;\n                for (Object obj : list) {\n                    if (obj.equals(pair.getValue0()) || obj.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp72g8s8by.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp72g8s8by.java:12: error: cannot find symbol\n        if (tup instanceof Pair) {\n                           ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp72g8s8by.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp72g8s8by.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n                                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp72g8s8by.java:26: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp72g8s8by.java:26: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp72g8s8by.java:27: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp72g8s8by.java:27: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp72g8s8by.j",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List) lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpyj_5gg75.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpyj_5gg75.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpyj_5gg75.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpyj_5gg75.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpyj_5gg75.java:21: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object obj : (List) lst) {\n            if (obj.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmplm9_f19m.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmplm9_f19m.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmplm9_f19m.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmplm9_f19m.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmplm9_f19m.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmplm9_f19m.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmplm9_f19m.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmprtebslcj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprtebslcj.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List) lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpyj_5gg75.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpyj_5gg75.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpyj_5gg75.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpyj_5gg75.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpyj_5gg75.java:21: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if(tup instanceof Pair) {\n            Pair<?, ?> pair = (Pair<?, ?>) tup;\n            if(lst instanceof List) {\n                List<?> list = (List<?>) lst;\n                for(Object o : list) {\n                    if(o.equals(pair.getValue0()) || o.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpjwdylaza.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpjwdylaza.java:15: error: cannot find symbol\n        if(tup instanceof Pair) {\n                          ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpjwdylaza.java:16: error: cannot find symbol\n            Pair<?, ?> pair = (Pair<?, ?>) tup;\n            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpjwdylaza.java:16: error: cannot find symbol\n            Pair<?, ?> pair = (Pair<?, ?>) tup;\n                               ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpjwdylaza.java:29: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpjwdylaza.java:29: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpjwdylaza.java:30: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpjwdylaza.java:30: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpjwdylaza.java:31: error: cannot find symbol\n    assert(countOc",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        long count = 0;\n        for(Object o : (List)lst) {\n            if(o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpoxfqmamc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpoxfqmamc.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpoxfqmamc.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpoxfqmamc.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpoxfqmamc.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpoxfqmamc.java:23: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpoxfqmamc.java:23: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpkammcb3b.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpkammcb3b.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpkammcb3b.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpkammcb3b.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpkammcb3b.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpkammcb3b.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpkammcb3b.java:17: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmp7bf9t4sd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp7bf9t4sd.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp7bf9t4sd.java:17: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp7bf9t4sd.java:18: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp7bf9t4sd.java:18: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp7bf9t4sd.java:19: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp7bf9t4sd.java:19: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmprtebslcj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprtebslcj.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair t = (Pair) tup;\n            if (lst instanceof List) {\n                List l = (List) lst;\n                for (Object o : l) {\n                    if (o instanceof Pair) {\n                        Pair p = (Pair) o;\n                        if (p.getValue0().equals(t.getValue0()) && p.getValue1().equals(t.getValue1())) {\n                            count++;\n                        }\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmponsyk8qx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmponsyk8qx.java:12: error: cannot find symbol\n        if (tup instanceof Pair) {\n                           ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmponsyk8qx.java:13: error: cannot find symbol\n            Pair t = (Pair) tup;\n            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmponsyk8qx.java:13: error: cannot find symbol\n            Pair t = (Pair) tup;\n                      ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmponsyk8qx.java:17: error: cannot find symbol\n                    if (o instanceof Pair) {\n                                     ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmponsyk8qx.java:18: error: cannot find symbol\n                        Pair p = (Pair) o;\n                        ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmponsyk8qx.java:18: error: cannot find symbol\n                        Pair p = (Pair) o;\n                                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmponsyk8qx.java:29: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmponsyk8qx.java:29: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmponsyk8qx.java:30: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return (long) lst.getClass().getMethod(\"stream\").invoke(lst)\n            .getClass().getMethod(\"filter\", java.util.function.Predicate.class)\n            .invoke(lst, (Predicate<Object>) (x) -> x.equals(tup))\n            .getClass().getMethod(\"count\").invoke(lst);\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpqt62zt5z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpqt62zt5z.java:13: error: cannot find symbol\n            .invoke(lst, (Predicate<Object>) (x) -> x.equals(tup))\n                          ^\n  symbol:   class Predicate\n  location: class Problem\n/tmp/tmpqt62zt5z.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpqt62zt5z.java:17: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqt62zt5z.java:18: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpqt62zt5z.java:18: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpqt62zt5z.java:19: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpqt62zt5z.java:19: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccur",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        long count = 0;\n        for (Object o : (List<Object>)lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpatc0f981.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpatc0f981.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpatc0f981.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpatc0f981.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpatc0f981.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpatc0f981.java:23: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpatc0f981.java:23: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmprtebslcj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprtebslcj.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmprtebslcj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprtebslcj.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        long count = 0;\n        for (Object i : (List) lst) {\n            if (i.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp7_ut97zi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp7_ut97zi.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp7_ut97zi.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp7_ut97zi.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp7_ut97zi.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp7_ut97zi.java:23: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp7_ut97zi.java:23: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmprtebslcj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprtebslcj.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpkammcb3b.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpkammcb3b.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpkammcb3b.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpkammcb3b.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpkammcb3b.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpkammcb3b.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpkammcb3b.java:17: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp1i6n00y3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1i6n00y3.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1i6n00y3.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1i6n00y3.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:17: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            Object first = pair.getValue0();\n            Object second = pair.getValue1();\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                for (Object o : list) {\n                    if (o instanceof Pair) {\n                        Pair<Object, Object> pair2 = (Pair<Object, Object>) o;\n                        Object first2 = pair2.getValue0();\n                        Object second2 = pair2.getValue1();\n                        if (first.equals(first2) && second.equals(second2)) {\n                            count++;\n                        }\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmplynur2rq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmplynur2rq.java:12: error: cannot find symbol\n        if (tup instanceof Pair) {\n                           ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmplynur2rq.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmplynur2rq.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n                                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmplynur2rq.java:19: error: cannot find symbol\n                    if (o instanceof Pair) {\n                                     ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmplynur2rq.java:20: error: cannot find symbol\n                        Pair<Object, Object> pair2 = (Pair<Object, Object>) o;\n                        ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmplynur2rq.java:20: error: cannot find symbol\n                        Pair<Object, Object> pair2 = (Pair<Object, Object>) o;\n                                                      ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmplynur2rq.java:33: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmplynur2rq.java:33: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmplynur2rq.java:34: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof List) {\n                List<Object> list = (List<Object>) lst;\n                return list.stream().filter(x -> x.equals(pair.getValue0()) || x.equals(pair.getValue1())).count();\n            }\n        }\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "/tmp/tmpschxea38.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpschxea38.java:11: error: cannot find symbol\n        if (tup instanceof Pair) {\n                           ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpschxea38.java:12: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpschxea38.java:12: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n                                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpschxea38.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpschxea38.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpschxea38.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpschxea38.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpschxea38.j",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object x : (List) lst) {\n            if (x.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmprnqzc2ow.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprnqzc2ow.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprnqzc2ow.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprnqzc2ow.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprnqzc2ow.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprnqzc2ow.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprnqzc2ow.java:22: error: constructor Object in class Obj",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmppn1hta_u.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmppn1hta_u.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppn1hta_u.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppn1hta_u.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:17: error: constructor Object in class Obj",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmprtebslcj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprtebslcj.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object item : (List<Object>) lst) {\n            if (item.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmp0hr8c8fh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp0hr8c8fh.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp0hr8c8fh.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp0hr8c8fh.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp0hr8c8fh.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp0hr8c8fh.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp0hr8c8fh.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object x : (List) lst) {\n            if (x.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmprnqzc2ow.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprnqzc2ow.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprnqzc2ow.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprnqzc2ow.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprnqzc2ow.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprnqzc2ow.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprnqzc2ow.java:22: error: constructor Object in class Obj",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmppn1hta_u.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmppn1hta_u.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppn1hta_u.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmppn1hta_u.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmppn1hta_u.java:17: error: constructor Object in class Obj",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(e -> e.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "/tmp/tmpw2k85vxi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpw2k85vxi.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpw2k85vxi.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpw2k85vxi.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpw2k85vxi.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpw2k85vxi.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpw2k85vxi.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmprtebslcj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprtebslcj.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmprtebslcj.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmprtebslcj.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        List<Object> list = (List<Object>) lst;\n        long count = 0;\n        for (Object o : list) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "/tmp/tmpbhqzinlc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpbhqzinlc.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpbhqzinlc.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpbhqzinlc.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpbhqzinlc.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpbhqzinlc.java:23: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpbhqzinlc.java:23: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpnoom91dd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnoom91dd.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpnoom91dd.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpnoom91dd.java:15: error: constructor Object in class Object cannot be app",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        List<Object> l = (List<Object>)lst;\n        return l.stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmp8uq0jj26.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp8uq0jj26.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp8uq0jj26.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp8uq0jj26.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp8uq0jj26.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp8uq0jj26.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp8uq0jj26.java:17: error: constructor Object in class Obj",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        List<Object> list = (List<Object>) lst;\n        long count = 0;\n        for (Object o : list) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "/tmp/tmpbhqzinlc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpbhqzinlc.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpbhqzinlc.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpbhqzinlc.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpbhqzinlc.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpbhqzinlc.java:23: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpbhqzinlc.java:23: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp1i6n00y3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1i6n00y3.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1i6n00y3.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1i6n00y3.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1i6n00y3.java:17: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        List<Object> list = (List<Object>) lst;\n        return list.stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "/tmp/tmpr3er175u.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpr3er175u.java:18: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpr3er175u.java:18: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpr3er175u.java:19: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpr3er175u.java:19: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpr3er175u.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpr3er175u.java:20: error: constructor Object in class Obj",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List) lst) {\n            if (o.equals(tup)) count++;\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "/tmp/tmp1d3p9_4e.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1d3p9_4e.java:18: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1d3p9_4e.java:18: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1d3p9_4e.java:19: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1d3p9_4e.java:19: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1d3p9_4e.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1d3p9_4e.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            if (lst instanceof ArrayList) {\n                ArrayList<Object> list = (ArrayList<Object>) lst;\n                for (Object item : list) {\n                    if (item.equals(pair.getValue0()) || item.equals(pair.getValue1())) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpdaua5a2v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpdaua5a2v.java:12: error: cannot find symbol\n        if (tup instanceof Pair) {\n                           ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpdaua5a2v.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpdaua5a2v.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n                                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpdaua5a2v.java:26: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpdaua5a2v.java:26: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpdaua5a2v.java:27: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpdaua5a2v.java:27: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpdaua5a2v.j",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        for (Object o : (List)lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpduwrqlv6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpduwrqlv6.java:20: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpduwrqlv6.java:20: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpduwrqlv6.java:21: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpduwrqlv6.java:21: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpduwrqlv6.java:22: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpduwrqlv6.java:22: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpkammcb3b.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpkammcb3b.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpkammcb3b.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpkammcb3b.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpkammcb3b.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpkammcb3b.java:17: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpkammcb3b.java:17: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List)lst).stream().filter(e -> e.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "/tmp/tmpa2geu99c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpa2geu99c.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpa2geu99c.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpa2geu99c.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpa2geu99c.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpa2geu99c.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpa2geu99c.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        long count = 0;\n        if (tup instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            for (Object obj : (List<Object>) lst) {\n                if (obj.equals(pair.getValue0()) || obj.equals(pair.getValue1())) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "/tmp/tmpkwqzm9yf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpkwqzm9yf.java:12: error: cannot find symbol\n        if (tup instanceof Pair) {\n                           ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpkwqzm9yf.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpkwqzm9yf.java:13: error: cannot find symbol\n            Pair<Object, Object> pair = (Pair<Object, Object>) tup;\n                                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpkwqzm9yf.java:23: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpkwqzm9yf.java:23: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpkwqzm9yf.java:24: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpkwqzm9yf.java:24: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpkwqzm9yf.j",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (Object o : (List)lst) {\n            if (o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "/tmp/tmpj5nzniy4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpj5nzniy4.java:23: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpj5nzniy4.java:23: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpj5nzniy4.java:24: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpj5nzniy4.java:24: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpj5nzniy4.java:25: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpj5nzniy4.java:25: error: constructor Object in class Obj",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>) lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmp1izq3x6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1izq3x6d.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp1izq3x6d.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp1izq3x6d.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for(Object o : (List)lst) {\n            if(o.equals(tup)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp4om38wqw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp4om38wqw.java:23: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp4om38wqw.java:23: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp4om38wqw.java:24: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp4om38wqw.java:24: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmp4om38wqw.java:25: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp4om38wqw.java:25: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count the occurence of all elements of array list in a pair.\n    public static long countOccurrence(Object tup, Object lst) {\n        return ((List<Object>)lst).stream().filter(x -> x.equals(tup)).count();\n    }\n    public static void main(String[] args) {\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "/tmp/tmpd7u8jfov.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd7u8jfov.java:14: error: cannot find symbol\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:14: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(\"a\", \"a\", \"c\", \"b\", \"d\"), (new Object(Arrays.asList((String)\"a\", (String)\"b\")))) == (3l));\n                                                                ^\n  required: no arguments\n  found:    List<String>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:15: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:15: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 1l, 4l, 6l, 7l, 1l, 4l), (new Object(Arrays.asList((long)1l, (long)4l, (long)7l)))) == (6l));\n                                                                           ^\n  required: no arguments\n  found:    List<Long>\n  reason: actual and formal argument lists differ in length\n/tmp/tmpd7u8jfov.java:16: error: cannot find symbol\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                           ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmpd7u8jfov.java:16: error: constructor Object in class Object cannot be applied to given types;\n    assert(countOccurrence(Pair.with(1l, 2l, 3l, 4l, 5l, 6l), (new Object(Arrays.asList((long)1l, (long)2l)))) == (2l));\n                                                               ^\n  required: no arguments\n  found:   ",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
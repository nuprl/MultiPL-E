{
  "name": "mbpp_563_extract_values",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to extract values between quotation marks from a string.\n    public static ArrayList<String> extractValues(String text) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_563_extract_values.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((new ArrayList<String>(Arrays.asList((String)\"Python\", (String)\"PHP\", (String)\"Java\")))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\")))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((new ArrayList<String>(Arrays.asList((String)\"red\", (String)\"blue\", (String)\"green\", (String)\"yellow\")))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        ArrayList<String> values = new ArrayList<String>();\n        String value = \"\";\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == '\"') {\n                if (inQuotes) {\n                    values.add(value);\n                    value = \"\";\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                value += c;\n            }\n        }\n        return values;",
    "        ArrayList<String> result = new ArrayList<String>();\n        StringBuilder sb = new StringBuilder();\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == '\"') {\n                if (inQuotes) {\n                    result.add(sb.toString());\n                    sb = new StringBuilder();\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                sb.append(c);\n            }\n        }\n        return result;",
    "        ArrayList<String> values = new ArrayList<String>();\n        StringBuilder sb = new StringBuilder();\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == '\"') {\n                if (inQuotes) {\n                    values.add(sb.toString());\n                    sb = new StringBuilder();\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                sb.append(c);\n            }\n        }\n        return values;",
    "        ArrayList<String> values = new ArrayList<String>();\n        StringBuilder sb = new StringBuilder();\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == '\"') {\n                if (inQuotes) {\n                    values.add(sb.toString());\n                    sb = new StringBuilder();\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                sb.append(c);\n            }\n        }\n        return values;",
    "        ArrayList<String> result = new ArrayList<String>();\n        StringBuilder sb = new StringBuilder();\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == '\"') {\n                if (inQuotes) {\n                    result.add(sb.toString());\n                    sb.setLength(0);\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                sb.append(c);\n            }\n        }\n        return result;",
    "        ArrayList<String> values = new ArrayList<String>();\n        int i = 0;\n        while (i < text.length()) {\n            int start = text.indexOf(\"\\\"\", i);\n            if (start == -1) {\n                break;\n            }\n            int end = text.indexOf(\"\\\"\", start + 1);\n            if (end == -1) {\n                break;\n            }\n            values.add(text.substring(start + 1, end));\n            i = end + 1;\n        }\n        return values;",
    "        ArrayList<String> result = new ArrayList<String>();\n        int i = 0;\n        while (i < text.length()) {\n            if (text.charAt(i) == '\"') {\n                StringBuilder sb = new StringBuilder();\n                i++;\n                while (i < text.length() && text.charAt(i) != '\"') {\n                    sb.append(text.charAt(i));\n                    i++;\n                }\n                result.add(sb.toString());\n            }\n            i++;\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        int start = text.indexOf(\"\\\"\");\n        int end = text.indexOf(\"\\\"\", start + 1);\n        while (start != -1 && end != -1) {\n            result.add(text.substring(start + 1, end));\n            start = text.indexOf(\"\\\"\", end + 1);\n            end = text.indexOf(\"\\\"\", start + 1);\n        }\n        return result;",
    "        ArrayList<String> values = new ArrayList<String>();\n        int start = 0;\n        int end = 0;\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == '\"') {\n                if (start == 0) {\n                    start = i + 1;\n                } else {\n                    end = i;\n                    values.add(text.substring(start, end));\n                    start = 0;\n                    end = 0;\n                }\n            }\n        }\n        return values;",
    "        ArrayList<String> result = new ArrayList<String>();\n        Pattern p = Pattern.compile(\"\\\"([^\\\"]*)\\\"\");\n        Matcher m = p.matcher(text);\n        while (m.find()) {\n            result.add(m.group(1));\n        }\n        return result;",
    "        ArrayList<String> values = new ArrayList<String>();\n        int start = 0;\n        int end = 0;\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == '\"') {\n                if (start == 0) {\n                    start = i + 1;\n                } else {\n                    end = i;\n                    values.add(text.substring(start, end));\n                    start = 0;\n                    end = 0;\n                }\n            }\n        }\n        return values;",
    "        ArrayList<String> result = new ArrayList<String>();\n        String[] words = text.split(\" \");\n        for (String word : words) {\n            if (word.startsWith(\"\\\"\") && word.endsWith(\"\\\"\")) {\n                result.add(word.substring(1, word.length() - 1));\n            }\n        }\n        return result;",
    "        ArrayList<String> values = new ArrayList<String>();\n        StringBuilder sb = new StringBuilder();\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == '\"') {\n                if (inQuotes) {\n                    values.add(sb.toString());\n                    sb = new StringBuilder();\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                sb.append(text.charAt(i));\n            }\n        }\n        return values;",
    "        ArrayList<String> values = new ArrayList<String>();\n        StringBuilder sb = new StringBuilder();\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == '\"') {\n                if (inQuotes) {\n                    values.add(sb.toString());\n                    sb = new StringBuilder();\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                sb.append(c);\n            }\n        }\n        return values;",
    "        ArrayList<String> result = new ArrayList<String>();\n        int start = 0;\n        int end = 0;\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == '\"') {\n                if (start == 0) {\n                    start = i + 1;\n                } else {\n                    end = i;\n                    result.add(text.substring(start, end));\n                    start = 0;\n                }\n            }\n        }\n        return result;",
    "        ArrayList<String> values = new ArrayList<String>();\n        StringBuilder sb = new StringBuilder();\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == '\"') {\n                if (inQuotes) {\n                    values.add(sb.toString());\n                    sb = new StringBuilder();\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                sb.append(c);\n            }\n        }\n        return values;",
    "        ArrayList<String> result = new ArrayList<String>();\n        String[] words = text.split(\" \");\n        for (String word : words) {\n            if (word.startsWith(\"\\\"\") && word.endsWith(\"\\\"\")) {\n                result.add(word.substring(1, word.length() - 1));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        int start = 0;\n        int end = 0;\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == '\"') {\n                if (start == 0) {\n                    start = i + 1;\n                } else {\n                    end = i;\n                    result.add(text.substring(start, end));\n                    start = 0;\n                    end = 0;\n                }\n            }\n        }\n        return result;",
    "        ArrayList<String> values = new ArrayList<String>();\n        StringBuilder sb = new StringBuilder();\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == '\"') {\n                inQuotes = !inQuotes;\n                if (!inQuotes) {\n                    values.add(sb.toString());\n                    sb = new StringBuilder();\n                }\n            } else if (inQuotes) {\n                sb.append(c);\n            }\n        }\n        return values;",
    "        ArrayList<String> result = new ArrayList<String>();\n        String[] words = text.split(\" \");\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].charAt(0) == '\"') {\n                String word = words[i].substring(1);\n                while (words[i].charAt(words[i].length() - 1) != '\"') {\n                    i++;\n                    word += \" \" + words[i];\n                }\n                word = word.substring(0, word.length() - 1);\n                result.add(word);\n            }\n        }\n        return result;"
  ]
}
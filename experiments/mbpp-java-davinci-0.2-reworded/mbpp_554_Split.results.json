{
  "name": "mbpp_554_Split",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_554_Split.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<>();\n        ArrayList<Long> even = new ArrayList<>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odds = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 != 0) {\n                odds.add(list.get(i));\n            }\n        }\n        return odds;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odds = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                odds.add(list.get(i));\n            }\n        }\n        return odds;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for(int i = 0; i < list.size(); i++) {\n            if(list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<>();\n        ArrayList<Long> even = new ArrayList<>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                result.add(list.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                result.add(list.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odds = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                odds.add(i);\n            }\n        }\n        return odds;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        for(int i = 0; i < list.size(); i++) {\n            if(list.get(i) % 2 == 1) {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> even = new ArrayList<Long>();\n        ArrayList<Long> odd = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                result.add(list.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                result.add(list.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (Long i : list) {\n            if (i % 2 != 0) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187492,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplfb447ij.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odds = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                odds.add(list.get(i));\n            }\n        }\n        return odds;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 != 0) {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 != 0) {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                result.add(list.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                result.add(list.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                result.add(list.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                result.add(list.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> even = new ArrayList<Long>();\n        ArrayList<Long> odd = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for(Long i : list) {\n            if(i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                result.add(list.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odds = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 != 0) {\n                odds.add(list.get(i));\n            }\n        }\n        return odds;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long l : list) {\n            if (l % 2 == 0) {\n                even.add(l);\n            } else {\n                odd.add(l);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<>();\n        ArrayList<Long> even = new ArrayList<>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<>();\n        ArrayList<Long> even = new ArrayList<>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> even = new ArrayList<Long>();\n        ArrayList<Long> odd = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for(int i = 0; i < list.size(); i++) {\n            if(list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> evens = new ArrayList<Long>();\n        ArrayList<Long> odds = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                evens.add(i);\n            } else {\n                odds.add(i);\n            }\n        }\n        return odds;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odds = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 != 0) {\n                odds.add(i);\n            }\n        }\n        return odds;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for(int i = 0; i < list.size(); i++) {\n            if(list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<>();\n        ArrayList<Long> even = new ArrayList<>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> even = new ArrayList<Long>();\n        ArrayList<Long> odd = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long num : list) {\n            if (num % 2 == 0) {\n                even.add(num);\n            } else {\n                odd.add(num);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187496,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 != 0) {\n                result.add(list.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odds = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 != 0) {\n                odds.add(list.get(i));\n            }\n        }\n        return odds;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<>();\n        ArrayList<Long> even = new ArrayList<>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> oddList = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 != 0) {\n                oddList.add(list.get(i));\n            }\n        }\n        return oddList;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187496,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odds = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                odds.add(i);\n            }\n        }\n        return odds;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> even = new ArrayList<Long>();\n        ArrayList<Long> odd = new ArrayList<Long>();\n        for(int i = 0; i < list.size(); i++) {\n            if(list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187496,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187497,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsiaf4o__.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> even = new ArrayList<Long>();\n        ArrayList<Long> odd = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187497,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                result.add(list.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odds = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 != 0) {\n                odds.add(list.get(i));\n            }\n        }\n        return odds;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                result.add(list.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187497,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvnaxxnl8.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odds = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 != 0) {\n                odds.add(list.get(i));\n            }\n        }\n        return odds;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                result.add(list.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> even = new ArrayList<Long>();\n        ArrayList<Long> odd = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 != 0) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187497,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odds = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                odds.add(list.get(i));\n            }\n        }\n        return odds;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187489,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                result.add(list.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odds = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                odds.add(i);\n            }\n        }\n        return odds;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                result.add(list.get(i));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<>();\n        ArrayList<Long> even = new ArrayList<>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> even = new ArrayList<Long>();\n        ArrayList<Long> odd = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> oddList = new ArrayList<Long>();\n        ArrayList<Long> evenList = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                evenList.add(i);\n            } else {\n                oddList.add(i);\n            }\n        }\n        return oddList;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187498,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odds = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 != 0) {\n                odds.add(list.get(i));\n            }\n        }\n        return odds;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> even = new ArrayList<Long>();\n        ArrayList<Long> odd = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odds = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                odds.add(i);\n            }\n        }\n        return odds;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187491,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 0) {\n                even.add(i);\n            } else {\n                odd.add(i);\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function which takes an array array list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long> even = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            } else {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
      "timestamp": 1667187487,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
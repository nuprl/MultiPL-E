{
  "name": "mbpp_759_is_decimal",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_759_is_decimal.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null) return false;\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '-') num = num.substring(1);\n        if (num.length() == 0) return false;\n        int dot = num.indexOf('.');\n        if (dot == -1) return false;\n        if (dot == 0) return false;\n        if (dot == num.length() - 1) return false;\n        if (dot == num.length() - 2) return false;\n        if (dot == num.length() - 3) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp67ulskl0.java:25)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null) return false;\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '.') return false;\n        if (num.charAt(num.length() - 1) == '.') return false;\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                dotCount++;\n                if (dotCount > 1) return false;\n            } else if (!Character.isDigit(c)) {\n                return false;\n            }\n        }\n        if (dotCount == 0) return true;\n        int dotIndex = num.indexOf('.');\n        if (dotIndex == num.length() - 1) return false;\n        if (dotIndex == num.length() - 2) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc0s3q0o9.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n        } catch (NumberFormatException e) {\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwkjrwgrh.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5x8i3yq.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5x8i3yq.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int decimalCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                decimalCount++;\n            } else if (!Character.isDigit(c)) {\n                return false;\n            }\n        }\n        if (decimalCount > 1) return false;\n        if (decimalCount == 0) return true;\n        int decimalIndex = num.indexOf('.');\n        if (decimalIndex == num.length() - 1) return false;\n        if (decimalIndex == num.length() - 3) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) {\n            return false;\n        }\n        String[] parts = num.split(\"\\\\.\");\n        if (parts.length != 2) {\n            return false;\n        }\n        if (parts[1].length() != 2) {\n            return false;\n        }\n        try {\n            Integer.parseInt(parts[0]);\n            Integer.parseInt(parts[1]);\n        } catch (Exception e) {\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189376,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgnli5sp.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '.') return false;\n        if (num.charAt(num.length() - 1) == '.') return false;\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                dotCount++;\n                if (dotCount > 1) return false;\n            } else if (c < '0' || c > '9') {\n                return false;\n            }\n        }\n        if (dotCount == 0) return false;\n        String[] parts = num.split(\"\\\\.\");\n        if (parts.length == 1) return false;\n        if (parts[1].length() > 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) {\n            return false;\n        }\n        if (num.charAt(0) == '-') {\n            num = num.substring(1);\n        }\n        int decimal = num.indexOf('.');\n        if (decimal == -1) {\n            return false;\n        }\n        if (num.length() - 1 - decimal > 2) {\n            return false;\n        }\n        for (int i = 0; i < num.length(); i++) {\n            if (i == decimal) {\n                continue;\n            }\n            if (num.charAt(i) < '0' || num.charAt(i) > '9') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '-') num = num.substring(1);\n        if (num.length() == 0) return false;\n        int decimalIndex = num.indexOf('.');\n        if (decimalIndex == -1) return false;\n        if (decimalIndex == 0) return false;\n        if (decimalIndex == num.length() - 1) return false;\n        if (decimalIndex == num.length() - 2) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189376,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw4lhb87a.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) {\n            return false;\n        }\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dotCount++;\n            }\n        }\n        if (dotCount > 1) {\n            return false;\n        }\n        if (dotCount == 0) {\n            return true;\n        }\n        String[] parts = num.split(\"\\\\.\");\n        if (parts[1].length() > 2) {\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189377,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphez69qcz.java:34)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189376,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgnli5sp.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        return num.matches(\"^[-+]?[0-9]*\\\\.?[0-9]{0,2}$\");\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            BigDecimal bd = new BigDecimal(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmdk9uz0.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) {\n            return false;\n        }\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dotCount++;\n            }\n            if (dotCount > 1) {\n                return false;\n            }\n            if (num.charAt(i) == '.') {\n                if (i == num.length() - 1) {\n                    return false;\n                }\n                if (i == num.length() - 2) {\n                    return true;\n                }\n                return false;\n            }\n            if (num.charAt(i) < '0' || num.charAt(i) > '9') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189377,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsvrxc5ma.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) {\n            return false;\n        }\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                dotCount++;\n            } else if (!Character.isDigit(c)) {\n                return false;\n            }\n        }\n        if (dotCount > 1) {\n            return false;\n        }\n        if (dotCount == 0) {\n            return true;\n        }\n        int dotIndex = num.indexOf('.');\n        if (dotIndex == num.length() - 1) {\n            return false;\n        }\n        if (dotIndex == num.length() - 3) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null) {\n            return false;\n        }\n        if (num.length() == 0) {\n            return false;\n        }\n        if (num.length() == 1) {\n            return num.charAt(0) >= '0' && num.charAt(0) <= '9';\n        }\n        if (num.charAt(0) == '0') {\n            return false;\n        }\n        int i = 0;\n        while (i < num.length() && num.charAt(i) >= '0' && num.charAt(i) <= '9') {\n            i++;\n        }\n        if (i == num.length()) {\n            return true;\n        }\n        if (num.charAt(i) != '.') {\n            return false;\n        }\n        i++;\n        if (i == num.length()) {\n            return false;\n        }\n        if (num.charAt(i) < '0' || num.charAt(i) > '9') {\n            return false;\n        }\n        i++;\n        if (i == num.length()) {\n            return false;\n        }\n        if (num.charAt(i) < '0' || num.charAt(i) > '9') {\n            return false;\n        }\n        i++;\n        if (i == num.length()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '.') return false;\n        if (num.charAt(num.length() - 1) == '.') return false;\n        if (num.charAt(0) == '-') num = num.substring(1);\n        int dot = num.indexOf('.');\n        if (dot == -1) return true;\n        if (dot == num.length() - 1) return false;\n        if (dot == 0) return true;\n        if (num.length() - dot > 3) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189379,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzdoz_44t.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(0) == '-') i++;\n        int count = 0;\n        while (i < num.length()) {\n            if (num.charAt(i) == '.') {\n                count++;\n                if (count > 1) return false;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n            i++;\n        }\n        if (count == 0) return true;\n        String[] arr = num.split(\"\\\\.\");\n        if (arr[1].length() > 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) {\n            return false;\n        }\n        int i = 0;\n        if (num.charAt(0) == '-') {\n            i++;\n        }\n        int count = 0;\n        for (; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                count++;\n            }\n            if (count > 1) {\n                return false;\n            }\n            if (num.charAt(i) < '0' || num.charAt(i) > '9') {\n                return false;\n            }\n        }\n        if (count == 0) {\n            return true;\n        }\n        if (num.charAt(num.length() - 1) == '.') {\n            return false;\n        }\n        int index = num.indexOf('.');\n        if (num.length() - index - 1 > 2) {\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189379,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaycuc9n6.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(0) == '-') i++;\n        int count = 0;\n        for (; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                count++;\n                if (count > 1) return false;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n        }\n        if (count == 0) return true;\n        int index = num.indexOf('.');\n        if (index == num.length() - 1) return false;\n        if (num.length() - index - 1 > 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189380,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            double d = Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189380,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdgupjy4.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(0) == '-') i++;\n        int count = 0;\n        while (i < num.length() && num.charAt(i) != '.') {\n            if (!Character.isDigit(num.charAt(i))) return false;\n            i++;\n        }\n        if (i == num.length()) return true;\n        i++;\n        while (i < num.length()) {\n            if (!Character.isDigit(num.charAt(i))) return false;\n            i++;\n            count++;\n        }\n        return count <= 2;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189380,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(0) == '-') i++;\n        if (i == num.length()) return false;\n        int dot = -1;\n        for (; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                if (dot != -1) return false;\n                dot = i;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n        }\n        if (dot == -1) return true;\n        if (dot == num.length() - 1) return false;\n        if (dot == 0) return num.length() - 1 <= 2;\n        return num.length() - dot - 1 <= 2;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189380,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) {\n            return false;\n        }\n        boolean hasDecimal = false;\n        int decimalCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                if (hasDecimal) {\n                    return false;\n                }\n                hasDecimal = true;\n            } else if (num.charAt(i) < '0' || num.charAt(i) > '9') {\n                return false;\n            } else if (hasDecimal) {\n                decimalCount++;\n            }\n        }\n        return decimalCount <= 2;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '-') num = num.substring(1);\n        if (num.length() == 0) return false;\n        int i = 0;\n        while (i < num.length() && num.charAt(i) != '.') {\n            if (!Character.isDigit(num.charAt(i))) return false;\n            i++;\n        }\n        if (i == num.length()) return true;\n        if (i == num.length() - 1) return false;\n        if (!Character.isDigit(num.charAt(i + 1))) return false;\n        if (i == num.length() - 2) return true;\n        if (!Character.isDigit(num.charAt(i + 2))) return false;\n        return i == num.length() - 3;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189382,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.isEmpty()) return false;\n        if (num.charAt(0) == '.') return false;\n        if (num.charAt(num.length() - 1) == '.') return false;\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dotCount++;\n                if (dotCount > 1) return false;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n        }\n        if (dotCount == 0) return true;\n        int dotIndex = num.indexOf('.');\n        if (num.length() - dotIndex - 1 > 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189382,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '.') return false;\n        if (num.charAt(num.length() - 1) == '.') return false;\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dotCount++;\n                if (dotCount > 1) return false;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n        }\n        if (dotCount == 0) return true;\n        int dotIndex = num.indexOf('.');\n        return num.length() - dotIndex - 1 <= 2;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189382,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(i) == '-') i++;\n        int count = 0;\n        while (i < num.length() && num.charAt(i) != '.') {\n            if (!Character.isDigit(num.charAt(i))) return false;\n            i++;\n            count++;\n        }\n        if (count == 0) return false;\n        if (i < num.length() && num.charAt(i) == '.') {\n            i++;\n            count = 0;\n            while (i < num.length()) {\n                if (!Character.isDigit(num.charAt(i))) return false;\n                i++;\n                count++;\n            }\n            if (count != 2) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189382,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(0) == '-') i++;\n        int count = 0;\n        while (i < num.length()) {\n            if (num.charAt(i) == '.') {\n                count++;\n                if (count > 1) return false;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n            i++;\n        }\n        return count == 1;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189382,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp61dwdj2v.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '-') num = num.substring(1);\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '.') return false;\n        boolean hasDecimal = false;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                if (hasDecimal) return false;\n                hasDecimal = true;\n            } else if (c < '0' || c > '9') {\n                return false;\n            }\n        }\n        if (hasDecimal) {\n            int decimalIndex = num.indexOf('.');\n            if (num.length() - decimalIndex > 3) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189383,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        return num.matches(\"^[0-9]*\\\\.[0-9]{2}$\");\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189383,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        boolean decimal = false;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                if (decimal) return false;\n                decimal = true;\n            } else if (num.charAt(i) < '0' || num.charAt(i) > '9') {\n                return false;\n            }\n        }\n        if (decimal) {\n            int decimalIndex = num.indexOf('.');\n            if (num.length() - decimalIndex > 3) return false;\n            if (num.length() - decimalIndex == 3 && num.charAt(decimalIndex + 1) == '0' && num.charAt(decimalIndex + 2) == '0') return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189383,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            double d = Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189380,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdgupjy4.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) {\n            return false;\n        }\n        int i = 0;\n        if (num.charAt(0) == '-') {\n            i++;\n        }\n        int count = 0;\n        for (; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                count++;\n            }\n        }\n        if (count > 1) {\n            return false;\n        }\n        try {\n            Double.parseDouble(num);\n        } catch (NumberFormatException e) {\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189383,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3269b100.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(0) == '-') i++;\n        int count = 0;\n        for (; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                count++;\n                if (count > 1) return false;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189384,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwqk1vvll.java:28)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) {\n            return false;\n        }\n        int count = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                count++;\n            }\n        }\n        if (count > 1) {\n            return false;\n        }\n        if (count == 0) {\n            return true;\n        }\n        int index = num.indexOf('.');\n        if (index == num.length() - 1 || index == 0) {\n            return false;\n        }\n        if (num.length() - index - 1 > 2) {\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189385,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaxkvwbj1.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '.') return false;\n        if (num.charAt(num.length() - 1) == '.') return false;\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dotCount++;\n                if (dotCount > 1) return false;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n        }\n        if (dotCount == 0) return true;\n        int dotIndex = num.indexOf('.');\n        if (num.length() - dotIndex - 1 > 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189385,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) {\n            return false;\n        }\n        int dot = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dot++;\n            }\n        }\n        if (dot > 1) {\n            return false;\n        }\n        if (dot == 1) {\n            String[] arr = num.split(\"\\\\.\");\n            if (arr[1].length() > 2) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189385,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiac1dbnw.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5x8i3yq.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            BigDecimal bd = new BigDecimal(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmdk9uz0.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5x8i3yq.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(0) == '-') i++;\n        int dot = -1;\n        for (; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                if (dot != -1) return false;\n                dot = i;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n        }\n        if (dot == -1) return true;\n        if (dot == num.length() - 1) return false;\n        if (dot == 0) return num.length() - 1 <= 2;\n        return num.length() - dot - 1 <= 2;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189385,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            double d = Double.parseDouble(num);\n            return d == (double)((int)d);\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189385,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dypovmf.java:19)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            double d = Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189380,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdgupjy4.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        // Write your code here\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189386,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp1je7n_4.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5x8i3yq.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int dot = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dot++;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n        }\n        if (dot > 1) return false;\n        String[] arr = num.split(\"\\\\.\");\n        if (arr.length == 1) return true;\n        return arr[1].length() <= 2;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n        } catch (NumberFormatException e) {\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwkjrwgrh.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            double d = Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189380,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdgupjy4.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if(num.length() == 0) return false;\n        if(num.charAt(0) == '-') num = num.substring(1);\n        if(num.length() == 0) return false;\n        int i = 0;\n        while(i < num.length() && num.charAt(i) != '.') {\n            if(!Character.isDigit(num.charAt(i))) return false;\n            i++;\n        }\n        if(i == num.length()) return true;\n        if(i == num.length() - 1) return false;\n        i++;\n        if(!Character.isDigit(num.charAt(i))) return false;\n        i++;\n        if(!Character.isDigit(num.charAt(i))) return false;\n        i++;\n        if(i != num.length()) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        return num.matches(\"[0-9]+(\\\\.[0-9]{1,2})?\");\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null) return false;\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '.') return false;\n        if (num.charAt(num.length() - 1) == '.') return false;\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dotCount++;\n            }\n            if (dotCount > 1) return false;\n            if (num.charAt(i) < '0' || num.charAt(i) > '9') return false;\n        }\n        if (dotCount == 0) return false;\n        String[] parts = num.split(\"\\\\.\");\n        if (parts.length != 2) return false;\n        if (parts[1].length() != 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189387,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq_ekk_ga.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        return num.matches(\"^[0-9]*\\\\.[0-9]{2}$\");\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189383,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            double d = Double.parseDouble(num);\n            if (d == (int) d) {\n                return false;\n            }\n            String[] parts = num.split(\"\\\\.\");\n            if (parts.length == 2) {\n                if (parts[1].length() == 2) {\n                    return true;\n                }\n            }\n        } catch (Exception e) {\n            return false;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189387,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '.') return false;\n        int dot = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dot++;\n                if (dot > 1) return false;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n        }\n        if (dot == 0) return true;\n        String[] parts = num.split(\"\\\\.\");\n        if (parts[1].length() > 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189388,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '-') num = num.substring(1);\n        boolean hasDecimal = false;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                if (hasDecimal) return false;\n                hasDecimal = true;\n            } else if (c < '0' || c > '9') {\n                return false;\n            }\n        }\n        if (hasDecimal) {\n            int decimalIndex = num.indexOf('.');\n            if (num.length() - decimalIndex > 3) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189388,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '.') return false;\n        if (num.charAt(num.length() - 1) == '.') return false;\n        int decimalCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') decimalCount++;\n            if (decimalCount > 1) return false;\n            if (num.charAt(i) != '.' && !Character.isDigit(num.charAt(i))) return false;\n        }\n        if (decimalCount == 0) return true;\n        String[] parts = num.split(\"\\\\.\");\n        if (parts[1].length() > 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189388,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        return num.matches(\"^\\\\d+\\\\.\\\\d{2}$\");\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189388,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5x8i3yq.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.length() == 1 && num.charAt(0) == '.') return false;\n        if (num.charAt(0) == '.' && num.length() == 2) return true;\n        if (num.charAt(0) == '.') return false;\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dotCount++;\n            }\n        }\n        if (dotCount > 1) return false;\n        if (dotCount == 0) return true;\n        int dotIndex = num.indexOf('.');\n        if (dotIndex == num.length() - 1) return false;\n        if (dotIndex == num.length() - 2) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189389,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0rv7p7br.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null) {\n            return false;\n        }\n        if (num.length() == 0) {\n            return false;\n        }\n        if (num.length() == 1) {\n            return true;\n        }\n        if (num.charAt(0) == '-') {\n            num = num.substring(1);\n        }\n        if (num.charAt(0) == '.') {\n            num = \"0\" + num;\n        }\n        if (num.charAt(num.length() - 1) == '.') {\n            num = num + \"0\";\n        }\n        int dot = num.indexOf('.');\n        if (dot == -1) {\n            return true;\n        }\n        if (dot == num.length() - 1) {\n            return false;\n        }\n        if (dot == 0) {\n            return false;\n        }\n        if (dot == num.length() - 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189389,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8td9gnsp.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) {\n            return false;\n        }\n        int i = 0;\n        if (num.charAt(0) == '-') {\n            i++;\n        }\n        int count = 0;\n        for (; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                count++;\n            }\n        }\n        if (count > 1) {\n            return false;\n        }\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189389,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcnq9gp2d.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            double d = Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189380,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdgupjy4.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            double d = Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189390,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdg0jshyi.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189376,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgnli5sp.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) {\n            return false;\n        }\n        if (num.charAt(0) == '-') {\n            num = num.substring(1);\n        }\n        if (num.length() == 0) {\n            return false;\n        }\n        int dotIndex = num.indexOf('.');\n        if (dotIndex == -1) {\n            return isInteger(num);\n        }\n        if (dotIndex == 0) {\n            return isInteger(num.substring(1));\n        }\n        if (dotIndex == num.length() - 1) {\n            return isInteger(num.substring(0, num.length() - 1));\n        }\n        return isInteger(num.substring(0, dotIndex)) && isInteger(num.substring(dotIndex + 1));\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189390,
      "stdout": "",
      "stderr": "/tmp/tmpadcjdett.java:22: error: cannot find symbol\n            return isInteger(num);\n                   ^\n  symbol:   method isInteger(String)\n  location: class Problem\n/tmp/tmpadcjdett.java:25: error: cannot find symbol\n            return isInteger(num.substring(1));\n                   ^\n  symbol:   method isInteger(String)\n  location: class Problem\n/tmp/tmpadcjdett.java:28: error: cannot find symbol\n            return isInteger(num.substring(0, num.length() - 1));\n                   ^\n  symbol:   method isInteger(String)\n  location: class Problem\n/tmp/tmpadcjdett.java:30: error: cannot find symbol\n        return isInteger(num.substring(0, dotIndex)) && isInteger(num.substring(dotIndex + 1));\n               ^\n  symbol:   method isInteger(String)\n  location: class Problem\n/tmp/tmpadcjdett.java:30: error: cannot find symbol\n        return isInteger(num.substring(0, dotIndex)) && isInteger(num.substring(dotIndex + 1));\n                                                        ^\n  symbol:   method isInteger(String)\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5x8i3yq.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int index = num.indexOf('.');\n        if (index == -1) return false;\n        if (index == 0) return false;\n        if (index == num.length() - 1) return false;\n        if (index == num.length() - 2) return false;\n        if (index == num.length() - 3) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189390,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0isdgn_c.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int dot = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dot++;\n                if (dot > 1) return false;\n            } else if (!Character.isDigit(num.charAt(i))) return false;\n        }\n        if (dot == 0) return false;\n        String[] parts = num.split(\"\\\\.\");\n        if (parts.length == 1) return true;\n        return parts[1].length() <= 2;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189391,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '-') num = num.substring(1);\n        if (num.length() == 0) return false;\n        int i = 0;\n        while (i < num.length() && num.charAt(i) != '.') {\n            if (!Character.isDigit(num.charAt(i))) return false;\n            i++;\n        }\n        if (i == num.length()) return true;\n        if (i == num.length() - 1) return false;\n        if (!Character.isDigit(num.charAt(i + 1))) return false;\n        if (i == num.length() - 2) return true;\n        if (!Character.isDigit(num.charAt(i + 2))) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189391,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmhkj1fu2.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '-') num = num.substring(1);\n        if (num.length() == 0) return false;\n        int i = 0;\n        while (i < num.length() && num.charAt(i) != '.') i++;\n        if (i == num.length()) return true;\n        if (i == 0) return false;\n        if (i == num.length() - 1) return false;\n        if (num.charAt(i + 1) == '.') return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189391,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw08qiz61.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) {\n            return false;\n        }\n        int i = 0;\n        if (num.charAt(0) == '-') {\n            i++;\n        }\n        int count = 0;\n        for (; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                count++;\n            }\n            if (count > 1) {\n                return false;\n            }\n            if (num.charAt(i) < '0' || num.charAt(i) > '9') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189391,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3gl5nzay.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5x8i3yq.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '.') return false;\n        if (num.charAt(num.length() - 1) == '.') return false;\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                dotCount++;\n                if (dotCount > 1) return false;\n            } else if (!Character.isDigit(c)) {\n                return false;\n            }\n        }\n        if (dotCount == 0) return true;\n        int dotIndex = num.indexOf('.');\n        return num.length() - dotIndex - 1 <= 2;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189392,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '-') num = num.substring(1);\n        if (num.length() == 0) return false;\n        int dot = num.indexOf('.');\n        if (dot == -1) return isInteger(num);\n        if (dot == 0 || dot == num.length() - 1) return false;\n        return isInteger(num.substring(0, dot)) && isInteger(num.substring(dot + 1));\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189392,
      "stdout": "",
      "stderr": "/tmp/tmpil8ob9fh.java:15: error: cannot find symbol\n        if (dot == -1) return isInteger(num);\n                              ^\n  symbol:   method isInteger(String)\n  location: class Problem\n/tmp/tmpil8ob9fh.java:17: error: cannot find symbol\n        return isInteger(num.substring(0, dot)) && isInteger(num.substring(dot + 1));\n               ^\n  symbol:   method isInteger(String)\n  location: class Problem\n/tmp/tmpil8ob9fh.java:17: error: cannot find symbol\n        return isInteger(num.substring(0, dot)) && isInteger(num.substring(dot + 1));\n                                                   ^\n  symbol:   method isInteger(String)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5x8i3yq.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(0) == '+' || num.charAt(0) == '-') i++;\n        boolean isDecimal = false;\n        while (i < num.length()) {\n            if (num.charAt(i) == '.') {\n                if (isDecimal) return false;\n                isDecimal = true;\n                i++;\n                continue;\n            }\n            if (num.charAt(i) < '0' || num.charAt(i) > '9') return false;\n            i++;\n        }\n        return isDecimal;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189392,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfu1t347i.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '-') num = num.substring(1);\n        if (num.length() == 0) return false;\n        int i = 0;\n        while (i < num.length() && num.charAt(i) != '.') {\n            if (!Character.isDigit(num.charAt(i))) return false;\n            i++;\n        }\n        if (i == num.length()) return true;\n        if (i == num.length() - 1) return false;\n        if (!Character.isDigit(num.charAt(i + 1))) return false;\n        if (i == num.length() - 2) return true;\n        if (!Character.isDigit(num.charAt(i + 2))) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189391,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmhkj1fu2.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null) return false;\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '.') return false;\n        if (num.charAt(num.length() - 1) == '.') return false;\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dotCount++;\n            }\n            if (dotCount > 1) return false;\n            if (num.charAt(i) != '.' && !Character.isDigit(num.charAt(i))) return false;\n        }\n        if (dotCount == 0) return true;\n        if (dotCount == 1) {\n            int dotIndex = num.indexOf('.');\n            if (num.length() - dotIndex - 1 > 2) return false;\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189393,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        return num.matches(\"^[-+]?[0-9]*\\\\.?[0-9]{0,2}$\");\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) return false;\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                dotCount++;\n                if (dotCount > 1) return false;\n            } else if (!Character.isDigit(c)) {\n                return false;\n            }\n        }\n        if (dotCount == 0) return true;\n        int dotIndex = num.indexOf('.');\n        if (dotIndex == num.length() - 1) return false;\n        if (dotIndex == num.length() - 3) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189393,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '.') return false;\n        int dot = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                dot++;\n            } else if (c < '0' || c > '9') {\n                return false;\n            }\n        }\n        if (dot > 1) return false;\n        if (dot == 0) return true;\n        String[] parts = num.split(\"\\\\.\");\n        if (parts[1].length() > 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189393,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) {\n            return false;\n        }\n        int i = 0;\n        if (num.charAt(i) == '-') {\n            i++;\n        }\n        int count = 0;\n        while (i < num.length() && num.charAt(i) != '.') {\n            if (num.charAt(i) < '0' || num.charAt(i) > '9') {\n                return false;\n            }\n            i++;\n        }\n        if (i < num.length() && num.charAt(i) == '.') {\n            i++;\n            while (i < num.length()) {\n                if (num.charAt(i) < '0' || num.charAt(i) > '9') {\n                    return false;\n                }\n                count++;\n                i++;\n            }\n        }\n        return count <= 2;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189393,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        return num.matches(\"^[0-9]+(\\\\.[0-9]{1,2})?$\");\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189394,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5x8i3yq.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) {\n            return false;\n        }\n        if (num.length() == 1 && num.charAt(0) == '.') {\n            return false;\n        }\n        int dot = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dot++;\n            }\n        }\n        if (dot > 1) {\n            return false;\n        }\n        if (dot == 1) {\n            int index = num.indexOf('.');\n            if (index == 0 || index == num.length() - 1) {\n                return false;\n            }\n            if (num.length() - index - 1 > 2) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189394,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm6m5z9s7.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            double d = Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189380,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdgupjy4.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        String[] parts = num.split(\"\\\\.\");\n        if (parts.length > 2) return false;\n        if (parts.length == 1) return isInteger(parts[0]);\n        if (parts[0].length() == 0) return isInteger(parts[1]);\n        if (parts[1].length() == 0) return isInteger(parts[0]);\n        return isInteger(parts[0]) && isInteger(parts[1]);\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189394,
      "stdout": "",
      "stderr": "/tmp/tmpkkwv40jp.java:14: error: cannot find symbol\n        if (parts.length == 1) return isInteger(parts[0]);\n                                      ^\n  symbol:   method isInteger(String)\n  location: class Problem\n/tmp/tmpkkwv40jp.java:15: error: cannot find symbol\n        if (parts[0].length() == 0) return isInteger(parts[1]);\n                                           ^\n  symbol:   method isInteger(String)\n  location: class Problem\n/tmp/tmpkkwv40jp.java:16: error: cannot find symbol\n        if (parts[1].length() == 0) return isInteger(parts[0]);\n                                           ^\n  symbol:   method isInteger(String)\n  location: class Problem\n/tmp/tmpkkwv40jp.java:17: error: cannot find symbol\n        return isInteger(parts[0]) && isInteger(parts[1]);\n               ^\n  symbol:   method isInteger(String)\n  location: class Problem\n/tmp/tmpkkwv40jp.java:17: error: cannot find symbol\n        return isInteger(parts[0]) && isInteger(parts[1]);\n                                      ^\n  symbol:   method isInteger(String)\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(0) == '-') i++;\n        int count = 0;\n        while (i < num.length() && num.charAt(i) != '.') {\n            if (!Character.isDigit(num.charAt(i))) return false;\n            i++;\n        }\n        if (i == num.length()) return true;\n        i++;\n        while (i < num.length()) {\n            if (!Character.isDigit(num.charAt(i))) return false;\n            count++;\n            i++;\n        }\n        return count <= 2;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189394,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) return false;\n        int dot = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dot++;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n        }\n        if (dot > 1) return false;\n        if (dot == 0) return true;\n        String[] arr = num.split(\"\\\\.\");\n        if (arr[1].length() > 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189395,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null) {\n            return false;\n        }\n        if (num.length() == 0) {\n            return false;\n        }\n        if (num.charAt(0) == '-') {\n            num = num.substring(1);\n        }\n        if (num.length() == 0) {\n            return false;\n        }\n        int decimalPoint = num.indexOf('.');\n        if (decimalPoint == -1) {\n            return false;\n        }\n        if (decimalPoint == num.length() - 1) {\n            return false;\n        }\n        if (decimalPoint == 0) {\n            return false;\n        }\n        if (num.charAt(decimalPoint + 1) == '.') {\n            return false;\n        }\n        if (num.charAt(decimalPoint + 2) == '.') {\n            return false;\n        }\n        if (num.charAt(decimalPoint + 2) == '.') {\n            return false;\n        }\n        if (num.charAt(decimalPoint + 2) == '.') {\n            return false;\n        }\n        if (num.charAt(decimalPoint + 2) == '.') {\n            return false;\n        }\n        if (num.charAt(decimalPoint + 2) == '.') {\n            return false;\n        }\n        if (num.charAt(decimalPoint + 2) == '.') {\n            return false;\n        }\n        if (num.charAt(decimalPoint + 2) == '.') {\n            return false;\n        }\n        if (num.charAt(decimalPoint + 2) == '.') {\n            return false;\n        }\n        if (num.charAt(decimalPoint + 2) == '.') {\n            return false;\n        }\n        if (num.charAt(decimalPoint + 2) == '.') {\n            return false;\n        }\n        if (num.charAt(decimalPoint + 2) == '.') {\n            return false;\n        }\n        if (num.charAt(decimalPoint +\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189395,
      "stdout": "",
      "stderr": "/tmp/tmp6pzvtbzu.java:70: error: illegal start of expression\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5x8i3yq.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        return num.matches(\"^[0-9]*\\\\.[0-9]{2}$\");\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189383,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(0) == '-') i++;\n        if (num.length() == i) return false;\n        int count = 0;\n        while (i < num.length() && num.charAt(i) != '.') {\n            if (!Character.isDigit(num.charAt(i))) return false;\n            i++;\n        }\n        if (i == num.length()) return true;\n        i++;\n        while (i < num.length()) {\n            if (!Character.isDigit(num.charAt(i))) return false;\n            i++;\n            count++;\n        }\n        return count <= 2;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189395,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int dot = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dot++;\n                if (dot > 1) return false;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n        }\n        if (dot == 0) return true;\n        String[] parts = num.split(\"\\\\.\");\n        if (parts.length != 2) return false;\n        if (parts[1].length() != 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null) return false;\n        if (num.length() == 0) return false;\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                dotCount++;\n                if (dotCount > 1) return false;\n            } else if (!Character.isDigit(c)) {\n                return false;\n            }\n        }\n        if (dotCount == 0) return true;\n        int dotIndex = num.indexOf('.');\n        if (dotIndex == num.length() - 1) return false;\n        if (dotIndex == num.length() - 3) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        return num.matches(\"[0-9]*\\\\.[0-9]{2}\");\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189396,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int decimalCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                decimalCount++;\n                if (decimalCount > 1) return false;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n        }\n        if (decimalCount == 0) return false;\n        String[] parts = num.split(\"\\\\.\");\n        if (parts[1].length() > 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189397,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) {\n            return false;\n        }\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                dotCount++;\n            } else if (!Character.isDigit(c)) {\n                return false;\n            }\n        }\n        if (dotCount > 1) {\n            return false;\n        }\n        if (dotCount == 0) {\n            return true;\n        }\n        int dotIndex = num.indexOf('.');\n        if (dotIndex == 0 || dotIndex == num.length() - 1) {\n            return false;\n        }\n        if (num.length() - dotIndex - 1 > 2) {\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189397,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        return num.matches(\"^[+-]?[0-9]*\\\\.[0-9]{1,2}$\");\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189397,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        return num.matches(\"^[+-]?\\\\d+(\\\\.\\\\d{1,2})?$\");\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189397,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(0) == '-') i++;\n        int count = 0;\n        while (i < num.length() && num.charAt(i) != '.') {\n            if (!Character.isDigit(num.charAt(i))) return false;\n            i++;\n        }\n        if (i == num.length()) return true;\n        i++;\n        while (i < num.length()) {\n            if (!Character.isDigit(num.charAt(i))) return false;\n            i++;\n            count++;\n        }\n        return count <= 2;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189380,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        return num.matches(\"^[0-9]*\\\\.[0-9]{2}$\");\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189383,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            double d = Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189380,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdgupjy4.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        // Write your code here.\n        try {\n            double d = Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189397,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp22qyqr8.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(0) == '-') i++;\n        int count = 0;\n        for (; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                count++;\n                if (count > 1) return false;\n            } else if (!Character.isDigit(num.charAt(i))) return false;\n        }\n        if (count == 0) return false;\n        String[] parts = num.split(\"\\\\.\");\n        if (parts.length == 1) return true;\n        return parts[1].length() <= 2;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189398,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            BigDecimal bd = new BigDecimal(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmdk9uz0.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(0) == '-') i++;\n        int count = 0;\n        for (; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                count++;\n                if (count > 1) return false;\n            } else if (!Character.isDigit(num.charAt(i))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189398,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzocbfkq9.java:26)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(0) == '-') i = 1;\n        if (num.charAt(i) == '.') return false;\n        int count = 0;\n        while (i < num.length()) {\n            if (num.charAt(i) == '.') {\n                count++;\n                if (count > 1) return false;\n            } else if (!Character.isDigit(num.charAt(i))) return false;\n            i++;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189398,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4e5z07se.java:28)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) {\n            return false;\n        }\n        int dot = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dot++;\n            }\n        }\n        if (dot > 1) {\n            return false;\n        }\n        if (dot == 1) {\n            String[] arr = num.split(\"\\\\.\");\n            if (arr.length != 2) {\n                return false;\n            }\n            if (arr[1].length() > 2) {\n                return false;\n            }\n        }\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189399,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int dot = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dot++;\n                if (dot > 1) return false;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n        }\n        if (dot == 0) return true;\n        String[] nums = num.split(\"\\\\.\");\n        if (nums[1].length() > 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189399,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n        } catch (NumberFormatException e) {\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwkjrwgrh.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                dotCount++;\n                if (dotCount > 1) return false;\n                if (i == 0 || i == num.length() - 1) return false;\n            } else if (c < '0' || c > '9') {\n                return false;\n            }\n        }\n        if (dotCount == 0) return true;\n        String[] parts = num.split(\"\\\\.\");\n        if (parts[1].length() > 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189400,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5x8i3yq.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(0) == '-') i++;\n        int count = 0;\n        while (i < num.length() && num.charAt(i) != '.') {\n            if (!Character.isDigit(num.charAt(i))) return false;\n            i++;\n        }\n        if (i == num.length()) return true;\n        i++;\n        while (i < num.length()) {\n            if (!Character.isDigit(num.charAt(i))) return false;\n            i++;\n            count++;\n        }\n        return count <= 2;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189380,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int dot = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dot++;\n                if (dot > 1) return false;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n        }\n        if (dot == 0) return true;\n        String[] parts = num.split(\"\\\\.\");\n        if (parts[1].length() > 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189400,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null) {\n            return false;\n        }\n        if (num.length() == 0) {\n            return false;\n        }\n        if (num.length() == 1) {\n            return Character.isDigit(num.charAt(0));\n        }\n        if (num.charAt(0) == '0') {\n            return false;\n        }\n        if (num.charAt(0) == '.') {\n            return false;\n        }\n        if (num.charAt(num.length() - 1) == '.') {\n            return false;\n        }\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dotCount++;\n            }\n            if (dotCount > 1) {\n                return false;\n            }\n            if (!Character.isDigit(num.charAt(i)) && num.charAt(i) != '.') {\n                return false;\n            }\n        }\n        if (dotCount == 0) {\n            return true;\n        }\n        int dotIndex = num.indexOf('.');\n        if (dotIndex == num.length() - 1) {\n            return false;\n        }\n        if (dotIndex == num.length() - 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189400,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclkey9rg.java:54)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null) return false;\n        if (num.length() == 0) return false;\n        if (num.length() == 1) return true;\n        if (num.length() == 2) return true;\n        if (num.length() == 3) return true;\n        if (num.length() == 4) return true;\n        if (num.length() == 5) return true;\n        if (num.length() == 6) return true;\n        if (num.length() == 7) return true;\n        if (num.length() == 8) return true;\n        if (num.length() == 9) return true;\n        if (num.length() == 10) return true;\n        if (num.length() == 11) return true;\n        if (num.length() == 12) return true;\n        if (num.length() == 13) return true;\n        if (num.length() == 14) return true;\n        if (num.length() == 15) return true;\n        if (num.length() == 16) return true;\n        if (num.length() == 17) return true;\n        if (num.length() == 18) return true;\n        if (num.length() == 19) return true;\n        if (num.length() == 20) return true;\n        if (num.length() == 21) return true;\n        if (num.length() == 22) return true;\n        if (num.length() == 23) return true;\n        if (num.length() == 24) return true;\n        if (num.length() == 25) return true;\n        if (num.length() == 26) return true;\n        if (num.length() == 27) return true;\n        if (num.length() == 28) return true;\n        if (num.length() == 29) return true;\n        if (num.length() == 30) return true;\n        if (num.length() == 31) return true;\n        if (num.length() == 32) return true;\n        if (num.length() == 33) return true;\n        if (num.length() == 34) return true;\n        if (num.length() == 35)\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189400,
      "stdout": "",
      "stderr": "/tmp/tmpmm142tu0.java:48: error: illegal start of statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        return num.matches(\"^[0-9]*\\\\.[0-9]{2}$\");\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189383,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(0) == '-') i++;\n        boolean isDecimal = false;\n        while (i < num.length()) {\n            if (num.charAt(i) == '.') {\n                if (isDecimal) return false;\n                isDecimal = true;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n            i++;\n        }\n        return isDecimal;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189401,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph44whh6l.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(0) == '-') i = 1;\n        int count = 0;\n        for (; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                count++;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n        }\n        return count <= 1;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189401,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcgu6z4m8.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5x8i3yq.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        return num.matches(\"^[-+]?[0-9]*\\\\.?[0-9]{0,2}$\");\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        return num.matches(\"^[0-9]*\\\\.[0-9]{2}$\");\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189383,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) {\n            return false;\n        }\n        if (num.charAt(0) == '.') {\n            return false;\n        }\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dotCount++;\n            }\n            if (dotCount > 1) {\n                return false;\n            }\n            if (num.charAt(i) == '.') {\n                continue;\n            }\n            if (num.charAt(i) < '0' || num.charAt(i) > '9') {\n                return false;\n            }\n        }\n        if (dotCount == 0) {\n            return true;\n        }\n        int dotIndex = num.indexOf('.');\n        if (dotIndex == num.length() - 1) {\n            return false;\n        }\n        if (dotIndex == num.length() - 3) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189401,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null) return false;\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '.') return false;\n        if (num.charAt(num.length() - 1) == '.') return false;\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dotCount++;\n            }\n            if (dotCount > 1) return false;\n            if (num.charAt(i) != '.' && num.charAt(i) != '0' && num.charAt(i) != '1' && num.charAt(i) != '2' && num.charAt(i) != '3' && num.charAt(i) != '4' && num.charAt(i) != '5' && num.charAt(i) != '6' && num.charAt(i) != '7' && num.charAt(i) != '8' && num.charAt(i) != '9') return false;\n        }\n        if (dotCount == 0) return true;\n        String[] nums = num.split(\"\\\\.\");\n        if (nums[1].length() > 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189401,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5x8i3yq.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '-') num = num.substring(1);\n        int decimal = num.indexOf('.');\n        if (decimal == -1) return false;\n        if (num.length() - decimal > 3) return false;\n        for (int i = 0; i < num.length(); i++) {\n            if (i == decimal) continue;\n            if (!Character.isDigit(num.charAt(i))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189401,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5x8i3yq.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(0) == '-') i++;\n        int count = 0;\n        while (i < num.length()) {\n            if (num.charAt(i) == '.') {\n                count++;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n            i++;\n        }\n        return count == 1;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189402,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkdaerblp.java:28)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '.') return false;\n        if (num.charAt(num.length() - 1) == '.') return false;\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dotCount++;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n        }\n        if (dotCount > 1) return false;\n        if (dotCount == 0) return true;\n        int dotIndex = num.indexOf('.');\n        if (num.length() - dotIndex - 1 > 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189403,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5x8i3yq.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '.') return false;\n        if (num.charAt(num.length() - 1) == '.') return false;\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dotCount++;\n                if (dotCount > 1) return false;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n        }\n        if (dotCount == 0) return true;\n        int dotIndex = num.indexOf('.');\n        return num.length() - dotIndex - 1 <= 2;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189382,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5x8i3yq.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        return num.matches(\"^[0-9]+(\\\\.[0-9]{1,2})?$\");\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189394,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null) {\n            return false;\n        }\n        if (num.length() == 0) {\n            return false;\n        }\n        if (num.charAt(0) == '.') {\n            return false;\n        }\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dotCount++;\n            }\n        }\n        if (dotCount > 1) {\n            return false;\n        }\n        if (dotCount == 1) {\n            int dotIndex = num.indexOf('.');\n            if (dotIndex == num.length() - 1) {\n                return false;\n            }\n            if (dotIndex == num.length() - 2) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189403,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp96dgvtqi.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int decimal = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                decimal++;\n            } else if (!Character.isDigit(c)) {\n                return false;\n            }\n        }\n        return decimal == 1;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189403,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpil1vrs6l.java:26)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n        } catch (NumberFormatException e) {\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwkjrwgrh.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int dot = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dot++;\n                if (dot > 1) return false;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n        }\n        if (dot == 0) return true;\n        String[] arr = num.split(\"\\\\.\");\n        if (arr[1].length() > 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189403,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(i) == '-') i++;\n        if (i == num.length()) return false;\n        int count = 0;\n        while (i < num.length() && num.charAt(i) != '.') {\n            if (!Character.isDigit(num.charAt(i))) return false;\n            i++;\n            count++;\n        }\n        if (count == 0) return false;\n        if (i == num.length()) return true;\n        i++;\n        count = 0;\n        while (i < num.length()) {\n            if (!Character.isDigit(num.charAt(i))) return false;\n            i++;\n            count++;\n        }\n        return count == 2;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) {\n            return false;\n        }\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                dotCount++;\n            } else if (!Character.isDigit(c)) {\n                return false;\n            }\n        }\n        if (dotCount > 1) {\n            return false;\n        }\n        if (dotCount == 0) {\n            return true;\n        }\n        int dotIndex = num.indexOf('.');\n        if (dotIndex == num.length() - 1) {\n            return false;\n        }\n        if (dotIndex == num.length() - 3) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '-') num = num.substring(1);\n        if (num.length() == 0) return false;\n        int i = 0;\n        while (i < num.length() && Character.isDigit(num.charAt(i))) i++;\n        if (i == num.length()) return true;\n        if (num.charAt(i) != '.') return false;\n        i++;\n        if (i == num.length()) return false;\n        int j = i;\n        while (j < num.length() && Character.isDigit(num.charAt(j))) j++;\n        if (j - i > 2) return false;\n        if (j == num.length()) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) {\n            return false;\n        }\n        if (num.charAt(0) == '-') {\n            num = num.substring(1);\n        }\n        if (num.length() == 0) {\n            return false;\n        }\n        int i = 0;\n        while (i < num.length() && Character.isDigit(num.charAt(i))) {\n            i++;\n        }\n        if (i == num.length()) {\n            return true;\n        }\n        if (num.charAt(i) != '.') {\n            return false;\n        }\n        i++;\n        if (i == num.length()) {\n            return false;\n        }\n        int count = 0;\n        while (i < num.length() && Character.isDigit(num.charAt(i))) {\n            i++;\n            count++;\n        }\n        if (count == 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null) return false;\n        if (num.length() == 0) return false;\n        if (num.length() == 1) return false;\n        if (num.charAt(0) == '.') return false;\n        if (num.charAt(num.length() - 1) == '.') return false;\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dotCount++;\n            }\n            if (dotCount > 1) return false;\n            if (num.charAt(i) == '.') continue;\n            if (!Character.isDigit(num.charAt(i))) return false;\n        }\n        if (dotCount == 0) return false;\n        if (num.length() - num.indexOf('.') - 1 > 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5x8i3yq.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        return num.matches(\"^[0-9]*\\\\.?[0-9]{0,2}$\");\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189405,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) {\n            return false;\n        }\n        if (num.charAt(0) == '-' || num.charAt(0) == '+') {\n            num = num.substring(1);\n        }\n        if (num.length() == 0) {\n            return false;\n        }\n        int dotIndex = num.indexOf('.');\n        if (dotIndex == -1) {\n            return isInteger(num);\n        }\n        if (dotIndex == 0 || dotIndex == num.length() - 1) {\n            return false;\n        }\n        String beforeDot = num.substring(0, dotIndex);\n        String afterDot = num.substring(dotIndex + 1);\n        if (afterDot.length() > 2) {\n            return false;\n        }\n        return isInteger(beforeDot) && isInteger(afterDot);\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189405,
      "stdout": "",
      "stderr": "/tmp/tmpn8a3s9i0.java:22: error: cannot find symbol\n            return isInteger(num);\n                   ^\n  symbol:   method isInteger(String)\n  location: class Problem\n/tmp/tmpn8a3s9i0.java:32: error: cannot find symbol\n        return isInteger(beforeDot) && isInteger(afterDot);\n               ^\n  symbol:   method isInteger(String)\n  location: class Problem\n/tmp/tmpn8a3s9i0.java:32: error: cannot find symbol\n        return isInteger(beforeDot) && isInteger(afterDot);\n                                       ^\n  symbol:   method isInteger(String)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            double d = Double.parseDouble(num);\n            if (d == Math.floor(d) && !Double.isInfinite(d)) {\n                return true;\n            }\n            return false;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189406,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzyj4qomd.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(0) == '-') i++;\n        int count = 0;\n        while (i < num.length()) {\n            if (num.charAt(i) == '.') {\n                count++;\n                if (count > 1) return false;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n            i++;\n        }\n        if (count == 0) return true;\n        int dotIndex = num.indexOf('.');\n        if (dotIndex == num.length() - 1) return false;\n        if (dotIndex == num.length() - 3) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5x8i3yq.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.length() == 1) return Character.isDigit(num.charAt(0));\n        if (num.charAt(0) == '0') return false;\n        if (num.charAt(0) == '.') return false;\n        if (num.charAt(num.length() - 1) == '.') return false;\n        int dot = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                dot++;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n        }\n        if (dot > 1) return false;\n        if (dot == 1) {\n            int index = num.indexOf('.');\n            if (num.length() - index - 1 > 2) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            BigDecimal bd = new BigDecimal(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmdk9uz0.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) return false;\n        int dot = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                dot++;\n                if (dot > 1) return false;\n            } else if (!Character.isDigit(c)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189407,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4iwt5cf6.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null) return false;\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '-') num = num.substring(1);\n        if (num.length() == 0) return false;\n        int dotIndex = num.indexOf('.');\n        if (dotIndex == -1) return false;\n        if (dotIndex == 0 || dotIndex == num.length() - 1) return false;\n        if (dotIndex != num.lastIndexOf('.')) return false;\n        String[] parts = num.split(\"\\\\.\");\n        if (parts.length != 2) return false;\n        if (parts[0].length() == 0 || parts[1].length() == 0) return false;\n        if (parts[1].length() > 2) return false;\n        for (int i = 0; i < parts[0].length(); i++) {\n            if (!Character.isDigit(parts[0].charAt(i))) return false;\n        }\n        for (int i = 0; i < parts[1].length(); i++) {\n            if (!Character.isDigit(parts[1].charAt(i))) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) return false;\n        int count = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                count++;\n                if (count > 1) return false;\n            } else if (c < '0' || c > '9') return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189407,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9dtubhpt.java:25)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189378,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7nkr801.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '-' || num.charAt(0) == '+') num = num.substring(1);\n        if (num.length() == 0) return false;\n        int i = 0;\n        while (i < num.length() && num.charAt(i) != '.') {\n            if (num.charAt(i) < '0' || num.charAt(i) > '9') return false;\n            i++;\n        }\n        if (i == num.length()) return true;\n        if (i == 0) return false;\n        i++;\n        if (i == num.length()) return false;\n        while (i < num.length()) {\n            if (num.charAt(i) < '0' || num.charAt(i) > '9') return false;\n            i++;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189407,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_lr1i_qo.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        return num.matches(\"^[-+]?[0-9]*\\\\.?[0-9]{0,2}$\");\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null) return false;\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '-') return false;\n        int dot = num.indexOf('.');\n        if (dot == -1) return false;\n        if (dot == 0) return false;\n        if (dot == num.length() - 1) return false;\n        if (dot == num.length() - 2) return false;\n        if (dot == num.length() - 3) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189407,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz_vmuv2y.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.isEmpty()) {\n            return false;\n        }\n        int len = num.length();\n        int i = 0;\n        if (num.charAt(0) == '-') {\n            i++;\n        }\n        int count = 0;\n        for (; i < len; i++) {\n            if (num.charAt(i) == '.') {\n                count++;\n            }\n        }\n        if (count > 1) {\n            return false;\n        }\n        try {\n            double d = Double.parseDouble(num);\n        } catch (NumberFormatException e) {\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189408,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9r94w_4i.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) return false;\n        int dot = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                dot++;\n                if (dot > 1) return false;\n            } else if (!Character.isDigit(c)) {\n                return false;\n            }\n        }\n        if (dot == 0) return false;\n        int index = num.indexOf('.');\n        return num.substring(index + 1).length() == 2;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189408,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num.length() == 0) return false;\n        int i = 0;\n        if (num.charAt(0) == '-') i++;\n        int count = 0;\n        for (; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                count++;\n                if (count > 1) return false;\n            } else if (!Character.isDigit(num.charAt(i))) {\n                return false;\n            }\n        }\n        if (count == 0) return true;\n        int index = num.indexOf('.');\n        if (index == num.length() - 1) return false;\n        if (index == num.length() - 2) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189408,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_e83jr35.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        try {\n            Double.parseDouble(num);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189375,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5x8i3yq.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null) return false;\n        if (num.length() == 0) return false;\n        if (num.charAt(0) == '.') return false;\n        if (num.charAt(num.length() - 1) == '.') return false;\n        if (num.charAt(0) == '-' && num.length() == 1) return false;\n        if (num.charAt(0) == '-' && num.charAt(1) == '.') return false;\n        if (num.charAt(0) == '-' && num.charAt(num.length() - 1) == '.') return false;\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') dotCount++;\n            if (dotCount > 1) return false;\n            if (c != '.' && c != '-' && !Character.isDigit(c)) return false;\n        }\n        if (dotCount == 0) return true;\n        String[] parts = num.split(\"\\\\.\");\n        if (parts[1].length() > 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) {\n            return false;\n        }\n        int count = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '.') {\n                count++;\n            }\n        }\n        if (count > 1) {\n            return false;\n        }\n        if (count == 1) {\n            String[] arr = num.split(\"\\\\.\");\n            if (arr[1].length() > 2) {\n                return false;\n            }\n        }\n        try {\n            Double.parseDouble(num);\n        } catch (Exception e) {\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        return num.matches(\"^[0-9]+(\\\\.[0-9]{1,2})?$\");\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189394,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        return num.matches(\"[0-9]+\\\\.[0-9]{2}\");\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static boolean isDecimal(String num) {\n        if (num == null || num.length() == 0) {\n            return false;\n        }\n        int dotCount = 0;\n        for (int i = 0; i < num.length(); i++) {\n            char c = num.charAt(i);\n            if (c == '.') {\n                dotCount++;\n                if (dotCount > 1) {\n                    return false;\n                }\n            } else if (c < '0' || c > '9') {\n                return false;\n            }\n        }\n        if (dotCount == 0) {\n            return true;\n        }\n        String[] parts = num.split(\"\\\\.\");\n        if (parts[1].length() > 2) {\n            return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDecimal((\"123.11\")) == (true));\n    assert(isDecimal((\"e666.86\")) == (false));\n    assert(isDecimal((\"3.124587\")) == (false));\n    assert(isDecimal((\"1.11\")) == (true));\n    assert(isDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
      "timestamp": 1667189409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
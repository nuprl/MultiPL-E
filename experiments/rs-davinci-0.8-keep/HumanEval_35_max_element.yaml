name: HumanEval_35_max_element
language: rs
prompt: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
  /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\nfn\
  \ max_element(l: Vec<isize>) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
  \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),\
  \ 124);\n}\n"
completions: ["    let mut m = l[0];\n    for i in l {\n        if i > m {\n     \
    \       m = i;\n        }\n    }\n    m", '    return 0;', '    l.iter().max().unwrap().clone()',
  "  let mut max = l[0];\n  for &i in l.iter() {\n    if i > max {\n      max = i;\n\
    \    }\n  }\n  max", "    let mut result = l[0];\n    for element in l {\n   \
    \     if element > result {\n            result = element;\n        }\n    }\n\
    \    result", '    l.iter().fold(0, |a, b| if a > *b { a } else { *b })', "  \
    \  let mut maximum = l[0];\n    for &x in l.iter() {\n        if x > maximum {\n\
    \            maximum = x;\n        }\n    }\n    maximum", '    return l.iter().fold(0,
    |max, &x| if x > max { x } else { max });', "    let mut m = l[0];\n    for i\
    \ in l {\n        if i > m {\n            m = i;\n        }\n    }\n    m", " \
    \   let mut res = l[0];\n    for i in l {\n        if i > res {\n            res\
    \ = i;\n        }\n    }\n    res", "    let mut max = l[0];\n    for &i in l.iter()\
    \ {\n        if i > max {\n            max = i;\n        }\n    }\n    max", " \
    \   l.iter().fold(0, |acc, item| {\n        if item > &acc {\n            *item\n\
    \        } else {\n            acc\n        }\n    })", "    let mut max: isize\
    \ = 0;\n    for x in l {\n        if x > max {\n            max = x;\n       \
    \ }\n    }\n    max", "    let mut current_max = l[0];\n    for i in l.iter()\
    \ {\n        if i > &current_max {\n            current_max = *i;\n        }\n\
    \    }\n    current_max", "    let mut max = l[0];\n    for num in l {\n     \
    \   if num > max {\n            max = num;\n        }\n    }\n    max", "    let\
    \ mut max = l[0];\n    for x in l.iter() {\n        if *x > max {\n          \
    \  max = *x;\n        }\n    }\n    max", "    let mut max = l[0];\n    for i\
    \ in 0..l.len() {\n        if l[i] > max {\n            max = l[i];\n        }\n\
    \    }\n    max", '    return l.iter().max().unwrap().clone();', "    // TODO\n\
    \    0", "    let mut max = l[0];\n    for &x in l.iter() {\n        if x > max\
    \ {\n            max = x;\n        }\n    }\n    max"]
stop_tokens:
- "\n}"

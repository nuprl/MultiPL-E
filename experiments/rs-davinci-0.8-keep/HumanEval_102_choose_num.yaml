name: HumanEval_102_choose_num
language: rs
prompt: "/// This function takes two positive numbers x and y and returns the\n///\
  \ biggest even integer number that is in the range [x, y] inclusive. If \n/// there's\
  \ no such number, then the function should return -1.\n/// For example:\n/// choose_num(12,\
  \ 15) = 14\n/// choose_num(13, 12) = -1\nfn choose_num(x: isize, y: isize) -> isize\
  \ {\n"
tests: "}\n\nfn main() {\n    let candidate = choose_num;\n    assert_eq!(candidate(12,\
  \ 15), 14);\n    assert_eq!(candidate(13, 12), -1);\n    assert_eq!(candidate(33,\
  \ 12354), 12354);\n    assert_eq!(candidate(5234, 5233), -1);\n    assert_eq!(candidate(6,\
  \ 29), 28);\n    assert_eq!(candidate(27, 10), -1);\n    assert_eq!(candidate(7,\
  \ 7), -1);\n    assert_eq!(candidate(546, 546), 546);\n}\n"
completions: ["    if x > y {\n        return -1;\n    }\n\n    if x % 2 == 0 {\n\
    \        return x;\n    }\n\n    x + 1", "    // TODO\n    0", '    unimplemented!();',
  "    // YOUR CODE HERE\n    for i in x..y+1 {\n        if i % 2 == 0 {\n       \
    \     return i;\n        }\n    }\n    -1", "    let mut biggest_even = -1;\n\
    \    for num in x..(y + 1) {\n        if num % 2 == 0 {\n            biggest_even\
    \ = num;\n        }\n    }\n    biggest_even", "    let mut ret = -1;\n    for\
    \ num in x..y+1 {\n        if num % 2 == 0 {\n            ret = num;\n       \
    \ }\n    }\n    ret", "    for i in (x..y+1).rev() {\n        if i % 2 == 0 {\n\
    \            return i;\n        }\n    }\n    -1", "    // TODO: implement me\n\
    \    -1", "    if x > y {\n        return -1;\n    }\n\n    if x % 2 == 0 {\n\
    \        x\n    } else {\n        x + 1\n    }", '    -1', "    if x > y {\n \
    \       return -1;\n    }\n    if x % 2 == 0 {\n        return x;\n    }\n   \
    \ choose_num(x + 1, y)", "    let mut res = -1;\n    if x > y {\n        return\
    \ res;\n    }\n    for i in x..(y+1) {\n        if i % 2 == 0 {\n            res\
    \ = i;\n        }\n    }\n    res", '    unimplemented!()', "    for i in x..y+1\
    \ {\n        if i % 2 == 0 {\n            return i;\n        }\n    }\n    return\
    \ -1;", "    for i in (x..y + 1).rev() {\n        if i % 2 == 0 {\n          \
    \  return i;\n        }\n    }\n    -1", "    if x > y {\n        return -1;\n\
    \    }\n    if x % 2 == 0 {\n        x\n    } else {\n        x + 1\n    }", '    unimplemented!();',
  "    // TODO: your code here\n    let mut even_nums: Vec<isize> = Vec::new();\n\
    \    for i in x..y+1 {\n        if i % 2 == 0 {\n            even_nums.push(i);\n\
    \        }\n    }\n    even_nums.pop().unwrap_or(-1)", '    return -1;', "   \
    \ if x % 2 == 0 {\n        x\n    } else if y % 2 == 0 {\n        y\n    } else\
    \ {\n        -1\n    }"]
stop_tokens:
- "\n}"

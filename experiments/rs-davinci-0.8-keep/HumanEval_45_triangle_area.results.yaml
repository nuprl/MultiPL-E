language: rs
name: HumanEval_45_triangle_area
results:
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    (0.5 * a as f64 * h as f64) as f64\n}\n\nfn main() {\n    let candidate =\
    \ triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2,\
    \ 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822441
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    (a as f64) * (h as f64) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    a as f64 * h as f64 / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    a as f64 * h as f64 / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 1
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    f64::from(a) * f64::from(h) / 2.0\n}\n\nfn main() {\n    let candidate =\
    \ triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2,\
    \ 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the trait bound `f64: From<isize>` is not satisfied\n   -->\
    \ /tmp/tmpt3o62up8.rs:5:5\n    |\n5   |     f64::from(a) * f64::from(h) / 2.0\n\
    \    |     ^^^^^^^^^ the trait `From<isize>` is not implemented for `f64`\n  \
    \  |\n    = help: the following implementations were found:\n              <f64\
    \ as From<f32>>\n              <f64 as From<i16>>\n              <f64 as From<i32>>\n\
    \              <f64 as From<i8>>\n            and 3 others\nnote: required by\
    \ `from`\n\nerror[E0277]: the trait bound `f64: From<isize>` is not satisfied\n\
    \   --> /tmp/tmpt3o62up8.rs:5:20\n    |\n5   |     f64::from(a) * f64::from(h)\
    \ / 2.0\n    |                    ^^^^^^^^^ the trait `From<isize>` is not implemented\
    \ for `f64`\n    |\n    = help: the following implementations were found:\n  \
    \            <f64 as From<f32>>\n              <f64 as From<i16>>\n          \
    \    <f64 as From<i32>>\n              <f64 as From<i8>>\n            and 3 others\n\
    note: required by `from`\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659822441
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    (a as f64 * h as f64) / 2f64\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822441
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    (a as f64 * h as f64) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    a as f64 * h as f64 / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    ((a as f64) * (h as f64)) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822441
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \  (a * h) as f64 / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822441
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    if a < 0 || h < 0 {\n        panic!(\"a or h is less than 0\");\n    }\n\n\
    \    let area = a as f64 * h as f64 / 2.0;\n    return area;\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822441
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    (a as f64 * h as f64) / 2f64\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822441
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    0.5 * a as f64 * h as f64\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    let area = ((a as f64) * (h as f64)) / 2.0;\n    area\n}\n\nfn main() {\n\
    \    let candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n \
    \   assert_eq!(candidate(2, 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822441
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    (a as f64) * (h as f64) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440
- exit_code: 1
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    f64::from(a) * f64::from(h) / 2.0\n}\n\nfn main() {\n    let candidate =\
    \ triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2,\
    \ 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: the trait bound `f64: From<isize>` is not satisfied\n   -->\
    \ /tmp/tmpt3o62up8.rs:5:5\n    |\n5   |     f64::from(a) * f64::from(h) / 2.0\n\
    \    |     ^^^^^^^^^ the trait `From<isize>` is not implemented for `f64`\n  \
    \  |\n    = help: the following implementations were found:\n              <f64\
    \ as From<f32>>\n              <f64 as From<i16>>\n              <f64 as From<i32>>\n\
    \              <f64 as From<i8>>\n            and 3 others\nnote: required by\
    \ `from`\n\nerror[E0277]: the trait bound `f64: From<isize>` is not satisfied\n\
    \   --> /tmp/tmpt3o62up8.rs:5:20\n    |\n5   |     f64::from(a) * f64::from(h)\
    \ / 2.0\n    |                    ^^^^^^^^^ the trait `From<isize>` is not implemented\
    \ for `f64`\n    |\n    = help: the following implementations were found:\n  \
    \            <f64 as From<f32>>\n              <f64 as From<i16>>\n          \
    \    <f64 as From<i32>>\n              <f64 as From<i8>>\n            and 3 others\n\
    note: required by `from`\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659822441
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    let area = a as f64 * h as f64 * 0.5;\n    area\n}\n\nfn main() {\n    let\
    \ candidate = triangle_area;\n    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2,\
    \ 2), 2.0);\n    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822441
- exit_code: 0
  program: "/// Given length of a side and high return area for a triangle.\n/// >>>\
    \ triangle_area(5, 3)\n/// 7.5\nfn triangle_area(a: isize, h: isize) -> f64 {\n\
    \    (a as f64) * (h as f64) / 2.0\n}\n\nfn main() {\n    let candidate = triangle_area;\n\
    \    assert_eq!(candidate(5, 3), 7.5);\n    assert_eq!(candidate(2, 2), 2.0);\n\
    \    assert_eq!(candidate(10, 8), 40.0);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822440

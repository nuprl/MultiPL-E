language: rs
name: HumanEval_92_any_int
results:
- exit_code: 1
  program: "/// Create a function that takes 3 numbers.\n/// Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfn any_int(x: f64, y: f64, z: f64) ->\
    \ bool {\n    x.is_integer() && y.is_integer() && z.is_integer() && (x + y ==\
    \ z || x + z == y || y + z == x)\n}\n\nfn main() {\n    let candidate = any_int;\n\
    \    assert_eq!(candidate(2.0, 3.0, 1.0), true);\n    assert_eq!(candidate(2.5,\
    \ 2.0, 3.0), false);\n    assert_eq!(candidate(1.5, 5.0, 3.5), false);\n    assert_eq!(candidate(2.0,\
    \ 6.0, 2.0), false);\n    assert_eq!(candidate(4.0, 2.0, 2.0), true);\n    assert_eq!(candidate(2.2,\
    \ 2.2, 2.2), false);\n    assert_eq!(candidate(-4.0, 6.0, 2.0), true);\n    assert_eq!(candidate(2.0,\
    \ 1.0, 1.0), true);\n    assert_eq!(candidate(3.0, 4.0, 7.0), true);\n    assert_eq!(candidate(3.0,\
    \ 4.0, 7.0), false);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_integer` found for type `f64` in the\
    \ current scope\n  --> /tmp/tmpsl0gqxa_.rs:10:7\n   |\n10 |     x.is_integer()\
    \ && y.is_integer() && z.is_integer() && (x + y == z || x + z == y || y + z ==\
    \ x)\n   |       ^^^^^^^^^^ method not found in `f64`\n\nerror[E0599]: no method\
    \ named `is_integer` found for type `f64` in the current scope\n  --> /tmp/tmpsl0gqxa_.rs:10:25\n\
    \   |\n10 |     x.is_integer() && y.is_integer() && z.is_integer() && (x + y ==\
    \ z || x + z == y || y + z == x)\n   |                         ^^^^^^^^^^ method\
    \ not found in `f64`\n\nerror[E0599]: no method named `is_integer` found for type\
    \ `f64` in the current scope\n  --> /tmp/tmpsl0gqxa_.rs:10:43\n   |\n10 |    \
    \ x.is_integer() && y.is_integer() && z.is_integer() && (x + y == z || x + z ==\
    \ y || y + z == x)\n   |                                           ^^^^^^^^^^\
    \ method not found in `f64`\n\nerror: aborting due to 3 previous errors\n\nFor\
    \ more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659820405
- exit_code: 1
  program: "/// Create a function that takes 3 numbers.\n/// Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfn any_int(x: f64, y: f64, z: f64) ->\
    \ bool {\n    match (x.is_integer(), y.is_integer(), z.is_integer()) {\n     \
    \   (true, true, true) => (x + y == z) || (x + z == y) || (y + z == x),\n    \
    \    _ => false,\n    }\n}\n\nfn main() {\n    let candidate = any_int;\n    assert_eq!(candidate(2.0,\
    \ 3.0, 1.0), true);\n    assert_eq!(candidate(2.5, 2.0, 3.0), false);\n    assert_eq!(candidate(1.5,\
    \ 5.0, 3.5), false);\n    assert_eq!(candidate(2.0, 6.0, 2.0), false);\n    assert_eq!(candidate(4.0,\
    \ 2.0, 2.0), true);\n    assert_eq!(candidate(2.2, 2.2, 2.2), false);\n    assert_eq!(candidate(-4.0,\
    \ 6.0, 2.0), true);\n    assert_eq!(candidate(2.0, 1.0, 1.0), true);\n    assert_eq!(candidate(3.0,\
    \ 4.0, 7.0), true);\n    assert_eq!(candidate(3.0, 4.0, 7.0), false);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_integer` found for type `f64` in the\
    \ current scope\n  --> /tmp/tmpyumwrj34.rs:10:14\n   |\n10 |     match (x.is_integer(),\
    \ y.is_integer(), z.is_integer()) {\n   |              ^^^^^^^^^^ method not found\
    \ in `f64`\n\nerror[E0599]: no method named `is_integer` found for type `f64`\
    \ in the current scope\n  --> /tmp/tmpyumwrj34.rs:10:30\n   |\n10 |     match\
    \ (x.is_integer(), y.is_integer(), z.is_integer()) {\n   |                   \
    \           ^^^^^^^^^^ method not found in `f64`\n\nerror[E0599]: no method named\
    \ `is_integer` found for type `f64` in the current scope\n  --> /tmp/tmpyumwrj34.rs:10:46\n\
    \   |\n10 |     match (x.is_integer(), y.is_integer(), z.is_integer()) {\n   |\
    \                                              ^^^^^^^^^^ method not found in\
    \ `f64`\n\nerror: aborting due to 3 previous errors\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659820405
- exit_code: 1
  program: "/// Create a function that takes 3 numbers.\n/// Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfn any_int(x: f64, y: f64, z: f64) ->\
    \ bool {\n    (x.is_integer() && y.is_integer() && z.is_integer()) && (x + y ==\
    \ z || x + z == y || y + z == x)\n}\n\nfn main() {\n    let candidate = any_int;\n\
    \    assert_eq!(candidate(2.0, 3.0, 1.0), true);\n    assert_eq!(candidate(2.5,\
    \ 2.0, 3.0), false);\n    assert_eq!(candidate(1.5, 5.0, 3.5), false);\n    assert_eq!(candidate(2.0,\
    \ 6.0, 2.0), false);\n    assert_eq!(candidate(4.0, 2.0, 2.0), true);\n    assert_eq!(candidate(2.2,\
    \ 2.2, 2.2), false);\n    assert_eq!(candidate(-4.0, 6.0, 2.0), true);\n    assert_eq!(candidate(2.0,\
    \ 1.0, 1.0), true);\n    assert_eq!(candidate(3.0, 4.0, 7.0), true);\n    assert_eq!(candidate(3.0,\
    \ 4.0, 7.0), false);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_integer` found for type `f64` in the\
    \ current scope\n  --> /tmp/tmp884_1rbw.rs:10:8\n   |\n10 |     (x.is_integer()\
    \ && y.is_integer() && z.is_integer()) && (x + y == z || x + z == y || y + z ==\
    \ x)\n   |        ^^^^^^^^^^ method not found in `f64`\n\nerror[E0599]: no method\
    \ named `is_integer` found for type `f64` in the current scope\n  --> /tmp/tmp884_1rbw.rs:10:26\n\
    \   |\n10 |     (x.is_integer() && y.is_integer() && z.is_integer()) && (x + y\
    \ == z || x + z == y || y + z == x)\n   |                          ^^^^^^^^^^\
    \ method not found in `f64`\n\nerror[E0599]: no method named `is_integer` found\
    \ for type `f64` in the current scope\n  --> /tmp/tmp884_1rbw.rs:10:44\n   |\n\
    10 |     (x.is_integer() && y.is_integer() && z.is_integer()) && (x + y == z ||\
    \ x + z == y || y + z == x)\n   |                                            ^^^^^^^^^^\
    \ method not found in `f64`\n\nerror: aborting due to 3 previous errors\n\nFor\
    \ more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659820405
- exit_code: 101
  program: "/// Create a function that takes 3 numbers.\n/// Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfn any_int(x: f64, y: f64, z: f64) ->\
    \ bool {\n    x.floor() == y.floor() + z.floor() || y.floor() == x.floor() + z.floor()\
    \ || z.floor() == x.floor() + y.floor()\n}\n\nfn main() {\n    let candidate =\
    \ any_int;\n    assert_eq!(candidate(2.0, 3.0, 1.0), true);\n    assert_eq!(candidate(2.5,\
    \ 2.0, 3.0), false);\n    assert_eq!(candidate(1.5, 5.0, 3.5), false);\n    assert_eq!(candidate(2.0,\
    \ 6.0, 2.0), false);\n    assert_eq!(candidate(4.0, 2.0, 2.0), true);\n    assert_eq!(candidate(2.2,\
    \ 2.2, 2.2), false);\n    assert_eq!(candidate(-4.0, 6.0, 2.0), true);\n    assert_eq!(candidate(2.0,\
    \ 1.0, 1.0), true);\n    assert_eq!(candidate(3.0, 4.0, 7.0), true);\n    assert_eq!(candidate(3.0,\
    \ 4.0, 7.0), false);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmpd2ljpg6e.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659820405
- exit_code: 101
  program: "/// Create a function that takes 3 numbers.\n/// Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfn any_int(x: f64, y: f64, z: f64) ->\
    \ bool {\n    let sum: f64 = x + y + z;\n    if (x == sum - y - z || y == sum\
    \ - x - z || z == sum - x - y) && sum.fract() == 0.0 {\n        true\n    } else\
    \ {\n        false\n    }\n}\n\nfn main() {\n    let candidate = any_int;\n  \
    \  assert_eq!(candidate(2.0, 3.0, 1.0), true);\n    assert_eq!(candidate(2.5,\
    \ 2.0, 3.0), false);\n    assert_eq!(candidate(1.5, 5.0, 3.5), false);\n    assert_eq!(candidate(2.0,\
    \ 6.0, 2.0), false);\n    assert_eq!(candidate(4.0, 2.0, 2.0), true);\n    assert_eq!(candidate(2.2,\
    \ 2.2, 2.2), false);\n    assert_eq!(candidate(-4.0, 6.0, 2.0), true);\n    assert_eq!(candidate(2.0,\
    \ 1.0, 1.0), true);\n    assert_eq!(candidate(3.0, 4.0, 7.0), true);\n    assert_eq!(candidate(3.0,\
    \ 4.0, 7.0), false);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmpm_1e367n.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659820405
- exit_code: 1
  program: "/// Create a function that takes 3 numbers.\n/// Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfn any_int(x: f64, y: f64, z: f64) ->\
    \ bool {\n    x.is_integer() && y.is_integer() && z.is_integer() && (x == y +\
    \ z || y == x + z || z == x + y)\n}\n\nfn main() {\n    let candidate = any_int;\n\
    \    assert_eq!(candidate(2.0, 3.0, 1.0), true);\n    assert_eq!(candidate(2.5,\
    \ 2.0, 3.0), false);\n    assert_eq!(candidate(1.5, 5.0, 3.5), false);\n    assert_eq!(candidate(2.0,\
    \ 6.0, 2.0), false);\n    assert_eq!(candidate(4.0, 2.0, 2.0), true);\n    assert_eq!(candidate(2.2,\
    \ 2.2, 2.2), false);\n    assert_eq!(candidate(-4.0, 6.0, 2.0), true);\n    assert_eq!(candidate(2.0,\
    \ 1.0, 1.0), true);\n    assert_eq!(candidate(3.0, 4.0, 7.0), true);\n    assert_eq!(candidate(3.0,\
    \ 4.0, 7.0), false);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_integer` found for type `f64` in the\
    \ current scope\n  --> /tmp/tmp9tj_rwc4.rs:10:7\n   |\n10 |     x.is_integer()\
    \ && y.is_integer() && z.is_integer() && (x == y + z || y == x + z || z == x +\
    \ y)\n   |       ^^^^^^^^^^ method not found in `f64`\n\nerror[E0599]: no method\
    \ named `is_integer` found for type `f64` in the current scope\n  --> /tmp/tmp9tj_rwc4.rs:10:25\n\
    \   |\n10 |     x.is_integer() && y.is_integer() && z.is_integer() && (x == y\
    \ + z || y == x + z || z == x + y)\n   |                         ^^^^^^^^^^ method\
    \ not found in `f64`\n\nerror[E0599]: no method named `is_integer` found for type\
    \ `f64` in the current scope\n  --> /tmp/tmp9tj_rwc4.rs:10:43\n   |\n10 |    \
    \ x.is_integer() && y.is_integer() && z.is_integer() && (x == y + z || y == x\
    \ + z || z == x + y)\n   |                                           ^^^^^^^^^^\
    \ method not found in `f64`\n\nerror: aborting due to 3 previous errors\n\nFor\
    \ more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659820405
- exit_code: 1
  program: "/// Create a function that takes 3 numbers.\n/// Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfn any_int(x: f64, y: f64, z: f64) ->\
    \ bool {\n    if x.is_integer() && y.is_integer() && z.is_integer() {\n      \
    \  x == y + z || y == x + z || z == x + y\n    } else {\n        false\n    }\n\
    }\n\nfn main() {\n    let candidate = any_int;\n    assert_eq!(candidate(2.0,\
    \ 3.0, 1.0), true);\n    assert_eq!(candidate(2.5, 2.0, 3.0), false);\n    assert_eq!(candidate(1.5,\
    \ 5.0, 3.5), false);\n    assert_eq!(candidate(2.0, 6.0, 2.0), false);\n    assert_eq!(candidate(4.0,\
    \ 2.0, 2.0), true);\n    assert_eq!(candidate(2.2, 2.2, 2.2), false);\n    assert_eq!(candidate(-4.0,\
    \ 6.0, 2.0), true);\n    assert_eq!(candidate(2.0, 1.0, 1.0), true);\n    assert_eq!(candidate(3.0,\
    \ 4.0, 7.0), true);\n    assert_eq!(candidate(3.0, 4.0, 7.0), false);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_integer` found for type `f64` in the\
    \ current scope\n  --> /tmp/tmp83go1szu.rs:10:10\n   |\n10 |     if x.is_integer()\
    \ && y.is_integer() && z.is_integer() {\n   |          ^^^^^^^^^^ method not found\
    \ in `f64`\n\nerror[E0599]: no method named `is_integer` found for type `f64`\
    \ in the current scope\n  --> /tmp/tmp83go1szu.rs:10:28\n   |\n10 |     if x.is_integer()\
    \ && y.is_integer() && z.is_integer() {\n   |                            ^^^^^^^^^^\
    \ method not found in `f64`\n\nerror[E0599]: no method named `is_integer` found\
    \ for type `f64` in the current scope\n  --> /tmp/tmp83go1szu.rs:10:46\n   |\n\
    10 |     if x.is_integer() && y.is_integer() && z.is_integer() {\n   |       \
    \                                       ^^^^^^^^^^ method not found in `f64`\n\
    \nerror: aborting due to 3 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659820405
- exit_code: 1
  program: "/// Create a function that takes 3 numbers.\n/// Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfn any_int(x: f64, y: f64, z: f64) ->\
    \ bool {\n    x.is_integer() && y.is_integer() && z.is_integer() &&\n        (x\
    \ == y + z || y == x + z || z == x + y)\n}\n\nfn main() {\n    let candidate =\
    \ any_int;\n    assert_eq!(candidate(2.0, 3.0, 1.0), true);\n    assert_eq!(candidate(2.5,\
    \ 2.0, 3.0), false);\n    assert_eq!(candidate(1.5, 5.0, 3.5), false);\n    assert_eq!(candidate(2.0,\
    \ 6.0, 2.0), false);\n    assert_eq!(candidate(4.0, 2.0, 2.0), true);\n    assert_eq!(candidate(2.2,\
    \ 2.2, 2.2), false);\n    assert_eq!(candidate(-4.0, 6.0, 2.0), true);\n    assert_eq!(candidate(2.0,\
    \ 1.0, 1.0), true);\n    assert_eq!(candidate(3.0, 4.0, 7.0), true);\n    assert_eq!(candidate(3.0,\
    \ 4.0, 7.0), false);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_integer` found for type `f64` in the\
    \ current scope\n  --> /tmp/tmp50byrnmp.rs:10:7\n   |\n10 |     x.is_integer()\
    \ && y.is_integer() && z.is_integer() &&\n   |       ^^^^^^^^^^ method not found\
    \ in `f64`\n\nerror[E0599]: no method named `is_integer` found for type `f64`\
    \ in the current scope\n  --> /tmp/tmp50byrnmp.rs:10:25\n   |\n10 |     x.is_integer()\
    \ && y.is_integer() && z.is_integer() &&\n   |                         ^^^^^^^^^^\
    \ method not found in `f64`\n\nerror[E0599]: no method named `is_integer` found\
    \ for type `f64` in the current scope\n  --> /tmp/tmp50byrnmp.rs:10:43\n   |\n\
    10 |     x.is_integer() && y.is_integer() && z.is_integer() &&\n   |         \
    \                                  ^^^^^^^^^^ method not found in `f64`\n\nerror:\
    \ aborting due to 3 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659820405
- exit_code: 101
  program: "/// Create a function that takes 3 numbers.\n/// Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfn any_int(x: f64, y: f64, z: f64) ->\
    \ bool {\n    if x.floor() == x && y.floor() == y && z.floor() == z {\n      \
    \  x + y == z || x + z == y || y + z == x\n    } else {\n        false\n    }\n\
    }\n\nfn main() {\n    let candidate = any_int;\n    assert_eq!(candidate(2.0,\
    \ 3.0, 1.0), true);\n    assert_eq!(candidate(2.5, 2.0, 3.0), false);\n    assert_eq!(candidate(1.5,\
    \ 5.0, 3.5), false);\n    assert_eq!(candidate(2.0, 6.0, 2.0), false);\n    assert_eq!(candidate(4.0,\
    \ 2.0, 2.0), true);\n    assert_eq!(candidate(2.2, 2.2, 2.2), false);\n    assert_eq!(candidate(-4.0,\
    \ 6.0, 2.0), true);\n    assert_eq!(candidate(2.0, 1.0, 1.0), true);\n    assert_eq!(candidate(3.0,\
    \ 4.0, 7.0), true);\n    assert_eq!(candidate(3.0, 4.0, 7.0), false);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmpa6sdxaed.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659820405
- exit_code: 101
  program: "/// Create a function that takes 3 numbers.\n/// Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfn any_int(x: f64, y: f64, z: f64) ->\
    \ bool {\n    !((x.is_sign_negative() || y.is_sign_negative() || z.is_sign_negative())\
    \ || (x.fract() != 0.0 || y.fract() != 0.0 || z.fract() != 0.0)) && (x == y +\
    \ z || y == x + z || z == x + y)\n}\n\nfn main() {\n    let candidate = any_int;\n\
    \    assert_eq!(candidate(2.0, 3.0, 1.0), true);\n    assert_eq!(candidate(2.5,\
    \ 2.0, 3.0), false);\n    assert_eq!(candidate(1.5, 5.0, 3.5), false);\n    assert_eq!(candidate(2.0,\
    \ 6.0, 2.0), false);\n    assert_eq!(candidate(4.0, 2.0, 2.0), true);\n    assert_eq!(candidate(2.2,\
    \ 2.2, 2.2), false);\n    assert_eq!(candidate(-4.0, 6.0, 2.0), true);\n    assert_eq!(candidate(2.0,\
    \ 1.0, 1.0), true);\n    assert_eq!(candidate(3.0, 4.0, 7.0), true);\n    assert_eq!(candidate(3.0,\
    \ 4.0, 7.0), false);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmp5w5j5pf6.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659820405
- exit_code: 1
  program: "/// Create a function that takes 3 numbers.\n/// Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfn any_int(x: f64, y: f64, z: f64) ->\
    \ bool {\n    if x.is_integer() && y.is_integer() && z.is_integer() {\n      \
    \  (x == y + z) || (y == x + z) || (z == x + y)\n    } else {\n        false\n\
    \    }\n}\n\nfn main() {\n    let candidate = any_int;\n    assert_eq!(candidate(2.0,\
    \ 3.0, 1.0), true);\n    assert_eq!(candidate(2.5, 2.0, 3.0), false);\n    assert_eq!(candidate(1.5,\
    \ 5.0, 3.5), false);\n    assert_eq!(candidate(2.0, 6.0, 2.0), false);\n    assert_eq!(candidate(4.0,\
    \ 2.0, 2.0), true);\n    assert_eq!(candidate(2.2, 2.2, 2.2), false);\n    assert_eq!(candidate(-4.0,\
    \ 6.0, 2.0), true);\n    assert_eq!(candidate(2.0, 1.0, 1.0), true);\n    assert_eq!(candidate(3.0,\
    \ 4.0, 7.0), true);\n    assert_eq!(candidate(3.0, 4.0, 7.0), false);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_integer` found for type `f64` in the\
    \ current scope\n  --> /tmp/tmp6xrm57h5.rs:10:10\n   |\n10 |     if x.is_integer()\
    \ && y.is_integer() && z.is_integer() {\n   |          ^^^^^^^^^^ method not found\
    \ in `f64`\n\nerror[E0599]: no method named `is_integer` found for type `f64`\
    \ in the current scope\n  --> /tmp/tmp6xrm57h5.rs:10:28\n   |\n10 |     if x.is_integer()\
    \ && y.is_integer() && z.is_integer() {\n   |                            ^^^^^^^^^^\
    \ method not found in `f64`\n\nerror[E0599]: no method named `is_integer` found\
    \ for type `f64` in the current scope\n  --> /tmp/tmp6xrm57h5.rs:10:46\n   |\n\
    10 |     if x.is_integer() && y.is_integer() && z.is_integer() {\n   |       \
    \                                       ^^^^^^^^^^ method not found in `f64`\n\
    \nerror: aborting due to 3 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659820405
- exit_code: 101
  program: "/// Create a function that takes 3 numbers.\n/// Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfn any_int(x: f64, y: f64, z: f64) ->\
    \ bool {\n    if x.fract() == 0.0 && y.fract() == 0.0 && z.fract() == 0.0 {\n\
    \        x == y + z || y == x + z || z == x + y\n    } else {\n        false\n\
    \    }\n}\n\nfn main() {\n    let candidate = any_int;\n    assert_eq!(candidate(2.0,\
    \ 3.0, 1.0), true);\n    assert_eq!(candidate(2.5, 2.0, 3.0), false);\n    assert_eq!(candidate(1.5,\
    \ 5.0, 3.5), false);\n    assert_eq!(candidate(2.0, 6.0, 2.0), false);\n    assert_eq!(candidate(4.0,\
    \ 2.0, 2.0), true);\n    assert_eq!(candidate(2.2, 2.2, 2.2), false);\n    assert_eq!(candidate(-4.0,\
    \ 6.0, 2.0), true);\n    assert_eq!(candidate(2.0, 1.0, 1.0), true);\n    assert_eq!(candidate(3.0,\
    \ 4.0, 7.0), true);\n    assert_eq!(candidate(3.0, 4.0, 7.0), false);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmpvymhiv7z.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659820405
- exit_code: 101
  program: "/// Create a function that takes 3 numbers.\n/// Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfn any_int(x: f64, y: f64, z: f64) ->\
    \ bool {\n    (x + y == z) || (x + z == y) || (y + z == x)\n}\n\nfn main() {\n\
    \    let candidate = any_int;\n    assert_eq!(candidate(2.0, 3.0, 1.0), true);\n\
    \    assert_eq!(candidate(2.5, 2.0, 3.0), false);\n    assert_eq!(candidate(1.5,\
    \ 5.0, 3.5), false);\n    assert_eq!(candidate(2.0, 6.0, 2.0), false);\n    assert_eq!(candidate(4.0,\
    \ 2.0, 2.0), true);\n    assert_eq!(candidate(2.2, 2.2, 2.2), false);\n    assert_eq!(candidate(-4.0,\
    \ 6.0, 2.0), true);\n    assert_eq!(candidate(2.0, 1.0, 1.0), true);\n    assert_eq!(candidate(3.0,\
    \ 4.0, 7.0), true);\n    assert_eq!(candidate(3.0, 4.0, 7.0), false);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmprp0h8u4c.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659820405
- exit_code: 1
  program: "/// Create a function that takes 3 numbers.\n/// Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfn any_int(x: f64, y: f64, z: f64) ->\
    \ bool {\n    (x + y == z || x + z == y || y + z == x) && (x.is_integer() && y.is_integer()\
    \ && z.is_integer())\n}\n\nfn main() {\n    let candidate = any_int;\n    assert_eq!(candidate(2.0,\
    \ 3.0, 1.0), true);\n    assert_eq!(candidate(2.5, 2.0, 3.0), false);\n    assert_eq!(candidate(1.5,\
    \ 5.0, 3.5), false);\n    assert_eq!(candidate(2.0, 6.0, 2.0), false);\n    assert_eq!(candidate(4.0,\
    \ 2.0, 2.0), true);\n    assert_eq!(candidate(2.2, 2.2, 2.2), false);\n    assert_eq!(candidate(-4.0,\
    \ 6.0, 2.0), true);\n    assert_eq!(candidate(2.0, 1.0, 1.0), true);\n    assert_eq!(candidate(3.0,\
    \ 4.0, 7.0), true);\n    assert_eq!(candidate(3.0, 4.0, 7.0), false);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_integer` found for type `f64` in the\
    \ current scope\n  --> /tmp/tmp7dizoldk.rs:10:52\n   |\n10 |     (x + y == z ||\
    \ x + z == y || y + z == x) && (x.is_integer() && y.is_integer() && z.is_integer())\n\
    \   |                                                    ^^^^^^^^^^ method not\
    \ found in `f64`\n\nerror[E0599]: no method named `is_integer` found for type\
    \ `f64` in the current scope\n  --> /tmp/tmp7dizoldk.rs:10:70\n   |\n10 |    \
    \ (x + y == z || x + z == y || y + z == x) && (x.is_integer() && y.is_integer()\
    \ && z.is_integer())\n   |                                                   \
    \                   ^^^^^^^^^^ method not found in `f64`\n\nerror[E0599]: no method\
    \ named `is_integer` found for type `f64` in the current scope\n  --> /tmp/tmp7dizoldk.rs:10:88\n\
    \   |\n10 |     (x + y == z || x + z == y || y + z == x) && (x.is_integer() &&\
    \ y.is_integer() && z.is_integer())\n   |                                    \
    \                                                    ^^^^^^^^^^ method not found\
    \ in `f64`\n\nerror: aborting due to 3 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659820405
- exit_code: 101
  program: "/// Create a function that takes 3 numbers.\n/// Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfn any_int(x: f64, y: f64, z: f64) ->\
    \ bool {\n    let a = x.ceil() - x;\n    let b = y.ceil() - y;\n    let c = z.ceil()\
    \ - z;\n    if a == 0.0 && b == 0.0 && c == 0.0 {\n        if x + y == z || x\
    \ + z == y || y + z == x {\n            return true;\n        }\n    }\n    false\n\
    }\n\nfn main() {\n    let candidate = any_int;\n    assert_eq!(candidate(2.0,\
    \ 3.0, 1.0), true);\n    assert_eq!(candidate(2.5, 2.0, 3.0), false);\n    assert_eq!(candidate(1.5,\
    \ 5.0, 3.5), false);\n    assert_eq!(candidate(2.0, 6.0, 2.0), false);\n    assert_eq!(candidate(4.0,\
    \ 2.0, 2.0), true);\n    assert_eq!(candidate(2.2, 2.2, 2.2), false);\n    assert_eq!(candidate(-4.0,\
    \ 6.0, 2.0), true);\n    assert_eq!(candidate(2.0, 1.0, 1.0), true);\n    assert_eq!(candidate(3.0,\
    \ 4.0, 7.0), true);\n    assert_eq!(candidate(3.0, 4.0, 7.0), false);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmpge0lpe5c.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659820405
- exit_code: 101
  program: "/// Create a function that takes 3 numbers.\n/// Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfn any_int(x: f64, y: f64, z: f64) ->\
    \ bool {\n    if x.fract() == 0.0 && y.fract() == 0.0 && z.fract() == 0.0 {\n\
    \        if x + y == z || x + z == y || y + z == x {\n            return true;\n\
    \        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = any_int;\n\
    \    assert_eq!(candidate(2.0, 3.0, 1.0), true);\n    assert_eq!(candidate(2.5,\
    \ 2.0, 3.0), false);\n    assert_eq!(candidate(1.5, 5.0, 3.5), false);\n    assert_eq!(candidate(2.0,\
    \ 6.0, 2.0), false);\n    assert_eq!(candidate(4.0, 2.0, 2.0), true);\n    assert_eq!(candidate(2.2,\
    \ 2.2, 2.2), false);\n    assert_eq!(candidate(-4.0, 6.0, 2.0), true);\n    assert_eq!(candidate(2.0,\
    \ 1.0, 1.0), true);\n    assert_eq!(candidate(3.0, 4.0, 7.0), true);\n    assert_eq!(candidate(3.0,\
    \ 4.0, 7.0), false);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmprl1fk3jd.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659820405
- exit_code: 1
  program: "/// Create a function that takes 3 numbers.\n/// Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfn any_int(x: f64, y: f64, z: f64) ->\
    \ bool {\n    (x + y == z || x + z == y || y + z == x) && x.is_integer() && y.is_integer()\
    \ && z.is_integer()\n}\n\nfn main() {\n    let candidate = any_int;\n    assert_eq!(candidate(2.0,\
    \ 3.0, 1.0), true);\n    assert_eq!(candidate(2.5, 2.0, 3.0), false);\n    assert_eq!(candidate(1.5,\
    \ 5.0, 3.5), false);\n    assert_eq!(candidate(2.0, 6.0, 2.0), false);\n    assert_eq!(candidate(4.0,\
    \ 2.0, 2.0), true);\n    assert_eq!(candidate(2.2, 2.2, 2.2), false);\n    assert_eq!(candidate(-4.0,\
    \ 6.0, 2.0), true);\n    assert_eq!(candidate(2.0, 1.0, 1.0), true);\n    assert_eq!(candidate(3.0,\
    \ 4.0, 7.0), true);\n    assert_eq!(candidate(3.0, 4.0, 7.0), false);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_integer` found for type `f64` in the\
    \ current scope\n  --> /tmp/tmpteotikoi.rs:10:51\n   |\n10 |     (x + y == z ||\
    \ x + z == y || y + z == x) && x.is_integer() && y.is_integer() && z.is_integer()\n\
    \   |                                                   ^^^^^^^^^^ method not\
    \ found in `f64`\n\nerror[E0599]: no method named `is_integer` found for type\
    \ `f64` in the current scope\n  --> /tmp/tmpteotikoi.rs:10:69\n   |\n10 |    \
    \ (x + y == z || x + z == y || y + z == x) && x.is_integer() && y.is_integer()\
    \ && z.is_integer()\n   |                                                    \
    \                 ^^^^^^^^^^ method not found in `f64`\n\nerror[E0599]: no method\
    \ named `is_integer` found for type `f64` in the current scope\n  --> /tmp/tmpteotikoi.rs:10:87\n\
    \   |\n10 |     (x + y == z || x + z == y || y + z == x) && x.is_integer() &&\
    \ y.is_integer() && z.is_integer()\n   |                                     \
    \                                                  ^^^^^^^^^^ method not found\
    \ in `f64`\n\nerror: aborting due to 3 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659820405
- exit_code: 101
  program: "/// Create a function that takes 3 numbers.\n/// Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfn any_int(x: f64, y: f64, z: f64) ->\
    \ bool {\n    (x + y == z || x + z == y || y + z == x) && x.fract() == 0.0 &&\
    \ y.fract() == 0.0 && z.fract() == 0.0\n}\n\nfn main() {\n    let candidate =\
    \ any_int;\n    assert_eq!(candidate(2.0, 3.0, 1.0), true);\n    assert_eq!(candidate(2.5,\
    \ 2.0, 3.0), false);\n    assert_eq!(candidate(1.5, 5.0, 3.5), false);\n    assert_eq!(candidate(2.0,\
    \ 6.0, 2.0), false);\n    assert_eq!(candidate(4.0, 2.0, 2.0), true);\n    assert_eq!(candidate(2.2,\
    \ 2.2, 2.2), false);\n    assert_eq!(candidate(-4.0, 6.0, 2.0), true);\n    assert_eq!(candidate(2.0,\
    \ 1.0, 1.0), true);\n    assert_eq!(candidate(3.0, 4.0, 7.0), true);\n    assert_eq!(candidate(3.0,\
    \ 4.0, 7.0), false);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmphd7q8xde.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659820405
- exit_code: 101
  program: "/// Create a function that takes 3 numbers.\n/// Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfn any_int(x: f64, y: f64, z: f64) ->\
    \ bool {\n    (x == y + z) || (y == x + z) || (z == x + y)\n}\n\nfn main() {\n\
    \    let candidate = any_int;\n    assert_eq!(candidate(2.0, 3.0, 1.0), true);\n\
    \    assert_eq!(candidate(2.5, 2.0, 3.0), false);\n    assert_eq!(candidate(1.5,\
    \ 5.0, 3.5), false);\n    assert_eq!(candidate(2.0, 6.0, 2.0), false);\n    assert_eq!(candidate(4.0,\
    \ 2.0, 2.0), true);\n    assert_eq!(candidate(2.2, 2.2, 2.2), false);\n    assert_eq!(candidate(-4.0,\
    \ 6.0, 2.0), true);\n    assert_eq!(candidate(2.0, 1.0, 1.0), true);\n    assert_eq!(candidate(3.0,\
    \ 4.0, 7.0), true);\n    assert_eq!(candidate(3.0, 4.0, 7.0), false);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmpn_9qkuo_.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659820405
- exit_code: 1
  program: "/// Create a function that takes 3 numbers.\n/// Returns true if one of\
    \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfn any_int(x: f64, y: f64, z: f64) ->\
    \ bool {\n    x.is_integer() && y.is_integer() && z.is_integer() && (x == y +\
    \ z || y == x + z || z == x + y)\n}\n\nfn main() {\n    let candidate = any_int;\n\
    \    assert_eq!(candidate(2.0, 3.0, 1.0), true);\n    assert_eq!(candidate(2.5,\
    \ 2.0, 3.0), false);\n    assert_eq!(candidate(1.5, 5.0, 3.5), false);\n    assert_eq!(candidate(2.0,\
    \ 6.0, 2.0), false);\n    assert_eq!(candidate(4.0, 2.0, 2.0), true);\n    assert_eq!(candidate(2.2,\
    \ 2.2, 2.2), false);\n    assert_eq!(candidate(-4.0, 6.0, 2.0), true);\n    assert_eq!(candidate(2.0,\
    \ 1.0, 1.0), true);\n    assert_eq!(candidate(3.0, 4.0, 7.0), true);\n    assert_eq!(candidate(3.0,\
    \ 4.0, 7.0), false);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_integer` found for type `f64` in the\
    \ current scope\n  --> /tmp/tmp9tj_rwc4.rs:10:7\n   |\n10 |     x.is_integer()\
    \ && y.is_integer() && z.is_integer() && (x == y + z || y == x + z || z == x +\
    \ y)\n   |       ^^^^^^^^^^ method not found in `f64`\n\nerror[E0599]: no method\
    \ named `is_integer` found for type `f64` in the current scope\n  --> /tmp/tmp9tj_rwc4.rs:10:25\n\
    \   |\n10 |     x.is_integer() && y.is_integer() && z.is_integer() && (x == y\
    \ + z || y == x + z || z == x + y)\n   |                         ^^^^^^^^^^ method\
    \ not found in `f64`\n\nerror[E0599]: no method named `is_integer` found for type\
    \ `f64` in the current scope\n  --> /tmp/tmp9tj_rwc4.rs:10:43\n   |\n10 |    \
    \ x.is_integer() && y.is_integer() && z.is_integer() && (x == y + z || y == x\
    \ + z || z == x + y)\n   |                                           ^^^^^^^^^^\
    \ method not found in `f64`\n\nerror: aborting due to 3 previous errors\n\nFor\
    \ more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659820405

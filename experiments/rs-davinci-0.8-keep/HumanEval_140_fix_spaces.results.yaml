name: HumanEval_140_fix_spaces
language: rs
results:
- program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n///\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") ==\
    \ \"_Example_2\"\n/// fix_spaces(\" Example   3\") == \"_Example-3\"\nfn fix_spaces(text:\
    \ String) -> String {\n    let mut new_text = String::new();\n    let mut space_flag\
    \ = false;\n    for ch in text.chars() {\n        if ch == ' ' {\n           \
    \ if space_flag {\n                new_text.push('-');\n            } else {\n\
    \                new_text.push('_');\n                space_flag = true;\n   \
    \         }\n        } else {\n            new_text.push(ch);\n            space_flag\
    \ = false;\n        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp0tjnap5a.rs:31:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n///\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") ==\
    \ \"_Example_2\"\n/// fix_spaces(\" Example   3\") == \"_Example-3\"\nfn fix_spaces(text:\
    \ String) -> String {\n    let text: String = text.replace(\"  \", \"-\");\n \
    \   text.replace(\" \", \"_\")\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow-Dirty-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpedshemxz.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n///\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") ==\
    \ \"_Example_2\"\n/// fix_spaces(\" Example   3\") == \"_Example-3\"\nfn fix_spaces(text:\
    \ String) -> String {\n    let mut is_space_before = false;\n    let mut result\
    \ = String::from(\"\");\n    for ch in text.chars() {\n        if ch == ' ' {\n\
    \            if is_space_before {\n                result.push('-');\n       \
    \     } else {\n                result.push('_');\n            }\n           \
    \ is_space_before = true;\n        } else {\n            result.push(ch);\n  \
    \          is_space_before = false;\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp0bpwy4p1.rs:31:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n///\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") ==\
    \ \"_Example_2\"\n/// fix_spaces(\" Example   3\") == \"_Example-3\"\nfn fix_spaces(text:\
    \ String) -> String {\n    let mut prev_was_space = false;\n    let mut s = String::with_capacity(text.len());\n\
    \    for c in text.chars() {\n        if c == ' ' {\n            if prev_was_space\
    \ {\n                s.push('-');\n            } else {\n                s.push('_');\n\
    \            }\n            prev_was_space = true;\n        } else {\n       \
    \     s.push(c);\n            prev_was_space = false;\n        }\n    }\n    s\n\
    }\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmppjunbjet.rs:31:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n///\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") ==\
    \ \"_Example_2\"\n/// fix_spaces(\" Example   3\") == \"_Example-3\"\nfn fix_spaces(text:\
    \ String) -> String {\n    let mut ret = String::new();\n    let mut prev = '\
    \ ';\n    for c in text.chars() {\n        if c == ' ' {\n            if prev\
    \ == ' ' {\n                ret.push('-');\n            } else {\n           \
    \     ret.push('_');\n            }\n        } else {\n            ret.push(c);\n\
    \        }\n        prev = c;\n    }\n    return ret;\n}\n\nfn main() {\n    let\
    \ candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")),\
    \ String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir\
    \ Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpuide5_sx.rs:30:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n///\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") ==\
    \ \"_Example_2\"\n/// fix_spaces(\" Example   3\") == \"_Example-3\"\nfn fix_spaces(text:\
    \ String) -> String {\n    text.split_whitespace().collect::<Vec<&str>>().join(\"\
    _\")\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir_Hanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpm5p9dwau.rs:15:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n///\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") ==\
    \ \"_Example_2\"\n/// fix_spaces(\" Example   3\") == \"_Example-3\"\nfn fix_spaces(text:\
    \ String) -> String {\n    let mut res = text.chars().fold(String::new(), |mut\
    \ acc, c| {\n        if c == ' ' {\n            if acc.pop() == Some(' ') {\n\
    \                acc.push('-');\n            } else {\n                acc.push('_');\n\
    \            }\n        } else {\n            acc.push(c);\n        }\n      \
    \  acc\n    });\n    if res.starts_with(' ') {\n        res.insert(0, '_');\n\
    \    }\n    res\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasi_Hani_\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmprf7cfb11.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n///\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") ==\
    \ \"_Example_2\"\n/// fix_spaces(\" Example   3\") == \"_Example-3\"\nfn fix_spaces(text:\
    \ String) -> String {\n    let mut res = String::new();\n    let mut prev = '!';\n\
    \    for i in text.chars() {\n        if i == ' ' {\n            if prev == '\
    \ ' {\n                res.push('-');\n            } else {\n                res.push('_');\n\
    \            }\n        } else {\n            res.push(i);\n        }\n      \
    \  prev = i;\n    }\n    res\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp2grm12cz.rs:30:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n///\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") ==\
    \ \"_Example_2\"\n/// fix_spaces(\" Example   3\") == \"_Example-3\"\nfn fix_spaces(text:\
    \ String) -> String {\n    //let mut count = 0;\n    //let mut was_space = false;\n\
    \    //let mut result = String::new();\n    //for ch in text.chars() {\n    //\
    \    if ch.is_whitespace() {\n    //        if was_space {\n    //           \
    \ count += 1;\n    //        } else {\n    //            count = 1;\n    //  \
    \          was_space = true;\n    //        }\n    //    } else {\n    //    \
    \    was_space = false;\n    //        if count == 1 {\n    //            result.push('_');\n\
    \    //        } else if count > 1 {\n    //            result.push('-');\n  \
    \  //        }\n    //        result.push(ch);\n    //    }\n    //}\n    //result\n\
    \    text.replace(' ', \"_\").replace(\"__\", \"-\")\n}\n\nfn main() {\n    let\
    \ candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")),\
    \ String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir\
    \ Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow-Dirty-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpt6uu9ggm.rs:38:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n///\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") ==\
    \ \"_Example_2\"\n/// fix_spaces(\" Example   3\") == \"_Example-3\"\nfn fix_spaces(text:\
    \ String) -> String {\n    let mut consecutive_spaces = 0;\n    let mut words:\
    \ Vec<char> = Vec::new();\n    let mut result = String::new();\n\n    for character\
    \ in text.chars() {\n        if character == ' ' {\n            consecutive_spaces\
    \ += 1;\n        }\n        else {\n            consecutive_spaces = 0;\n    \
    \    }\n\n        if consecutive_spaces == 1 {\n            words.push('_');\n\
    \        }\n        else if consecutive_spaces > 2 {\n            words.push('-');\n\
    \        }\n        else {\n            words.push(character);\n        }\n  \
    \  }\n\n    for word in words {\n        result.push(word);\n    }\n\n    result\n\
    }\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_ Dirty_ Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp8jy83dvd.rs:43:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n///\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") ==\
    \ \"_Example_2\"\n/// fix_spaces(\" Example   3\") == \"_Example-3\"\nfn fix_spaces(text:\
    \ String) -> String {\n    let mut result = String::new();\n    let mut counter\
    \ = 0;\n    for letter in text.chars() {\n        if letter == ' ' {\n       \
    \     counter += 1;\n            if counter == 1 {\n                result.push('_');\n\
    \            } else if counter == 2 {\n                result.push('-');\n   \
    \         }\n        } else {\n            counter = 0;\n            result.push(letter);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp53m76hd4.rs:31:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n///\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") ==\
    \ \"_Example_2\"\n/// fix_spaces(\" Example   3\") == \"_Example-3\"\nfn fix_spaces(text:\
    \ String) -> String {\n    let result = text.replace(\" \", \"_\");\n    let result2\
    \ = result.replace(\"__\", \"-\");\n    let result3 = result2.replace(\"__\",\
    \ \"-\");\n    let result4 = result3.replace(\"__\", \"-\");\n    result4\n}\n\
    \nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow-Dirty-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp25repuqk.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n///\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") ==\
    \ \"_Example_2\"\n/// fix_spaces(\" Example   3\") == \"_Example-3\"\nfn fix_spaces(text:\
    \ String) -> String {\n    let mut chars = text.chars();\n    let mut result =\
    \ String::new();\n    let mut prev_char = chars.next();\n    for c in chars {\n\
    \        if prev_char == Some(' ') {\n            if c == ' ' {\n            \
    \    result.push('-');\n                prev_char = Some('-');\n            }\
    \ else {\n                result.push('_');\n                result.push(c);\n\
    \                prev_char = Some(c);\n            }\n        } else {\n     \
    \       result.push(c);\n            prev_char = Some(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"xample\"`,\n right: `\"Example\"`', /tmp/tmpbgp3rbwf.rs:32:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n///\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") ==\
    \ \"_Example_2\"\n/// fix_spaces(\" Example   3\") == \"_Example-3\"\nfn fix_spaces(text:\
    \ String) -> String {\n    let mut result = String::new();\n    let mut buffer\
    \ = String::new();\n    let mut number_of_spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            buffer.push(c);\n            number_of_spaces\
    \ += 1;\n        } else {\n            if number_of_spaces == 1 {\n          \
    \      result.push('_');\n            } else if number_of_spaces > 1 {\n     \
    \           result.push('-');\n            }\n            result.push_str(&buffer);\n\
    \            result.push(c);\n            buffer.clear();\n            number_of_spaces\
    \ = 0;\n        }\n    }\n    if number_of_spaces == 1 {\n        result.push('_');\n\
    \    } else if number_of_spaces > 1 {\n        result.push('-');\n    }\n    result.push_str(&buffer);\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir_ Hanif_ \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpcrby7vmv.rs:40:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n///\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") ==\
    \ \"_Example_2\"\n/// fix_spaces(\" Example   3\") == \"_Example-3\"\nfn fix_spaces(text:\
    \ String) -> String {\n    // print!(\"You call fix_spaces with text: {}\", text);\n\
    \    let mut result = String::new();\n    let text = text.trim();\n    let mut\
    \ counter = 0;\n    let mut prev_char = ' ';\n    let mut prev_prev_char = ' ';\n\
    \    let mut prev_prev_prev_char = ' ';\n    for c in text.chars() {\n       \
    \ if c == ' ' {\n            counter += 1;\n            if counter > 2 {\n   \
    \             if prev_char == ' ' && prev_prev_char == ' ' {\n               \
    \     result.push('-');\n                }\n            } else {\n           \
    \     result.push('_');\n            }\n        } else {\n            result.push(c);\n\
    \            counter = 0;\n        }\n        prev_prev_prev_char = prev_prev_char;\n\
    \        prev_prev_char = prev_char;\n        prev_char = c;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir_Hanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpudo2137l.rs:40:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n///\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") ==\
    \ \"_Example_2\"\n/// fix_spaces(\" Example   3\") == \"_Example-3\"\nfn fix_spaces(text:\
    \ String) -> String {\n    text.replace(\" \", \"_\").replace(\"__\", \"-\")\n\
    }\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow-Dirty-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpo232gcor.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n///\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") ==\
    \ \"_Example_2\"\n/// fix_spaces(\" Example   3\") == \"_Example-3\"\nfn fix_spaces(text:\
    \ String) -> String {\n    text.split_whitespace().collect::<Vec<&str>>().join(\"\
    _\")\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir_Hanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmp08t06pzn.rs:15:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n///\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") ==\
    \ \"_Example_2\"\n/// fix_spaces(\" Example   3\") == \"_Example-3\"\nfn fix_spaces(text:\
    \ String) -> String {\n    // your code here\n    text.replace(\"  \", \"-\").replace(\"\
    \ \", \"_\")\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow-Dirty-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp8mo5r0_i.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n///\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") ==\
    \ \"_Example_2\"\n/// fix_spaces(\" Example   3\") == \"_Example-3\"\nfn fix_spaces(text:\
    \ String) -> String {\n    text.replace(\" \", \"_\").replace(\"__\", \"-\")\n\
    }\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow-Dirty-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp46tmyioq.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n///\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") ==\
    \ \"_Example_2\"\n/// fix_spaces(\" Example   3\") == \"_Example-3\"\nfn fix_spaces(text:\
    \ String) -> String {\n    text.replace(\"  \", \"-\").replace(\" \", \"_\")\n\
    }\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow-Dirty-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpnrgw_3jv.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  exit_code: 101
  status: Exception

language: rs
name: HumanEval_24_largest_divisor
results:
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut divisor = n / 2;\n    while divisor > 0 {\n        if\
    \ n % divisor == 0 {\n            return divisor;\n        }\n        divisor\
    \ -= 1;\n    }\n    1\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822350
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    for i in (1..n).rev() {\n        if n % i == 0 {\n         \
    \   return i;\n        }\n    }\n    1\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822349
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    for d in (1..n).rev() {\n        if n % d == 0 {\n         \
    \   return d;\n        }\n    }\n    1\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822350
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut divisor = n - 1;\n    while divisor > 0 {\n        if\
    \ n % divisor == 0 {\n            return divisor;\n        }\n        divisor\
    \ -= 1;\n    }\n    return 1;\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822349
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut divisor = n - 1;\n    while divisor > 0 {\n        if\
    \ n % divisor == 0 {\n            return divisor;\n        }\n        divisor\
    \ -= 1;\n    }\n    panic!(\"No divisor larger than 0 exists!\");\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822350
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut i = n / 2;\n    while i > 0 {\n        if n % i == 0\
    \ {\n            return i;\n        }\n        i -= 1;\n    }\n    0\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822350
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // let mut d = n - 1;\n    // while n % d != 0 {\n    //   \
    \  d -= 1;\n    // }\n    // d\n    // n % d  == 0\n    (2..n).rev().find(|d|\
    \ n % d == 0).unwrap()\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''called `Option::unwrap()` on a `None` value'',
    /tmp/tmpu_p2rfys.rs:11:39

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659822350
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut divisor = n - 1;\n    while n % divisor != 0 {\n   \
    \     divisor -= 1;\n    }\n    divisor\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822349
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut large_divisor = 1;\n    let mut i = 2;\n    while i\
    \ <= n {\n        if n % i == 0 {\n            large_divisor = i;\n        }\n\
    \        i += 1;\n    }\n    large_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpm9dlsybb.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822350
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    // your code here\n    return n;\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpb0jnf87p.rs:11:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822350
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut divisor = n - 1;\n    while divisor > 0 {\n        if\
    \ n % divisor == 0 {\n            return divisor;\n        }\n        divisor\
    \ -= 1;\n    }\n    return divisor;\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822350
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut i = n - 1;\n    while i > 0 {\n        if n % i == 0\
    \ {\n            return i;\n        }\n        i -= 1;\n    }\n    return n;\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822350
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    //...\n    0\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpbj94xgac.rs:11:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659822350
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    if n <= 1 {\n        return 0;\n    }\n\n    let mut divisor\
    \ = n - 1;\n    while n % divisor != 0 {\n        divisor -= 1;\n    }\n    divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822350
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    for i in 2..n {\n        if n\
    \ % i == 0 {\n            max_divisor = i;\n        }\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822350
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    for i in (1..n).rev() {\n        if n % i == 0 {\n         \
    \   return i;\n        }\n    }\n    1\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822349
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut m = n - 1;\n    while m > 0 {\n        if n % m == 0\
    \ {\n            return m;\n        }\n        m -= 1;\n    }\n    0\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822350
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut divisor = n - 1;\n    while divisor > 0 {\n        if\
    \ n % divisor == 0 {\n            return divisor;\n        }\n        divisor\
    \ -= 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822350
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest_divisor = 1;\n    for i in 1..n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i;\n        }\n    }\n    largest_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822350
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut i = n / 2;\n    while i > 0 {\n        if n % i == 0\
    \ {\n            return i;\n        }\n        i -= 1;\n    }\n    return 0;\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822350

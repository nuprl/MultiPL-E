name: HumanEval_48_is_palindrome
language: rs
prompt: "/// Checks if given string is a palindrome\n/// >>> is_palindrome('')\n///\
  \ True\n/// >>> is_palindrome('aba')\n/// True\n/// >>> is_palindrome('aaaaa')\n\
  /// True\n/// >>> is_palindrome('zbcd')\n/// False\nfn is_palindrome(text: String)\
  \ -> bool {\n"
tests: "}\n\nfn main() {\n    let candidate = is_palindrome;\n    assert_eq!(candidate(String::from(\"\
  \")), true);\n    assert_eq!(candidate(String::from(\"aba\")), true);\n    assert_eq!(candidate(String::from(\"\
  aaaaa\")), true);\n    assert_eq!(candidate(String::from(\"zbcd\")), false);\n \
  \   assert_eq!(candidate(String::from(\"xywyx\")), true);\n    assert_eq!(candidate(String::from(\"\
  xywyz\")), false);\n    assert_eq!(candidate(String::from(\"xywzx\")), false);\n\
  }\n"
completions: []
stop_tokens:
- "\n}"

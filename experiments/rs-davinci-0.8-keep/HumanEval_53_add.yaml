name: HumanEval_53_add
language: rs
prompt: "/// Add two numbers x and y\n/// >>> add(2, 3)\n/// 5\n/// >>> add(5, 7)\n\
  /// 12\nfn add(x: isize, y: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = add;\n    assert_eq!(candidate(0, 1),\
  \ 1);\n    assert_eq!(candidate(1, 0), 1);\n    assert_eq!(candidate(2, 3), 5);\n\
  \    assert_eq!(candidate(5, 7), 12);\n    assert_eq!(candidate(7, 5), 12);\n}\n"
completions: ["    // Local variable declaration \"z\"\n    let z = {\n        let\
    \ p = x + y;\n        // p is not returned.\n        // No semicolon below to\
    \ tell the compiler this is not an expression\n        p\n    };\n\n    // z is\
    \ returned because the semicolon is present\n    z", '    x + y', '    x + y',
  '    x + y', '    x + y', '    x + y', '    x + y', '    x + y', '    x + y', '    x
    + y', '    x + y', '    x + y', '    x + y', '    x + y', '    x + y', '    x
    + y', '    x + y', '    x + y', '    x + y', '    x + y']
stop_tokens:
- "\n}"

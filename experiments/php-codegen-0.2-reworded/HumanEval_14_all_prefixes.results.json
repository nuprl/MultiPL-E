{
  "name": "HumanEval_14_all_prefixes",
  "language": "php",
  "prompt": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n",
  "tests": "function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp4e9k3r8b.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(' ', '', $string);\n    $string = str_replace('-', '', $string);\n    $string = str_replace('_', '', $string);\n    $string = str_replace('/', '', $string);\n    $string = str_replace('\\\\', '', $string);\n    $string = str_replace('.', '', $string);\n    $string = str_replace('!', '', $string);\n    $string = str_replace('?', '', $string);\n    $string = str_replace('(', '', $string);\n    $string = str_replace(')', '', $string);\n    $string = str_replace('{', '', $string);\n    $string = str_replace('}', '', $string);\n    $string = str_replace('[', '', $string);\n    $string = str_replace(']', '', $string);\n    $string = str_replace('+', '', $string);\n    $string = str_replace('=', '', $string);\n    $string = str_replace('%', '', $string);\n    $string = str_replace('#', '', $string);\n    $string = str_replace('@', '', $string);\n    $string = str_replace('$', '', $string);\n    $string = str_replace('^', '', $string);\n    $string = str_replace('&', '', $string);\n    $string = str_replace('*', '', $string);\n    $string = str_replace('|', '', $string);\n    $string = str_replace('~', '', $string);\n    $string = str_replace('<', '', $string);\n    $string = str_replace('>', '', $string);\n    $string = str_replace(';', '', $string);\n    $string = str_replace(':', '', $string);\n    $string = str_replace('\"', '', $string);\n    $string = str_replace('\\'', '', $string);\n    $string = str_replace('`',\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpobzyxx89.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"~\", \"\", $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpbs9q43vb.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s_haerl.php:22\nStack trace:\n#0 /tmp/tmp6s_haerl.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6s_haerl.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return $prefixes;\n}\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\":\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \") !== array()) { throw new Exc...\", expecting \")\" in /tmp/tmp86wussek.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$prefix] = 1;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpapria013.php:7\nStack trace:\n#0 /tmp/tmpapria013.php(17): all_prefixes('')\n#1 /tmp/tmpapria013.php(21): candidate('')\n#2 /tmp/tmpapria013.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpapria013.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\":\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \") !== array()) { throw new Exc...\", expecting \")\" in /tmp/tmps27jjef5.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$i] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$i] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes.push($prefix);\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpigvivyek.php:7\nStack trace:\n#0 /tmp/tmpigvivyek.php(17): all_prefixes('')\n#1 /tmp/tmpigvivyek.php(21): candidate('')\n#2 /tmp/tmpigvivyek.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpigvivyek.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $result[$i] = $string.substr(0, $i+1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp050tc_lp.php:7\nStack trace:\n#0 /tmp/tmp050tc_lp.php(14): all_prefixes('')\n#1 /tmp/tmp050tc_lp.php(18): candidate('')\n#2 /tmp/tmp050tc_lp.php(23): test()\n#3 {main}\n  thrown in /tmp/tmp050tc_lp.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$prefix] = 1;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpapria013.php:7\nStack trace:\n#0 /tmp/tmpapria013.php(17): all_prefixes('')\n#1 /tmp/tmpapria013.php(21): candidate('')\n#2 /tmp/tmpapria013.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpapria013.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s_haerl.php:22\nStack trace:\n#0 /tmp/tmp6s_haerl.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6s_haerl.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \") !== array()) { throw new Exc...\", expecting \")\" in /tmp/tmp0q6par68.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$prefix] = 1;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpapria013.php:7\nStack trace:\n#0 /tmp/tmpapria013.php(17): all_prefixes('')\n#1 /tmp/tmpapria013.php(21): candidate('')\n#2 /tmp/tmpapria013.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpapria013.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $result[] = $string.substr(0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpf3rbjwgy.php:7\nStack trace:\n#0 /tmp/tmpf3rbjwgy.php(14): all_prefixes('')\n#1 /tmp/tmpf3rbjwgy.php(18): candidate('')\n#2 /tmp/tmpf3rbjwgy.php(23): test()\n#3 {main}\n  thrown in /tmp/tmpf3rbjwgy.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x00\", \"\", $string);\n    $string = str_replace(\"\\u0000\", \"\", $string);\n    $string = str_replace(\"\\u000\", \"\", $string);\n    $string = str_replace(\"\\u00\", \"\", $string);\n    $string = str_replace(\"\\u0\", \"\", $string);\n    $string = str_replace(\"\\u\", \"\", $string);\n    $string = str_replace(\"\\U\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x00\", \"\", $string);\n    $string = str_replace(\"\\u0000\", \"\", $string);\n    $string = str_replace(\"\\u000\", \"\", $string);\n    $string = str_replace(\"\\u00\", \"\", $string);\n    $string = str_replace(\"\\u0\", \"\", $string);\n    $string = str_replace(\"\\u\", \"\", $string);\n    $string = str_replace(\"\\U\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x00\", \"\", $string);\n    $string = str_replace(\"\\u0000\", \"\", $string);\n    $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpxajmtq8s.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp6opv0af6.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpv9kvfawx.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\v\", \"\", $string);\n    $string = str_replace(\"\\f\", \"\", $string);\n    $string = str_replace(\"\\b\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp7usrp5gu.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"-\", \"\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \") !== array()) { throw new Exc...\", expecting \")\" in /tmp/tmp3vy4nef_.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[] = $prefix;\n        }\n    }\n    return $prefixes;\n}\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\":\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\",\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp41m08a71.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$prefix] = 1;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpdoehn5mr.php:7\nStack trace:\n#0 /tmp/tmpdoehn5mr.php(17): all_prefixes('')\n#1 /tmp/tmpdoehn5mr.php(21): candidate('')\n#2 /tmp/tmpdoehn5mr.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpdoehn5mr.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $result[] = $string.substr(0, $i+1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp3pzxco1x.php:7\nStack trace:\n#0 /tmp/tmp3pzxco1x.php(14): all_prefixes('')\n#1 /tmp/tmp3pzxco1x.php(18): candidate('')\n#2 /tmp/tmp3pzxco1x.php(23): test()\n#3 {main}\n  thrown in /tmp/tmp3pzxco1x.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\"~\", \"\", $string);\n    $string = str_replace(\"`\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\" \", \"\", $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpnznzwlj5.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\v\", \"\", $string);\n    $string = str_replace(\"\\f\", \"\", $string);\n    $string = str_replace(\"\\b\", \"\", $string);\n    $string = str_replace(\"\\x1b\", \"\", $string);\n    $string = str_replace(\"\\x1a\", \"\", $string);\n    $string = str_replace(\"\\x1c\", \"\", $string);\n    $string = str_replace(\"\\x1d\", \"\", $string);\n    $string = str_replace(\"\\x1e\", \"\", $string);\n    $string = str_replace(\"\\x1f\", \"\", $string);\n    $string = str_replace(\"\\x1g\", \"\", $string);\n    $string = str_replace(\"\\x1h\", \"\", $string);\n    $string = str_replace(\"\\x1i\", \"\", $string);\n    $string = str_replace(\"\\x1j\", \"\", $string);\n    $string = str_replace(\"\\x1k\", \"\", $string);\n    $string = str_replace(\"\\x1l\", \"\", $string);\n    $string = str_replace(\"\\x1m\", \"\", $string);\n    $string = str_replace(\"\\x1n\", \"\", $string);\n    $string = str_replace(\"\\x1o\", \"\", $string);\n    $string = str_replace(\"\\x1p\", \"\", $string);\n    \nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: Unclosed '{' on line 5 in /tmp/tmpdlgdi0_e.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\":\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpsvt273wa.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$prefix] = 1;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpapria013.php:7\nStack trace:\n#0 /tmp/tmpapria013.php(17): all_prefixes('')\n#1 /tmp/tmpapria013.php(21): candidate('')\n#2 /tmp/tmpapria013.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpapria013.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\b\", \"\", $string);\n    $string = str_replace(\"\\f\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\b\", \"\", $string);\n    $string = str_replace(\"\\f\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\b\", \"\", $string);\n    $string = str_replace(\"\\f\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\r\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\b\", \"\", $string);\n    $string = str_replace(\"\\f\", \"\", $string);\n    $string = str_replace(\"\\\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \") !== array()) { throw new Exc...\", expecting \")\" in /tmp/tmpcrdrn00f.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\" \", \"\", $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpakeefvaj.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp8lxmpmj0.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x00\", \"\", $string);\n    $string = str_replace(\"\\x000\", \"\", $string);\n    $string = str_replace(\"\\x0000\", \"\", $string);\n    $string = str_replace(\"\\x00000\", \"\", $string);\n    $string = str_replace(\"\\x000000\", \"\", $string);\n    $string = str_replace(\"\\x0000000\", \"\", $string);\n    $string = str_replace(\"\\x00000000\", \"\", $string);\n    $string = str_replace(\"\\x000000000\", \"\", $string);\n    $string = str_replace(\"\\x0000000000\", \"\", $string);\n    $string = str_replace(\"\\x00000000000\", \"\", $string);\n    $string = str_replace(\"\\x000000000000\", \"\", $string);\n    $string = str_replace(\"\\x0000000000000\", \"\", $string);\n    $string = str_replace(\"\\x00000000000000\", \"\", $string);\n    $string = str_replace(\"\\x000000000000000\", \"\", $string);\n    $string = str_replace(\"\\x0000000000000000\", \"\", $string);\n    $string = str_replace(\"\\x00000000000000000\", \"\", $string);\n    $string = str_replace(\"\\x000000000000000000\", \"\", $string);\n    $string = str_replace(\"\\x0000000000000000000\", \"\", $string);\n    $string = str_replace(\"\\x00000000000000000000\", \"\", $string);\n    $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp1snmv2q_.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$prefix] = 1;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpapria013.php:7\nStack trace:\n#0 /tmp/tmpapria013.php(17): all_prefixes('')\n#1 /tmp/tmpapria013.php(21): candidate('')\n#2 /tmp/tmpapria013.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpapria013.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\":\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpbrcovy6w.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$prefix] = 1;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpapria013.php:7\nStack trace:\n#0 /tmp/tmpapria013.php(17): all_prefixes('')\n#1 /tmp/tmpapria013.php(21): candidate('')\n#2 /tmp/tmpapria013.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpapria013.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$prefix] = 1;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpapria013.php:7\nStack trace:\n#0 /tmp/tmpapria013.php(17): all_prefixes('')\n#1 /tmp/tmpapria013.php(21): candidate('')\n#2 /tmp/tmpapria013.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpapria013.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$prefix] = 1;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpdoehn5mr.php:7\nStack trace:\n#0 /tmp/tmpdoehn5mr.php(17): all_prefixes('')\n#1 /tmp/tmpdoehn5mr.php(21): candidate('')\n#2 /tmp/tmpdoehn5mr.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpdoehn5mr.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(' ', '', $string);\n    $string = str_replace('-', '', $string);\n    $string = str_replace('_', '', $string);\n    $string = str_replace('/', '', $string);\n    $string = str_replace('\\\\', '', $string);\n    $string = str_replace('.', '', $string);\n    $string = str_replace('!', '', $string);\n    $string = str_replace('?', '', $string);\n    $string = str_replace('\\'', '', $string);\n    $string = str_replace('\"', '', $string);\n    $string = str_replace('(', '', $string);\n    $string = str_replace(')', '', $string);\n    $string = str_replace('{', '', $string);\n    $string = str_replace('}', '', $string);\n    $string = str_replace('[', '', $string);\n    $string = str_replace(']', '', $string);\n    $string = str_replace('+', '', $string);\n    $string = str_replace('-', '', $string);\n    $string = str_replace('*', '', $string);\n    $string = str_replace('/', '', $string);\n    $string = str_replace('%', '', $string);\n    $string = str_replace('&', '', $string);\n    $string = str_replace('=', '', $string);\n    $string = str_replace('<', '', $string);\n    $string = str_replace('>', '', $string);\n    $string = str_replace(';', '', $string);\n    $string = str_replace('@', '', $string);\n    $string = str_replace('#', '', $string);\n    $string = str_replace('$', '', $string);\n    $string = str_replace('^', '', $string);\n    $string = str_replace('|', '', $string);\n    $string = str_replace('~',\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpnwl5d95r.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        $prefixes[$prefix] = $prefixes[$prefix] ? $prefixes[$prefix] + 1 : 1;\n    }\n    $prefixes = array_keys($prefixes);\n    $prefixes.sort(function($a, $b) {\n        return $a - $b;\n    });\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpgujs9q1q.php:7\nStack trace:\n#0 /tmp/tmpgujs9q1q.php(19): all_prefixes('')\n#1 /tmp/tmpgujs9q1q.php(23): candidate('')\n#2 /tmp/tmpgujs9q1q.php(28): test()\n#3 {main}\n  thrown in /tmp/tmpgujs9q1q.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"`\", \"\", $string);\n    $string = str_replace(\"~\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \") !== array()) { throw new Exc...\", expecting \")\" in /tmp/tmp8i2wdpub.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$i] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo77j1p0l.php:22\nStack trace:\n#0 /tmp/tmpo77j1p0l.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpo77j1p0l.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $result[] = $string.substr(0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpf3rbjwgy.php:7\nStack trace:\n#0 /tmp/tmpf3rbjwgy.php(14): all_prefixes('')\n#1 /tmp/tmpf3rbjwgy.php(18): candidate('')\n#2 /tmp/tmpf3rbjwgy.php(23): test()\n#3 {main}\n  thrown in /tmp/tmpf3rbjwgy.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"/\", \"\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \") !== array()) { throw new Exc...\", expecting \")\" in /tmp/tmpq20mkuk3.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ( $i = 0; $i < strlen($string); $i++ ) {\n        $prefix = substr($string, 0, $i+1);\n        if ( !in_array($prefix, $prefixes) ) {\n            $prefixes[$i] = $prefix;\n        }\n    }\n    return $prefixes;\n}\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $result[] = $string.substr(0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpf3rbjwgy.php:7\nStack trace:\n#0 /tmp/tmpf3rbjwgy.php(14): all_prefixes('')\n#1 /tmp/tmpf3rbjwgy.php(18): candidate('')\n#2 /tmp/tmpf3rbjwgy.php(23): test()\n#3 {main}\n  thrown in /tmp/tmpf3rbjwgy.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp6opv0af6.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\"~\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\" \", \"\", $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp9vi0vx1_.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\":\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"|\", \"\",\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpn15uk3um.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x00\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\x00\", \"\", $string);\n    $string = str_replace(\"\\x000\", \"\", $string);\n    $string = str_replace(\"\\x0000\", \"\", $string);\n    $string = str_replace(\"\\x00000\", \"\", $string);\n    $string = str_replace(\"\\x000000\", \"\", $string);\n    $string = str_replace(\"\\x0000000\", \"\", $string);\n    $string = str_replace(\"\\x00000000\", \"\", $string);\n    $string = str_replace(\"\\x000000000\", \"\", $string);\n    $string = str_replace(\"\\x0000000000\", \"\", $string);\n    $string = str_replace(\"\\x00000000000\", \"\", $string);\n    $string = str_replace(\"\\x000000000000\", \"\", $string);\n    $string = str_replace(\"\\x0000000000000\", \"\", $string);\n    $string = str_replace(\"\\x00000000000000\", \"\", $string);\n    $string = str_replace(\"\\x000000000000000\", \"\", $string);\n    $string = str_replace(\"\\x0000000000000000\", \"\", $string);\n    $string = str_replace(\"\\x00000000000000000\", \"\", $string);\n    $string = str_replace(\"\\x000000000000000000\", \"\", $string);\n    $string =\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpsczwskwa.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"~\", \"\", $string);\n    $string = str_replace(\"`\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp2i2rmpx3.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\":\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\"~\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpxs31bjtf.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$prefix] = 1;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpapria013.php:7\nStack trace:\n#0 /tmp/tmpapria013.php(17): all_prefixes('')\n#1 /tmp/tmpapria013.php(21): candidate('')\n#2 /tmp/tmpapria013.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpapria013.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\" \", \"\", $string);\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i);\n        if (in_array($prefix, $prefixes)) {\n            continue;\n        }\n        $prefixes[$prefix] = 1;\n        $prefixes = all_prefixes($prefix);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0otwfrkj.php:25\nStack trace:\n#0 /tmp/tmp0otwfrkj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp0otwfrkj.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefixes[$i] = $string.substr(0, $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpu7lw4t2k.php:7\nStack trace:\n#0 /tmp/tmpu7lw4t2k.php(14): all_prefixes('')\n#1 /tmp/tmpu7lw4t2k.php(18): candidate('')\n#2 /tmp/tmpu7lw4t2k.php(23): test()\n#3 {main}\n  thrown in /tmp/tmpu7lw4t2k.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(' ', '', $string);\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $result[] = $string.substr(0, $i+1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp3pzxco1x.php:7\nStack trace:\n#0 /tmp/tmp3pzxco1x.php(14): all_prefixes('')\n#1 /tmp/tmp3pzxco1x.php(18): candidate('')\n#2 /tmp/tmp3pzxco1x.php(23): test()\n#3 {main}\n  thrown in /tmp/tmp3pzxco1x.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"~\", \"\", $string);\n    $string = str_replace(\"`\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\",\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp4ioddqty.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$prefix] = 1;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpapria013.php:7\nStack trace:\n#0 /tmp/tmpapria013.php(17): all_prefixes('')\n#1 /tmp/tmpapria013.php(21): candidate('')\n#2 /tmp/tmpapria013.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpapria013.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (in_array($prefix, $prefixes)) {\n            continue;\n        }\n        $prefixes[$prefix] = 1;\n        $prefixes = all_prefixes($prefix);\n    }\n    return $prefixes;\n}\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 20480 bytes) in /tmp/tmp9qkf9vmx.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i+1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$prefix] = 1;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpysj7tnjt.php:7\nStack trace:\n#0 /tmp/tmpysj7tnjt.php(17): all_prefixes('')\n#1 /tmp/tmpysj7tnjt.php(21): candidate('')\n#2 /tmp/tmpysj7tnjt.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpysj7tnjt.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s_haerl.php:22\nStack trace:\n#0 /tmp/tmp6s_haerl.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6s_haerl.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (in_array($prefix, $prefixes)) {\n            continue;\n        }\n        $prefixes[$prefix] = 1;\n        $prefixes = all_prefixes($prefix);\n    }\n    return $prefixes;\n}\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 20480 bytes) in /tmp/tmp9qkf9vmx.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"`\", \"\", $string);\n    $string = str_replace(\"~\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpaexkskui.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"~\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\",\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp4c_36l0m.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\v\", \"\", $string);\n    $string = str_replace(\"\\f\", \"\", $string);\n    $string = str_replace(\"\\b\", \"\", $string);\n    $string = str_replace(\"\\x1b\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\x00\", \"\", $string);\n    $string = str_replace(\"\\x01\", \"\", $string);\n    $string = str_replace(\"\\x02\", \"\", $string);\n    $string = str_replace(\"\\x03\", \"\", $string);\n    $string = str_replace(\"\\x04\", \"\", $string);\n    $string = str_replace(\"\\x05\", \"\", $string);\n    $string = str_replace(\"\\x06\", \"\", $string);\n    $string = str_replace(\"\\x07\", \"\", $string);\n    $string = str_replace(\"\\x08\", \"\", $string);\n    $string = str_replace(\"\\x09\", \"\", $string);\n    $string = str_replace(\"\\x0a\", \"\", $string);\n    $string = str_replace(\"\\x0b\", \"\", $string);\n    $string = str_replace(\"\\x0c\", \"\", $string);\n    $string = str_replace(\"\\x0d\", \"\", $string);\n    $string = str_replace(\"\\x0e\",\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp6ea5c4yh.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (in_array($prefix, $prefixes)) {\n            continue;\n        }\n        $prefixes[$prefix] = 1;\n        $prefixes = all_prefixes($prefix);\n    }\n    return $prefixes;\n}\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 20480 bytes) in /tmp/tmp9qkf9vmx.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefixes[$i] = $string.substr(0, $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpu7lw4t2k.php:7\nStack trace:\n#0 /tmp/tmpu7lw4t2k.php(14): all_prefixes('')\n#1 /tmp/tmpu7lw4t2k.php(18): candidate('')\n#2 /tmp/tmpu7lw4t2k.php(23): test()\n#3 {main}\n  thrown in /tmp/tmpu7lw4t2k.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s_haerl.php:22\nStack trace:\n#0 /tmp/tmp6s_haerl.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6s_haerl.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\b\", \"\", $string);\n    $string = str_replace(\"\\f\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\v\", \"\", $string);\n    $string = str_replace(\"\\a\", \"\", $string);\n    $string = str_replace(\"\\c\", \"\", $string);\n    $string = str_replace(\"\\d\", \"\", $string);\n    $string = str_replace(\"\\e\", \"\", $string);\n    $string = str_replace(\"\\g\", \"\", $string);\n    $string = str_replace(\"\\h\", \"\", $string);\n    $string = str_replace(\"\\i\", \"\", $string);\n    $string = str_replace(\"\\j\", \"\", $string);\n    $string = str_replace(\"\\k\", \"\", $string);\n    $string = str_replace(\"\\l\", \"\", $string);\n    $string = str_replace(\"\\m\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\o\", \"\", $string);\n    $string = str_replace(\"\\p\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\s\", \"\", $string);\n    $string = str_replace(\"\\u\", \"\", $string);\n    $string = str_replace(\"\\U\", \"\", $string);\n    $string = str_replace(\"\\v\", \"\", $string);\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: Unclosed '{' on line 5 in /tmp/tmppckfo70u.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefixes[$i] = $string.substr(0, $i+1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp8f36cckd.php:7\nStack trace:\n#0 /tmp/tmp8f36cckd.php(14): all_prefixes('')\n#1 /tmp/tmp8f36cckd.php(18): candidate('')\n#2 /tmp/tmp8f36cckd.php(23): test()\n#3 {main}\n  thrown in /tmp/tmp8f36cckd.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\":\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpf3pp4rja.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"-\", \"\", $string);\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$i] = $prefix;\n        }\n    }\n    return $prefixes;\n}\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$i] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(' ', '', $string);\n    $string = str_replace('-', '', $string);\n    $string = str_replace('_', '', $string);\n    $string = str_replace('/', '', $string);\n    $string = str_replace('\\\\', '', $string);\n    $string = str_replace('.', '', $string);\n    $string = str_replace('!', '', $string);\n    $string = str_replace('?', '', $string);\n    $string = str_replace('\\'', '', $string);\n    $string = str_replace('\"', '', $string);\n    $string = str_replace('(', '', $string);\n    $string = str_replace(')', '', $string);\n    $string = str_replace('{', '', $string);\n    $string = str_replace('}', '', $string);\n    $string = str_replace('[', '', $string);\n    $string = str_replace(']', '', $string);\n    $string = str_replace('+', '', $string);\n    $string = str_replace('-', '', $string);\n    $string = str_replace('*', '', $string);\n    $string = str_replace('/', '', $string);\n    $string = str_replace('\\\\', '', $string);\n    $string = str_replace('^', '', $string);\n    $string = str_replace('%', '', $string);\n    $string = str_replace('&', '', $string);\n    $string = str_replace('=', '', $string);\n    $string = str_replace('<', '', $string);\n    $string = str_replace('>', '', $string);\n    $string = str_replace('|', '', $string);\n    $string = str_replace('~', '', $string);\n    $string = str_replace('`', '', $string);\n    $string = str_replace('@', '', $string);\n    $string = str_replace('#',\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpeni0bwe4.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"`\", \"\", $string);\n    $string = str_replace(\"~\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpqow835wd.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp3z9xqm37.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefixes[$i] = $string.substr(0, $i+1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp8f36cckd.php:7\nStack trace:\n#0 /tmp/tmp8f36cckd.php(14): all_prefixes('')\n#1 /tmp/tmp8f36cckd.php(18): candidate('')\n#2 /tmp/tmp8f36cckd.php(23): test()\n#3 {main}\n  thrown in /tmp/tmp8f36cckd.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\":\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpb3lehd55.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(' ', '', $string);\n    $string = str_replace('-', '', $string);\n    $string = str_replace('_', '', $string);\n    $string = str_replace('/', '', $string);\n    $string = str_replace('\\\\', '', $string);\n    $string = str_replace('.', '', $string);\n    $string = str_replace('!', '', $string);\n    $string = str_replace('?', '', $string);\n    $string = str_replace('&', '', $string);\n    $string = str_replace('\\'', '', $string);\n    $string = str_replace('(', '', $string);\n    $string = str_replace(')', '', $string);\n    $string = str_replace('+', '', $string);\n    $string = str_replace('=', '', $string);\n    $string = str_replace('%', '', $string);\n    $string = str_replace('#', '', $string);\n    $string = str_replace('@', '', $string);\n    $string = str_replace('$', '', $string);\n    $string = str_replace('^', '', $string);\n    $string = str_replace('*', '', $string);\n    $string = str_replace('{', '', $string);\n    $string = str_replace('}', '', $string);\n    $string = str_replace('[', '', $string);\n    $string = str_replace(']', '', $string);\n    $string = str_replace(';', '', $string);\n    $string = str_replace(':', '', $string);\n    $string = str_replace('\"', '', $string);\n    $string = str_replace('<', '', $string);\n    $string = str_replace('>', '', $string);\n    $string = str_replace('|', '', $string);\n    $string = str_replace('~', '', $string);\n    $string = str_replace('`',\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpv1aymt_h.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = '';\n        for ($j = 0; $j < $i; $j++) {\n            $prefix += $string[$j];\n        }\n        $prefixes[$prefix] = $prefixes[$prefix] ? $prefixes[$prefix] : 1;\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpqf9e74ut.php:7\nStack trace:\n#0 /tmp/tmpqf9e74ut.php(18): all_prefixes('')\n#1 /tmp/tmpqf9e74ut.php(22): candidate('')\n#2 /tmp/tmpqf9e74ut.php(27): test()\n#3 {main}\n  thrown in /tmp/tmpqf9e74ut.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        $prefixes[$prefix] = $prefixes[$prefix] ? $prefixes[$prefix] + 1 : 1;\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpwimn_gsf.php:7\nStack trace:\n#0 /tmp/tmpwimn_gsf.php(15): all_prefixes('')\n#1 /tmp/tmpwimn_gsf.php(19): candidate('')\n#2 /tmp/tmpwimn_gsf.php(24): test()\n#3 {main}\n  thrown in /tmp/tmpwimn_gsf.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i+1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$prefix] = 1;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpapria013.php:7\nStack trace:\n#0 /tmp/tmpapria013.php(17): all_prefixes('')\n#1 /tmp/tmpapria013.php(21): candidate('')\n#2 /tmp/tmpapria013.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpapria013.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"`\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\":\", \"\",\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp67ybhu0j.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"~\", \"\", $string);\n    $string = str_replace(\"`\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\" \", \"\", $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpk7y3af6c.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"~\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"(\", \"\",\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp3bvlbtx6.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $result[$i] = $string.substr(0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpwlaf1fuz.php:7\nStack trace:\n#0 /tmp/tmpwlaf1fuz.php(14): all_prefixes('')\n#1 /tmp/tmpwlaf1fuz.php(18): candidate('')\n#2 /tmp/tmpwlaf1fuz.php(23): test()\n#3 {main}\n  thrown in /tmp/tmpwlaf1fuz.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\":\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"<\", \"\",\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp_m1bsb54.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"/\", \"\",\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpo1hh9abd.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (in_array($prefix, $prefixes)) {\n            continue;\n        }\n        $prefixes[$prefix] = 1;\n        $prefixes = all_prefixes($prefix);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 20480 bytes) in /tmp/tmpab8s6ppv.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp34mhloty.php:22\nStack trace:\n#0 /tmp/tmp34mhloty.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp34mhloty.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\":\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \") !== array()) { throw new Exc...\", expecting \")\" in /tmp/tmp1425zs_i.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $result[$i] = $string.substr(0, $i+1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp050tc_lp.php:7\nStack trace:\n#0 /tmp/tmp050tc_lp.php(14): all_prefixes('')\n#1 /tmp/tmp050tc_lp.php(18): candidate('')\n#2 /tmp/tmp050tc_lp.php(23): test()\n#3 {main}\n  thrown in /tmp/tmp050tc_lp.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"~\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\":\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp_wy8tsi9.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\f\", \"\", $string);\n    $string = str_replace(\"\\b\", \"\", $string);\n    $string = str_replace(\"\\x1b\", \"\", $string);\n    $string = str_replace(\"\\x1a\", \"\", $string);\n    $string = str_replace(\"\\x1c\", \"\", $string);\n    $string = str_replace(\"\\x1d\", \"\", $string);\n    $string = str_replace(\"\\x1e\", \"\", $string);\n    $string = str_replace(\"\\x1f\", \"\", $string);\n    $string = str_replace(\"\\x1\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x1\", \"\", $string);\n    $string = str_replace(\"\\x1\", \"\", $string);\n    $string = str_replace(\"\\x1\", \"\", $string);\n    $string = str_replace(\"\\x1\", \"\", $string);\n    $string = str_replace(\"\\x1\", \"\", $string);\n    $string = str_replace(\"\\x1\", \"\", $string);\n    $string = str_replace(\"\\x1\", \"\", $string);\n    $string = str_replace(\"\\x1\", \"\", $string);\n    $string = str_replace(\"\\x1\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \") !== array()) { throw new Exc...\", expecting \")\" in /tmp/tmpe8syjypd.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$i] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo77j1p0l.php:22\nStack trace:\n#0 /tmp/tmpo77j1p0l.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpo77j1p0l.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(' ', '', $string);\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"`\", \"\", $string);\n    $string = str_replace(\"~\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpv25005aq.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        $prefixes[$prefix] = 1;\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpjykbho7a.php:7\nStack trace:\n#0 /tmp/tmpjykbho7a.php(15): all_prefixes('')\n#1 /tmp/tmpjykbho7a.php(19): candidate('')\n#2 /tmp/tmpjykbho7a.php(24): test()\n#3 {main}\n  thrown in /tmp/tmpjykbho7a.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[$i] = $string[0:$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected token \":\", expecting \"]\" in /tmp/tmpb0kcjzqj.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i+1);\n        $prefixes[$prefix] = $prefixes[$prefix] ? $prefixes[$prefix] + 1 : 1;\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp8sjckh4t.php:7\nStack trace:\n#0 /tmp/tmp8sjckh4t.php(15): all_prefixes('')\n#1 /tmp/tmp8sjckh4t.php(19): candidate('')\n#2 /tmp/tmp8sjckh4t.php(24): test()\n#3 {main}\n  thrown in /tmp/tmp8sjckh4t.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        $prefixes[$prefix] = 1;\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpjykbho7a.php:7\nStack trace:\n#0 /tmp/tmpjykbho7a.php(15): all_prefixes('')\n#1 /tmp/tmpjykbho7a.php(19): candidate('')\n#2 /tmp/tmpjykbho7a.php(24): test()\n#3 {main}\n  thrown in /tmp/tmpjykbho7a.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s_haerl.php:22\nStack trace:\n#0 /tmp/tmp6s_haerl.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6s_haerl.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        $prefixes[$prefix] = $prefixes[$prefix] ? $prefixes[$prefix] + 1 : 1;\n    }\n    $prefixes = array_keys($prefixes);\n    $prefixes.sort(function($a, $b) {\n        return $a - $b;\n    });\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpgujs9q1q.php:7\nStack trace:\n#0 /tmp/tmpgujs9q1q.php(19): all_prefixes('')\n#1 /tmp/tmpgujs9q1q.php(23): candidate('')\n#2 /tmp/tmpgujs9q1q.php(28): test()\n#3 {main}\n  thrown in /tmp/tmpgujs9q1q.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s_haerl.php:22\nStack trace:\n#0 /tmp/tmp6s_haerl.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6s_haerl.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(' ', '', $string);\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = $string[0:$i];\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$i] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected token \":\", expecting \"]\" in /tmp/tmpt6e3k16a.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"~\", \"\", $string);\n    $string = str_replace(\"`\", \"\", $string);\n    $string = str_replace(\"~\", \"\",\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpr39tkics.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"~\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpxyf0hv_a.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        if (in_array($prefix, $prefixes)) {\n            continue;\n        }\n        $prefixes[$prefix] = true;\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpwu6k253p.php:7\nStack trace:\n#0 /tmp/tmpwu6k253p.php(18): all_prefixes('')\n#1 /tmp/tmpwu6k253p.php(22): candidate('')\n#2 /tmp/tmpwu6k253p.php(27): test()\n#3 {main}\n  thrown in /tmp/tmpwu6k253p.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\\\\'\", $string);\n    $string = str_replace(\"\\\"\", \"\\\\\\\"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x00\", \"\", $string);\n    $string = str_replace(\"\\x000\", \"\", $string);\n    $string = str_replace(\"\\x0000\", \"\", $string);\n    $string = str_replace(\"\\x00000\", \"\", $string);\n    $string = str_replace(\"\\x000000\", \"\", $string);\n    $string = str_replace(\"\\x0000000\", \"\", $string);\n    $string = str_replace(\"\\x00000000\", \"\", $string);\n    $string = str_replace(\"\\x000000000\", \"\", $string);\n    $string = str_replace(\"\\x0000000000\", \"\", $string);\n    $string = str_replace(\"\\x00000000000\", \"\", $string);\n    $string = str_replace(\"\\x000000000000\", \"\", $string);\n    $string = str_replace(\"\\x0000000000000\", \"\", $string);\n    $string = str_replace(\"\\x00000000000000\", \"\", $string);\n    $string = str_replace(\"\\x000000000000000\", \"\", $string);\n    $string = str_replace(\"\\x0000000000000000\", \"\", $string);\n    $string = str_replace(\"\\x00000000000000000\", \"\", $string);\n    $string = str_replace(\"\\x000000000000000000\", \"\", $string);\n    $string = str_replace(\"\\x0000000000000000000\", \"\", $string);\n    $string = str_replace(\"\\x00000000000000000000\", \"\", $string);\n    $string = str_replace(\"\\x000000000000000000000\", \"\", $string);\n    $string = str_replace(\"\\x\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \") !== array()) { throw new Exc...\", expecting \")\" in /tmp/tmpyd9rjgac.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\v\", \"\", $string);\n    $string = str_replace(\"\\f\", \"\", $string);\n    $string = str_replace(\"\\b\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\",\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpgm6to74r.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"~\", \"\", $string);\n    $string = str_replace(\"`\", \"\",\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmppjn5rzc5.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1D\", \"\", $string);\n    $string = str_replace(\"\\x1E\", \"\", $string);\n    $string = str_replace(\"\\x1F\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpfwecgd92.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\":\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"'\", \"\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \") !== array()) { throw new Exc...\", expecting \")\" in /tmp/tmpejizl5ba.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s_haerl.php:22\nStack trace:\n#0 /tmp/tmp6s_haerl.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6s_haerl.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace('-', '', $string);\n    $string = str_replace(' ', '', $string);\n    $string = str_replace('_', '', $string);\n    $string = str_replace('/', '', $string);\n    $string = str_replace('\\\\', '', $string);\n    $string = str_replace('.', '', $string);\n    $string = str_replace('(', '', $string);\n    $string = str_replace(')', '', $string);\n    $string = str_replace('[', '', $string);\n    $string = str_replace(']', '', $string);\n    $string = str_replace('{', '', $string);\n    $string = str_replace('}', '', $string);\n    $string = str_replace('&', '', $string);\n    $string = str_replace('\\'', '', $string);\n    $string = str_replace('\"', '', $string);\n    $string = str_replace('!', '', $string);\n    $string = str_replace('?', '', $string);\n    $string = str_replace('+', '', $string);\n    $string = str_replace('=', '', $string);\n    $string = str_replace('@', '', $string);\n    $string = str_replace('#', '', $string);\n    $string = str_replace('$', '', $string);\n    $string = str_replace('%', '', $string);\n    $string = str_replace('^', '', $string);\n    $string = str_replace('*', '', $string);\n    $string = str_replace('|', '', $string);\n    $string = str_replace('~', '', $string);\n    $string = str_replace('<', '', $string);\n    $string = str_replace('>', '', $string);\n    $string = str_replace(';', '', $string);\n    $string = str_replace(':', '', $string);\n    $string = str_replace('.',\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp46k7oxm0.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\":\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"'\", \"\",\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpo3m4oxzr.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\b\", \"\", $string);\n    $string = str_replace(\"\\f\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\v\", \"\", $string);\n    $string = str_replace(\"\\a\", \"\", $string);\n    $string = str_replace(\"\\c\", \"\", $string);\n    $string = str_replace(\"\\d\", \"\", $string);\n    $string = str_replace(\"\\e\", \"\", $string);\n    $string = str_replace(\"\\g\", \"\", $string);\n    $string = str_replace(\"\\h\", \"\", $string);\n    $string = str_replace(\"\\i\", \"\", $string);\n    $string = str_replace(\"\\j\", \"\", $string);\n    $string = str_replace(\"\\k\", \"\", $string);\n    $string = str_replace(\"\\l\", \"\", $string);\n    $string = str_replace(\"\\m\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\o\", \"\", $string);\n    $string = str_replace(\"\\p\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\s\", \"\", $string);\n    $string = str_replace(\"\\u\", \"\", $string);\n    $string = str_replace(\"\\U\", \"\", $string);\n    $string = str_replace(\"\\v\", \"\", $string);\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nParse error: Unclosed '{' on line 5 in /tmp/tmppckfo70u.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(' ', '', $string);\n    $string = str_replace('-', '', $string);\n    $string = str_replace('_', '', $string);\n    $string = str_replace('/', '', $string);\n    $string = str_replace('\\\\', '', $string);\n    $string = str_replace('.', '', $string);\n    $string = str_replace('!', '', $string);\n    $string = str_replace('?', '', $string);\n    $string = str_replace('@', '', $string);\n    $string = str_replace('#', '', $string);\n    $string = str_replace('$', '', $string);\n    $string = str_replace('%', '', $string);\n    $string = str_replace('^', '', $string);\n    $string = str_replace('&', '', $string);\n    $string = str_replace('*', '', $string);\n    $string = str_replace('(', '', $string);\n    $string = str_replace(')', '', $string);\n    $string = str_replace('+', '', $string);\n    $string = str_replace('=', '', $string);\n    $string = str_replace('{', '', $string);\n    $string = str_replace('}', '', $string);\n    $string = str_replace('[', '', $string);\n    $string = str_replace(']', '', $string);\n    $string = str_replace(';', '', $string);\n    $string = str_replace(':', '', $string);\n    $string = str_replace('\"', '', $string);\n    $string = str_replace('\\'', '', $string);\n    $string = str_replace('<', '', $string);\n    $string = str_replace('>', '', $string);\n    $string = str_replace('|', '', $string);\n    $string = str_replace('~', '', $string);\n    $string = str_replace('`',\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpx292sscm.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"`\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\":\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"'\", \"\",\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpkjqxwnyc.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$prefix] = 1;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpapria013.php:7\nStack trace:\n#0 /tmp/tmpapria013.php(17): all_prefixes('')\n#1 /tmp/tmpapria013.php(21): candidate('')\n#2 /tmp/tmpapria013.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpapria013.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$prefix] = 1;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpapria013.php:7\nStack trace:\n#0 /tmp/tmpapria013.php(17): all_prefixes('')\n#1 /tmp/tmpapria013.php(21): candidate('')\n#2 /tmp/tmpapria013.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpapria013.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$i] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$i] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo77j1p0l.php:22\nStack trace:\n#0 /tmp/tmpo77j1p0l.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpo77j1p0l.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\0\", \"\", $string);\n    $string = str_replace(\"\\x0\", \"\", $string);\n    $string = str_replace(\"\\v\", \"\", $string);\n    $string = str_replace(\"\\f\", \"\", $string);\n    $string = str_replace(\"\\b\", \"\", $string);\n    $string = str_replace(\"\\x1b\", \"\", $string);\n    $string = str_replace(\"\\x1a\", \"\", $string);\n    $string = str_replace(\"\\x1c\", \"\", $string);\n    $string = str_replace(\"\\x1d\", \"\", $string);\n    $string = str_replace(\"\\x1e\", \"\", $string);\n    $string = str_replace(\"\\x1f\", \"\", $string);\n    $string = str_replace(\"\\x1g\", \"\", $string);\n    $string = str_replace(\"\\x1h\", \"\", $string);\n    $string = str_replace(\"\\x1i\", \"\", $string);\n    $string = str_replace(\"\\x1j\", \"\", $string);\n    $string = str_replace(\"\\x1k\", \"\", $string);\n    $string = str_replace(\"\\x1l\", \"\", $string);\n    $string = str_replace(\"\\x1m\", \"\", $string);\n    $string = str_replace(\"\\x1n\", \"\", $string);\n    $string = str_replace(\"\\x1o\", \"\", $string);\n    $string = str_replace(\"\\x1p\", \"\", $string);\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: Unclosed '{' on line 5 in /tmp/tmp0_aa8947.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        $prefixes[$prefix] = 1;\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpjykbho7a.php:7\nStack trace:\n#0 /tmp/tmpjykbho7a.php(15): all_prefixes('')\n#1 /tmp/tmpjykbho7a.php(19): candidate('')\n#2 /tmp/tmpjykbho7a.php(24): test()\n#3 {main}\n  thrown in /tmp/tmpjykbho7a.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefixes[$i] = $string.substr(0, $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpu7lw4t2k.php:7\nStack trace:\n#0 /tmp/tmpu7lw4t2k.php(14): all_prefixes('')\n#1 /tmp/tmpu7lw4t2k.php(18): candidate('')\n#2 /tmp/tmpu7lw4t2k.php(23): test()\n#3 {main}\n  thrown in /tmp/tmpu7lw4t2k.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(' ', '', $string);\n    $string = str_replace('-', '', $string);\n    $string = str_replace('_', '', $string);\n    $string = str_replace('/', '', $string);\n    $string = str_replace('\\\\', '', $string);\n    $string = str_replace('.', '', $string);\n    $string = str_replace('!', '', $string);\n    $string = str_replace('?', '', $string);\n    $string = str_replace('#', '', $string);\n    $string = str_replace('%', '', $string);\n    $string = str_replace('&', '', $string);\n    $string = str_replace('\\'', '', $string);\n    $string = str_replace('(', '', $string);\n    $string = str_replace(')', '', $string);\n    $string = str_replace('+', '', $string);\n    $string = str_replace('=', '', $string);\n    $string = str_replace('@', '', $string);\n    $string = str_replace('[', '', $string);\n    $string = str_replace(']', '', $string);\n    $string = str_replace('{', '', $string);\n    $string = str_replace('}', '', $string);\n    $string = str_replace(';', '', $string);\n    $string = str_replace('\"', '', $string);\n    $string = str_replace('$', '', $string);\n    $string = str_replace('|', '', $string);\n    $string = str_replace('<', '', $string);\n    $string = str_replace('>', '', $string);\n    $string = str_replace('*', '', $string);\n    $string = str_replace('^', '', $string);\n    $string = str_replace('~', '', $string);\n    $string = str_replace('`', '', $string);\n    $string = str_replace('\\\\\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected string content \"\\\\\" in /tmp/tmpi_zho9ab.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"\\\\\", \"\", $string);\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"\\t\", \"\", $string);\n    $string = str_replace(\"\\r\", \"\", $string);\n    $string = str_replace(\"\\n\", \"\", $string);\n    $string = str_replace(\"\\x0B\", \"\", $string);\n    $string = str_replace(\"\\x0C\", \"\", $string);\n    $string = str_replace(\"\\x0D\", \"\", $string);\n    $string = str_replace(\"\\x0E\", \"\", $string);\n    $string = str_replace(\"\\x0F\", \"\", $string);\n    $string = str_replace(\"\\x10\", \"\", $string);\n    $string = str_replace(\"\\x11\", \"\", $string);\n    $string = str_replace(\"\\x12\", \"\", $string);\n    $string = str_replace(\"\\x13\", \"\", $string);\n    $string = str_replace(\"\\x14\", \"\", $string);\n    $string = str_replace(\"\\x15\", \"\", $string);\n    $string = str_replace(\"\\x16\", \"\", $string);\n    $string = str_replace(\"\\x17\", \"\", $string);\n    $string = str_replace(\"\\x18\", \"\", $string);\n    $string = str_replace(\"\\x19\", \"\", $string);\n    $string = str_replace(\"\\x1A\", \"\", $string);\n    $string = str_replace(\"\\x1B\", \"\", $string);\n    $string = str_replace(\"\\x1C\", \"\", $string);\n    $string = str_replace(\"\\x1D\", \"\", $string);\n    $string = str_replace(\"\\x1E\", \"\", $string);\n    $string = str_replace(\"\\x1F\", \"\", $string);\n    $\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp6rsxktc5.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    $string = str_replace(' ', '', $string);\n    $string = str_replace('-', '', $string);\n    $string = str_replace('_', '', $string);\n    $string = str_replace('/', '', $string);\n    $string = str_replace('\\\\', '', $string);\n    $string = str_replace('.', '', $string);\n    $string = str_replace('!', '', $string);\n    $string = str_replace('?', '', $string);\n    $string = str_replace('\\'', '', $string);\n    $string = str_replace('\"', '', $string);\n    $string = str_replace('(', '', $string);\n    $string = str_replace(')', '', $string);\n    $string = str_replace('{', '', $string);\n    $string = str_replace('}', '', $string);\n    $string = str_replace('[', '', $string);\n    $string = str_replace(']', '', $string);\n    $string = str_replace('+', '', $string);\n    $string = str_replace('-', '', $string);\n    $string = str_replace('*', '', $string);\n    $string = str_replace('/', '', $string);\n    $string = str_replace('\\\\', '', $string);\n    $string = str_replace('^', '', $string);\n    $string = str_replace('%', '', $string);\n    $string = str_replace('#', '', $string);\n    $string = str_replace('&', '', $string);\n    $string = str_replace('|', '', $string);\n    $string = str_replace('~', '', $string);\n    $string = str_replace('=', '', $string);\n    $string = str_replace('<', '', $string);\n    $string = str_replace('>', '', $string);\n    $string = str_replace(';', '', $string);\n    $string = str_replace('@',\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpt8v_84yj.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefix = $string.substr(0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[$prefix] = 1;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpapria013.php:7\nStack trace:\n#0 /tmp/tmpapria013.php(17): all_prefixes('')\n#1 /tmp/tmpapria013.php(21): candidate('')\n#2 /tmp/tmpapria013.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpapria013.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (in_array($prefix, $prefixes)) {\n            continue;\n        }\n        $prefixes[$prefix] = 1;\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6o8z0b3.php:23\nStack trace:\n#0 /tmp/tmpn6o8z0b3.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpn6o8z0b3.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[count($prefixes)] = $prefix;\n        }\n    }\n    return $prefixes;\n}\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi2z31ls4.php:21\nStack trace:\n#0 /tmp/tmpi2z31ls4.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpi2z31ls4.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string = str_replace(' ', '', $string);\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = '';\n        for ($j = 0; $j < strlen($string); $j++) {\n            if ($j == $i) {\n                $prefix = $string[$j];\n                continue;\n            }\n            if ($string[$j] != $prefix) {\n                break;\n            }\n        }\n        $prefixes[$i] = $prefix;\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292457,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5q58ex9.php:30\nStack trace:\n#0 /tmp/tmpf5q58ex9.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf5q58ex9.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < $string.length; $i++) {\n        $prefixes[$i] = $string.substr(0, $i+1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp8f36cckd.php:7\nStack trace:\n#0 /tmp/tmp8f36cckd.php(14): all_prefixes('')\n#1 /tmp/tmp8f36cckd.php(18): candidate('')\n#2 /tmp/tmp8f36cckd.php(23): test()\n#3 {main}\n  thrown in /tmp/tmp8f36cckd.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return array of all prefixes from shortest to longest of the input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefix = substr($string, 0, $i + 1);\n        if (!in_array($prefix, $prefixes)) {\n            $prefixes[] = $prefix;\n        }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292456,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
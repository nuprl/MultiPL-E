name: HumanEval_149_sorted_list_sum
language: php
prompt: "<?php\n// Write a function that accepts an array of strings as a parameter,\n\
  // deletes the strings that have odd lengths from it,\n// and returns the resulted\
  \ array with a sorted order,\n// The array is always an array of strings and never\
  \ an array of numbers,\n// and it may contain duplicates.\n// The order of the array\
  \ should be ascending by length of each word, and you\n// should return the array\
  \ sorted by that rule.\n// If two words have the same length, sort the array alphabetically.\n\
  // The function should return an array of strings in sorted order.\n// You may assume\
  \ that all words will have the same length.\n// For example:\n// >>> list_sort(array(\"\
  aa\", \"a\", \"aaa\"))\n// array(\"aa\")\n// >>> list_sort(array(\"ab\", \"a\",\
  \ \"aaa\", \"cd\"))\n// array(\"ab\", \"cd\")\nfunction sorted_list_sum($lst) {\n"
tests: "function candidate(...$args) {\n    return sorted_list_sum(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(array(\"aa\", \"a\", \"aaa\")) !==\
  \ array(\"aa\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  school\", \"AI\", \"asdf\", \"b\")) !== array(\"AI\", \"asdf\", \"school\")) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"d\", \"b\", \"c\"\
  , \"a\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  d\", \"dcba\", \"abcd\", \"a\")) !== array(\"abcd\", \"dcba\")) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(\"AI\", \"ai\", \"au\")) !== array(\"\
  AI\", \"ai\", \"au\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  a\", \"b\", \"b\", \"c\", \"c\", \"a\")) !== array()) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(\"aaaa\", \"bbbb\", \"dd\", \"cc\")) !==\
  \ array(\"cc\", \"dd\", \"aaaa\", \"bbbb\")) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: []
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

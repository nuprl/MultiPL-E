{
  "name": "HumanEval_54_same_chars",
  "language": "php",
  "prompt": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n",
  "tests": "function candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"#\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp8mfinw9k.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmptu8axbe7.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpilz5lnq0.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @codingStandardsIgnoreStart\n    if ($s0 === $s1) {\n        return true;\n    }\n    if ($s0 === null || $s1 === null) {\n        return false;\n    }\n    if ($s0.length !== $s1.length) {\n        return false;\n    }\n    for (var i = 0; i < $s0.length; i++) {\n        if ($s0.charCodeAt(i) !== $s1.charCodeAt(i)) {\n            return false;\n        }\n    }\n    return true;\n    // @codingStandardsIgnoreEnd\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp7r23g4i_.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\",\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpe4_8yzsm.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var bool $result\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len_s0\n    // @var int $len_s1\n    // @var int $len_s0_i\n    // @var int $len_s1_i\n    // @var int $len_s0_j\n    // @var int $len_s1_j\n    // @var int $len_s0_i_j\n    // @var int $len_s1_i_j\n    // @var int $len_s0_i_j_k\n    // @var int $len_s1_i_j_k\n    // @var int $len_s0_i_j_k_l\n    // @var int $len_s1_i_j_k_l\n    // @var int $len_s0_i_j_k_l_m\n    // @var int $len_s1_i_j_k_l_m\n    // @var int $len_s0_i_j_k_l_m_n\n    // @var int $len_s1_i_j_k_l_m_n\n    // @var int $len_s0_i_j_k_l_m_n_o\n    // @var int $len_s1_i_j_k_l_m_n_o\n    // @var int $len_s0_i_j_k_l_m_n_o_p\n    // @var int $len_s1_i_j_k_l_m_n_o_p\n    // @var int $len_s0_i_j_k_l_m_n_o_p_q\n    // @var int $len_s1_i_j_k_l_m_n_o_p_q\n    // @var int $len_s0_i_j_k_l_m_n_o_p_q_r\n    // @var int\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpbslk4rsz.php on line 60\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpilz5lnq0.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\",\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpe4_8yzsm.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"|\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpzx690bdp.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var string $s2\n    // @var string $s3\n    // @var string $s4\n    // @var string $s5\n    // @var string $s6\n    // @var string $s7\n    // @var string $s8\n    // @var string $s9\n    // @var string $s10\n    // @var string $s11\n    // @var string $s12\n    // @var string $s13\n    // @var string $s14\n    // @var string $s15\n    // @var string $s16\n    // @var string $s17\n    // @var string $s18\n    // @var string $s19\n    // @var string $s20\n    // @var string $s21\n    // @var string $s22\n    // @var string $s23\n    // @var string $s24\n    // @var string $s25\n    // @var string $s26\n    // @var string $s27\n    // @var string $s28\n    // @var string $s29\n    // @var string $s30\n    // @var string $s31\n    // @var string $s32\n    // @var string $s33\n    // @var string $s34\n    // @var string $s35\n    // @var string $s36\n    // @var string $s37\n    // @var string $s38\n    // @var string $s39\n    // @var string $s40\n    // @var string $s41\n    // @var string $s42\n    // @var string $s43\n    // @var string $s44\n    // @var string $s45\n    // @var string $s46\n    // @var string $s47\n    // @var string $s48\n    // @var string $s49\n    // @var string $s50\n    // @var string $s51\n    // @var string $s52\n    // @var string $s53\n    // @var string $s54\n    // @var string $s55\n    // @var string $s56\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpkz6y009z.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"|\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpmsepnodj.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpvyzi28hl.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @codingStandardsIgnoreStart\n    if ($s0 === $s1) {\n        return true;\n    }\n    if ($s0 === null || $s1 === null) {\n        return false;\n    }\n    if ($s0.length !== $s1.length) {\n        return false;\n    }\n    for (var i = 0; i < $s0.length; i++) {\n        if ($s0.charCodeAt(i) !== $s1.charCodeAt(i)) {\n            return false;\n        }\n    }\n    return true;\n    // @codingStandardsIgnoreEnd\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp7r23g4i_.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var string $s2\n    // @var string $s3\n    // @var string $s4\n    // @var string $s5\n    // @var string $s6\n    // @var string $s7\n    // @var string $s8\n    // @var string $s9\n    // @var string $s10\n    // @var string $s11\n    // @var string $s12\n    // @var string $s13\n    // @var string $s14\n    // @var string $s15\n    // @var string $s16\n    // @var string $s17\n    // @var string $s18\n    // @var string $s19\n    // @var string $s20\n    // @var string $s21\n    // @var string $s22\n    // @var string $s23\n    // @var string $s24\n    // @var string $s25\n    // @var string $s26\n    // @var string $s27\n    // @var string $s28\n    // @var string $s29\n    // @var string $s30\n    // @var string $s31\n    // @var string $s32\n    // @var string $s33\n    // @var string $s34\n    // @var string $s35\n    // @var string $s36\n    // @var string $s37\n    // @var string $s38\n    // @var string $s39\n    // @var string $s40\n    // @var string $s41\n    // @var string $s42\n    // @var string $s43\n    // @var string $s44\n    // @var string $s45\n    // @var string $s46\n    // @var string $s47\n    // @var string $s48\n    // @var string $s49\n    // @var string $s50\n    // @var string $s51\n    // @var string $s52\n    // @var string $s53\n    // @var string $s54\n    // @var string $s55\n    // @var string $s56\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpkz6y009z.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"@\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp4idaxw1v.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var bool $result\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len_s0\n    // @var int $len_s1\n    // @var int $len_diff\n    // @var int $len_diff_s0\n    // @var int $len_diff_s1\n    // @var int $len_diff_s0_s1\n    // @var int $len_diff_s1_s0\n    // @var int $len_diff_s0_s1_diff\n    // @var int $len_diff_s1_s0_diff\n    // @var int $len_diff_s0_s1_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff_diff_diff_\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpz6y9m2md.php on line 58\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"@\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp4qd3ww72.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"+\", \"\", $s0);\n    $s1 = str_replace(\"+\", \"\", $s1);\n    $s0 = str_replace(\"=\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp0oo9v216.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\"@\", \"\", $s0);\n    $s1 = str_replace(\"@\", \"\", $s1);\n    $s0 = str_replace(\"#\", \"\", $s0);\n    $s1 = str_replace(\"#\", \"\", $s1);\n    $s0 = str_replace(\"$\", \"\", $s0);\n    $s1 = str_replace(\"$\", \"\", $s1);\n    $s0 = str_replace(\"%\", \"\", $s0);\n    $s1 = str_replace(\"%\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpltxp1agx.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @codingStandardsIgnoreStart\n    if ($s0 === $s1) {\n        return true;\n    }\n    if ($s0 === null || $s1 === null) {\n        return false;\n    }\n    if ($s0.length !== $s1.length) {\n        return false;\n    }\n    for (var i = 0; i < $s0.length; i++) {\n        if ($s0.charAt(i) !== $s1.charAt(i)) {\n            return false;\n        }\n    }\n    return true;\n    // @codingStandardsIgnoreEnd\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpqpwli75y.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var array $chars\n    // @var int $len\n    // @var int $i\n    // @var int $j\n    // @var int $k\n    // @var int $l\n    // @var int $m\n    // @var int $n\n    // @var int $o\n    // @var int $p\n    // @var int $q\n    // @var int $r\n    // @var int $s\n    // @var int $t\n    // @var int $u\n    // @var int $v\n    // @var int $w\n    // @var int $x\n    // @var int $y\n    // @var int $z\n    // @var int $a\n    // @var int $b\n    // @var int $c\n    // @var int $d\n    // @var int $e\n    // @var int $f\n    // @var int $g\n    // @var int $h\n    // @var int $i\n    // @var int $j\n    // @var int $k\n    // @var int $l\n    // @var int $m\n    // @var int $n\n    // @var int $o\n    // @var int $p\n    // @var int $q\n    // @var int $r\n    // @var int $s\n    // @var int $t\n    // @var int $u\n    // @var int $v\n    // @var int $w\n    // @var int $x\n    // @var int $y\n    // @var int $z\n    // @var int $a\n    // @var int $b\n    // @var int $c\n    // @var int $d\n    // @var int $e\n    // @var int $f\n    // @var int $g\n    // @var int $h\n    // @var int $i\n    // @var int $j\n    // @var int $k\n    // @var int $l\n    // @var int $m\n    // @var int $n\n    // @var int $o\n    // @var int\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpu9dz0bwn.php on line 94\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"|\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpf3bg657p.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmptu8axbe7.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"+\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp08epeqvc.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var bool $result\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len_s0\n    // @var int $len_s1\n    // @var int $len_s0_i\n    // @var int $len_s1_i\n    // @var int $len_s0_j\n    // @var int $len_s1_j\n    // @var int $len_s0_i_j\n    // @var int $len_s1_i_j\n    // @var int $len_s0_i_j_k\n    // @var int $len_s1_i_j_k\n    // @var int $len_s0_i_j_k_l\n    // @var int $len_s1_i_j_k_l\n    // @var int $len_s0_i_j_k_l_m\n    // @var int $len_s1_i_j_k_l_m\n    // @var int $len_s0_i_j_k_l_m_n\n    // @var int $len_s1_i_j_k_l_m_n\n    // @var int $len_s0_i_j_k_l_m_n_o\n    // @var int $len_s1_i_j_k_l_m_n_o\n    // @var int $len_s0_i_j_k_l_m_n_o_p\n    // @var int $len_s1_i_j_k_l_m_n_o_p\n    // @var int $len_s0_i_j_k_l_m_n_o_p_q\n    // @var int $len_s1_i_j_k_l_m_n_o_p_q\n    // @var int $len_s0_i_j_k_l_m_n_o_p_q_r\n    // @var int\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpbslk4rsz.php on line 60\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"+\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp08epeqvc.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpilz5lnq0.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @uses core/strlen\n    // @uses core/strpos\n    // @uses core/strrpos\n    // @uses core/strchr\n    // @uses core/strrchr\n    // @uses core/strstr\n    // @uses core/strtr\n    // @uses core/strpos\n    // @uses core/strrpos\n    // @uses core/strchr\n    // @uses core/strrchr\n    // @uses core/strstr\n    // @uses core/strtr\n    // @uses core/strpos\n    // @uses core/strrpos\n    // @uses core/strchr\n    // @uses core/strrchr\n    // @uses core/strstr\n    // @uses core/strtr\n    // @uses core/strpos\n    // @uses core/strrpos\n    // @uses core/strchr\n    // @uses core/strrchr\n    // @uses core/strstr\n    // @uses core/strtr\n    // @uses core/strpos\n    // @uses core/strrpos\n    // @uses core/strchr\n    // @uses core/strrchr\n    // @uses core/strstr\n    // @uses core/strtr\n    // @uses core/strpos\n    // @uses core/strrpos\n    // @uses core/strchr\n    // @uses core/strrchr\n    // @uses core/strstr\n    // @uses core/strtr\n    // @uses core/strpos\n    // @uses core/strrpos\n    // @uses core/strchr\n    // @uses core/strrchr\n    // @uses core/strstr\n    // @uses core/strtr\n    // @uses core/strpos\n    // @uses core/strrpos\n    // @uses core/strchr\n    // @uses core/strrchr\n    // @uses core/strstr\n    // @uses core/strtr\n    // @uses core/strpos\n    // @uses core/strrpos\n    // @uses core/strchr\n    // @uses core/strrchr\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpqchefmj9.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"<\", \"\", $s0);\n    $s1 = str_replace(\"<\", \"\", $s1);\n    $s0 = str_replace(\">\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpnlbcvxeo.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpctzq1p1m.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var bool $result\n    // @var string $s0_chars\n    // @var string $s1_chars\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len_s0\n    // @var int $len_s1\n    // @var int $len_s0_chars\n    // @var int $len_s1_chars\n    // @var int $len_s0_chars_diff\n    // @var int $len_s1_chars_diff\n    // @var int $len_s0_chars_diff_min\n    // @var int $len_s1_chars_diff_min\n    // @var int $len_s0_chars_diff_max\n    // @var int $len_s1_chars_diff_max\n    // @var int $len_s0_chars_diff_sum\n    // @var int $len_s1_chars_diff_sum\n    // @var int $len_s0_chars_diff_sum_min\n    // @var int $len_s1_chars_diff_sum_min\n    // @var int $len_s0_chars_diff_sum_max\n    // @var int $len_s1_chars_diff_sum_max\n    // @var int $len_s0_chars_diff_sum_sum\n    // @var int $len_s1_chars_diff_sum_sum\n    // @var int $len_s0_chars_diff_sum_sum_min\n    // @var int $len_s1_chars_diff_sum_sum_min\n    // @var int $len_s0_chars_diff_sum_sum_max\n    // @var int $len_s1_chars_diff_sum_sum_max\n    // @var int $len_s0_chars_diff_sum_sum_sum\n    // @var int $len_s1_chars_diff_sum_\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmp5tjn3mlt.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\"@\", \"\", $s0);\n    $s1 = str_replace(\"@\", \"\", $s1);\n    $s0 = str_replace(\"#\", \"\", $s0);\n    $s1 = str_replace(\"#\", \"\", $s1);\n    $s0 = str_replace(\"$\", \"\", $s0);\n    $s1 = str_replace(\"$\", \"\", $s1);\n    $s0 = str_replace(\"%\", \"\", $s0);\n    $s1 = str_replace(\"%\", \"\", $s1);\n    $s0 = str_replace(\"^\", \"\", $s0);\n    $s1 = str_replace(\"^\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpigjs9am6.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n    // @uses \\S+\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmp50a6jq1w.php on line 95\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpvyzi28hl.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpe4_09vou.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"@\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp4idaxw1v.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"+\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp08epeqvc.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"+\", \"\", $s0);\n    $s1 = str_replace(\"+\", \"\", $s1);\n    $s0 = str_replace(\"=\", \"\", $s0);\n    $s1 = str_replace(\"=\", \"\", $s1);\n    $s0 = str_replace(\"@\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpm4zoez_o.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"|\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpf3bg657p.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpvyzi28hl.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"|\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpzx690bdp.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var bool $result\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len_s1\n    // @var int $len_s0\n    // @var int $len_s0_s1\n    // @var int $len_s1_s0\n    // @var int $len_s0_s1_s0\n    // @var int $len_s0_s1_s1\n    // @var int $len_s1_s0_s0\n    // @var int $len_s1_s0_s1\n    // @var int $len_s0_s1_s0_s1\n    // @var int $len_s0_s1_s1_s0\n    // @var int $len_s1_s0_s0_s1\n    // @var int $len_s1_s0_s1_s1\n    // @var int $len_s0_s1_s0_s1_s1\n    // @var int $len_s0_s1_s1_s0_s1\n    // @var int $len_s1_s0_s1_s0_s1\n    // @var int $len_s1_s0_s1_s1_s0\n    // @var int $len_s1_s0_s1_s1_s1\n    // @var int $len_s0_s1_s1_s0_s1\n    // @var int $len_s1_s0_s1_s1_s1\n    // @var int $len_s0_s1_s1_s0_s1_s1\n    // @var int $len_s0_s1_s1_s1_s0_s1\n    // @var int $len_s1_s0_s1_s1_s1_s0\n    // @var int $len_s1_s0_s1_s1_s1_s1\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmp3fh8eqz0.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var string $s0_lower\n    // @var string $s1_lower\n    // @var string $s0_upper\n    // @var string $s1_upper\n    // @var string $s0_lower_upper\n    // @var string $s1_lower_upper\n    // @var string $s0_upper_lower\n    // @var string $s1_upper_lower\n    // @var string $s0_lower_upper_lower\n    // @var string $s1_lower_upper_lower\n    // @var string $s0_upper_lower_upper\n    // @var string $s1_upper_lower_upper\n    // @var string $s0_lower_upper_lower_upper\n    // @var string $s1_lower_upper_lower_upper\n    // @var string $s0_upper_lower_lower\n    // @var string $s1_upper_lower_lower\n    // @var string $s0_lower_lower\n    // @var string $s1_lower_lower\n    // @var string $s0_lower_upper_lower\n    // @var string $s1_lower_upper_lower\n    // @var string $s0_upper_lower_lower\n    // @var string $s1_upper_lower_lower\n    // @var string $s0_lower_upper_lower_upper\n    // @var string $s1_lower_upper_lower_upper\n    // @var string $s0_upper_lower_lower_upper\n    // @var string $s1_upper_lower_lower_upper\n    // @var string $s0_lower_lower_lower\n    // @var string $s1_lower_lower_lower\n    // @var string $s0_lower_lower_lower_upper\n    // @var string $s1_lower_lower_lower_upper\n    // @var string $s0_lower_lower_lower_lower\n    // @var string $s1_lower_lower_lower_lower\n    // @var string $s0_lower_lower_lower_lower_upper\n    // @\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpbr_kmnjc.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpku25g5lc.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @codingStandardsIgnoreStart\n    if ($s0 === $s1) {\n        return true;\n    }\n    if ($s0 === null || $s1 === null) {\n        return false;\n    }\n    if ($s0.length !== $s1.length) {\n        return false;\n    }\n    for (var i = 0; i < $s0.length; i++) {\n        if ($s0[i] !== $s1[i]) {\n            return false;\n        }\n    }\n    return true;\n    // @codingStandardsIgnoreEnd\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpwhvbqls0.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @uses core/text.same_chars\n    return text.same_chars($s0, $s1);\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"text\" in /tmp/tmpaisr9ace.php:17\nStack trace:\n#0 /tmp/tmpaisr9ace.php(21): same_chars('eabcdzzzz', 'dddzzzzzzzddedd...')\n#1 /tmp/tmpaisr9ace.php(25): candidate('eabcdzzzz', 'dddzzzzzzzddedd...')\n#2 /tmp/tmpaisr9ace.php(34): test()\n#3 {main}\n  thrown in /tmp/tmpaisr9ace.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"`\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpsx3aklt0.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpilz5lnq0.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"|\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpzx690bdp.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var bool $result\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len2\n    // @var int $len3\n    // @var int $len4\n    // @var int $len5\n    // @var int $len6\n    // @var int $len7\n    // @var int $len8\n    // @var int $len9\n    // @var int $len10\n    // @var int $len11\n    // @var int $len12\n    // @var int $len13\n    // @var int $len14\n    // @var int $len15\n    // @var int $len16\n    // @var int $len17\n    // @var int $len18\n    // @var int $len19\n    // @var int $len20\n    // @var int $len21\n    // @var int $len22\n    // @var int $len23\n    // @var int $len24\n    // @var int $len25\n    // @var int $len26\n    // @var int $len27\n    // @var int $len28\n    // @var int $len29\n    // @var int $len30\n    // @var int $len31\n    // @var int $len32\n    // @var int $len33\n    // @var int $len34\n    // @var int $len35\n    // @var int $len36\n    // @var int $len37\n    // @var int $len38\n    // @var int $len39\n    // @var int $len40\n    // @var int $len41\n    // @var int $len42\n    // @var int $len43\n    // @var int $len44\n    // @var int $len45\n    // @var int $len46\n    // @var int $len47\n    // @var int $len48\n    // @var int $len49\n    // @var int $len50\n    // @var int $len51\n    // @var int $len52\n    // @\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpnevbkgvk.php on line 88\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp9pgl0udr.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\",\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1p39sayj.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var int $len\n    // @var int $i\n    // @var int $j\n    // @var int $k\n    // @var int $l\n    // @var int $m\n    // @var int $n\n    // @var int $o\n    // @var int $p\n    // @var int $q\n    // @var int $r\n    // @var int $s\n    // @var int $t\n    // @var int $u\n    // @var int $v\n    // @var int $w\n    // @var int $x\n    // @var int $y\n    // @var int $z\n    // @var int $c\n    // @var int $d\n    // @var int $e\n    // @var int $f\n    // @var int $g\n    // @var int $h\n    // @var int $i\n    // @var int $j\n    // @var int $k\n    // @var int $l\n    // @var int $m\n    // @var int $n\n    // @var int $o\n    // @var int $p\n    // @var int $q\n    // @var int $r\n    // @var int $s\n    // @var int $t\n    // @var int $u\n    // @var int $v\n    // @var int $w\n    // @var int $x\n    // @var int $y\n    // @var int $z\n    // @var int $c\n    // @var int $d\n    // @var int $e\n    // @var int $f\n    // @var int $g\n    // @var int $h\n    // @var int $i\n    // @var int $j\n    // @var int $k\n    // @var int $l\n    // @var int $m\n    // @var int $n\n    // @var int $o\n    // @var int $p\n    // @var int $q\n    // @var int $r\n    // @var int $s\n    // @var int $t\n    // @var int $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmplbzxhjmk.php on line 94\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"%\", \"\", $s0);\n    $s1 = str_replace(\"%\", \"\", $s1);\n    $s0 = str_replace(\"#\", \"\", $s0);\n    $s1 = str_replace(\"#\", \"\", $s1);\n    $s0 = str_replace(\"@\", \"\", $s0);\n    $s1 = str_replace(\"@\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp6uywce7k.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"`\", \"\", $s0);\n    $s1 = str_replace(\"`\", \"\", $s1);\n    $s0 = str_replace(\"~\", \"\", $s0);\n    $s1 = str_replace(\"~\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\",\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp4u_2sqzg.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @codingStandardsIgnoreStart\n    if ($s0 === $s1) {\n        return true;\n    }\n    if ($s0 === null || $s1 === null) {\n        return false;\n    }\n    if ($s0.length !== $s1.length) {\n        return false;\n    }\n    for (var i = 0; i < $s0.length; i++) {\n        if ($s0[i] !== $s1[i]) {\n            return false;\n        }\n    }\n    return true;\n    // @codingStandardsIgnoreEnd\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpqfqrtug8.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"`\", \"\", $s0);\n    $s1 = str_replace(\"`\", \"\", $s1);\n    $s0 = str_replace(\"~\", \"\", $s0);\n    $s1 = str_replace(\"~\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\"@\", \"\", $s0);\n    $s1 = str_replace(\"@\", \"\", $s1);\n    $s0 = str_replace(\"#\", \"\", $s0);\n    $s1 = str_replace(\"#\", \"\", $s1);\n    $s0 = str_replace(\"$\", \"\", $s0);\n    $s1 = str_replace(\"$\", \"\", $s1);\n    $s0 = str_replace(\"%\", \"\", $s0);\n    $s1 = str_replace(\"%\", \"\", $s1);\n    $s0 = str_replace(\"^\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpvog3ifud.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\"@\", \"\", $s0);\n    $s1 = str_replace(\"@\", \"\", $s1);\n    $s0 = str_replace(\"#\", \"\", $s0);\n    $s1 = str_replace(\"#\", \"\", $s1);\n    $s0 = str_replace(\"$\", \"\", $s0);\n    $s1 = str_replace(\"$\", \"\", $s1);\n    $s0 = str_replace(\"%\", \"\", $s0);\n    $s1 = str_replace(\"%\", \"\", $s1);\n    $s0 = str_replace(\"^\", \"\", $s0\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpfge5xoz3.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"|\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpf3bg657p.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpilz5lnq0.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @codingStandardsIgnoreStart\n    if ($s0 === $s1) {\n        return true;\n    }\n    if ($s0 === null || $s1 === null) {\n        return false;\n    }\n    if ($s0.length !== $s1.length) {\n        return false;\n    }\n    for (var i = 0; i < $s0.length; i++) {\n        if ($s0.charCodeAt(i) !== $s1.charCodeAt(i)) {\n            return false;\n        }\n    }\n    return true;\n    // @codingStandardsIgnoreEnd\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp7r23g4i_.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @uses core/string.php\n    // @uses core/array.php\n    // @uses core/number_format.php\n    // @uses core/date.php\n    // @uses core/time.php\n    // @uses core/date_and_time.php\n    // @uses core/user.php\n    // @uses core/url.php\n    // @uses core/html.php\n    // @uses core/html_entity.php\n    // @uses core/html_specialchars.php\n    // @uses core/html_specialchars_decode.php\n    // @uses core/html_specialchars_encode.php\n    // @uses core/html_specialchars_strip.php\n    // @uses core/html_specialchars_striptags.php\n    // @uses core/html_specialchars_striphtml.php\n    // @uses core/html_specialchars_striphtmlentities.php\n    // @uses core/html_specialchars_stripentities.php\n    // @uses core/html_specialchars_striplinks.php\n    // @uses core/html_specialchars_striphtmllinks.php\n    // @uses core/html_specialchars_stripnbsp.php\n    // @uses core/html_specialchars_stripquotes.php\n    // @uses core/html_specialchars_stripquotesentities.php\n    // @uses core/html_specialchars_stripquotestrings.php\n    // @uses core/html_specialchars_stripquotelinks.php\n    // @uses core/html_specialchars_stripquotelinksentities.php\n    // @uses core/html_specialchars_stripquotesentities.php\n    // @uses core/html_specialchars_stripquotesentitiesentities.php\n    // @uses core/html_specialchars_stripquotesentitiesentitiesentities.php\n    // @uses core/html_specialchars_stripquotesentitiesentitiesentitiesentities.php\n    // @uses core/html_specialchars_stripquotesentitiesentities\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmp3ftp288d.php on line 61\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @codingStandardsIgnoreStart\n    if ($s0 === $s1) {\n        return true;\n    }\n    if ($s0 === null || $s1 === null) {\n        return false;\n    }\n    if ($s0.length !== $s1.length) {\n        return false;\n    }\n    for (var i = 0; i < $s0.length; i++) {\n        if ($s0.charAt(i) !== $s1.charAt(i)) {\n            return false;\n        }\n    }\n    return true;\n    // @codingStandardsIgnoreEnd\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpqpwli75y.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpilz5lnq0.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpilz5lnq0.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"|\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpf3bg657p.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpctzq1p1m.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"+\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp08epeqvc.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"|\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpzx690bdp.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp15ps8296.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp9pgl0udr.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpkgf2c5kq.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var string $s2\n    // @var string $s3\n    // @var string $s4\n    // @var string $s5\n    // @var string $s6\n    // @var string $s7\n    // @var string $s8\n    // @var string $s9\n    // @var string $s10\n    // @var string $s11\n    // @var string $s12\n    // @var string $s13\n    // @var string $s14\n    // @var string $s15\n    // @var string $s16\n    // @var string $s17\n    // @var string $s18\n    // @var string $s19\n    // @var string $s20\n    // @var string $s21\n    // @var string $s22\n    // @var string $s23\n    // @var string $s24\n    // @var string $s25\n    // @var string $s26\n    // @var string $s27\n    // @var string $s28\n    // @var string $s29\n    // @var string $s30\n    // @var string $s31\n    // @var string $s32\n    // @var string $s33\n    // @var string $s34\n    // @var string $s35\n    // @var string $s36\n    // @var string $s37\n    // @var string $s38\n    // @var string $s39\n    // @var string $s40\n    // @var string $s41\n    // @var string $s42\n    // @var string $s43\n    // @var string $s44\n    // @var string $s45\n    // @var string $s46\n    // @var string $s47\n    // @var string $s48\n    // @var string $s49\n    // @var string $s50\n    // @var string $s51\n    // @var string $s52\n    // @var string $s53\n    // @var string $s54\n    // @var string $s55\n    // @var string $s56\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpkz6y009z.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var bool $result\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len_s0\n    // @var int $len_s1\n    // @var int $len_diff\n    // @var int $len_diff_s0\n    // @var int $len_diff_s1\n    // @var int $len_diff_s0_s1\n    // @var int $len_diff_s1_s0\n    // @var int $len_diff_s0_s1_diff\n    // @var int $len_diff_s1_s0_diff\n    // @var int $len_diff_s0_s1_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff_diff_diff_\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpz6y9m2md.php on line 58\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpb1qjrrep.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var bool $result\n    // @var string $s0_chars\n    // @var string $s1_chars\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len_chars\n    // @var int $len_diff\n    // @var int $len_diff_chars\n    // @var int $len_diff_chars_diff\n    // @var int $len_diff_chars_diff_chars\n    // @var int $len_diff_chars_diff_chars_diff\n    // @var int $len_diff_chars_diff_chars_diff_chars\n    // @var int $len_diff_chars_diff_chars_diff_chars_diff\n    // @var int $len_diff_chars_diff_chars_diff_chars_diff_chars\n    // @var int $len_diff_chars_diff_chars_diff_chars_diff_chars_diff\n    // @var int $len_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars\n    // @var int $len_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars_diff\n    // @var int $len_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars\n    // @var int $len_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars_diff\n    // @var int $len_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars\n    // @var int $len_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars_diff\n    // @var int $len_diff_ch\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpu1w2kt5z.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"|\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpzx690bdp.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var string $s2\n    // @var string $s3\n    // @var string $s4\n    // @var string $s5\n    // @var string $s6\n    // @var string $s7\n    // @var string $s8\n    // @var string $s9\n    // @var string $s10\n    // @var string $s11\n    // @var string $s12\n    // @var string $s13\n    // @var string $s14\n    // @var string $s15\n    // @var string $s16\n    // @var string $s17\n    // @var string $s18\n    // @var string $s19\n    // @var string $s20\n    // @var string $s21\n    // @var string $s22\n    // @var string $s23\n    // @var string $s24\n    // @var string $s25\n    // @var string $s26\n    // @var string $s27\n    // @var string $s28\n    // @var string $s29\n    // @var string $s30\n    // @var string $s31\n    // @var string $s32\n    // @var string $s33\n    // @var string $s34\n    // @var string $s35\n    // @var string $s36\n    // @var string $s37\n    // @var string $s38\n    // @var string $s39\n    // @var string $s40\n    // @var string $s41\n    // @var string $s42\n    // @var string $s43\n    // @var string $s44\n    // @var string $s45\n    // @var string $s46\n    // @var string $s47\n    // @var string $s48\n    // @var string $s49\n    // @var string $s50\n    // @var string $s51\n    // @var string $s52\n    // @var string $s53\n    // @var string $s54\n    // @var string $s55\n    // @var string $s56\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpkz6y009z.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\"@\", \"\", $s0);\n    $s1 = str_replace(\"@\", \"\", $s1);\n    $s0 = str_replace(\"#\", \"\", $s0);\n    $s1 = str_replace(\"#\", \"\", $s1);\n    $s0 = str_replace(\"$\", \"\", $s0);\n    $s1 = str_replace(\"$\", \"\", $s1);\n    $s0 = str_replace(\"%\", \"\", $s0);\n    $s1 = str_replace(\"%\", \"\", $s1);\n    $s0 = str_replace(\"^\", \"\", $s0);\n    $s1 = str_replace(\"^\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpigjs9am6.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpilz5lnq0.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpilz5lnq0.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\",\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpe4_8yzsm.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp2ozx1ef4.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpilz5lnq0.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmp1mera6dr.php on line 60\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpilz5lnq0.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\";\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpdrzybqt6.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var bool $result\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len_s0\n    // @var int $len_s1\n    // @var int $len_s0_i\n    // @var int $len_s1_i\n    // @var int $len_s0_j\n    // @var int $len_s1_j\n    // @var int $len_s0_i_j\n    // @var int $len_s1_i_j\n    // @var int $len_s0_i_j_k\n    // @var int $len_s1_i_j_k\n    // @var int $len_s0_i_j_k_l\n    // @var int $len_s1_i_j_k_l\n    // @var int $len_s0_i_j_k_l_m\n    // @var int $len_s1_i_j_k_l_m\n    // @var int $len_s0_i_j_k_l_m_n\n    // @var int $len_s1_i_j_k_l_m_n\n    // @var int $len_s0_i_j_k_l_m_n_o\n    // @var int $len_s1_i_j_k_l_m_n_o\n    // @var int $len_s0_i_j_k_l_m_n_o_p\n    // @var int $len_s1_i_j_k_l_m_n_o_p\n    // @var int $len_s0_i_j_k_l_m_n_o_p_q\n    // @var int $len_s1_i_j_k_l_m_n_o_p_q\n    // @var int $len_s0_i_j_k_l_m_n_o_p_q_r\n    // @var int\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpbslk4rsz.php on line 60\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"#\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp61srmkxz.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"#\", \"\", $s0);\n    $s1 = str_replace(\"#\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"+\", \"\", $s0);\n    $s1 = str_replace(\"+\", \"\", $s1);\n    $s0 = str_replace(\"=\", \"\", $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpi46xtnqd.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $s0 = str_replace(\"\", $s0, \"\");\n    $s1 = str_replace(\"\", $s1, \"\");\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpe4_09vou.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"+\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp4rzzc1o6.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp3i4ynb51.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\";\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpdrzybqt6.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var bool $result\n    // @var string $s0_chars\n    // @var string $s1_chars\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len_chars\n    // @var int $len_diff\n    // @var int $len_diff_chars\n    // @var int $len_diff_chars_diff\n    // @var int $len_diff_chars_diff_chars\n    // @var int $len_diff_chars_diff_chars_diff\n    // @var int $len_diff_chars_diff_chars_diff_chars\n    // @var int $len_diff_chars_diff_chars_diff_chars_diff\n    // @var int $len_diff_chars_diff_chars_diff_chars_diff_chars\n    // @var int $len_diff_chars_diff_chars_diff_chars_diff_chars_diff\n    // @var int $len_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars\n    // @var int $len_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars_diff\n    // @var int $len_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars\n    // @var int $len_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars_diff\n    // @var int $len_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars\n    // @var int $len_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars_diff_chars_diff\n    // @var int $len_diff_ch\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpu1w2kt5z.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\",\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpe4_8yzsm.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var bool $result\n    // @var string $c0\n    // @var string $c1\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len1\n    // @var int $len2\n    // @var int $len3\n    // @var int $len4\n    // @var int $len5\n    // @var int $len6\n    // @var int $len7\n    // @var int $len8\n    // @var int $len9\n    // @var int $len10\n    // @var int $len11\n    // @var int $len12\n    // @var int $len13\n    // @var int $len14\n    // @var int $len15\n    // @var int $len16\n    // @var int $len17\n    // @var int $len18\n    // @var int $len19\n    // @var int $len20\n    // @var int $len21\n    // @var int $len22\n    // @var int $len23\n    // @var int $len24\n    // @var int $len25\n    // @var int $len26\n    // @var int $len27\n    // @var int $len28\n    // @var int $len29\n    // @var int $len30\n    // @var int $len31\n    // @var int $len32\n    // @var int $len33\n    // @var int $len34\n    // @var int $len35\n    // @var int $len36\n    // @var int $len37\n    // @var int $len38\n    // @var int $len39\n    // @var int $len40\n    // @var int $len41\n    // @var int $len42\n    // @var int $len43\n    // @var int $len44\n    // @var int $len45\n    // @var int $len46\n    // @var int $len47\n    // @var int $len48\n    // @var int $len49\n    // @\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmp2skgwslf.php on line 88\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp9pgl0udr.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\"@\", \"\", $s0);\n    $s1 = str_replace(\"@\", \"\", $s1);\n    $s0 = str_replace(\"#\", \"\", $s0);\n    $s1 = str_replace(\"#\", \"\", $s1);\n    $s0 = str_replace(\"$\", \"\", $s0);\n    $s1 = str_replace(\"$\", \"\", $s1);\n    $s0 = str_replace(\"%\", \"\", $s0);\n    $s1 = str_replace(\"%\", \"\", $s1);\n    $s0 = str_replace(\"^\", \"\", $s0);\n    $s1 = str_replace(\"^\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpigjs9am6.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"#\", \"\", $s0);\n    $s1 = str_replace(\"#\", \"\", $s1);\n    $s0 = str_replace(\";\", \"\", $s0);\n    $s1 = str_replace(\";\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpogfgf_oh.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @codingStandardsIgnoreStart\n    if ($s0 === $s1) {\n        return true;\n    }\n    if ($s0 === null || $s1 === null) {\n        return false;\n    }\n    if ($s0.length !== $s1.length) {\n        return false;\n    }\n    for (var i = 0; i < $s0.length; i++) {\n        if ($s0.charAt(i) !== $s1.charAt(i)) {\n            return false;\n        }\n    }\n    return true;\n    // @codingStandardsIgnoreEnd\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpqpwli75y.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\"$\", \"\", $s0);\n    $s1 = str_replace(\"$\", \"\", $s1);\n    $s0 = str_replace(\"%\", \"\", $s0);\n    $s1 = str_replace(\"%\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"+\", \"\", $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpa28ss0k_.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpztfum6b1.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\",\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpkrs7xvbr.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpilz5lnq0.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\";\", \"\", $s0);\n    $s1 = str_replace(\";\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpx9_a7hjv.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var int $len\n    // @var int $i\n    // @var int $j\n    // @var int $k\n    // @var int $l\n    // @var int $m\n    // @var int $n\n    // @var int $o\n    // @var int $p\n    // @var int $q\n    // @var int $r\n    // @var int $s\n    // @var int $t\n    // @var int $u\n    // @var int $v\n    // @var int $w\n    // @var int $x\n    // @var int $y\n    // @var int $z\n    // @var int $c\n    // @var int $d\n    // @var int $e\n    // @var int $f\n    // @var int $g\n    // @var int $h\n    // @var int $i\n    // @var int $j\n    // @var int $k\n    // @var int $l\n    // @var int $m\n    // @var int $n\n    // @var int $o\n    // @var int $p\n    // @var int $q\n    // @var int $r\n    // @var int $s\n    // @var int $t\n    // @var int $u\n    // @var int $v\n    // @var int $w\n    // @var int $x\n    // @var int $y\n    // @var int $z\n    // @var int $c\n    // @var int $d\n    // @var int $e\n    // @var int $f\n    // @var int $g\n    // @var int $h\n    // @var int $i\n    // @var int $j\n    // @var int $k\n    // @var int $l\n    // @var int $m\n    // @var int $n\n    // @var int $o\n    // @var int $p\n    // @var int $q\n    // @var int $r\n    // @var int $s\n    // @var int $t\n    // @var int $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmplbzxhjmk.php on line 94\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\";\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpp2_hmfba.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"=\", \"\", $s0);\n    $s1 = str_replace(\"=\", \"\", $s1);\n    $s0 = str_replace(\"+\", \"\", $s0);\n    $s1 = str_replace(\"+\", \"\", $s1);\n    $s0 = str_replace(\"-\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpik7esjz8.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var bool $result\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len_s0\n    // @var int $len_s1\n    // @var int $len_diff\n    // @var int $len_diff_s0\n    // @var int $len_diff_s1\n    // @var int $len_diff_s0_s1\n    // @var int $len_diff_s1_s0\n    // @var int $len_diff_s0_s1_diff\n    // @var int $len_diff_s1_s0_diff\n    // @var int $len_diff_s0_s1_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff_diff_diff_\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpz6y9m2md.php on line 58\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"%\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp6kce35xp.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp2gf8vz7f.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmptu8axbe7.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @uses core/string.php\n    // @uses core/array.php\n    // @uses core/text.php\n    // @uses core/number.php\n    // @uses core/function.php\n    // @uses core/variable.php\n    // @uses core/user_error.php\n    // @uses core/fatal_error.php\n    // @uses core/parameter.php\n    // @uses core/template.php\n    // @uses core/template_parser.php\n    // @uses core/template_generator.php\n    // @uses core/template_engine.php\n    // @uses core/template_engine_base.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_abstract.php\n    // @uses core/template_engine_\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpqqgszctf.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var int $len\n    // @var int $i\n    // @var int $j\n    // @var int $c\n    // @var int $c0\n    // @var int $c1\n    // @var int $c2\n    // @var int $c3\n    // @var int $c4\n    // @var int $c5\n    // @var int $c6\n    // @var int $c7\n    // @var int $c8\n    // @var int $c9\n    // @var int $c10\n    // @var int $c11\n    // @var int $c12\n    // @var int $c13\n    // @var int $c14\n    // @var int $c15\n    // @var int $c16\n    // @var int $c17\n    // @var int $c18\n    // @var int $c19\n    // @var int $c20\n    // @var int $c21\n    // @var int $c22\n    // @var int $c23\n    // @var int $c24\n    // @var int $c25\n    // @var int $c26\n    // @var int $c27\n    // @var int $c28\n    // @var int $c29\n    // @var int $c30\n    // @var int $c31\n    // @var int $c32\n    // @var int $c33\n    // @var int $c34\n    // @var int $c35\n    // @var int $c36\n    // @var int $c37\n    // @var int $c38\n    // @var int $c39\n    // @var int $c40\n    // @var int $c41\n    // @var int $c42\n    // @var int $c43\n    // @var int $c44\n    // @var int $c45\n    // @var int $c46\n    // @var int $c47\n    // @var int $c48\n    // @var int $c49\n    // @var int $c50\n    // @\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpcfj6c5nl.php on line 88\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\",\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpe4_8yzsm.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\",\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpkrs7xvbr.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var int $i0\n    // @var int $i1\n    // @var int $i2\n    // @var int $i3\n    // @var int $i4\n    // @var int $i5\n    // @var int $i6\n    // @var int $i7\n    // @var int $i8\n    // @var int $i9\n    // @var int $i10\n    // @var int $i11\n    // @var int $i12\n    // @var int $i13\n    // @var int $i14\n    // @var int $i15\n    // @var int $i16\n    // @var int $i17\n    // @var int $i18\n    // @var int $i19\n    // @var int $i20\n    // @var int $i21\n    // @var int $i22\n    // @var int $i23\n    // @var int $i24\n    // @var int $i25\n    // @var int $i26\n    // @var int $i27\n    // @var int $i28\n    // @var int $i29\n    // @var int $i30\n    // @var int $i31\n    // @var int $i32\n    // @var int $i33\n    // @var int $i34\n    // @var int $i35\n    // @var int $i36\n    // @var int $i37\n    // @var int $i38\n    // @var int $i39\n    // @var int $i40\n    // @var int $i41\n    // @var int $i42\n    // @var int $i43\n    // @var int $i44\n    // @var int $i45\n    // @var int $i46\n    // @var int $i47\n    // @var int $i48\n    // @var int $i49\n    // @var int $i50\n    // @var int $i51\n    // @var int $i52\n    // @var int $i53\n    // @var int $i54\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpt9f1616i.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpb1qjrrep.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"+\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp_zjrlp9b.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"|\", \"\", $s0);\n    $s1 = str_replace(\"|\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\",\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmplr8gchy_.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", $s0, \" \");\n    $s1 = str_replace(\"\", $s1, \" \");\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmp0cx_h6ju.php on line 61\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"`\", \"\", $s0);\n    $s1 = str_replace(\"`\", \"\", $s1);\n    $s0 = str_replace(\"~\", \"\", $s0);\n    $s1 = str_replace(\"~\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\"@\", \"\", $s0);\n    $s1 = str_replace(\"@\", \"\", $s1);\n    $s0 = str_replace(\"#\", \"\", $s0);\n    $s1 = str_replace(\"#\", \"\", $s1);\n    $s0 = str_replace(\"$\", \"\", $s0);\n    $s1 = str_replace(\"$\", \"\", $s1);\n    $s0 = str_replace(\"%\", \"\", $s0);\n    $s1 = str_replace(\"%\", \"\", $s1);\n    $s0 = str_replace(\"^\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpvog3ifud.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len2\n    // @var int $len3\n    // @var int $len4\n    // @var int $len5\n    // @var int $len6\n    // @var int $len7\n    // @var int $len8\n    // @var int $len9\n    // @var int $len10\n    // @var int $len11\n    // @var int $len12\n    // @var int $len13\n    // @var int $len14\n    // @var int $len15\n    // @var int $len16\n    // @var int $len17\n    // @var int $len18\n    // @var int $len19\n    // @var int $len20\n    // @var int $len21\n    // @var int $len22\n    // @var int $len23\n    // @var int $len24\n    // @var int $len25\n    // @var int $len26\n    // @var int $len27\n    // @var int $len28\n    // @var int $len29\n    // @var int $len30\n    // @var int $len31\n    // @var int $len32\n    // @var int $len33\n    // @var int $len34\n    // @var int $len35\n    // @var int $len36\n    // @var int $len37\n    // @var int $len38\n    // @var int $len39\n    // @var int $len40\n    // @var int $len41\n    // @var int $len42\n    // @var int $len43\n    // @var int $len44\n    // @var int $len45\n    // @var int $len46\n    // @var int $len47\n    // @var int $len48\n    // @var int $len49\n    // @var int $len50\n    // @var int $len51\n    // @var int $len52\n    // @var int $len53\n    //\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmp6v6t7ubr.php on line 88\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @codingStandardsIgnoreStart\n    if ($s0 === $s1) {\n        return true;\n    }\n    if ($s0 === null || $s1 === null) {\n        return false;\n    }\n    if ($s0.length !== $s1.length) {\n        return false;\n    }\n    for (var i = 0; i < $s0.length; i++) {\n        if ($s0.charCodeAt(i) !== $s1.charCodeAt(i)) {\n            return false;\n        }\n    }\n    return true;\n    // @codingStandardsIgnoreEnd\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp7r23g4i_.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"+\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp08epeqvc.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"|\", \"\", $s0);\n    $s1 = str_replace(\"|\", \"\", $s1);\n    $s0 = str_replace(\";\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp4khk1t_2.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var bool $result\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len2\n    // @var int $len3\n    // @var int $len4\n    // @var int $len5\n    // @var int $len6\n    // @var int $len7\n    // @var int $len8\n    // @var int $len9\n    // @var int $len10\n    // @var int $len11\n    // @var int $len12\n    // @var int $len13\n    // @var int $len14\n    // @var int $len15\n    // @var int $len16\n    // @var int $len17\n    // @var int $len18\n    // @var int $len19\n    // @var int $len20\n    // @var int $len21\n    // @var int $len22\n    // @var int $len23\n    // @var int $len24\n    // @var int $len25\n    // @var int $len26\n    // @var int $len27\n    // @var int $len28\n    // @var int $len29\n    // @var int $len30\n    // @var int $len31\n    // @var int $len32\n    // @var int $len33\n    // @var int $len34\n    // @var int $len35\n    // @var int $len36\n    // @var int $len37\n    // @var int $len38\n    // @var int $len39\n    // @var int $len40\n    // @var int $len41\n    // @var int $len42\n    // @var int $len43\n    // @var int $len44\n    // @var int $len45\n    // @var int $len46\n    // @var int $len47\n    // @var int $len48\n    // @var int $len49\n    // @var int $len50\n    // @var int $len51\n    // @var int $len52\n    // @\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpnevbkgvk.php on line 88\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var bool $result\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len_s0\n    // @var int $len_s1\n    // @var int $len_diff\n    // @var int $len_diff_s0\n    // @var int $len_diff_s1\n    // @var int $len_diff_s0_s1\n    // @var int $len_diff_s1_s0\n    // @var int $len_diff_s0_s1_diff\n    // @var int $len_diff_s1_s0_diff\n    // @var int $len_diff_s0_s1_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff_diff_diff_\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpz6y9m2md.php on line 58\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"`\", \"\", $s0);\n    $s1 = str_replace(\"`\", \"\", $s1);\n    $s0 = str_replace(\"~\", \"\", $s0);\n    $s1 = str_replace(\"~\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\"@\", \"\", $s0);\n    $s1 = str_replace(\"@\", \"\", $s1);\n    $s0 = str_replace(\"#\", \"\", $s0);\n    $s1 = str_replace(\"#\", \"\", $s1);\n    $s0 = str_replace(\"$\", \"\", $s0);\n    $s1 = str_replace(\"$\", \"\", $s1);\n    $s0 = str_replace(\"%\", \"\", $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp81i_4jjx.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpctzq1p1m.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmptu8axbe7.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var int $len\n    // @var int $i\n    // @var int $j\n    // @var int $c\n    // @var int $c0\n    // @var int $c1\n    // @var int $c2\n    // @var int $c3\n    // @var int $c4\n    // @var int $c5\n    // @var int $c6\n    // @var int $c7\n    // @var int $c8\n    // @var int $c9\n    // @var int $c10\n    // @var int $c11\n    // @var int $c12\n    // @var int $c13\n    // @var int $c14\n    // @var int $c15\n    // @var int $c16\n    // @var int $c17\n    // @var int $c18\n    // @var int $c19\n    // @var int $c20\n    // @var int $c21\n    // @var int $c22\n    // @var int $c23\n    // @var int $c24\n    // @var int $c25\n    // @var int $c26\n    // @var int $c27\n    // @var int $c28\n    // @var int $c29\n    // @var int $c30\n    // @var int $c31\n    // @var int $c32\n    // @var int $c33\n    // @var int $c34\n    // @var int $c35\n    // @var int $c36\n    // @var int $c37\n    // @var int $c38\n    // @var int $c39\n    // @var int $c40\n    // @var int $c41\n    // @var int $c42\n    // @var int $c43\n    // @var int $c44\n    // @var int $c45\n    // @var int $c46\n    // @var int $c47\n    // @var int $c48\n    // @var int $c49\n    // @var int $c50\n    // @\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpcfj6c5nl.php on line 88\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"+\", \"\", $s0);\n    $s1 = str_replace(\"+\", \"\", $s1);\n    $s0 = str_replace(\"=\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpczf4xbgd.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp9pgl0udr.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var string $s2\n    // @var string $s3\n    // @var string $s4\n    // @var string $s5\n    // @var string $s6\n    // @var string $s7\n    // @var string $s8\n    // @var string $s9\n    // @var string $s10\n    // @var string $s11\n    // @var string $s12\n    // @var string $s13\n    // @var string $s14\n    // @var string $s15\n    // @var string $s16\n    // @var string $s17\n    // @var string $s18\n    // @var string $s19\n    // @var string $s20\n    // @var string $s21\n    // @var string $s22\n    // @var string $s23\n    // @var string $s24\n    // @var string $s25\n    // @var string $s26\n    // @var string $s27\n    // @var string $s28\n    // @var string $s29\n    // @var string $s30\n    // @var string $s31\n    // @var string $s32\n    // @var string $s33\n    // @var string $s34\n    // @var string $s35\n    // @var string $s36\n    // @var string $s37\n    // @var string $s38\n    // @var string $s39\n    // @var string $s40\n    // @var string $s41\n    // @var string $s42\n    // @var string $s43\n    // @var string $s44\n    // @var string $s45\n    // @var string $s46\n    // @var string $s47\n    // @var string $s48\n    // @var string $s49\n    // @var string $s50\n    // @var string $s51\n    // @var string $s52\n    // @var string $s53\n    // @var string $s54\n    // @var string $s55\n    // @var string $s56\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpkz6y009z.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var bool $result\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len_s0\n    // @var int $len_s1\n    // @var int $len_s0_i\n    // @var int $len_s1_i\n    // @var int $len_s0_j\n    // @var int $len_s1_j\n    // @var int $len_s0_i_j\n    // @var int $len_s1_i_j\n    // @var int $len_s0_i_j_k\n    // @var int $len_s1_i_j_k\n    // @var int $len_s0_i_j_k_l\n    // @var int $len_s1_i_j_k_l\n    // @var int $len_s0_i_j_k_l_m\n    // @var int $len_s1_i_j_k_l_m\n    // @var int $len_s0_i_j_k_l_m_n\n    // @var int $len_s1_i_j_k_l_m_n\n    // @var int $len_s0_i_j_k_l_m_n_o\n    // @var int $len_s1_i_j_k_l_m_n_o\n    // @var int $len_s0_i_j_k_l_m_n_o_p\n    // @var int $len_s1_i_j_k_l_m_n_o_p\n    // @var int $len_s0_i_j_k_l_m_n_o_p_q\n    // @var int $len_s1_i_j_k_l_m_n_o_p_q\n    // @var int $len_s0_i_j_k_l_m_n_o_p_q_r\n    // @var int\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpbslk4rsz.php on line 60\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", $s0, \" \");\n    $s1 = str_replace(\"\", $s1, \" \");\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmp0cx_h6ju.php on line 61\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @codingStandardsIgnoreStart\n    if ($s0 === $s1) {\n        return true;\n    }\n    if ($s0 === null || $s1 === null) {\n        return false;\n    }\n    if ($s0.length !== $s1.length) {\n        return false;\n    }\n    for (var i = 0; i < $s0.length; i++) {\n        if ($s0[i] !== $s1[i]) {\n            return false;\n        }\n    }\n    return true;\n    // @codingStandardsIgnoreEnd\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpqfqrtug8.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"|\", \"\", $s0);\n    $s1 = str_replace(\"|\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"#\", \"\", $s0);\n    $s1 = str_replace(\"#\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpon1ijwzb.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpilz5lnq0.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpilz5lnq0.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp15ps8296.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"|\", \"\", $s0);\n    $s1 = str_replace(\"|\", \"\", $s1);\n    $s0 = str_replace(\"+\", \"\", $s0);\n    $s1 = str_replace(\"+\", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpyb80nsoq.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"|\", \"\", $s0);\n    $s1 = str_replace(\"|\", \"\", $s1);\n    $s0 = str_replace(\";\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpuflgfzw4.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @codingStandardsIgnoreStart\n    if ($s0 === $s1) {\n        return true;\n    }\n    if ($s0 === null || $s1 === null) {\n        return false;\n    }\n    if ($s0.length !== $s1.length) {\n        return false;\n    }\n    for (var i = 0; i < $s0.length; i++) {\n        if ($s0.charCodeAt(i) !== $s1.charCodeAt(i)) {\n            return false;\n        }\n    }\n    return true;\n    // @codingStandardsIgnoreEnd\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp7r23g4i_.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"<\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpemf4c8nz.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"+\", \"\", $s0);\n    $s1 = str_replace(\"+\", \"\", $s1);\n    $s0 = str_replace(\"=\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp41fg_bmv.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmp_k70gh_8.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", $s0, \" \");\n    $s1 = str_replace(\"\", $s1, \" \");\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmp0cx_h6ju.php on line 61\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var bool $result\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len_s0\n    // @var int $len_s1\n    // @var int $len_diff\n    // @var int $len_diff_s0\n    // @var int $len_diff_s1\n    // @var int $len_diff_diff\n    // @var int $len_diff_diff_s0\n    // @var int $len_diff_diff_s1\n    // @var int $len_diff_diff_diff\n    // @var int $len_diff_diff_diff_s0\n    // @var int $len_diff_diff_diff_s1\n    // @var int $len_diff_diff_diff_diff\n    // @var int $len_diff_diff_diff_diff_s0\n    // @var int $len_diff_diff_diff_diff_s1\n    // @var int $len_diff_diff_diff_diff_diff\n    // @var int $len_diff_diff_diff_diff_diff_s0\n    // @var int $len_diff_diff_diff_diff_diff_s1\n    // @var int $len_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_diff_diff_diff_diff_diff_s0\n    // @var int $len_diff_diff_diff_diff_diff_diff_s1\n    // @var int $len_diff_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_diff_diff_diff_diff_diff_diff_s0\n    // @var int $len_diff_diff_diff_diff_diff_diff_diff_s1\n    // @var int $len_diff_diff_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_diff_diff_diff_diff_diff_diff_diff_s0\n    // @var int $len_diff_diff\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpdgn0t3ok.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"|\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpf3bg657p.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpwaxses53.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", $s0, '.');\n    $s1 = str_replace(\"\", $s1, '.');\n    $s0 = str_replace(\"\", $s0, '.');\n    $s1 = str_replace(\"\", $s1, '.');\n    $s0 = str_replace(\"\", $s0, '.');\n    $s1 = str_replace(\"\", $s1, '.');\n    $s0 = str_replace(\"\", $s0, '.');\n    $s1 = str_replace(\"\", $s1, '.');\n    $s0 = str_replace(\"\", $s0, '.');\n    $s1 = str_replace(\"\", $s1, '.');\n    $s0 = str_replace(\"\", $s0, '.');\n    $s1 = str_replace(\"\", $s1, '.');\n    $s0 = str_replace(\"\", $s0, '.');\n    $s1 = str_replace(\"\", $s1, '.');\n    $s0 = str_replace(\"\", $s0, '.');\n    $s1 = str_replace(\"\", $s1, '.');\n    $s0 = str_replace(\"\", $s0, '.');\n    $s1 = str_replace(\"\", $s1, '.');\n    $s0 = str_replace(\"\", $s0, '.');\n    $s1 = str_replace(\"\", $s1, '.');\n    $s0 = str_replace(\"\", $s0, '.');\n    $s1 = str_replace(\"\", $s1, '.');\n    $s0 = str_replace(\"\", $s0, '.');\n    $s1 = str_replace(\"\", $s1, '.');\n    $s0 = str_replace(\"\", $s0, '.');\n    $s1 = str_replace(\"\", $s1, '.');\n    $s0 = str_replace(\"\", $s0, '.');\n    $s1 = str_replace(\"\", $s1, '.');\n    $s0 = str_replace\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpb889cu8e.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp2ozx1ef4.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"+\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpzlq8z9sn.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpilz5lnq0.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"@\", \"\", $s0);\n    $s1 = str_replace(\"@\", \"\", $s1);\n    $s0 = str_replace(\"#\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpjv3zp4or.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"`\", \"\", $s0);\n    $s1 = str_replace(\"`\", \"\", $s1);\n    $s0 = str_replace(\"~\", \"\", $s0);\n    $s1 = str_replace(\"~\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\"@\", \"\", $s0);\n    $s1 = str_replace(\"@\", \"\", $s1);\n    $s0 = str_replace(\"#\", \"\", $s0);\n    $s1 = str_replace(\"#\", \"\", $s1);\n    $s0 = str_replace(\"$\", \"\", $s0);\n    $s1 = str_replace(\"$\", \"\", $s1);\n    $s0 = str_replace(\"%\", \"\", $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp81i_4jjx.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @codingStandardsIgnoreStart\n    if ($s0 === $s1) {\n        return true;\n    }\n    if ($s0 === null || $s1 === null) {\n        return false;\n    }\n    if ($s0.length !== $s1.length) {\n        return false;\n    }\n    for (var i = 0; i < $s0.length; i++) {\n        if ($s0.charAt(i) !== $s1.charAt(i)) {\n            return false;\n        }\n    }\n    return true;\n    // @codingStandardsIgnoreEnd\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpqpwli75y.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var bool $result\n    // @var string $s0_chars\n    // @var string $s1_chars\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len_chars\n    // @var int $len_common\n    // @var int $len_common_chars\n    // @var int $len_common_chars_count\n    // @var int $len_common_chars_count_chars\n    // @var int $len_common_chars_count_chars_count\n    // @var int $len_common_chars_count_chars_count_chars\n    // @var int $len_common_chars_count_chars_count_chars_count\n    // @var int $len_common_chars_count_chars_count_chars_count_chars\n    // @var int $len_common_chars_count_chars_count_chars_count_chars_count\n    // @var int $len_common_chars_count_chars_count_chars_count_chars_count_chars\n    // @var int $len_common_chars_count_chars_count_chars_count_chars_count_chars_count\n    // @var int $len_common_chars_count_chars_count_chars_count_chars_count_chars_count_chars\n    // @var int $len_common_chars_count_chars_count_chars_count_chars_count_chars_count_chars_count\n    // @var int $len_common_chars_count_chars_count_chars_count_chars_count_chars_count_chars_count_chars\n    // @var int $len_common_chars_count_chars_count_chars_count_chars_count_chars_count_chars_count_chars_count\n    // @var int $len_common_ch\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpsetv4nd3.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpilz5lnq0.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var string $s0_chars\n    // @var string $s1_chars\n    // @var array $s0_chars_array\n    // @var array $s1_chars_array\n    // @var int $i\n    // @var int $j\n    // @var int $k\n    // @var int $l\n    // @var int $m\n    // @var int $n\n    // @var int $o\n    // @var int $p\n    // @var int $q\n    // @var int $r\n    // @var int $s\n    // @var int $t\n    // @var int $u\n    // @var int $v\n    // @var int $w\n    // @var int $x\n    // @var int $y\n    // @var int $z\n    // @var int $chars_count\n    // @var int $s0_chars_count\n    // @var int $s1_chars_count\n    // @var int $s0_chars_count_max\n    // @var int $s1_chars_count_max\n    // @var int $s0_chars_count_min\n    // @var int $s1_chars_count_min\n    // @var int $s0_chars_count_max_diff\n    // @var int $s1_chars_count_max_diff\n    // @var int $s0_chars_count_min_diff\n    // @var int $s1_chars_count_min_diff\n    // @var int $s0_chars_count_max_diff_ratio\n    // @var int $s1_chars_count_max_diff_ratio\n    // @var int $s0_chars_count_min_diff_ratio\n    // @var int $s1_chars_count_min_diff_ratio\n    // @var int $s0_chars_count_max_diff_ratio_diff\n    // @var int $s1_chars_count_max_\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmp60vdutqt.php on line 71\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"|\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpzx690bdp.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @codingStandardsIgnoreStart\n    if ($s0 === $s1) {\n        return true;\n    }\n    if ($s0 === null || $s1 === null) {\n        return false;\n    }\n    if ($s0.length !== $s1.length) {\n        return false;\n    }\n    for (var i = 0; i < $s0.length; i++) {\n        if ($s0.charCodeAt(i) !== $s1.charCodeAt(i)) {\n            return false;\n        }\n    }\n    return true;\n    // @codingStandardsIgnoreEnd\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp7r23g4i_.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"|\", \"\", $s0);\n    $s1 = str_replace(\"|\", \"\", $s1);\n    $s0 = str_replace(\";\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpduytgbum.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @codingStandardsIgnoreStart\n    if ($s0 === $s1) {\n        return true;\n    }\n    if ($s0 === null || $s1 === null) {\n        return false;\n    }\n    if ($s0.length !== $s1.length) {\n        return false;\n    }\n    for (var i = 0; i < $s0.length; i++) {\n        if ($s0.charAt(i) !== $s1.charAt(i)) {\n            return false;\n        }\n    }\n    return true;\n    // @codingStandardsIgnoreEnd\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpi3g2q4q7.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"@\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp4qd3ww72.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"|\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpzx690bdp.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"<\", \"\", $s0);\n    $s1 = str_replace(\"<\", \"\", $s1);\n    $s0 = str_replace(\">\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp71rr1qp3.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var string $s2\n    // @var string $s3\n    // @var string $s4\n    // @var string $s5\n    // @var string $s6\n    // @var string $s7\n    // @var string $s8\n    // @var string $s9\n    // @var string $s10\n    // @var string $s11\n    // @var string $s12\n    // @var string $s13\n    // @var string $s14\n    // @var string $s15\n    // @var string $s16\n    // @var string $s17\n    // @var string $s18\n    // @var string $s19\n    // @var string $s20\n    // @var string $s21\n    // @var string $s22\n    // @var string $s23\n    // @var string $s24\n    // @var string $s25\n    // @var string $s26\n    // @var string $s27\n    // @var string $s28\n    // @var string $s29\n    // @var string $s30\n    // @var string $s31\n    // @var string $s32\n    // @var string $s33\n    // @var string $s34\n    // @var string $s35\n    // @var string $s36\n    // @var string $s37\n    // @var string $s38\n    // @var string $s39\n    // @var string $s40\n    // @var string $s41\n    // @var string $s42\n    // @var string $s43\n    // @var string $s44\n    // @var string $s45\n    // @var string $s46\n    // @var string $s47\n    // @var string $s48\n    // @var string $s49\n    // @var string $s50\n    // @var string $s51\n    // @var string $s52\n    // @var string $s53\n    // @var string $s54\n    // @var string $s55\n    // @var string $s56\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpkz6y009z.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var bool $result\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len1\n    // @var int $len2\n    // @var int $len3\n    // @var int $len4\n    // @var int $len5\n    // @var int $len6\n    // @var int $len7\n    // @var int $len8\n    // @var int $len9\n    // @var int $len10\n    // @var int $len11\n    // @var int $len12\n    // @var int $len13\n    // @var int $len14\n    // @var int $len15\n    // @var int $len16\n    // @var int $len17\n    // @var int $len18\n    // @var int $len19\n    // @var int $len20\n    // @var int $len21\n    // @var int $len22\n    // @var int $len23\n    // @var int $len24\n    // @var int $len25\n    // @var int $len26\n    // @var int $len27\n    // @var int $len28\n    // @var int $len29\n    // @var int $len30\n    // @var int $len31\n    // @var int $len32\n    // @var int $len33\n    // @var int $len34\n    // @var int $len35\n    // @var int $len36\n    // @var int $len37\n    // @var int $len38\n    // @var int $len39\n    // @var int $len40\n    // @var int $len41\n    // @var int $len42\n    // @var int $len43\n    // @var int $len44\n    // @var int $len45\n    // @var int $len46\n    // @var int $len47\n    // @var int $len48\n    // @var int $len49\n    // @var int $len50\n    // @var int $len51\n    // @\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpixk_hwx1.php on line 88\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var int $i0\n    // @var int $i1\n    // @var int $i2\n    // @var int $i3\n    // @var int $i4\n    // @var int $i5\n    // @var int $i6\n    // @var int $i7\n    // @var int $i8\n    // @var int $i9\n    // @var int $i10\n    // @var int $i11\n    // @var int $i12\n    // @var int $i13\n    // @var int $i14\n    // @var int $i15\n    // @var int $i16\n    // @var int $i17\n    // @var int $i18\n    // @var int $i19\n    // @var int $i20\n    // @var int $i21\n    // @var int $i22\n    // @var int $i23\n    // @var int $i24\n    // @var int $i25\n    // @var int $i26\n    // @var int $i27\n    // @var int $i28\n    // @var int $i29\n    // @var int $i30\n    // @var int $i31\n    // @var int $i32\n    // @var int $i33\n    // @var int $i34\n    // @var int $i35\n    // @var int $i36\n    // @var int $i37\n    // @var int $i38\n    // @var int $i39\n    // @var int $i40\n    // @var int $i41\n    // @var int $i42\n    // @var int $i43\n    // @var int $i44\n    // @var int $i45\n    // @var int $i46\n    // @var int $i47\n    // @var int $i48\n    // @var int $i49\n    // @var int $i50\n    // @var int $i51\n    // @var int $i52\n    // @var int $i53\n    // @var int $i54\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpt9f1616i.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmp_k70gh_8.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var int $i0\n    // @var int $i1\n    // @var int $i2\n    // @var int $i3\n    // @var int $i4\n    // @var int $i5\n    // @var int $i6\n    // @var int $i7\n    // @var int $i8\n    // @var int $i9\n    // @var int $i10\n    // @var int $i11\n    // @var int $i12\n    // @var int $i13\n    // @var int $i14\n    // @var int $i15\n    // @var int $i16\n    // @var int $i17\n    // @var int $i18\n    // @var int $i19\n    // @var int $i20\n    // @var int $i21\n    // @var int $i22\n    // @var int $i23\n    // @var int $i24\n    // @var int $i25\n    // @var int $i26\n    // @var int $i27\n    // @var int $i28\n    // @var int $i29\n    // @var int $i30\n    // @var int $i31\n    // @var int $i32\n    // @var int $i33\n    // @var int $i34\n    // @var int $i35\n    // @var int $i36\n    // @var int $i37\n    // @var int $i38\n    // @var int $i39\n    // @var int $i40\n    // @var int $i41\n    // @var int $i42\n    // @var int $i43\n    // @var int $i44\n    // @var int $i45\n    // @var int $i46\n    // @var int $i47\n    // @var int $i48\n    // @var int $i49\n    // @var int $i50\n    // @var int $i51\n    // @var int $i52\n    // @var int $i53\n    // @var int $i54\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpt9f1616i.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpilz5lnq0.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @codingStandardsIgnoreStart\n    if ($s0 === $s1) {\n        return true;\n    }\n    if ($s0 === null || $s1 === null) {\n        return false;\n    }\n    if ($s0.length !== $s1.length) {\n        return false;\n    }\n    for (var i = 0; i < $s0.length; i++) {\n        if ($s0[i] !== $s1[i]) {\n            return false;\n        }\n    }\n    return true;\n    // @codingStandardsIgnoreEnd\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpwhvbqls0.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpvyzi28hl.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpilz5lnq0.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @uses core/text.same_chars\n    return text.same_chars($s0, $s1);\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"text\" in /tmp/tmpaisr9ace.php:17\nStack trace:\n#0 /tmp/tmpaisr9ace.php(21): same_chars('eabcdzzzz', 'dddzzzzzzzddedd...')\n#1 /tmp/tmpaisr9ace.php(25): candidate('eabcdzzzz', 'dddzzzzzzzddedd...')\n#2 /tmp/tmpaisr9ace.php(34): test()\n#3 {main}\n  thrown in /tmp/tmpaisr9ace.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\";\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpt45mhmqt.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"|\", \"\", $s0);\n    $s1 = str_replace(\"|\", \"\", $s1);\n    $s0 = str_replace(\"+\", \"\", $s0);\n    $s1 = str_replace(\"+\", \"\", $s1);\n    $s0 = str_replace(\"=\", \"\", $s0);\n    $s1 = str_replace(\"=\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpyl7bnwxu.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"|\", \"\", $s0);\n    $s1 = str_replace(\"|\", \"\", $s1);\n    $s0 = str_replace(\";\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpix2osi_l.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", $s0, \" \");\n    $s1 = str_replace(\"\", $s1, \" \");\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmp0cx_h6ju.php on line 61\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @codingStandardsIgnoreStart\n    if ($s0 === $s1) {\n        return true;\n    }\n    if ($s0 === null || $s1 === null) {\n        return false;\n    }\n    if ($s0.length !== $s1.length) {\n        return false;\n    }\n    for (var i = 0; i < $s0.length; i++) {\n        if ($s0.charAt(i) !== $s1.charAt(i)) {\n            return false;\n        }\n    }\n    return true;\n    // @codingStandardsIgnoreEnd\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpqpwli75y.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"#\", \"\", $s0);\n    $s1 = str_replace(\"#\", \"\", $s1);\n    $s0 = str_replace(\"@\", \"\", $s0);\n    $s1 = str_replace(\"@\", \"\", $s1);\n    $s0 = str_replace(\"$\", \"\", $s0);\n    $s1 = str_replace(\"$\", \"\", $s1);\n    $s0 = str_replace(\"%\", \"\", $s0);\n    $s1 = str_replace(\"%\", \"\", $s1);\n    $s0 = str_replace(\"^\", \"\", $s0);\n    $s1 = str_replace(\"^\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"*\", \"\", $s0);\n    $s1 = str_replace(\"*\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmp_zedko4k.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var bool $result\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len2\n    // @var int $len3\n    // @var int $len4\n    // @var int $len5\n    // @var int $len6\n    // @var int $len7\n    // @var int $len8\n    // @var int $len9\n    // @var int $len10\n    // @var int $len11\n    // @var int $len12\n    // @var int $len13\n    // @var int $len14\n    // @var int $len15\n    // @var int $len16\n    // @var int $len17\n    // @var int $len18\n    // @var int $len19\n    // @var int $len20\n    // @var int $len21\n    // @var int $len22\n    // @var int $len23\n    // @var int $len24\n    // @var int $len25\n    // @var int $len26\n    // @var int $len27\n    // @var int $len28\n    // @var int $len29\n    // @var int $len30\n    // @var int $len31\n    // @var int $len32\n    // @var int $len33\n    // @var int $len34\n    // @var int $len35\n    // @var int $len36\n    // @var int $len37\n    // @var int $len38\n    // @var int $len39\n    // @var int $len40\n    // @var int $len41\n    // @var int $len42\n    // @var int $len43\n    // @var int $len44\n    // @var int $len45\n    // @var int $len46\n    // @var int $len47\n    // @var int $len48\n    // @var int $len49\n    // @var int $len50\n    // @var int $len51\n    // @var int $len52\n    // @\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpnevbkgvk.php on line 88\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"$\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpr8cn7f7s.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @codingStandardsIgnoreStart\n    if ($s0 === $s1) {\n        return true;\n    }\n    if ($s0.length !== $s1.length) {\n        return false;\n    }\n    for (var i = 0; i < $s0.length; i++) {\n        if ($s0[i] !== $s1[i]) {\n            return false;\n        }\n    }\n    return true;\n    // @codingStandardsIgnoreEnd\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpfhuyqpph.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var string $s0_lower\n    // @var string $s1_lower\n    // @var string $s0_upper\n    // @var string $s1_upper\n    // @var string $s0_upper_lower\n    // @var string $s1_upper_lower\n    // @var string $s0_lower_upper\n    // @var string $s1_lower_upper\n    // @var string $s0_lower_upper_lower\n    // @var string $s1_lower_upper_lower\n    // @var string $s0_lower_upper_lower_upper\n    // @var string $s1_lower_upper_lower_upper\n    // @var string $s0_lower_upper_lower_upper_lower\n    // @var string $s1_lower_upper_lower_upper_lower\n    // @var string $s0_lower_upper_lower_upper_lower_upper\n    // @var string $s1_lower_upper_lower_upper_lower_upper\n    // @var string $s0_lower_upper_lower_upper_lower_upper_lower\n    // @var string $s1_lower_upper_lower_upper_lower_upper_lower\n    // @var string $s0_lower_upper_lower_upper_lower_upper_lower_upper\n    // @var string $s1_lower_upper_lower_upper_lower_upper_lower_upper\n    // @var string $s0_lower_upper_lower_upper_lower_upper_lower_upper_lower\n    // @var string $s1_lower_upper_lower_upper_lower_upper_lower_upper_lower\n    // @var string $s0_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper\n    // @var string $s1_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper\n    // @var string $s0_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower\n    // @var string $s1_lower_upper_lower_\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpksbuf1w4.php on line 58\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @codingStandardsIgnoreStart\n    if ($s0 === $s1) {\n        return true;\n    }\n    if ($s0 === null || $s1 === null) {\n        return false;\n    }\n    if ($s0.length !== $s1.length) {\n        return false;\n    }\n    for (var i = 0; i < $s0.length; i++) {\n        if ($s0[i] !== $s1[i]) {\n            return false;\n        }\n    }\n    return true;\n    // @codingStandardsIgnoreEnd\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpqfqrtug8.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"|\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpvl_lbgx4.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"#\", \"\", $s0);\n    $s1 = str_replace(\"#\", \"\", $s1);\n    $s0 = str_replace(\"@\", \"\", $s0);\n    $s1 = str_replace(\"@\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpr9zvqsxw.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpilz5lnq0.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpd6pmytep.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpctzq1p1m.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    // @var string $s0\n    // @var string $s1\n    // @var bool $result\n    // @var int $i\n    // @var int $j\n    // @var int $len\n    // @var int $len_s0\n    // @var int $len_s1\n    // @var int $len_diff\n    // @var int $len_diff_s0\n    // @var int $len_diff_s1\n    // @var int $len_diff_s0_s1\n    // @var int $len_diff_s1_s0\n    // @var int $len_diff_s0_s1_diff\n    // @var int $len_diff_s1_s0_diff\n    // @var int $len_diff_s0_s1_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_s1_s0_diff_diff_diff_diff_diff_diff_diff\n    // @var int $len_diff_s0_s1_diff_diff_diff_diff_diff_diff_diff_diff\n    // @var\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293439,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmptxhm7sn7.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $s0 = str_replace(\"\", \"\", $s0);\n    $s1 = str_replace(\"\", \"\", $s1);\n    $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpilz5lnq0.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\"\\\"\", \"\", $s0);\n    $s1 = str_replace(\"\\\"\", \"\", $s1);\n    $s0 = str_replace(\"?\", \"\", $s0);\n    $s1 = str_replace(\"?\", \"\", $s1);\n    $s0 = str_replace(\"!\", \"\", $s0);\n    $s1 = str_replace(\"!\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp9pgl0udr.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n// >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\", \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_replace(\"'\", \"\", $s0);\n    $s1 = str_replace(\"'\", \"\", $s1);\n    $s0 = str_replace(\" \", \"\", $s0);\n    $s1 = str_replace(\" \", \"\", $s1);\n    $s0 = str_replace(\"-\", \"\", $s0);\n    $s1 = str_replace(\"-\", \"\", $s1);\n    $s0 = str_replace(\"_\", \"\", $s0);\n    $s1 = str_replace(\"_\", \"\", $s1);\n    $s0 = str_replace(\"/\", \"\", $s0);\n    $s1 = str_replace(\"/\", \"\", $s1);\n    $s0 = str_replace(\"\\\\\", \"\", $s0);\n    $s1 = str_replace(\"\\\\\", \"\", $s1);\n    $s0 = str_replace(\".\", \"\", $s0);\n    $s1 = str_replace(\".\", \"\", $s1);\n    $s0 = str_replace(\"(\", \"\", $s0);\n    $s1 = str_replace(\"(\", \"\", $s1);\n    $s0 = str_replace(\")\", \"\", $s0);\n    $s1 = str_replace(\")\", \"\", $s1);\n    $s0 = str_replace(\"[\", \"\", $s0);\n    $s1 = str_replace(\"[\", \"\", $s1);\n    $s0 = str_replace(\"]\", \"\", $s0);\n    $s1 = str_replace(\"]\", \"\", $s1);\n    $s0 = str_replace(\"{\", \"\", $s0);\n    $s1 = str_replace(\"{\", \"\", $s1);\n    $s0 = str_replace(\"}\", \"\", $s0);\n    $s1 = str_replace(\"}\", \"\", $s1);\n    $s0 = str_replace(\"&\", \"\", $s0);\n    $s1 = str_replace(\"&\", \"\", $s1);\n    $s0 = str_replace(\"|\", \"\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293438,
      "stdout": "\nParse error: syntax error, unexpected identifier \"eabcdzzzz\", expecting \")\" in /tmp/tmpf3bg657p.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
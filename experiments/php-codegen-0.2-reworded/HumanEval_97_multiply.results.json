{
  "name": "HumanEval_97_multiply",
  "language": "php",
  "prompt": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n",
  "tests": "function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $result = 0;\n    for ($i = 0; $i < $a; $i++) {\n        $result += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmph_1hj0c4.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmph_1hj0c4.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_1hj0c4.php:29\nStack trace:\n#0 /tmp/tmph_1hj0c4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph_1hj0c4.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    \n    var result = 0;\n    \n    while ($a > 0 || $b > 0) {\n        if ($a > 0) {\n            result += $a % 10;\n            $a /= 10;\n        }\n        \n        if ($b > 0) {\n            result += $b % 10;\n            $b /= 10;\n        }\n    }\n    \n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    while($a > 0 || $b > 0) {\n        $c += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 1.48 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 4.12 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 0.148 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 0.014799999999999999 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 0.00148 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 0.000148 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 1.4799999999999999E-5 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implic",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10,\n        b = $b % 10,\n        c = a * b;\n    return c % 10;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpylzrtzhh.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    while ($a > 0 || $b > 0) {\n        $c += ($a % 10) * ($b % 10);\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmp3dfpqmmv.php on line 17\n\nDeprecated: Implicit conversion from float 41.2 to int loses precision in /tmp/tmp3dfpqmmv.php on line 17\n\nDeprecated: Implicit conversion from float 1.48 to int loses precision in /tmp/tmp3dfpqmmv.php on line 17\n\nDeprecated: Implicit conversion from float 4.12 to int loses precision in /tmp/tmp3dfpqmmv.php on line 17\n\nDeprecated: Implicit conversion from float 0.148 to int loses precision in /tmp/tmp3dfpqmmv.php on line 17\n\nDeprecated: Implicit conversion from float 0.41200000000000003 to int loses precision in /tmp/tmp3dfpqmmv.php on line 17\n\nDeprecated: Implicit conversion from float 0.014799999999999999 to int loses precision in /tmp/tmp3dfpqmmv.php on line 17\n\nDeprecated: Implicit conversion from float 0.0412 to int loses precision in /tmp/tmp3dfpqmmv.php on line 17\n\nDeprecated: Implicit conversion from float 0.00148 to int loses precision in /tmp/tmp3dfpqmmv.php on line 17\n\nDeprecated: Implicit conversion from float 0.00412 to int loses precision in /tmp/tmp3dfpqmmv.php on line 17\n\nDeprecated: Implicit conversion from float 0.000148 to int loses precision in /tmp/tmp3dfpqmmv.php on line 17\n\nDeprecated: Implicit conversion from float 0.00041200000000000004 to int loses precision in /tmp/tmp3dfpqmmv.php on line 17\n\nDeprecated: Implicit conversion from float 1.4799999999999999E-5 to int loses precision in /tmp/tmp3dfpqmmv.php on line 17\n\nDeprecated: Implicit conversion from float 4.1200000000000005E-5 to int loses precision in /tmp/tmp3dfpqmmv.php on line 17\n\nDeprecated: Implicit conversion from float 1.4799999999999998E-6 to int loses precision in /tmp/tmp3dfpqmmv.php on line 17\n\nDeprecated: Implicit conversion from float 4.12E-6 to int loses precision in /tmp/tmp3dfpqmmv.php on line 17\n\nDeprecated: Implicit conversion from float 1.4799999999999998E-7 to int loses precision in /tmp/tmp3dfpqmmv.php on line 17\n\nDeprecated: Implicit conversion from float 4.1200000000000004E-7 to int loses precision in /tmp",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a;\n    var b = $b;\n    var result = 0;\n    var i = 0;\n    while (a > 0 || b > 0) {\n        if (a > 0) {\n            result += a % 10;\n            a /= 10;\n        }\n        if (b > 0) {\n            result += b % 10;\n            b /= 10;\n        }\n        i++;\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpz11be0_1.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a;\n    var b = $b;\n    var result = 0;\n    var a_digits = a.toString().split(\"\");\n    var b_digits = b.toString().split(\"\");\n    for (var i = 0; i < a_digits.length; i++) {\n        result += parseInt(a_digits[i]) * parseInt(b_digits[i]);\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpdo8z7z96.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    var $result = 0;\n    while ($a > 0 || $b > 0) {\n        if ($a > 0) {\n            $result += $a % 10;\n            $a /= 10;\n        }\n        if ($b > 0) {\n            $result += $b % 10;\n            $b /= 10;\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyl8j6yr8.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10;\n    var b = $b % 10;\n    var c = a * b;\n    return c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpcrpzb2st.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    for($i = 0; $i < $a; $i++) {\n        $c += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmpdesm5_5t.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmpdesm5_5t.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdesm5_5t.php:29\nStack trace:\n#0 /tmp/tmpdesm5_5t.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdesm5_5t.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    var result = 0;\n    while ($a > 0 || $b > 0) {\n        result += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpz3j2gf4b.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    for ($i = 0; $i < $a; $i++) {\n        $c += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmp0jswkep7.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmp0jswkep7.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0jswkep7.php:29\nStack trace:\n#0 /tmp/tmp0jswkep7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0jswkep7.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a;\n    var b = $b;\n    var result = 0;\n    var a_unit = a % 10;\n    var b_unit = b % 10;\n    if (a_unit == 0 || b_unit == 0) {\n        result = a_unit * b_unit;\n    } else {\n        result = a_unit * b_unit + multiply(a / 10, b / 10);\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp5hyvf70o.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5pctoy0n.php:28\nStack trace:\n#0 /tmp/tmp5pctoy0n.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5pctoy0n.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    var sum = 0;\n    for (var i = 0; i < Math.max(Math.abs($a), Math.abs($b)); i++) {\n        sum += Math.pow(10, i) * ($a % 10 * $b % 10);\n    }\n    return sum;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpj_12g62_.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if($a < 0 || $b < 0)\n        return 0;\n    if($a == 0 || $b == 0)\n        return 0;\n    if($a == 1 || $b == 1)\n        return 1;\n    var sum = 0;\n    for(var i = 0; i < $a.length; i++)\n        sum += $a[i] * $b[i];\n    return sum;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpufvfoh8x.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10;\n    var b = $b % 10;\n    var c = a * b;\n    return c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpcrpzb2st.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    \n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    \n    var result = 0;\n    \n    while ($a > 0 || $b > 0) {\n        var digit = $a % 10;\n        $a = Math.floor($a / 10);\n        \n        digit = $b % 10;\n        $b = Math.floor($b / 10);\n        \n        result += digit;\n    }\n    \n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpb2ndzbck.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5pctoy0n.php:28\nStack trace:\n#0 /tmp/tmp5pctoy0n.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5pctoy0n.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    var a = $a % 10;\n    var b = $b % 10;\n    return a * b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpxugt6wnr.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var $result = 0;\n    var $a_digits = $a % 10;\n    var $b_digits = $b % 10;\n    $result = $a_digits * $b_digits;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpimp6c4to.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10;\n    var b = $b % 10;\n    var c = a * b;\n    return c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpcrpzb2st.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    if ($a == 1 || $b == 1) {\n        return $a * $b;\n    }\n    if ($a == 2 || $b == 2) {\n        return $a * $b;\n    }\n    if ($a == 3 || $b == 3) {\n        return $a * $b;\n    }\n    if ($a == 4 || $b == 4) {\n        return $a * $b;\n    }\n    if ($a == 5 || $b == 5) {\n        return $a * $b;\n    }\n    if ($a == 6 || $b == 6) {\n        return $a * $b;\n    }\n    if ($a == 7 || $b == 7) {\n        return $a * $b;\n    }\n    if ($a == 8 || $b == 8) {\n        return $a * $b;\n    }\n    if ($a == 9 || $b == 9) {\n        return $a * $b;\n    }\n    if ($a == 10 || $b == 10) {\n        return $a * $b;\n    }\n    if ($a == 11 || $b == 11) {\n        return $a * $b;\n    }\n    if ($a == 12 || $b == 12) {\n        return $a * $b;\n    }\n    if ($a == 13 || $b == 13) {\n        return $a * $b;\n    }\n    if ($a == 14 || $b == 14) {\n        return $a * $b;\n    }\n    if ($a == 15 || $b == 15) {\n        return $a * $b;\n    }\n    if ($a == 16 || $b == 16) {\n        return $a * $b;\n    }\n    if ($a == 17 || $b == 17) {\n        return $a * $b;\n    }\n    if ($a == 18 || $b == 18) {\n        return $a *\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpvc_3bvs2.php on line 75\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    while($a > 0 || $b > 0) {\n        if($a > 0) {\n            $c += $a % 10 * $b % 10;\n            $a /= 10;\n            $b /= 10;\n        } else {\n            $c += $b % 10;\n            $b /= 10;\n        }\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmpjh6fog1k.php on line 18\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmpjh6fog1k.php on line 18\n\nDeprecated: Implicit conversion from float 1.48 to int loses precision in /tmp/tmpjh6fog1k.php on line 18\n\nDeprecated: Implicit conversion from float 4.12 to int loses precision in /tmp/tmpjh6fog1k.php on line 18\n\nDeprecated: Implicit conversion from float 0.148 to int loses precision in /tmp/tmpjh6fog1k.php on line 18\n\nDeprecated: Implicit conversion from float 0.014799999999999999 to int loses precision in /tmp/tmpjh6fog1k.php on line 18\n\nDeprecated: Implicit conversion from float 0.00148 to int loses precision in /tmp/tmpjh6fog1k.php on line 18\n\nDeprecated: Implicit conversion from float 0.000148 to int loses precision in /tmp/tmpjh6fog1k.php on line 18\n\nDeprecated: Implicit conversion from float 1.4799999999999999E-5 to int loses precision in /tmp/tmpjh6fog1k.php on line 18\n\nDeprecated: Implic",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10,\n        b = $b % 10,\n        c = a * b;\n    return c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpr99nfd2q.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $result = 0;\n    for ($i = 0; $i < $a; $i++) {\n        $result += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmph_1hj0c4.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmph_1hj0c4.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_1hj0c4.php:29\nStack trace:\n#0 /tmp/tmph_1hj0c4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph_1hj0c4.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    for ($i = 0; $i < $a; $i++) {\n        $c += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmp0jswkep7.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmp0jswkep7.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0jswkep7.php:29\nStack trace:\n#0 /tmp/tmp0jswkep7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0jswkep7.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    var result = 0;\n    while ($a > 0 || $b > 0) {\n        if ($a > 0) {\n            result += $a % 10;\n            $a = Math.floor($a / 10);\n        }\n        if ($b > 0) {\n            result += $b % 10;\n            $b = Math.floor($b / 10);\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpwu8vo6df.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $result = 0;\n    for ($i = 0; $i < $a; $i++) {\n        $result += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmph_1hj0c4.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmph_1hj0c4.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_1hj0c4.php:29\nStack trace:\n#0 /tmp/tmph_1hj0c4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph_1hj0c4.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if($a < 0 || $b < 0)\n        return 0;\n    \n    var result = 0;\n    for(var i = 0; i < Math.max(a, b); i++)\n    {\n        if(a > b)\n        {\n            result += Math.pow(10, i);\n            a -= 1;\n        }\n        else if(b > a)\n        {\n            result += Math.pow(10, i);\n            b -= 1;\n        }\n    }\n    \n    return result;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp487vpld0.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    for ($i = 0; $i < $a; $i++) {\n        $c += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmp0jswkep7.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmp0jswkep7.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0jswkep7.php:29\nStack trace:\n#0 /tmp/tmp0jswkep7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0jswkep7.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10;\n    var b = $b % 10;\n    var c = a * b;\n    return c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpcrpzb2st.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    var result = 0;\n    for (var i = 0; i < Math.max(Math.abs($a), Math.abs($b)); i++) {\n        result += Math.floor(Math.abs($a) % 10 * Math.abs($b) % 10);\n        $a = Math.floor($a / 10);\n        $b = Math.floor($b / 10);\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpnkdr3iyt.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $result = 0;\n    for($i = 0; $i < $a; $i++) {\n        $result += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmp8woja2kh.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmp8woja2kh.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8woja2kh.php:29\nStack trace:\n#0 /tmp/tmp8woja2kh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8woja2kh.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    while($a > 0 || $b > 0) {\n        if($a > 0) {\n            $c += $a % 10 * $b % 10;\n            $a /= 10;\n        }\n        if($b > 0) {\n            $c += $a % 10 * $b % 10;\n            $b /= 10;\n        }\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmphy2czvhd.php on line 22\n\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmphy2czvhd.php on line 18\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmphy2czvhd.php on line 18\n\nDeprecated: Implicit conversion from float 1.48 to int loses precision in /tmp/tmphy2czvhd.php on line 22\n\nDeprecated: Implicit conversion from float 41.2 to int loses precision in /tmp/tmphy2czvhd.php on line 22\n\nDeprecated: Implicit conversion from float 1.48 to int loses precision in /tmp/tmphy2czvhd.php on line 18\n\nDeprecated: Implicit conversion from float 4.12 to int loses precision in /tmp/tmphy2czvhd.php on line 18\n\nDeprecated: Implicit conversion from float 0.148 to int loses precision in /tmp/tmphy2czvhd.php on line 22\n\nDeprecated: Implicit conversion from float 0.148 to int loses precision in /tmp/tmphy2czvhd.php on line 18\n\nDeprecated: Implicit conversion from float 0.014799999999999999 to int loses precision in /tmp/tmphy2czvhd.php on line 22\n\nDeprecated: Implicit conversion from float 0.014799999999999999 to int loses precision in /tmp/tmphy2czvhd.php on line 18\n\nDeprecated: Implicit conversion from float 0.00148 to int loses precision in /tmp/tmphy2czvhd.php on line 22\n\nDeprecated: Implicit conversion from float 0.00148 to int loses precision in /tmp/tmphy2czvhd.php on line 18\n\nDeprecated: Implicit conversion from float 0.000148 to int loses precision in /tmp/tmphy2czvhd.php on line 22\n\nDeprecated: Implicit conversion from float 0.000148 to int loses precision in /tmp/tmphy2czvhd.php on line 18\n\nDeprecated: Implicit conversion from float 1.4799999999999999E-5 to int loses precision in /tmp/tmphy2czvhd.php on line 22\n\nDeprecated: Implicit conversion from float 1.4799999999999999E-5 to int loses precision in /tmp/tmphy2czvhd.php on line 18\n\nDeprecated: Implicit conversion from float 1.4799999999999998E-6 to int loses precision in /tmp/tmphy2czvhd.php on line 22\n\nDeprecated: Implicit ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var $result = 0;\n    var $a_unit = $a % 10;\n    var $b_unit = $b % 10;\n    $result = $a_unit * $b_unit;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpqtua_ary.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    var result = 0;\n    for (var i = 0; i < Math.max(Math.abs($a), Math.abs($b)); i++) {\n        result += Math.floor($a / 10) * Math.floor($b / 10);\n        $a = $a % 10;\n        $b = $b % 10;\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpica_mkx1.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10,\n        b = $b % 10,\n        c = a * b;\n    if (c > 9) {\n        c = c % 10;\n    }\n    return c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpb149smt0.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10;\n    var b = $b % 10;\n    return a * b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpxdk89bhm.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var $c = 0;\n    while($a > 0 || $b > 0) {\n        if($a > 0) {\n            $c += $a % 10 * $b;\n            $a /= 10;\n        }\n        if($b > 0) {\n            $c += $b % 10 * $a;\n            $b /= 10;\n        }\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpu2dgwp_v.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $result = 0;\n    for($i = 0; $i < $a; $i++) {\n        $result += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmp8woja2kh.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmp8woja2kh.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8woja2kh.php:29\nStack trace:\n#0 /tmp/tmp8woja2kh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8woja2kh.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    for($i = 0; $i < $a; $i++) {\n        $c += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmpdesm5_5t.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmpdesm5_5t.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdesm5_5t.php:29\nStack trace:\n#0 /tmp/tmpdesm5_5t.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdesm5_5t.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10;\n    var b = $b % 10;\n    var c = a * b;\n    return c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpcrpzb2st.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5pctoy0n.php:28\nStack trace:\n#0 /tmp/tmp5pctoy0n.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5pctoy0n.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    if ($a == 1 || $b == 1) {\n        return 1;\n    }\n    if ($a == 2 || $b == 2) {\n        return 2;\n    }\n    if ($a == 3 || $b == 3) {\n        return 6;\n    }\n    if ($a == 4 || $b == 4) {\n        return 4;\n    }\n    if ($a == 5 || $b == 5) {\n        return 10;\n    }\n    if ($a == 6 || $b == 6) {\n        return 6;\n    }\n    if ($a == 7 || $b == 7) {\n        return 14;\n    }\n    if ($a == 8 || $b == 8) {\n        return 8;\n    }\n    if ($a == 9 || $b == 9) {\n        return 18;\n    }\n    if ($a == 10 || $b == 10) {\n        return 10;\n    }\n    if ($a == 11 || $b == 11) {\n        return 22;\n    }\n    if ($a == 12 || $b == 12) {\n        return 12;\n    }\n    if ($a == 13 || $b == 13) {\n        return 26;\n    }\n    if ($a == 14 || $b == 14) {\n        return 14;\n    }\n    if ($a == 15 || $b == 15) {\n        return 30;\n    }\n    if ($a == 16 || $b == 16) {\n        return 16;\n    }\n    if ($a == 17 || $b == 17) {\n        return 36;\n    }\n    if ($a == 18 || $b == 18) {\n        return 18;\n    }\n    if ($a == 19 || $b == 19) {\n        return 48;\n    }\n    if ($a == 20 || $b == 20) {\n        return 20;\n    }\n    if ($a == 21 || $b == 21) {\n        return 60;\n    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: Unclosed '{' on line 14 in /tmp/tmpg3u6ygky.php on line 100\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $result = 0;\n    for ($i = 0; $i < $a; $i++) {\n        $result += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmph_1hj0c4.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmph_1hj0c4.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_1hj0c4.php:29\nStack trace:\n#0 /tmp/tmph_1hj0c4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph_1hj0c4.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    if ($a < 0 && $b < 0) {\n        return 0;\n    }\n    if ($a < 0) {\n        $a = -$a;\n        $b = -$b;\n    }\n    if ($b < 0) {\n        $b = -$b;\n    }\n    var $sum = 0;\n    for (var $i = 0; $i < $a.length; $i++) {\n        $sum += $a[$i] * $b[$i];\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmppuyu54d8.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if($a < 0 || $b < 0)\n        return 0;\n    if($a == 0 || $b == 0)\n        return 0;\n    var a = $a, b = $b;\n    var result = 0;\n    while(a > 0 || b > 0) {\n        if(a > 0) {\n            result += a % 10;\n            a /= 10;\n        }\n        if(b > 0) {\n            result += b % 10;\n            b /= 10;\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp8egul72y.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    for($i = 0; $i < $a; $i++) {\n        $c += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmpdesm5_5t.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmpdesm5_5t.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdesm5_5t.php:29\nStack trace:\n#0 /tmp/tmpdesm5_5t.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdesm5_5t.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    for ($i = 0; $i < $a; $i++) {\n        $c += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmp0jswkep7.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmp0jswkep7.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0jswkep7.php:29\nStack trace:\n#0 /tmp/tmp0jswkep7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0jswkep7.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a,\n        b = $b;\n    var result = 0;\n    while (a > 0 || b > 0) {\n        result += a % 10 * b % 10;\n        a /= 10;\n        b /= 10;\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpjd8eilaq.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var $result = 0;\n    var $a_digits = $a % 10;\n    var $b_digits = $b % 10;\n    $result = $a_digits * $b_digits;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpimp6c4to.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    while($a > 0 || $b > 0) {\n        $c += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 1.48 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 4.12 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 0.148 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 0.014799999999999999 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 0.00148 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 0.000148 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 1.4799999999999999E-5 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implic",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    for($i = 0; $i < $a; $i++) {\n        $c += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmpdesm5_5t.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmpdesm5_5t.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdesm5_5t.php:29\nStack trace:\n#0 /tmp/tmpdesm5_5t.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdesm5_5t.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a, b = $b;\n    var result = 0;\n    while (a > 0 || b > 0) {\n        if (a > 0) {\n            result += Math.floor(a % 10);\n            a /= 10;\n        }\n        if (b > 0) {\n            result += Math.floor(b % 10);\n            b /= 10;\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpn8n_x99p.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    \n    var a = $a % 10;\n    var b = $b % 10;\n    \n    return a * b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpplkct3y1.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a;\n    var b = $b;\n    var result = 0;\n    var digit = 0;\n    while (a > 0 || b > 0) {\n        digit = a % 10;\n        a = Math.floor(a / 10);\n        digit = b % 10;\n        b = Math.floor(b / 10);\n        result = result + digit;\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp6kxgx0l9.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10;\n    var b = $b % 10;\n    var c = a * b;\n    return c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpcrpzb2st.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    return $a % 10 * $b % 10;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv_0uyo1m.php:30\nStack trace:\n#0 /tmp/tmpv_0uyo1m.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpv_0uyo1m.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    for ($i = 0; $i < $a; $i++) {\n        $c += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmp0jswkep7.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmp0jswkep7.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0jswkep7.php:29\nStack trace:\n#0 /tmp/tmp0jswkep7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0jswkep7.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5pctoy0n.php:28\nStack trace:\n#0 /tmp/tmp5pctoy0n.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5pctoy0n.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var $result = 0;\n    for (var i = 0; i < $a.length; i++) {\n        $result += $a[i] * $b[i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmppgzgx425.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    var result = 0;\n    while ($a > 0 || $b > 0) {\n        if ($a > 0) {\n            result += $a % 10;\n            $a /= 10;\n        }\n        if ($b > 0) {\n            result += $b % 10;\n            $b /= 10;\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpjy45cz66.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3_9k5536.php:22\nStack trace:\n#0 /tmp/tmp3_9k5536.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp3_9k5536.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10;\n    var b = $b % 10;\n    return a * b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpxdk89bhm.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var $result = 0;\n    if ($a < 0 || $b < 0) {\n        return $result;\n    }\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    while ($a > 0 || $b > 0) {\n        if ($a > 0) {\n            $result += $a % 10;\n            $a = Math.floor($a / 10);\n        }\n        if ($b > 0) {\n            $result += $b % 10;\n            $b = Math.floor($b / 10);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpmug_glwv.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5pctoy0n.php:28\nStack trace:\n#0 /tmp/tmp5pctoy0n.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5pctoy0n.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    if ($a == 1 || $b == 1) {\n        return 1;\n    }\n    var $result = 0;\n    for (var $i = 0; $i < Math.max($a, $b); $i++) {\n        $result += Math.pow(10, $i) * ($a % 10 * $b % 10);\n        $a = Math.floor($a / 10);\n        $b = Math.floor($b / 10);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpjqjdy1xo.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    for($i = 0; $i < $a; $i++) {\n        $c += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmpdesm5_5t.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmpdesm5_5t.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdesm5_5t.php:29\nStack trace:\n#0 /tmp/tmpdesm5_5t.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdesm5_5t.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    for($i = 0; $i < $a; $i++) {\n        $c += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmpdesm5_5t.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmpdesm5_5t.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdesm5_5t.php:29\nStack trace:\n#0 /tmp/tmpdesm5_5t.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdesm5_5t.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    \n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    \n    var result = 0;\n    \n    while ($a > 0 || $b > 0) {\n        if ($a > 0) {\n            result += $a % 10;\n            $a = Math.floor($a / 10);\n        }\n        \n        if ($b > 0) {\n            result += $b % 10;\n            $b = Math.floor($b / 10);\n        }\n    }\n    \n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp71jfess0.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5pctoy0n.php:28\nStack trace:\n#0 /tmp/tmp5pctoy0n.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5pctoy0n.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $result = 0;\n    for ($i = 0; $i < $a; $i++) {\n        $result += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmph_1hj0c4.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmph_1hj0c4.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_1hj0c4.php:29\nStack trace:\n#0 /tmp/tmph_1hj0c4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph_1hj0c4.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5pctoy0n.php:28\nStack trace:\n#0 /tmp/tmp5pctoy0n.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5pctoy0n.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var $result = 0;\n    if ($a < 0 || $b < 0) {\n        return $result;\n    }\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    var $a_digits = $a % 10;\n    var $b_digits = $b % 10;\n    $result = $a_digits * $b_digits;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp_wjsvm6x.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10,\n        b = $b % 10,\n        c = a * b,\n        d = Math.floor(c / 10),\n        e = c % 10;\n    return d + e;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpfm2mn5xd.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $result = 0;\n    for($i = 0; $i < $a; $i++) {\n        $result += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmp8woja2kh.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmp8woja2kh.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8woja2kh.php:29\nStack trace:\n#0 /tmp/tmp8woja2kh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8woja2kh.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10;\n    var b = $b % 10;\n    return a * b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpxdk89bhm.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var result = 0;\n    var a = $a;\n    var b = $b;\n    while (a > 0 || b > 0) {\n        if (a > 0) {\n            result += Math.pow(a % 10, 2);\n            a /= 10;\n        }\n        if (b > 0) {\n            result += Math.pow(b % 10, 2);\n            b /= 10;\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4e96gse0.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    var $result = 0;\n    while ($a > 0 || $b > 0) {\n        if ($a > 0) {\n            $result += $a % 10;\n            $a = Math.floor($a / 10);\n        }\n        if ($b > 0) {\n            $result += $b % 10;\n            $b = Math.floor($b / 10);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp0zv8m4ov.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10,\n        b = $b % 10,\n        c = a * b;\n    return c % 10;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpylzrtzhh.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10;\n    var b = $b % 10;\n    var c = a * b;\n    return c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpcrpzb2st.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    var result = 0;\n    while ($a > 0 || $b > 0) {\n        result += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyxjoth76.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    var $result = 0;\n    while ($a > 0 || $b > 0) {\n        if ($a > 0) {\n            $result += $a % 10;\n            $a /= 10;\n        }\n        if ($b > 0) {\n            $result += $b % 10;\n            $b /= 10;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpsni2mx9j.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10,\n        b = $b % 10,\n        c = a * b,\n        d = Math.floor(c / 10),\n        e = c % 10;\n    return d + e;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpfm2mn5xd.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    if ($a == 1 || $b == 1) {\n        return 1;\n    }\n    var $sum = 0;\n    for (var $i = 0; $i < Math.max($a, $b); $i++) {\n        $sum += Math.pow(10, $i);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpynoozb3l.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    \n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    \n    var result = 0;\n    \n    while ($a > 0 || $b > 0) {\n        if ($a > 0) {\n            result += $a % 10;\n            $a = Math.floor($a / 10);\n        }\n        \n        if ($b > 0) {\n            result += $b % 10;\n            $b = Math.floor($b / 10);\n        }\n    }\n    \n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp71jfess0.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $result = 0;\n    for($i = 0; $i < $a.length; $i++) {\n        $result += $a[$i] * $b[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp8r8nonsf.php:16\nStack trace:\n#0 /tmp/tmp8r8nonsf.php(23): multiply(148, 412)\n#1 /tmp/tmp8r8nonsf.php(27): candidate(148, 412)\n#2 /tmp/tmp8r8nonsf.php(37): test()\n#3 {main}\n  thrown in /tmp/tmp8r8nonsf.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10;\n    var b = $b % 10;\n    return a * b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpxdk89bhm.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10,\n        b = $b % 10;\n    return a * b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpgizwnunc.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var result = 0;\n    var a = $a;\n    var b = $b;\n    while (a > 0 || b > 0) {\n        if (a > 0) {\n            result += Math.pow(10, a - 1);\n            a--;\n        }\n        if (b > 0) {\n            result += Math.pow(10, b - 1);\n            b--;\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp_u7l2ttk.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    while($a > 0 || $b > 0) {\n        $c += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 1.48 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 4.12 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 0.148 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 0.014799999999999999 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 0.00148 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 0.000148 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implicit conversion from float 1.4799999999999999E-5 to int loses precision in /tmp/tmpnku0j2k9.php on line 17\n\nDeprecated: Implic",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $result = 0;\n    for ($i = 0; $i < $a; $i++) {\n        $result += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmph_1hj0c4.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmph_1hj0c4.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_1hj0c4.php:29\nStack trace:\n#0 /tmp/tmph_1hj0c4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph_1hj0c4.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    for($i = 0; $i < $a; $i++) {\n        $c += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmpdesm5_5t.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmpdesm5_5t.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdesm5_5t.php:29\nStack trace:\n#0 /tmp/tmpdesm5_5t.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdesm5_5t.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10;\n    var b = $b % 10;\n    var c = a * b;\n    return c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpcrpzb2st.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10,\n        b = $b % 10;\n    return a * b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpgizwnunc.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a;\n    var b = $b;\n    var result = 0;\n    var i = 0;\n    while (a > 0 || b > 0) {\n        if (a > 0) {\n            result += a % 10 * b;\n            a = Math.floor(a / 10);\n        }\n        if (b > 0) {\n            result += b % 10 * a;\n            b = Math.floor(b / 10);\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp31_lgb5_.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $result = 0;\n    for ( $i = 0; $i < $a; $i++ ) {\n        $result += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmpab8t2bae.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmpab8t2bae.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpab8t2bae.php:29\nStack trace:\n#0 /tmp/tmpab8t2bae.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpab8t2bae.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    if ($a == 1 || $b == 1) {\n        return $a * $b;\n    }\n    if ($a > $b) {\n        return multiply($b, $a);\n    }\n    if ($a < $b) {\n        return multiply($a, $b);\n    }\n    var a = $a % 10;\n    var b = $b % 10;\n    var c = a * b;\n    return c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp0uw67wpt.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a;\n    var b = $b;\n    var result = 0;\n    var i = 0;\n    while (a > 0 || b > 0) {\n        if (a > 0) {\n            result += a % 10;\n            a = Math.floor(a / 10);\n        }\n        if (b > 0) {\n            result += b % 10;\n            b = Math.floor(b / 10);\n        }\n        i++;\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmphzt3kj2_.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    while($a > 0 || $b > 0) {\n        if($a > 0) {\n            $c += $a % 10 * $b % 10;\n            $a /= 10;\n            $b /= 10;\n        } else {\n            $c += $b % 10;\n            $b /= 10;\n        }\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmpjh6fog1k.php on line 18\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmpjh6fog1k.php on line 18\n\nDeprecated: Implicit conversion from float 1.48 to int loses precision in /tmp/tmpjh6fog1k.php on line 18\n\nDeprecated: Implicit conversion from float 4.12 to int loses precision in /tmp/tmpjh6fog1k.php on line 18\n\nDeprecated: Implicit conversion from float 0.148 to int loses precision in /tmp/tmpjh6fog1k.php on line 18\n\nDeprecated: Implicit conversion from float 0.014799999999999999 to int loses precision in /tmp/tmpjh6fog1k.php on line 18\n\nDeprecated: Implicit conversion from float 0.00148 to int loses precision in /tmp/tmpjh6fog1k.php on line 18\n\nDeprecated: Implicit conversion from float 0.000148 to int loses precision in /tmp/tmpjh6fog1k.php on line 18\n\nDeprecated: Implicit conversion from float 1.4799999999999999E-5 to int loses precision in /tmp/tmpjh6fog1k.php on line 18\n\nDeprecated: Implic",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    \n    var result = 0;\n    \n    while ($a > 0 || $b > 0) {\n        result += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    \n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpm96c052_.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var result = 0;\n    var a = $a;\n    var b = $b;\n    while(a > 0 || b > 0) {\n        if(a > 0) {\n            result += a % 10;\n            a /= 10;\n        }\n        if(b > 0) {\n            result += b % 10;\n            b /= 10;\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpnlfz6ok8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var $result = 0;\n    for (var i = 0; i < $a.length; i++) {\n        $result += $a[i] * $b[i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmppgzgx425.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10,\n        b = $b % 10,\n        c = a * b;\n    return c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpr99nfd2q.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $result = 0;\n    for($i = 0; $i < $a; $i++) {\n        $result += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmp8woja2kh.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmp8woja2kh.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8woja2kh.php:29\nStack trace:\n#0 /tmp/tmp8woja2kh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8woja2kh.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $result = 0;\n    for ($i = 0; $i < $a; $i++) {\n        $result += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmph_1hj0c4.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmph_1hj0c4.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_1hj0c4.php:29\nStack trace:\n#0 /tmp/tmph_1hj0c4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph_1hj0c4.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3_9k5536.php:22\nStack trace:\n#0 /tmp/tmp3_9k5536.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp3_9k5536.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    \n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    \n    var $result = 0;\n    \n    while ($a > 0 || $b > 0) {\n        if ($a > 0) {\n            $result += $a % 10;\n            $a /= 10;\n        }\n        \n        if ($b > 0) {\n            $result += $b % 10;\n            $b /= 10;\n        }\n    }\n    \n    return $result;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmplyij3o65.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    while($a > 0 || $b > 0) {\n        if($a > 0) {\n            $c += $a % 10 * $b;\n            $a /= 10;\n        }\n        if($b > 0) {\n            $c += $b % 10 * $a;\n            $b /= 10;\n        }\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmpjoekkhqu.php on line 18\n\nDeprecated: Implicit conversion from float 41.2 to int loses precision in /tmp/tmpjoekkhqu.php on line 22\n\nDeprecated: Implicit conversion from float 1.48 to int loses precision in /tmp/tmpjoekkhqu.php on line 18\n\nDeprecated: Implicit conversion from float 4.12 to int loses precision in /tmp/tmpjoekkhqu.php on line 22\n\nDeprecated: Implicit conversion from float 0.148 to int loses precision in /tmp/tmpjoekkhqu.php on line 18\n\nDeprecated: Implicit conversion from float 0.41200000000000003 to int loses precision in /tmp/tmpjoekkhqu.php on line 22\n\nDeprecated: Implicit conversion from float 0.014799999999999999 to int loses precision in /tmp/tmpjoekkhqu.php on line 18\n\nDeprecated: Implicit conversion from float 0.0412 to int loses precision in /tmp/tmpjoekkhqu.php on line 22\n\nDeprecated: Implicit conversion from float 0.00148 to int loses precision in /tmp/tmpjoekkhqu.php on line 18\n\nDeprecated: Implicit conversion from float 0.00412 to int loses precision in /tmp/tmpjoekkhqu.php on line 22\n\nDeprecated: Implicit conversion from float 0.000148 to int loses precision in /tmp/tmpjoekkhqu.php on line 18\n\nDeprecated: Implicit conversion from float 0.00041200000000000004 to int loses precision in /tmp/tmpjoekkhqu.php on line 22\n\nDeprecated: Implicit conversion from float 1.4799999999999999E-5 to int loses precision in /tmp/tmpjoekkhqu.php on line 18\n\nDeprecated: Implicit conversion from float 4.1200000000000005E-5 to int loses precision in /tmp/tmpjoekkhqu.php on line 22\n\nDeprecated: Implicit conversion from float 1.4799999999999998E-6 to int loses precision in /tmp/tmpjoekkhqu.php on line 18\n\nDeprecated: Implicit conversion from float 4.12E-6 to int loses precision in /tmp/tmpjoekkhqu.php on line 22\n\nDeprecated: Implicit conversion from float 1.4799999999999998E-7 to int loses precision in /tmp/tmpjoekkhqu.php on line 18\n\nDeprecated: Implicit conversion from float 4.1200000000000004E-7 to int loses precision in /tmp",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    if ($a == 1 || $b == 1) {\n        return 1;\n    }\n    if ($a < 10 || $b < 10) {\n        return $a * $b;\n    }\n    if ($a < 100 || $b < 100) {\n        return $a * $b / 10;\n    }\n    if ($a < 1000 || $b < 1000) {\n        return $a * $b / 100;\n    }\n    if ($a < 10000 || $b < 10000) {\n        return $a * $b / 1000;\n    }\n    if ($a < 100000 || $b < 100000) {\n        return $a * $b / 10000;\n    }\n    if ($a < 1000000 || $b < 1000000) {\n        return $a * $b / 100000;\n    }\n    if ($a < 10000000 || $b < 10000000) {\n        return $a * $b / 1000000;\n    }\n    if ($a < 100000000 || $b < 100000000) {\n        return $a * $b / 10000000;\n    }\n    if ($a < 1000000000 || $b < 1000000000) {\n        return $a * $b / 100000000;\n    }\n    if ($a < 10000000000 || $b < 10000000000) {\n        return $a * $b / 1000000000;\n    }\n    if ($a < 100000000000 || $b < 100000000000) {\n        return $a * $b / 10000000000;\n    }\n    if ($a < 1000000000000 || $b < 1000000000000) {\n        return $a * $b / 100000000000;\n    }\n    if ($a < 10000000000000 || $b < 10000000000000) {\n        return $a * $b / 1000000000000;\n    }\n    if ($a < 100000000000000 || $b < 100000000000000) {\n        return $a * $b / 10000000000000;\n    }\n    if ($a < 1000000000000000 ||\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp8dnj_b4v.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    \n    var result = 0;\n    \n    for (var i = 0; i < Math.max(a, b); i++) {\n        result += Math.pow(a % 10, b % 10);\n        a /= 10;\n        b /= 10;\n    }\n    \n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpoyglfm4w.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10;\n    var b = $b % 10;\n    var c = a * b;\n    return c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpcrpzb2st.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    while($a > 0 || $b > 0) {\n        $c += ($a % 10) * ($b % 10);\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293120,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmpfn6sy0z1.php on line 17\n\nDeprecated: Implicit conversion from float 41.2 to int loses precision in /tmp/tmpfn6sy0z1.php on line 17\n\nDeprecated: Implicit conversion from float 1.48 to int loses precision in /tmp/tmpfn6sy0z1.php on line 17\n\nDeprecated: Implicit conversion from float 4.12 to int loses precision in /tmp/tmpfn6sy0z1.php on line 17\n\nDeprecated: Implicit conversion from float 0.148 to int loses precision in /tmp/tmpfn6sy0z1.php on line 17\n\nDeprecated: Implicit conversion from float 0.41200000000000003 to int loses precision in /tmp/tmpfn6sy0z1.php on line 17\n\nDeprecated: Implicit conversion from float 0.014799999999999999 to int loses precision in /tmp/tmpfn6sy0z1.php on line 17\n\nDeprecated: Implicit conversion from float 0.0412 to int loses precision in /tmp/tmpfn6sy0z1.php on line 17\n\nDeprecated: Implicit conversion from float 0.00148 to int loses precision in /tmp/tmpfn6sy0z1.php on line 17\n\nDeprecated: Implicit conversion from float 0.00412 to int loses precision in /tmp/tmpfn6sy0z1.php on line 17\n\nDeprecated: Implicit conversion from float 0.000148 to int loses precision in /tmp/tmpfn6sy0z1.php on line 17\n\nDeprecated: Implicit conversion from float 0.00041200000000000004 to int loses precision in /tmp/tmpfn6sy0z1.php on line 17\n\nDeprecated: Implicit conversion from float 1.4799999999999999E-5 to int loses precision in /tmp/tmpfn6sy0z1.php on line 17\n\nDeprecated: Implicit conversion from float 4.1200000000000005E-5 to int loses precision in /tmp/tmpfn6sy0z1.php on line 17\n\nDeprecated: Implicit conversion from float 1.4799999999999998E-6 to int loses precision in /tmp/tmpfn6sy0z1.php on line 17\n\nDeprecated: Implicit conversion from float 4.12E-6 to int loses precision in /tmp/tmpfn6sy0z1.php on line 17\n\nDeprecated: Implicit conversion from float 1.4799999999999998E-7 to int loses precision in /tmp/tmpfn6sy0z1.php on line 17\n\nDeprecated: Implicit conversion from float 4.1200000000000004E-7 to int loses precision in /tmp",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10,\n        b = $b % 10,\n        c = a * b;\n    return c % 10;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpylzrtzhh.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5pctoy0n.php:28\nStack trace:\n#0 /tmp/tmp5pctoy0n.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5pctoy0n.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if($a < 0 || $b < 0)\n        return 0;\n    if($a == 0 || $b == 0)\n        return 0;\n    if($a < 10 || $b < 10)\n        return $a * $b;\n    if($a < 100 || $b < 100)\n        return $a * $b / 10;\n    if($a < 1000 || $b < 1000)\n        return $a * $b / 100;\n    if($a < 10000 || $b < 10000)\n        return $a * $b / 1000;\n    return $a * $b / 10000;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0vxkiam3.php:36\nStack trace:\n#0 /tmp/tmp0vxkiam3.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0vxkiam3.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $result = 0;\n    for ($i = 0; $i < $a; $i++) {\n        $result += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmph_1hj0c4.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmph_1hj0c4.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_1hj0c4.php:29\nStack trace:\n#0 /tmp/tmph_1hj0c4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph_1hj0c4.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if($a < 0 || $b < 0)\n        return 0;\n    if($a == 0 || $b == 0)\n        return 0;\n    var result = 0;\n    while($a > 0 || $b > 0) {\n        result += $a % 10 * $b % 10;\n        $a = Math.floor($a / 10);\n        $b = Math.floor($b / 10);\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpzdl9wk3_.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    \n    var result = 0;\n    var a = $a;\n    var b = $b;\n    \n    while (a != 0 || b != 0) {\n        if (a % 10 > 0) {\n            result += a % 10 * b;\n            a = Math.floor(a / 10);\n            b = Math.floor(b / 10);\n        } else {\n            a = Math.floor(a / 10);\n            b = Math.floor(b / 10);\n        }\n    }\n    \n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpcpp2vxrf.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if($a < 0 || $b < 0)\n        return 0;\n    if($a == 0 || $b == 0)\n        return 0;\n    if($a < 10 && $b < 10)\n        return $a * $b;\n    if($a < 10)\n        return $a * $b % 10;\n    if($b < 10)\n        return $a % 10 * $b;\n    return $a % 10 * $b % 10;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8gww4sc1.php:34\nStack trace:\n#0 /tmp/tmp8gww4sc1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp8gww4sc1.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    for($i = 0; $i < $a; $i++) {\n        $c += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmpdesm5_5t.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmpdesm5_5t.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdesm5_5t.php:29\nStack trace:\n#0 /tmp/tmpdesm5_5t.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdesm5_5t.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var $a_unit = $a % 10;\n    var $b_unit = $b % 10;\n    var $a_digit = $a / 10;\n    var $b_digit = $b / 10;\n    var $product = $a_digit * $b_digit;\n    if ($a_unit == 0 && $b_unit == 0) {\n        return $product;\n    } else if ($a_unit == 0) {\n        return $product * 10;\n    } else if ($b_unit == 0) {\n        return $product * 10;\n    } else {\n        return $product;\n    }\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp46j1mfkw.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var $c = 0;\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    while ($a > 0 || $b > 0) {\n        if ($a > 0) {\n            $c += $a % 10;\n            $a = Math.floor($a / 10);\n        }\n        if ($b > 0) {\n            $c += $b % 10;\n            $b = Math.floor($b / 10);\n        }\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmps5_rpwuv.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    while ($a > 0 || $b > 0) {\n        $c += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmp7x2equ8z.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmp7x2equ8z.php on line 17\n\nDeprecated: Implicit conversion from float 1.48 to int loses precision in /tmp/tmp7x2equ8z.php on line 17\n\nDeprecated: Implicit conversion from float 4.12 to int loses precision in /tmp/tmp7x2equ8z.php on line 17\n\nDeprecated: Implicit conversion from float 0.148 to int loses precision in /tmp/tmp7x2equ8z.php on line 17\n\nDeprecated: Implicit conversion from float 0.014799999999999999 to int loses precision in /tmp/tmp7x2equ8z.php on line 17\n\nDeprecated: Implicit conversion from float 0.00148 to int loses precision in /tmp/tmp7x2equ8z.php on line 17\n\nDeprecated: Implicit conversion from float 0.000148 to int loses precision in /tmp/tmp7x2equ8z.php on line 17\n\nDeprecated: Implicit conversion from float 1.4799999999999999E-5 to int loses precision in /tmp/tmp7x2equ8z.php on line 17\n\nDeprecated: Implic",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    for($i = 0; $i < $a; $i++) {\n        $c += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmpdesm5_5t.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmpdesm5_5t.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdesm5_5t.php:29\nStack trace:\n#0 /tmp/tmpdesm5_5t.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdesm5_5t.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    var result = 0;\n    for (var i = 0; i < Math.max(Math.abs($a), Math.abs($b)); i++) {\n        result += Math.pow(10, i) * (Math.abs($a) % 10 * Math.abs($b) % 10);\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp9316ux6v.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var result = 0;\n    var a = $a;\n    var b = $b;\n    while (a > 0 || b > 0) {\n        if (a > 0) {\n            result += a % 10;\n            a = Math.floor(a / 10);\n        }\n        if (b > 0) {\n            result += b % 10;\n            b = Math.floor(b / 10);\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpy6ituyw1.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10,\n        b = $b % 10,\n        c = a * b,\n        d = Math.floor(a / 10),\n        e = Math.floor(b / 10);\n    if (d == 0 && e == 0) {\n        return c;\n    } else {\n        return multiply(d, e) + c;\n    }\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpog1l6azr.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if ($a < 0 || $b < 0) {\n        return 0;\n    }\n    var result = 0;\n    var a = $a;\n    var b = $b;\n    while (a > 0 || b > 0) {\n        if (a > 0) {\n            result += Math.pow(10, a - 1);\n            a--;\n        }\n        if (b > 0) {\n            result += Math.pow(10, b - 1);\n            b--;\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmph6_gpmq5.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a % 10,\n        b = $b % 10,\n        c = a * b;\n    return c % 10;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpylzrtzhh.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxdctpgx.php:23\nStack trace:\n#0 /tmp/tmpdxdctpgx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxdctpgx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var a = $a;\n    var b = $b;\n    var result = 0;\n    while(a > 0 || b > 0) {\n        if(a > 0) {\n            result += a % 10;\n            a = Math.floor(a / 10);\n        }\n        if(b > 0) {\n            result += b % 10;\n            b = Math.floor(b / 10);\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpunsulw45.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3_9k5536.php:22\nStack trace:\n#0 /tmp/tmp3_9k5536.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp3_9k5536.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    for ($i = 0; $i < $a; $i++) {\n        $c += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmp0jswkep7.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmp0jswkep7.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0jswkep7.php:29\nStack trace:\n#0 /tmp/tmp0jswkep7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0jswkep7.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $result = 0;\n    for ($i = 0; $i < $a; $i++) {\n        $result += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmph_1hj0c4.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmph_1hj0c4.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_1hj0c4.php:29\nStack trace:\n#0 /tmp/tmph_1hj0c4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph_1hj0c4.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    var result = 0;\n    var a = $a;\n    var b = $b;\n    if (a < 0 && b < 0) {\n        result = Math.abs(a) * Math.abs(b);\n    } else if (a < 0 && b >= 0) {\n        result = Math.abs(a) * Math.abs(b);\n    } else if (a >= 0 && b < 0) {\n        result = Math.abs(a) * Math.abs(b);\n    } else {\n        result = a * b;\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmplhjxrnou.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    $c = 0;\n    for($i = 0; $i < $a; $i++) {\n        $c += $a % 10 * $b % 10;\n        $a /= 10;\n        $b /= 10;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nDeprecated: Implicit conversion from float 14.8 to int loses precision in /tmp/tmpdesm5_5t.php on line 17\n\nDeprecated: Implicit conversion from float 164.8 to int loses precision in /tmp/tmpdesm5_5t.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdesm5_5t.php:29\nStack trace:\n#0 /tmp/tmpdesm5_5t.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdesm5_5t.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    if($a < 0 || $b < 0)\n        return 0;\n    var a = $a, b = $b;\n    var result = 0;\n    while(a > 0 || b > 0) {\n        if(a > 0) {\n            result += a % 10;\n            a /= 10;\n        }\n        if(b > 0) {\n            result += b % 10;\n            b /= 10;\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpo_w5c0fr.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Complete the function that takes two integers and returns \n// the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n    // your code goes here\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293118,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f8bbin8.php:24\nStack trace:\n#0 /tmp/tmp9f8bbin8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9f8bbin8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
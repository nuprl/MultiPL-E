{
  "name": "HumanEval_102_choose_num",
  "language": "php",
  "prompt": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n",
  "tests": "function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr9h0q875.php:26\nStack trace:\n#0 /tmp/tmpr9h0q875.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpr9h0q875.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i += 2) {\n        if ($i > $result) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd23sglz9.php:30\nStack trace:\n#0 /tmp/tmpd23sglz9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpd23sglz9.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    if ($x == $y) {\n        return $x;\n    }\n    if ($x == 0) {\n        return -1;\n    }\n    if ($x == 1) {\n        return $y;\n    }\n    if ($y == 0) {\n        return -1;\n    }\n    if ($y == 1) {\n        return $x;\n    }\n    if ($x == $y) {\n        return $x;\n    }\n    if ($x == $y - 1) {\n        return $y;\n    }\n    if ($y == $x - 1) {\n        return $x;\n    }\n    if ($x == $y - 2) {\n        return $y;\n    }\n    if ($y == $x - 2) {\n        return $x;\n    }\n    if ($x == $y - 3) {\n        return $y;\n    }\n    if ($y == $x - 3) {\n        return $x;\n    }\n    if ($x == $y - 4) {\n        return $y;\n    }\n    if ($y == $x - 4) {\n        return $x;\n    }\n    if ($x == $y - 5) {\n        return $y;\n    }\n    if ($y == $x - 5) {\n        return $x;\n    }\n    if ($x == $y - 6) {\n        return $y;\n    }\n    if ($y == $x - 6) {\n        return $x;\n    }\n    if ($x == $y - 7) {\n        return $y;\n    }\n    if ($y == $x - 7) {\n        return $x;\n    }\n    if ($x == $y - 8) {\n        return $y;\n    }\n    if ($y == $x - 8) {\n        return $x;\n    }\n    if ($x == $y - 9) {\n        return $y;\n    }\n    if ($y == $x - 9) {\n        return $x;\n    }\n    if ($x ==\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpsyv4jnh_.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $x = $x - 1;\n    $y = $y - 1;\n    $i = 0;\n    while ($x >= 0 && $y >= 0) {\n        if ($x % 2 == 0 && $y % 2 == 0) {\n            $result = $i * 2 + $x / 2;\n        }\n        $i++;\n        $x = $x / 2;\n        $y = $y / 2;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292650,
      "stdout": "\nDeprecated: Implicit conversion from float 5.5 to int loses precision in /tmp/tmp5rq_2svb.php on line 16\n\nDeprecated: Implicit conversion from float 2.75 to int loses precision in /tmp/tmp5rq_2svb.php on line 16\n\nDeprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmp5rq_2svb.php on line 16\n\nDeprecated: Implicit conversion from float 1.375 to int loses precision in /tmp/tmp5rq_2svb.php on line 16\n\nDeprecated: Implicit conversion from float 0.6875 to int loses precision in /tmp/tmp5rq_2svb.php on line 16\n\nDeprecated: Implicit conversion from float 0.875 to int loses precision in /tmp/tmp5rq_2svb.php on line 16\n\nDeprecated: Implicit conversion from float 0.34375 to int loses precision in /tmp/tmp5rq_2svb.php on line 16\n\nDeprecated: Implicit conversion from float 0.4375 to int loses precision in /tmp/tmp5rq_2svb.php on line 16\n\nDeprecated: Implicit conversion from float 0.171875 to int loses precision in /tmp/tmp5rq_2svb.php on line 16\n\nDeprecated: Implicit conversion from float 0.21875 to int loses precision in /tmp/tmp5rq_2svb.php on line 16\n\nDeprecated: Implicit conversion from float 0.0859375 to int loses precision in /tmp/tmp5rq_2svb.php on line 16\n\nDeprecated: Implicit conversion from float 0.109375 to int loses precision in /tmp/tmp5rq_2svb.php on line 16\n\nDeprecated: Implicit conversion from float 0.04296875 to int loses precision in /tmp/tmp5rq_2svb.php on line 16\n\nDeprecated: Implicit conversion from float 0.0546875 to int loses precision in /tmp/tmp5rq_2svb.php on line 16\n\nDeprecated: Implicit conversion from float 0.021484375 to int loses precision in /tmp/tmp5rq_2svb.php on line 16\n\nDeprecated: Implicit conversion from float 0.02734375 to int loses precision in /tmp/tmp5rq_2svb.php on line 16\n\nDeprecated: Implicit conversion from float 0.0107421875 to int loses precision in /tmp/tmp5rq_2svb.php on line 16\n\nDeprecated: Implicit conversion from float 0.013671875 to int loses precision in /tmp/tmp5rq_2svb.php on line 16\n\nDeprecated: Implicit conversion from float 0.00537109375 to",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = abs($x);\n    $y = abs($y);\n    if ($x > $y) {\n        return -1;\n    }\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx8vd19g2.php:31\nStack trace:\n#0 /tmp/tmpx8vd19g2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpx8vd19g2.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $i = $x;\n    while ($i <= $y) {\n        $result = max($result, $i);\n        $i += 2;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzc3qiov6.php:27\nStack trace:\n#0 /tmp/tmpzc3qiov6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzc3qiov6.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyh1_t3w1.php:29\nStack trace:\n#0 /tmp/tmpyh1_t3w1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyh1_t3w1.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $max = $y - $x + 1;\n    $i = 0;\n    while ($i < $max) {\n        $num = $x + $i;\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqrtd3mdm.php:31\nStack trace:\n#0 /tmp/tmpqrtd3mdm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqrtd3mdm.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $num = 0;\n    while ($x >= $num * 2) {\n        $num *= 2;\n    }\n    while ($y >= $num) {\n        $num += 2;\n    }\n    return $num;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292650,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            $result = $i;\n            break;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpog0yah3z.php:28\nStack trace:\n#0 /tmp/tmpog0yah3z.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpog0yah3z.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = abs($x);\n    $y = abs($y);\n    if ($x > $y) {\n        return -1;\n    }\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx8vd19g2.php:31\nStack trace:\n#0 /tmp/tmpx8vd19g2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpx8vd19g2.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $x = abs($x);\n    $y = abs($y);\n    for ($i = $x; $i <= $y; $i += 2) {\n        if ($i >= $x && $i <= $y) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgrqxadmw.php:29\nStack trace:\n#0 /tmp/tmpgrqxadmw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpgrqxadmw.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = abs($x);\n    $y = abs($y);\n    if ($x > $y) {\n        return -1;\n    }\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx8vd19g2.php:31\nStack trace:\n#0 /tmp/tmpx8vd19g2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpx8vd19g2.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $result = 0;\n    $i = $x;\n    while ($i <= $y) {\n        $result = $i;\n        $i += 2;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9n_sp632.php:31\nStack trace:\n#0 /tmp/tmp9n_sp632.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9n_sp632.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $x = $x - 1;\n    $y = $y - 1;\n    while ($x >= 0 && $y >= 0) {\n        $result = max($result, $x + $y);\n        $x -= 2;\n        $y -= 2;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wnchwxb.php:27\nStack trace:\n#0 /tmp/tmp4wnchwxb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4wnchwxb.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $x = abs($x);\n    $y = abs($y);\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n            break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoi6xwnzd.php:28\nStack trace:\n#0 /tmp/tmpoi6xwnzd.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpoi6xwnzd.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $max = $x;\n    $min = $y;\n    $result = -1;\n    $i = 0;\n    while ($max >= $min) {\n        $mid = ($max + $min) / 2;\n        if ($mid % 2 == 0) {\n            $result = $mid;\n            $max = $mid - 1;\n        } else {\n            $min = $mid + 1;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprgwic12u.php:33\nStack trace:\n#0 /tmp/tmprgwic12u.php(43): test()\n#1 {main}\n  thrown in /tmp/tmprgwic12u.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $max = $y - $x + 1;\n    $i = 0;\n    while ($i < $max) {\n        $num = $x + $i;\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbbxq4_qp.php:28\nStack trace:\n#0 /tmp/tmpbbxq4_qp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbbxq4_qp.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = $x - 1;\n    $y = $y - 1;\n    $max = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_vpreb6i.php:29\nStack trace:\n#0 /tmp/tmp_vpreb6i.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_vpreb6i.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $result = 0;\n    $i = $x;\n    while ($i <= $y) {\n        $result = $i;\n        $i += 2;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9n_sp632.php:31\nStack trace:\n#0 /tmp/tmp9n_sp632.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9n_sp632.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $x = abs($x);\n    $y = abs($y);\n    for ($i = $x; $i <= $y; $i += 2) {\n        if ($i >= $x && $i <= $y) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgrqxadmw.php:29\nStack trace:\n#0 /tmp/tmpgrqxadmw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpgrqxadmw.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            $result = $i;\n            break;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpog0yah3z.php:28\nStack trace:\n#0 /tmp/tmpog0yah3z.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpog0yah3z.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $i = $x;\n    while ($i <= $y) {\n        $result = max($result, $i);\n        $i += 2;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzc3qiov6.php:27\nStack trace:\n#0 /tmp/tmpzc3qiov6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzc3qiov6.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = $x - 1;\n    $y = $y - 1;\n    $max = -1;\n    $i = 0;\n    while ($i < $x) {\n        $i++;\n        $j = 0;\n        while ($j < $y) {\n            $j++;\n            if ($i + $j > $max) {\n                $max = $i + $j;\n            }\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbn99748r.php:33\nStack trace:\n#0 /tmp/tmpbn99748r.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpbn99748r.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = abs($x);\n    $y = abs($y);\n    if ($x > $y) {\n        return -1;\n    }\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx8vd19g2.php:31\nStack trace:\n#0 /tmp/tmpx8vd19g2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpx8vd19g2.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $max = $y - $x + 1;\n    $i = 0;\n    while ($i < $max) {\n        $num = $x + $i;\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbbxq4_qp.php:28\nStack trace:\n#0 /tmp/tmpbbxq4_qp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbbxq4_qp.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyh1_t3w1.php:29\nStack trace:\n#0 /tmp/tmpyh1_t3w1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyh1_t3w1.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $num = 0;\n    $i = $x;\n    while ($i <= $y) {\n        $num = $i;\n        $i += 2;\n    }\n    \n    return $num;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptbv199vb.php:32\nStack trace:\n#0 /tmp/tmptbv199vb.php(40): test()\n#1 {main}\n  thrown in /tmp/tmptbv199vb.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    if ($x == $y) {\n        return $x;\n    }\n    if ($x == 0) {\n        return -1;\n    }\n    if ($y == 0) {\n        return -1;\n    }\n    if ($x == 1) {\n        return $y;\n    }\n    if ($y == 1) {\n        return $x;\n    }\n    if ($x == 2) {\n        return $y;\n    }\n    if ($y == 2) {\n        return $x;\n    }\n    if ($x == 3) {\n        return $y;\n    }\n    if ($y == 3) {\n        return $x;\n    }\n    if ($x == 4) {\n        return $y;\n    }\n    if ($y == 4) {\n        return $x;\n    }\n    if ($x == 5) {\n        return $y;\n    }\n    if ($y == 5) {\n        return $x;\n    }\n    if ($x == 6) {\n        return $y;\n    }\n    if ($y == 6) {\n        return $x;\n    }\n    if ($x == 7) {\n        return $y;\n    }\n    if ($y == 7) {\n        return $x;\n    }\n    if ($x == 8) {\n        return $y;\n    }\n    if ($y == 8) {\n        return $x;\n    }\n    if ($x == 9) {\n        return $y;\n    }\n    if ($y == 9) {\n        return $x;\n    }\n    if ($x == 10) {\n        return $y;\n    }\n    if ($y == 10) {\n        return $x;\n    }\n    if ($x == 11) {\n        return $y;\n    }\n    if ($y == 11) {\n        return $x;\n    }\n    if ($x == 12) {\n        return $y;\n    }\n    if ($y == 12) {\n        return $x;\n    }\n    if ($x == 13\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp8yshrdy0.php on line 96\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i += 2) {\n        if ($i > $result) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd23sglz9.php:30\nStack trace:\n#0 /tmp/tmpd23sglz9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpd23sglz9.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = abs($x);\n    $y = abs($y);\n    if ($x > $y) {\n        return -1;\n    }\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx8vd19g2.php:31\nStack trace:\n#0 /tmp/tmpx8vd19g2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpx8vd19g2.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $i = $x;\n    $j = $y;\n    while ($i <= $j) {\n        $k = $i + $j;\n        $l = $k / 2;\n        if ($l % 2 == 0) {\n            return $k;\n        }\n        $i = $l + 1;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nDeprecated: Implicit conversion from float 13.5 to int loses precision in /tmp/tmp5aizxwea.php on line 16\n\nDeprecated: Implicit conversion from float 14.75 to int loses precision in /tmp/tmp5aizxwea.php on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5aizxwea.php:29\nStack trace:\n#0 /tmp/tmp5aizxwea.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5aizxwea.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n            break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgrw3actl.php:29\nStack trace:\n#0 /tmp/tmpgrw3actl.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpgrw3actl.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = 0;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = max($result, $i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq5j8qfz.php:34\nStack trace:\n#0 /tmp/tmpoq5j8qfz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpoq5j8qfz.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = $x + 1;\n    $y = $y + 1;\n    $max = $x;\n    $min = $y;\n    while ($max >= $min) {\n        $mid = ($max + $min) / 2;\n        if ($mid % 2 == 0) {\n            $max = $mid;\n        } else {\n            $min = $mid;\n        }\n    }\n    if ($max == $min) {\n        return -1;\n    } else {\n        return $max;\n    }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi7u8xwq_.php:35\nStack trace:\n#0 /tmp/tmpi7u8xwq_.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpi7u8xwq_.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $result = -1;\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $x = abs($x);\n    $y = abs($y);\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $max = $y - $x + 1;\n    $i = 0;\n    while ($i < $max) {\n        $num = $x + $i;\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqrtd3mdm.php:31\nStack trace:\n#0 /tmp/tmpqrtd3mdm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqrtd3mdm.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $n = $y - $x + 1;\n    $i = $x;\n    $j = $y;\n    \n    while ($i <= $j) {\n        if ($i % 2 == 0 && $j % 2 == 0) {\n            $k = $i + $j;\n            if ($k > $n) {\n                return -1;\n            }\n            if ($k == $n) {\n                return $k;\n            }\n        }\n        $i += 2;\n        $j -= 2;\n    }\n    \n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpunoxvxy9.php:41\nStack trace:\n#0 /tmp/tmpunoxvxy9.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpunoxvxy9.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $n = $x;\n    while ($n <= $y) {\n        if ($n % 2 == 0) {\n            return $n;\n        }\n        $n++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpww5v_vfa.php:29\nStack trace:\n#0 /tmp/tmpww5v_vfa.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpww5v_vfa.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $num = $x;\n    while ($num <= $y) {\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $num++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps28crfzh.php:29\nStack trace:\n#0 /tmp/tmps28crfzh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmps28crfzh.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $i = $x;\n    while ($i <= $y) {\n        $result = max($result, $i);\n        $i += 2;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzc3qiov6.php:27\nStack trace:\n#0 /tmp/tmpzc3qiov6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzc3qiov6.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = $x - 1;\n    $y = $y - 1;\n    $max = -1;\n    $i = 0;\n    while ($i < $x) {\n        $i = $i + 2;\n        if ($i > $y) {\n            break;\n        }\n        $max = $max > $i ? $max : $i;\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8dm114sd.php:30\nStack trace:\n#0 /tmp/tmp8dm114sd.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8dm114sd.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = 0;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = max($result, $i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq5j8qfz.php:34\nStack trace:\n#0 /tmp/tmpoq5j8qfz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpoq5j8qfz.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $num = 0;\n    while ($x <= $y) {\n        $num = $num + 2;\n        $x = $x + 2;\n    }\n    return $num;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpny07w6t8.php:27\nStack trace:\n#0 /tmp/tmpny07w6t8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpny07w6t8.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    if ($x == $y) {\n        return $x;\n    }\n    if ($x == 0) {\n        return 0;\n    }\n    if ($y == 0) {\n        return -1;\n    }\n    if ($x == 1) {\n        return $y;\n    }\n    if ($y == 1) {\n        return $x;\n    }\n    if ($x == 2) {\n        return $y;\n    }\n    if ($y == 2) {\n        return $x;\n    }\n    if ($x == 3) {\n        return $y;\n    }\n    if ($y == 3) {\n        return $x;\n    }\n    if ($x == 4) {\n        return $y;\n    }\n    if ($y == 4) {\n        return $x;\n    }\n    if ($x == 5) {\n        return $y;\n    }\n    if ($y == 5) {\n        return $x;\n    }\n    if ($x == 6) {\n        return $y;\n    }\n    if ($y == 6) {\n        return $x;\n    }\n    if ($x == 7) {\n        return $y;\n    }\n    if ($y == 7) {\n        return $x;\n    }\n    if ($x == 8) {\n        return $y;\n    }\n    if ($y == 8) {\n        return $x;\n    }\n    if ($x == 9) {\n        return $y;\n    }\n    if ($y == 9) {\n        return $x;\n    }\n    if ($x == 10) {\n        return $y;\n    }\n    if ($y == 10) {\n        return $x;\n    }\n    if ($x == 11) {\n        return $y;\n    }\n    if ($y == 11) {\n        return $x;\n    }\n    if ($x == 12) {\n        return $y;\n    }\n    if ($y == 12) {\n        return $x;\n    }\n    if ($x == 13)\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1oieqf3j.php on line 96\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $i = $x;\n    $j = $y;\n    while ($i <= $j) {\n        $k = $i;\n        $i += 2;\n        if ($i > $j) {\n            return $k;\n        }\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxy7zsklq.php:30\nStack trace:\n#0 /tmp/tmpxy7zsklq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpxy7zsklq.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyh1_t3w1.php:29\nStack trace:\n#0 /tmp/tmpyh1_t3w1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyh1_t3w1.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyh1_t3w1.php:29\nStack trace:\n#0 /tmp/tmpyh1_t3w1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyh1_t3w1.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    if ($x == $y) {\n        return $x;\n    }\n    $max = $x;\n    $min = $y;\n    while ($max >= $min) {\n        $mid = ($max + $min) / 2;\n        if ($mid % 2 == 0) {\n            $max = $mid;\n        } else {\n            $min = $mid + 1;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzrrsmah9.php:35\nStack trace:\n#0 /tmp/tmpzrrsmah9.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpzrrsmah9.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = abs($x);\n    $y = abs($y);\n    if ($x > $y) {\n        return -1;\n    }\n    if ($x == $y) {\n        return $x;\n    }\n    if ($x == 1) {\n        return $y;\n    }\n    if ($y == 1) {\n        return $x;\n    }\n    if ($x == 2) {\n        return $y;\n    }\n    if ($y == 2) {\n        return $x;\n    }\n    if ($x == 3) {\n        return $y;\n    }\n    if ($y == 3) {\n        return $x;\n    }\n    if ($x == 4) {\n        return $y;\n    }\n    if ($y == 4) {\n        return $x;\n    }\n    if ($x == 5) {\n        return $y;\n    }\n    if ($y == 5) {\n        return $x;\n    }\n    if ($x == 6) {\n        return $y;\n    }\n    if ($y == 6) {\n        return $x;\n    }\n    if ($x == 7) {\n        return $y;\n    }\n    if ($y == 7) {\n        return $x;\n    }\n    if ($x == 8) {\n        return $y;\n    }\n    if ($y == 8) {\n        return $x;\n    }\n    if ($x == 9) {\n        return $y;\n    }\n    if ($y == 9) {\n        return $x;\n    }\n    if ($x == 10) {\n        return $y;\n    }\n    if ($y == 10) {\n        return $x;\n    }\n    if ($x == 11) {\n        return $y;\n    }\n    if ($y == 11) {\n        return $x;\n    }\n    if ($x == 12) {\n        return $y;\n    }\n    if ($y == 12) {\n        return $x;\n    }\n    if ($x == 13) {\n        return $y;\n    }\n    if ($y == 13\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpu9ot61u7.php on line 95\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $result = -1;\n    for ($i = $x; $i <= $y; $i += 2) {\n        if ($i > $result) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq2qz54wp.php:31\nStack trace:\n#0 /tmp/tmpq2qz54wp.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpq2qz54wp.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $result = 0;\n    $i = $x;\n    while ($i <= $y) {\n        $result = $i;\n        $i += 2;\n    }\n    \n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzguydvmp.php:32\nStack trace:\n#0 /tmp/tmpzguydvmp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzguydvmp.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $x = abs($x);\n    $y = abs($y);\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n            break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoi6xwnzd.php:28\nStack trace:\n#0 /tmp/tmpoi6xwnzd.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpoi6xwnzd.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $max = $y - $x + 1;\n    $i = 0;\n    $j = 0;\n    $result = -1;\n    while ($i < $max) {\n        $k = $i + $j;\n        if ($k % 2 == 0) {\n            $result = $k;\n            break;\n        }\n        $j++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpepyi5by4.php:31\nStack trace:\n#0 /tmp/tmpepyi5by4.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpepyi5by4.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $result = -1;\n    \n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    \n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $result = 0;\n    $i = $x;\n    while ($i <= $y) {\n        $result = $i;\n        $i += 2;\n    }\n    \n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzguydvmp.php:32\nStack trace:\n#0 /tmp/tmpzguydvmp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzguydvmp.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $x = abs($x);\n    $y = abs($y);\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i += 2) {\n        if ($i > $result) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd23sglz9.php:30\nStack trace:\n#0 /tmp/tmpd23sglz9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpd23sglz9.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $max = $x;\n    $min = $y;\n    $i = $min;\n    while ($i <= $max) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoztcmwn6.php:31\nStack trace:\n#0 /tmp/tmpoztcmwn6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpoztcmwn6.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $max = $y - $x + 1;\n    $i = 0;\n    while ($i < $max) {\n        $num = $x + $i;\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdtlgl0zd.php:32\nStack trace:\n#0 /tmp/tmpdtlgl0zd.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpdtlgl0zd.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $x = abs($x);\n    $y = abs($y);\n    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    for ($i = $x; $i <= $y; $i += 2) {\n        if ($i > $result) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiljlpmqw.php:33\nStack trace:\n#0 /tmp/tmpiljlpmqw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpiljlpmqw.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $n = $x;\n    $i = 0;\n    while ($n <= $y) {\n        $n += 2;\n        $i++;\n    }\n    return $i;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdhigqx_3.php:28\nStack trace:\n#0 /tmp/tmpdhigqx_3.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpdhigqx_3.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = $x - 1;\n    $y = $y - 1;\n    $max = -1;\n    $i = 0;\n    while ($i <= $x) {\n        if ($i % 2 == 0 && $i <= $y) {\n            $max = $i;\n        }\n        $i++;\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7xwp15ma.php:29\nStack trace:\n#0 /tmp/tmp7xwp15ma.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7xwp15ma.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            $result = $i;\n            break;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpog0yah3z.php:28\nStack trace:\n#0 /tmp/tmpog0yah3z.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpog0yah3z.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $num = 0;\n    while ($x > $num) {\n        $num += 2;\n    }\n    while ($y > $num) {\n        $num += 2;\n    }\n    return $num;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4ls3dty.php:29\nStack trace:\n#0 /tmp/tmpq4ls3dty.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpq4ls3dty.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $num = 0;\n    $i = $x;\n    while ($i <= $y) {\n        $num = $i;\n        $i += 2;\n    }\n    return $num;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bjtbqx6.php:30\nStack trace:\n#0 /tmp/tmp4bjtbqx6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bjtbqx6.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = 0;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = max($result, $i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq5j8qfz.php:34\nStack trace:\n#0 /tmp/tmpoq5j8qfz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpoq5j8qfz.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $z = $x;\n    while ($z <= $y) {\n        $z *= 2;\n    }\n    return $z;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tnici0q.php:26\nStack trace:\n#0 /tmp/tmp5tnici0q.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5tnici0q.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $max = $y - $x + 1;\n    $i = 0;\n    while ($i < $max) {\n        $num = $x + $i;\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqrtd3mdm.php:31\nStack trace:\n#0 /tmp/tmpqrtd3mdm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqrtd3mdm.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            $result = $i;\n            break;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpog0yah3z.php:28\nStack trace:\n#0 /tmp/tmpog0yah3z.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpog0yah3z.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i += 2) {\n        if ($i > $result) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd23sglz9.php:30\nStack trace:\n#0 /tmp/tmpd23sglz9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpd23sglz9.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr9h0q875.php:26\nStack trace:\n#0 /tmp/tmpr9h0q875.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpr9h0q875.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $max = $x;\n    $min = $y;\n    $result = -1;\n    while ($max >= $min) {\n        $mid = ($max + $min) / 2;\n        if ($mid % 2 == 0) {\n            $result = $mid;\n            $max = $mid - 1;\n        } else {\n            $min = $mid + 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjo4jwtcm.php:31\nStack trace:\n#0 /tmp/tmpjo4jwtcm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpjo4jwtcm.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $num = $x;\n    while ($num <= $y) {\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $num++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps28crfzh.php:29\nStack trace:\n#0 /tmp/tmps28crfzh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmps28crfzh.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n            break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl92lblhr.php:26\nStack trace:\n#0 /tmp/tmpl92lblhr.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpl92lblhr.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $range = $y - $x + 1;\n    $max = $range / 2;\n    $i = 0;\n    $num = -1;\n    while ($i < $max) {\n        $num = $x + $i;\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $i++;\n    }\n    return $num;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp67kfflal.php:33\nStack trace:\n#0 /tmp/tmp67kfflal.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp67kfflal.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyh1_t3w1.php:29\nStack trace:\n#0 /tmp/tmpyh1_t3w1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyh1_t3w1.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = 0;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu1pup_3f.php:34\nStack trace:\n#0 /tmp/tmpu1pup_3f.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpu1pup_3f.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $max = $x;\n    $min = $y;\n    $i = $min;\n    $num = 0;\n    while ($i <= $max) {\n        $num = $i;\n        $i += 2;\n    }\n    return $num;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuug27bsb.php:30\nStack trace:\n#0 /tmp/tmpuug27bsb.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpuug27bsb.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $n = $x;\n    $i = $y;\n    while ($n >= $i) {\n        $n -= $i;\n        $i /= 2;\n    }\n    return $i * 2;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo9du4n5m.php:28\nStack trace:\n#0 /tmp/tmpo9du4n5m.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpo9du4n5m.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $result = 0;\n    $i = $x;\n    while ($i <= $y) {\n        $result = $i;\n        $i += 2;\n    }\n    \n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzguydvmp.php:32\nStack trace:\n#0 /tmp/tmpzguydvmp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzguydvmp.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $z = $x;\n    while ($z <= $y) {\n        if ($z % 2 == 0) {\n            return $z;\n        }\n        $z++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7k86tukm.php:29\nStack trace:\n#0 /tmp/tmp7k86tukm.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7k86tukm.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $max = $y - $x + 1;\n    $i = 0;\n    while ($i < $max) {\n        $num = $x + $i;\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqrtd3mdm.php:31\nStack trace:\n#0 /tmp/tmpqrtd3mdm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqrtd3mdm.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $x = abs($x);\n    $y = abs($y);\n    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    for ($i = $x; $i <= $y; $i += 2) {\n        if ($i > $result) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiljlpmqw.php:33\nStack trace:\n#0 /tmp/tmpiljlpmqw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpiljlpmqw.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $max = $x;\n    $min = $y;\n    $result = -1;\n    $i = $min;\n    while ($i <= $max) {\n        $result = $i;\n        $i += 2;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3tgvpmz.php:27\nStack trace:\n#0 /tmp/tmpz3tgvpmz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz3tgvpmz.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $x = $x - 1;\n    $y = $y - 1;\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            $result = $i;\n            break;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwi6soeih.php:30\nStack trace:\n#0 /tmp/tmpwi6soeih.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpwi6soeih.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            $result = $i;\n            break;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpog0yah3z.php:28\nStack trace:\n#0 /tmp/tmpog0yah3z.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpog0yah3z.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $max = $y - $x + 1;\n    $i = 0;\n    while ($i < $max) {\n        $num = $x + $i;\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbbxq4_qp.php:28\nStack trace:\n#0 /tmp/tmpbbxq4_qp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbbxq4_qp.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $max = $x;\n    $min = $y;\n    $result = -1;\n    $i = $min;\n    while ($i <= $max) {\n        $result = $i;\n        $i += 2;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3tgvpmz.php:27\nStack trace:\n#0 /tmp/tmpz3tgvpmz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz3tgvpmz.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $max = $x;\n    $min = $y;\n    $i = $min;\n    while ($i <= $max) {\n        $temp = $i;\n        $i += 2;\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($i > $max) {\n            $i = $min;\n        }\n        if ($\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmppor7_h8k.php on line 84\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $max = $y - $x + 1;\n    $i = 0;\n    while ($i < $max) {\n        $num = $x + $i;\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqrtd3mdm.php:31\nStack trace:\n#0 /tmp/tmpqrtd3mdm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqrtd3mdm.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = $x - 1;\n    $y = $y - 1;\n    $max = 0;\n    $i = 0;\n    while ($i <= $x) {\n        $max = max($max, $y - $i);\n        $i++;\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvck7kxlf.php:28\nStack trace:\n#0 /tmp/tmpvck7kxlf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvck7kxlf.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $result = -1;\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    if ($x == $y) {\n        return $x;\n    }\n    if ($x == 0) {\n        return -1;\n    }\n    if ($y == 0) {\n        return -1;\n    }\n    if ($x == 1) {\n        return $y;\n    }\n    if ($y == 1) {\n        return $x;\n    }\n    if ($x == $y) {\n        return $x;\n    }\n    if ($x == $y - 1) {\n        return $y;\n    }\n    if ($y == $x - 1) {\n        return $x;\n    }\n    if ($x == $y + 1) {\n        return $y;\n    }\n    if ($y == $x + 1) {\n        return $x;\n    }\n    if ($x % 2 == 0) {\n        return $x;\n    }\n    if ($y % 2 == 0) {\n        return $y;\n    }\n    if ($x % 2 == 1) {\n        return $x;\n    }\n    if ($y % 2 == 1) {\n        return $y;\n    }\n    if ($x % 2 == 0 && $y % 2 == 0) {\n        return $x;\n    }\n    if ($x % 2 == 1 && $y % 2 == 1) {\n        return $y;\n    }\n    if ($x % 2 == 0 && $y % 2 == 1) {\n        return $x;\n    }\n    if ($x % 2 == 1 && $y % 2 == 0) {\n        return $y;\n    }\n    if ($x % 2 == 0 && $y % 2 == 1) {\n        return $x;\n    }\n    if ($x % 2 == 1 && $y % 2 == 1) {\n        return $y;\n    }\n    if ($x % 2 == 0 && $y % 2 == 0) {\n        return $x;\n    }\n    if ($x % 2 == 1 && $y % 2 == 0) {\n        return $y;\n    }\n    if ($\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp7_cw1lal.php on line 81\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i += 2) {\n        if ($i > $result) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd23sglz9.php:30\nStack trace:\n#0 /tmp/tmpd23sglz9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpd23sglz9.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i += 2) {\n        if ($i > $result) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd23sglz9.php:30\nStack trace:\n#0 /tmp/tmpd23sglz9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpd23sglz9.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $max = $y - $x + 1;\n    $i = 0;\n    while ($i < $max) {\n        $num = $x + $i;\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbbxq4_qp.php:28\nStack trace:\n#0 /tmp/tmpbbxq4_qp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbbxq4_qp.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $max = $y - $x + 1;\n    $i = 0;\n    while ($i < $max) {\n        $num = $x + $i;\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqrtd3mdm.php:31\nStack trace:\n#0 /tmp/tmpqrtd3mdm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqrtd3mdm.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $n = $x;\n    while ($n <= $y) {\n        if ($n % 2 == 0) {\n            return $n;\n        }\n        $n++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpww5v_vfa.php:29\nStack trace:\n#0 /tmp/tmpww5v_vfa.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpww5v_vfa.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $max = $y - $x + 1;\n    $i = 0;\n    while ($i < $max) {\n        $num = $x + $i;\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbbxq4_qp.php:28\nStack trace:\n#0 /tmp/tmpbbxq4_qp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbbxq4_qp.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $max = $x;\n    $min = $y;\n    $result = -1;\n    $i = $min;\n    while ($i <= $max) {\n        $result = $i;\n        $i += 2;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3tgvpmz.php:27\nStack trace:\n#0 /tmp/tmpz3tgvpmz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz3tgvpmz.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    \n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpux0o7bva.php:31\nStack trace:\n#0 /tmp/tmpux0o7bva.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpux0o7bva.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $max = $x;\n    $min = $y;\n    \n    $i = $min;\n    while ($i <= $max) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    \n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihdrowq0.php:34\nStack trace:\n#0 /tmp/tmpihdrowq0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpihdrowq0.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $n = $x;\n    while ($n <= $y) {\n        if ($n % 2 == 0) {\n            return $n;\n        }\n        $n++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpww5v_vfa.php:29\nStack trace:\n#0 /tmp/tmpww5v_vfa.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpww5v_vfa.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $max = $y - $x + 1;\n    $i = 0;\n    while ($i < $max) {\n        $num = $x + $i;\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbbxq4_qp.php:28\nStack trace:\n#0 /tmp/tmpbbxq4_qp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbbxq4_qp.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = $x - 1;\n    $y = $y - 1;\n    $max = -1;\n    $i = 0;\n    while ($i < $x) {\n        $i++;\n        $num = $i * $i;\n        if ($num > $y) {\n            break;\n        }\n        if ($num >= $max) {\n            $max = $num;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpev4pbnkd.php:33\nStack trace:\n#0 /tmp/tmpev4pbnkd.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpev4pbnkd.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyh1_t3w1.php:29\nStack trace:\n#0 /tmp/tmpyh1_t3w1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyh1_t3w1.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $max = $y - $x + 1;\n    $i = 0;\n    while ($i < $max) {\n        $num = $x + $i;\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbbxq4_qp.php:28\nStack trace:\n#0 /tmp/tmpbbxq4_qp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbbxq4_qp.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i += 2) {\n        if ($i > $result) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd23sglz9.php:30\nStack trace:\n#0 /tmp/tmpd23sglz9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpd23sglz9.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $max = $x;\n    $min = $y;\n    $i = $min;\n    while ($i <= $max) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoztcmwn6.php:31\nStack trace:\n#0 /tmp/tmpoztcmwn6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpoztcmwn6.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $x = abs($x);\n    $y = abs($y);\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $z = $x;\n    while ($z <= $y) {\n        $z += 2;\n    }\n    return $z;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp34y5wbcu.php:26\nStack trace:\n#0 /tmp/tmp34y5wbcu.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp34y5wbcu.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $num = $x;\n    while ($num <= $y) {\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $num++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps28crfzh.php:29\nStack trace:\n#0 /tmp/tmps28crfzh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmps28crfzh.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $max = $y - $x + 1;\n    $i = 0;\n    while ($i < $max) {\n        $num = $x + $i;\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbbxq4_qp.php:28\nStack trace:\n#0 /tmp/tmpbbxq4_qp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbbxq4_qp.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    \n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpux0o7bva.php:31\nStack trace:\n#0 /tmp/tmpux0o7bva.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpux0o7bva.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = abs($x);\n    $y = abs($y);\n    if ($x > $y) {\n        return -1;\n    }\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx8vd19g2.php:31\nStack trace:\n#0 /tmp/tmpx8vd19g2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpx8vd19g2.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $x = $x - 1;\n    $y = $y - 1;\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            $result = $i;\n            break;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwi6soeih.php:30\nStack trace:\n#0 /tmp/tmpwi6soeih.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpwi6soeih.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $i = $x;\n    $j = $y;\n    while ($i <= $j) {\n        $k = $i;\n        $i += 2;\n        if ($i > $j) {\n            return $k;\n        }\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxy7zsklq.php:30\nStack trace:\n#0 /tmp/tmpxy7zsklq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpxy7zsklq.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $max = $y - $x + 1;\n    $i = 0;\n    while ($i < $max) {\n        $num = $x + $i;\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbbxq4_qp.php:28\nStack trace:\n#0 /tmp/tmpbbxq4_qp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbbxq4_qp.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = $x - 1;\n    $y = $y - 1;\n    $max = -1;\n    $i = 0;\n    while ($x >= 0 && $y >= 0) {\n        if ($x % 2 == 0 && $y % 2 == 0) {\n            $max = $i;\n        }\n        $i++;\n        $x = $x / 2;\n        $y = $y / 2;\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292650,
      "stdout": "\nDeprecated: Implicit conversion from float 5.5 to int loses precision in /tmp/tmpbq7h6v3e.php on line 16\n\nDeprecated: Implicit conversion from float 2.75 to int loses precision in /tmp/tmpbq7h6v3e.php on line 16\n\nDeprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmpbq7h6v3e.php on line 16\n\nDeprecated: Implicit conversion from float 1.375 to int loses precision in /tmp/tmpbq7h6v3e.php on line 16\n\nDeprecated: Implicit conversion from float 0.6875 to int loses precision in /tmp/tmpbq7h6v3e.php on line 16\n\nDeprecated: Implicit conversion from float 0.875 to int loses precision in /tmp/tmpbq7h6v3e.php on line 16\n\nDeprecated: Implicit conversion from float 0.34375 to int loses precision in /tmp/tmpbq7h6v3e.php on line 16\n\nDeprecated: Implicit conversion from float 0.4375 to int loses precision in /tmp/tmpbq7h6v3e.php on line 16\n\nDeprecated: Implicit conversion from float 0.171875 to int loses precision in /tmp/tmpbq7h6v3e.php on line 16\n\nDeprecated: Implicit conversion from float 0.21875 to int loses precision in /tmp/tmpbq7h6v3e.php on line 16\n\nDeprecated: Implicit conversion from float 0.0859375 to int loses precision in /tmp/tmpbq7h6v3e.php on line 16\n\nDeprecated: Implicit conversion from float 0.109375 to int loses precision in /tmp/tmpbq7h6v3e.php on line 16\n\nDeprecated: Implicit conversion from float 0.04296875 to int loses precision in /tmp/tmpbq7h6v3e.php on line 16\n\nDeprecated: Implicit conversion from float 0.0546875 to int loses precision in /tmp/tmpbq7h6v3e.php on line 16\n\nDeprecated: Implicit conversion from float 0.021484375 to int loses precision in /tmp/tmpbq7h6v3e.php on line 16\n\nDeprecated: Implicit conversion from float 0.02734375 to int loses precision in /tmp/tmpbq7h6v3e.php on line 16\n\nDeprecated: Implicit conversion from float 0.0107421875 to int loses precision in /tmp/tmpbq7h6v3e.php on line 16\n\nDeprecated: Implicit conversion from float 0.013671875 to int loses precision in /tmp/tmpbq7h6v3e.php on line 16\n\nDeprecated: Implicit conversion from float 0.00537109375 to",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $n = $x;\n    while ($n <= $y) {\n        if ($n % 2 == 0) {\n            return $n;\n        }\n        $n++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpww5v_vfa.php:29\nStack trace:\n#0 /tmp/tmpww5v_vfa.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpww5v_vfa.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyh1_t3w1.php:29\nStack trace:\n#0 /tmp/tmpyh1_t3w1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyh1_t3w1.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = abs($x);\n    $y = abs($y);\n    $max = max($x, $y);\n    $min = min($x, $y);\n    $i = $min;\n    $j = $min;\n    $even = false;\n    while ($i <= $max) {\n        if ($i % 2 == 0) {\n            $even = true;\n        }\n        if ($i >= $min && $i <= $max && $j >= $min && $j <= $max && $even) {\n            return $i;\n        }\n        $i++;\n        $j++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwpriw_kb.php:36\nStack trace:\n#0 /tmp/tmpwpriw_kb.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpwpriw_kb.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = abs($x);\n    $y = abs($y);\n    if ($x > $y) {\n        return -1;\n    }\n    $max = $x;\n    $min = $y;\n    $i = $min;\n    $j = $min;\n    while ($i <= $max) {\n        $i = $i + 2;\n        $j = $j + 2;\n        if ($i > $max || $j > $max) {\n            break;\n        }\n        if ($i >= $min && $j >= $min) {\n            $max = max($i, $j);\n        }\n    }\n    if ($max == $min) {\n        return -1;\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_l66xbae.php:41\nStack trace:\n#0 /tmp/tmp_l66xbae.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp_l66xbae.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = $x - 1;\n    $y = $y - 1;\n    $max = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_vpreb6i.php:29\nStack trace:\n#0 /tmp/tmp_vpreb6i.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_vpreb6i.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $max = $x;\n    $min = $y;\n    $i = $min;\n    while ($i <= $max) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoztcmwn6.php:31\nStack trace:\n#0 /tmp/tmpoztcmwn6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpoztcmwn6.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $x = $x + 1;\n    $y = $y + 1;\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i = $i + 2;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgvgb584l.php:31\nStack trace:\n#0 /tmp/tmpgvgb584l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgvgb584l.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            $result = $i;\n            break;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpog0yah3z.php:28\nStack trace:\n#0 /tmp/tmpog0yah3z.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpog0yah3z.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $max = $y - $x + 1;\n    $i = 0;\n    while ($i < $max) {\n        $i += 2;\n    }\n    return $i;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphoysna9e.php:24\nStack trace:\n#0 /tmp/tmphoysna9e.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphoysna9e.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $max = $x;\n    $min = $y;\n    $i = $min;\n    $j = $min;\n    $k = $min;\n    while ($i <= $max) {\n        $i++;\n        $j = $i;\n        $k = $i;\n        while ($j <= $max) {\n            $j++;\n            $k = $j;\n            while ($k <= $max) {\n                $k++;\n                if ($k % 2 == 0 && $k >= $i && $k <= $j) {\n                    return $k;\n                }\n            }\n        }\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_ocgl_n.php:42\nStack trace:\n#0 /tmp/tmpa_ocgl_n.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpa_ocgl_n.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $x = $x - 1;\n    $y = $y - 1;\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            $result = $i;\n            break;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwi6soeih.php:30\nStack trace:\n#0 /tmp/tmpwi6soeih.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpwi6soeih.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = 0;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu1pup_3f.php:34\nStack trace:\n#0 /tmp/tmpu1pup_3f.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpu1pup_3f.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $result = 0;\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n        $i++;\n    }\n    \n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptjeuygwn.php:38\nStack trace:\n#0 /tmp/tmptjeuygwn.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptjeuygwn.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $x = abs($x);\n    $y = abs($y);\n    if ($x > $y) {\n        $tmp = $x;\n        $x = $y;\n        $y = $tmp;\n    }\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n            break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ex6d_sz.php:33\nStack trace:\n#0 /tmp/tmp1ex6d_sz.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp1ex6d_sz.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = $x - 1;\n    $y = $y - 1;\n    $max = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_vpreb6i.php:29\nStack trace:\n#0 /tmp/tmp_vpreb6i.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_vpreb6i.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $z = $x;\n    while ($z <= $y) {\n        $z *= 2;\n    }\n    return $z;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tnici0q.php:26\nStack trace:\n#0 /tmp/tmp5tnici0q.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5tnici0q.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $result = 0;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = max($result, $i);\n        }\n    }\n    \n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpay_bik5w.php:36\nStack trace:\n#0 /tmp/tmpay_bik5w.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpay_bik5w.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $num = 0;\n    while ($x >= $num) {\n        $num += 2;\n    }\n    return $num;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3zbg0_hw.php:28\nStack trace:\n#0 /tmp/tmp3zbg0_hw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3zbg0_hw.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $max = $y - $x + 1;\n    $i = 0;\n    while ($i < $max) {\n        $num = $x + $i;\n        if ($num % 2 == 0) {\n            return $num;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqrtd3mdm.php:31\nStack trace:\n#0 /tmp/tmpqrtd3mdm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqrtd3mdm.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr9h0q875.php:26\nStack trace:\n#0 /tmp/tmpr9h0q875.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpr9h0q875.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = abs($x);\n    $y = abs($y);\n    if ($x > $y) {\n        return -1;\n    }\n    if ($x == $y) {\n        return $x;\n    }\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3kuh41e_.php:34\nStack trace:\n#0 /tmp/tmp3kuh41e_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp3kuh41e_.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $n = $x;\n    while ($n <= $y) {\n        if ($n % 2 == 0) {\n            return $n;\n        }\n        $n++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpww5v_vfa.php:29\nStack trace:\n#0 /tmp/tmpww5v_vfa.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpww5v_vfa.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = abs($x);\n    $y = abs($y);\n    if ($x > $y) {\n        return -1;\n    }\n    if ($x == $y) {\n        return $x;\n    }\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3kuh41e_.php:34\nStack trace:\n#0 /tmp/tmp3kuh41e_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp3kuh41e_.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = $x - 1;\n    $y = $y - 1;\n    $result = -1;\n    while ($x >= 0 && $y >= 0) {\n        $result = max($result, $x + $y);\n        $x -= 2;\n        $y -= 2;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt7bspyns.php:27\nStack trace:\n#0 /tmp/tmpt7bspyns.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpt7bspyns.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = abs($x);\n    $y = abs($y);\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyh1_t3w1.php:29\nStack trace:\n#0 /tmp/tmpyh1_t3w1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyh1_t3w1.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    if ($x == $y) {\n        return $x;\n    }\n    if ($x == 0) {\n        return 0;\n    }\n    if ($y == 0) {\n        return -1;\n    }\n    if ($x == 1) {\n        return $y;\n    }\n    if ($y == 1) {\n        return $x;\n    }\n    if ($x == 2) {\n        return $y;\n    }\n    if ($y == 2) {\n        return $x;\n    }\n    if ($x == 3) {\n        return $y;\n    }\n    if ($y == 3) {\n        return $x;\n    }\n    if ($x == 4) {\n        return $y;\n    }\n    if ($y == 4) {\n        return $x;\n    }\n    if ($x == 5) {\n        return $y;\n    }\n    if ($y == 5) {\n        return $x;\n    }\n    if ($x == 6) {\n        return $y;\n    }\n    if ($y == 6) {\n        return $x;\n    }\n    if ($x == 7) {\n        return $y;\n    }\n    if ($y == 7) {\n        return $x;\n    }\n    if ($x == 8) {\n        return $y;\n    }\n    if ($y == 8) {\n        return $x;\n    }\n    if ($x == 9) {\n        return $y;\n    }\n    if ($y == 9) {\n        return $x;\n    }\n    if ($x == 10) {\n        return $y;\n    }\n    if ($y == 10) {\n        return $x;\n    }\n    if ($x == 11) {\n        return $y;\n    }\n    if ($y == 11) {\n        return $x;\n    }\n    if ($x == 12) {\n        return $y;\n    }\n    if ($y == 12) {\n        return $x;\n    }\n    if ($x == 13)\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1oieqf3j.php on line 96\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $x = abs($x);\n    $y = abs($y);\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr9h0q875.php:26\nStack trace:\n#0 /tmp/tmpr9h0q875.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpr9h0q875.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n            break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgrw3actl.php:29\nStack trace:\n#0 /tmp/tmpgrw3actl.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpgrw3actl.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyh1_t3w1.php:29\nStack trace:\n#0 /tmp/tmpyh1_t3w1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyh1_t3w1.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $max = $x;\n    $min = $y;\n    $i = $min;\n    while ($i <= $max) {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n        $i++;\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvzp31j25.php:31\nStack trace:\n#0 /tmp/tmpvzp31j25.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvzp31j25.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $result = 0;\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n        $i++;\n    }\n    \n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptjeuygwn.php:38\nStack trace:\n#0 /tmp/tmptjeuygwn.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptjeuygwn.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n            break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl92lblhr.php:26\nStack trace:\n#0 /tmp/tmpl92lblhr.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpl92lblhr.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $max = $x;\n    $min = $y;\n    $i = $min;\n    while ($i <= $max) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoztcmwn6.php:31\nStack trace:\n#0 /tmp/tmpoztcmwn6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpoztcmwn6.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $z = $x;\n    while ($z <= $y) {\n        $z *= 2;\n    }\n    return $z;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tnici0q.php:26\nStack trace:\n#0 /tmp/tmp5tnici0q.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5tnici0q.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = abs($x);\n    $y = abs($y);\n    if ($x > $y) {\n        return -1;\n    }\n    if ($x == $y) {\n        return $x;\n    }\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3kuh41e_.php:34\nStack trace:\n#0 /tmp/tmp3kuh41e_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp3kuh41e_.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $n = $x;\n    while ($n <= $y) {\n        if ($n % 2 == 0) {\n            return $n;\n        }\n        $n += 1;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6sakq1hp.php:29\nStack trace:\n#0 /tmp/tmp6sakq1hp.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6sakq1hp.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            $result = $i;\n            break;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpog0yah3z.php:28\nStack trace:\n#0 /tmp/tmpog0yah3z.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpog0yah3z.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $max = $x;\n    $min = $y;\n    $i = $min;\n    $j = $min;\n    while ($i <= $max) {\n        $i = $i + 2;\n        $j = $j + 2;\n        if ($i > $max || $j > $max) {\n            return -1;\n        }\n        if ($i >= $min && $j >= $min) {\n            $max = $i;\n            $min = $j;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0f0n6r6a.php:37\nStack trace:\n#0 /tmp/tmp0f0n6r6a.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp0f0n6r6a.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = abs($x);\n    $y = abs($y);\n    if ($x > $y) {\n        return -1;\n    }\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx8vd19g2.php:31\nStack trace:\n#0 /tmp/tmpx8vd19g2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpx8vd19g2.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $max = $x;\n    $min = $y;\n    $i = $min;\n    while ($i <= $max) {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n        $i++;\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvzp31j25.php:31\nStack trace:\n#0 /tmp/tmpvzp31j25.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvzp31j25.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $result = 0;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = max($result, $i);\n        }\n    }\n    \n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpay_bik5w.php:36\nStack trace:\n#0 /tmp/tmpay_bik5w.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpay_bik5w.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $max = $x;\n    $min = $y;\n    $i = $min;\n    while ($i <= $max) {\n        $num = $i;\n        $i += 2;\n        if ($i > $max) {\n            break;\n        }\n        if ($num % 2 == 0) {\n            return $num;\n        }\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc5_m807y.php:35\nStack trace:\n#0 /tmp/tmpc5_m807y.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpc5_m807y.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $max = $x;\n    $min = $y;\n    $i = $min;\n    while ($i <= $max) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoztcmwn6.php:31\nStack trace:\n#0 /tmp/tmpoztcmwn6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpoztcmwn6.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $num = $x;\n    $i = $x;\n    while ($i <= $y) {\n        $i += 2;\n        if ($i > $y) {\n            break;\n        }\n        if ($i % 2 == 0) {\n            $num = $i;\n        }\n    }\n    return $num;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24wrw76o.php:36\nStack trace:\n#0 /tmp/tmp24wrw76o.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp24wrw76o.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $x = $x - 1;\n    $y = $y - 1;\n    $i = $x;\n    while ($i <= $y) {\n        $result = $i;\n        $i += 2;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdp9heomt.php:27\nStack trace:\n#0 /tmp/tmpdp9heomt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdp9heomt.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $x = abs($x);\n    $y = abs($y);\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n            break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoi6xwnzd.php:28\nStack trace:\n#0 /tmp/tmpoi6xwnzd.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpoi6xwnzd.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $n = $x;\n    while ($n <= $y) {\n        if ($n % 2 == 0) {\n            return $n;\n        }\n        $n++;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpww5v_vfa.php:29\nStack trace:\n#0 /tmp/tmpww5v_vfa.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpww5v_vfa.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $x = $x - 1;\n    $y = $y - 1;\n    $max = 0;\n    for ($i = $x; $i <= $y; $i++) {\n        $max = max($max, $i);\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw3tw2pns.php:30\nStack trace:\n#0 /tmp/tmpw3tw2pns.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpw3tw2pns.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $num = 0;\n    $i = $x;\n    while ($i <= $y) {\n        $num = $i;\n        $i += 2;\n    }\n    return $num;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bjtbqx6.php:30\nStack trace:\n#0 /tmp/tmp4bjtbqx6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bjtbqx6.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $result = 0;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = max($result, $i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ret_fz6.php:35\nStack trace:\n#0 /tmp/tmp3ret_fz6.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp3ret_fz6.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $result = 0;\n    $i = $x;\n    while ($i <= $y) {\n        $result = $i;\n        $i += 2;\n    }\n    \n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzguydvmp.php:32\nStack trace:\n#0 /tmp/tmpzguydvmp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzguydvmp.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $result = 0;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    \n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzrdgnr2d.php:36\nStack trace:\n#0 /tmp/tmpzrdgnr2d.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzrdgnr2d.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $x = abs($x);\n    $y = abs($y);\n    if ($x > $y) {\n        return -1;\n    }\n    $result = 0;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = max($result, $i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_t8v4r5.php:36\nStack trace:\n#0 /tmp/tmpu_t8v4r5.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpu_t8v4r5.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    \n    $result = -1;\n    for ($i = $x; $i <= $y; $i += 2) {\n        if ($i > $result) {\n            $result = $i;\n        }\n    }\n    \n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph6y8uwb1.php:32\nStack trace:\n#0 /tmp/tmph6y8uwb1.php(40): test()\n#1 {main}\n  thrown in /tmp/tmph6y8uwb1.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $z = $x;\n    while ($z <= $y) {\n        $z = $z + $z;\n        if ($z % 2 == 0) {\n            return $z;\n        }\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxne65dmd.php:29\nStack trace:\n#0 /tmp/tmpxne65dmd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxne65dmd.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $result = -1;\n    $x = $x - 1;\n    $y = $y - 1;\n    $i = 0;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n            if ($i <= $x) {\n                $result = $i;\n                break;\n            }\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdmk1xehz.php:32\nStack trace:\n#0 /tmp/tmpdmk1xehz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpdmk1xehz.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    $result = 0;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = max($result, $i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq5j8qfz.php:34\nStack trace:\n#0 /tmp/tmpoq5j8qfz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpoq5j8qfz.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// This function takes two positive numbers x and y and returns the\n// biggest even integer number that is in the range [x, y] inclusive. If \n// there's no such number, then the function should return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x, $y) {\n    $max = $x;\n    $min = $y;\n    $result = -1;\n    while ($max >= $min) {\n        $mid = ($max + $min) / 2;\n        if ($mid % 2 == 0) {\n            $result = $mid;\n            $max = $mid - 1;\n        } else {\n            $min = $mid + 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292635,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjo4jwtcm.php:31\nStack trace:\n#0 /tmp/tmpjo4jwtcm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpjo4jwtcm.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
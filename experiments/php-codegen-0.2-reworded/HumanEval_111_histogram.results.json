{
  "name": "HumanEval_111_histogram",
  "language": "php",
  "prompt": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n",
  "tests": "function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_index = 0;\n    $test = $test.split(\" \");\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_index = $i;\n        }\n    }\n    return $count[$test[$max_index]];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpn41mqhd6.php:20\nStack trace:\n#0 /tmp/tmpn41mqhd6.php(36): histogram('a b b a')\n#1 /tmp/tmpn41mqhd6.php(40): candidate('a b b a')\n#2 /tmp/tmpn41mqhd6.php(50): test()\n#3 {main}\n  thrown in /tmp/tmpn41mqhd6.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    $max = 0;\n    $max_index = 0;\n    $max_count = 0;\n    $count = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        $count = 0;\n        $count = $count + 1;\n        if ($count > $max_count) {\n            $max_count = $count;\n            $max_index = $i;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n        $count = 0;\n    }\n    $result[$max_index] = $max;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hfpaadx.php:44\nStack trace:\n#0 /tmp/tmp8hfpaadx.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp8hfpaadx.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        if (!isset($result[$test[$i]])) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]]++;\n        }\n        if ($result[$test[$i]] > $max) {\n            $max = $result[$test[$i]];\n        }\n    }\n    for ($i = 0; $i < strlen($test); $i++) {\n        if ($result[$test[$i]] == $max) {\n            $count++;\n        }\n    }\n    $result = array_keys($result);\n    $result = array_sort($result, function($a, $b) {\n        return $result[$a] - $result[$b];\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpfzjar4ez.php:36\nStack trace:\n#0 /tmp/tmpfzjar4ez.php(43): histogram('a b b a')\n#1 /tmp/tmpfzjar4ez.php(47): candidate('a b b a')\n#2 /tmp/tmpfzjar4ez.php(57): test()\n#3 {main}\n  thrown in /tmp/tmpfzjar4ez.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    $result = [];\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($test[$i] === $max_letter) {\n            $result.push($test[$i]);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpc5c1rdb_.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    $result = [];\n    for ($i = 0; $i < $max; $i++) {\n        $result.push($max_letter);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpsknt1zgk.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.replace(/\\s/g, '');\n    var $result = {};\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($result[$test[$i]] === undefined) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]]++;\n        }\n    }\n    var $max = 0;\n    var $max_index = '';\n    for (var $key in $result) {\n        if ($result[$key] > $max) {\n            $max = $result[$key];\n            $max_index = $key;\n        }\n    }\n    return $result[$max_index];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmpbyhh0haa.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $test = $test.replace(/\\s+/g, ' ');\n    $test = $test.split(' ');\n    $count = {};\n    $max = 0;\n    $max_key = '';\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]] += 1;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    $count = $count[$max_key];\n    return $count === undefined ? [] : $count;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmpcxnmz5j7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $test = $test.replace(/\\s+/g, ' ');\n    $test = $test.split(' ');\n    $count = {};\n    $max = 0;\n    $max_letter = '';\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($test[$i] in $count) {\n            $count[$test[$i]]++;\n        } else {\n            $count[$test[$i]] = 1;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    $result = [];\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($test[$i] == $max_letter) {\n            $result.push($test[$i]);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmp2otfv363.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $test = $test.replace(/\\s/g, '');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmphlj_ba5k.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    var $count = {};\n    var $max = 0;\n    var $result = [];\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n        }\n    }\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === $max) {\n            $result.push($test[$i]);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpwhs23ehm.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    var $max_letter = \"\";\n    for (var $i = 0; $i < $test.length; $i++) {\n        var $letter = $test.substr($i, 1);\n        if ($result[$letter] === undefined) {\n            $result[$letter] = 1;\n        } else {\n            $result[$letter]++;\n        }\n        if ($result[$letter] > $max) {\n            $max = $result[$letter];\n            $max_letter = $letter;\n        }\n    }\n    $count = $max;\n    $result[$max_letter] = $count;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpeygpvshm.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        $count[$test[$i]] = $count[$test[$i]] ? $count[$test[$i]] + 1 : 1;\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n        }\n    }\n    $result = array();\n    for ($i = 0; $i < strlen($test); $i++) {\n        if ($count[$test[$i]] == $max) {\n            $result[$test[$i]] = $count[$test[$i]];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nWarning: Undefined array key \"a\" in /tmp/tmpq01f37u3.php on line 20\n\nWarning: Undefined array key \" \" in /tmp/tmpq01f37u3.php on line 20\n\nWarning: Undefined array key \"b\" in /tmp/tmpq01f37u3.php on line 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq01f37u3.php:39\nStack trace:\n#0 /tmp/tmpq01f37u3.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpq01f37u3.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    $max_count = 0;\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp_fy7bm3v.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ( $i = 0; $i < $test.length; $i++ ) {\n        if ( $count[$test[$i]] === undefined ) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ( $count[$test[$i]] > $max ) {\n            $max = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    $result = [];\n    for ( $i = 0; $i < $test.length; $i++ ) {\n        if ( $count[$test[$i]] === $max ) {\n            $result.push($test[$i]);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp14fhd368.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    var $count = {};\n    var $max = 0;\n    var $max_key = \"\";\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    var $result = [];\n    for (var $key in $count) {\n        if ($count[$key] === $max) {\n            $result.push($key);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp6yey3qkx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    $result = [];\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    for (var $key in $count) {\n        if ($count[$key] === $max) {\n            $result.push($key);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpcp49lkt5.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_count = 0;\n    $result = [];\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max = $test[$i];\n        }\n    }\n    for ($i in $count) {\n        if ($count[$i] === $max_count) {\n            $result.push($i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpnlo6zpmv.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    var $max_letter = '';\n    var $max_count = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        var $letter = $test.substr($i, 1);\n        if ($result[$letter] === undefined) {\n            $result[$letter] = 1;\n        } else {\n            $result[$letter]++;\n        }\n        if ($result[$letter] > $max_count) {\n            $max_count = $result[$letter];\n            $max_letter = $letter;\n        }\n        $count += $result[$letter];\n    }\n    $max = $count;\n    $count = 0;\n    for (var $key in $result) {\n        $count += $result[$key];\n        if ($count > $max) {\n            $max = $count;\n            $max_letter = $key;\n        }\n    }\n    $result[$max_letter] = $max;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpcpi6782e.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    $result = [];\n    for ($i in $count) {\n        if ($count[$i] === $max) {\n            $result.push($i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmptgslvzdv.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_count = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < strlen($test); $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    $max_count = $max_count + 1;\n    $result = array();\n    for ($i = 0; $i < strlen($count); $i++) {\n        if ($count[$i] === $max_count) {\n            $result[$i] = $max_letter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nWarning: Undefined array key \"a\" in /tmp/tmpssqouooh.php on line 22\n\nFatal error: Uncaught Error: Undefined constant \"undefined\" in /tmp/tmpssqouooh.php:22\nStack trace:\n#0 /tmp/tmpssqouooh.php(43): histogram('a b b a')\n#1 /tmp/tmpssqouooh.php(47): candidate('a b b a')\n#2 /tmp/tmpssqouooh.php(57): test()\n#3 {main}\n  thrown in /tmp/tmpssqouooh.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $result = [];\n    $max = 0;\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($result[$test[$i]] === undefined) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]]++;\n        }\n        if ($result[$test[$i]] > $max) {\n            $max = $result[$test[$i]];\n        }\n    }\n    $result = $result.sort();\n    $result = $result.reverse();\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpv3q0eeev.php:17\nStack trace:\n#0 /tmp/tmpv3q0eeev.php(36): histogram('a b b a')\n#1 /tmp/tmpv3q0eeev.php(40): candidate('a b b a')\n#2 /tmp/tmpv3q0eeev.php(50): test()\n#3 {main}\n  thrown in /tmp/tmpv3q0eeev.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    for ($i = 0; $i < strlen($test); $i++) {\n        $c = $test[$i];\n        if (!isset($count[$c])) {\n            $count[$c] = 1;\n        } else {\n            $count[$c]++;\n        }\n    }\n    $max = 0;\n    $max_c = \"\";\n    for ($i = 0; $i < strlen($count); $i++) {\n        if ($count[$i] > $max) {\n            $max = $count[$i];\n            $max_c = $i;\n        }\n    }\n    return $count[$max_c];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpxorup4mt.php:28\nStack trace:\n#0 /tmp/tmpxorup4mt.php(38): histogram('a b b a')\n#1 /tmp/tmpxorup4mt.php(42): candidate('a b b a')\n#2 /tmp/tmpxorup4mt.php(52): test()\n#3 {main}\n  thrown in /tmp/tmpxorup4mt.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    return $count[$max_key];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp57mmz72s.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_letter = \"\";\n    $max_count = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        $letter = $test[$i];\n        if (!isset($count[$letter])) {\n            $count[$letter] = 1;\n        } else {\n            $count[$letter]++;\n        }\n        if ($count[$letter] > $max_count) {\n            $max_count = $count[$letter];\n            $max_letter = $letter;\n        }\n    }\n    $max_count = $max_count + 1;\n    $result = array();\n    for ($i = 0; $i < strlen($count); $i++) {\n        if ($count[$i] == $max_count) {\n            $result[$i] = $max_letter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpihht9_3a.php:35\nStack trace:\n#0 /tmp/tmpihht9_3a.php(44): histogram('a b b a')\n#1 /tmp/tmpihht9_3a.php(48): candidate('a b b a')\n#2 /tmp/tmpihht9_3a.php(58): test()\n#3 {main}\n  thrown in /tmp/tmpihht9_3a.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        $c = $test[$i];\n        if (!isset($result[$c])) {\n            $result[$c] = 1;\n        } else {\n            $result[$c]++;\n        }\n        $count++;\n    }\n    $max = 0;\n    $max_c = \"\";\n    for ($i = 0; $i < strlen($result); $i++) {\n        if ($result[$i] > $max) {\n            $max = $result[$i];\n            $max_c = $i;\n        }\n    }\n    $result[$max_c] = $count;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmp4v676g87.php:30\nStack trace:\n#0 /tmp/tmp4v676g87.php(41): histogram('a b b a')\n#1 /tmp/tmp4v676g87.php(45): candidate('a b b a')\n#2 /tmp/tmp4v676g87.php(55): test()\n#3 {main}\n  thrown in /tmp/tmp4v676g87.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $test = $test.split(\" \");\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n    }\n    $max = 0;\n    $max_index = \"\";\n    for ($i = 0; $i < $count.length; $i++) {\n        if ($count[$i] > $max) {\n            $max = $count[$i];\n            $max_index = $i;\n        }\n    }\n    return $count[$max_index];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpaae7zubi.php:18\nStack trace:\n#0 /tmp/tmpaae7zubi.php(38): histogram('a b b a')\n#1 /tmp/tmpaae7zubi.php(42): candidate('a b b a')\n#2 /tmp/tmpaae7zubi.php(52): test()\n#3 {main}\n  thrown in /tmp/tmpaae7zubi.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        $c = $test[$i];\n        if ($result[$c] === undefined) {\n            $result[$c] = 1;\n        } else {\n            $result[$c]++;\n        }\n        if ($result[$c] > $max) {\n            $max = $result[$c];\n        }\n    }\n    for ($i = 0; $i < strlen($result); $i++) {\n        if ($result[$i] == $max) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nWarning: Undefined array key \"a\" in /tmp/tmpckgmwvji.php on line 22\n\nFatal error: Uncaught Error: Undefined constant \"undefined\" in /tmp/tmpckgmwvji.php:22\nStack trace:\n#0 /tmp/tmpckgmwvji.php(40): histogram('a b b a')\n#1 /tmp/tmpckgmwvji.php(44): candidate('a b b a')\n#2 /tmp/tmpckgmwvji.php(54): test()\n#3 {main}\n  thrown in /tmp/tmpckgmwvji.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    $result = [];\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    for ($i in $count) {\n        if ($count[$i] === $max) {\n            $result.push($i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp8c40pyug.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $result = {};\n    $max = 0;\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($result[$test[$i]] === undefined) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]]++;\n        }\n        if ($result[$test[$i]] > $max) {\n            $max = $result[$test[$i]];\n        }\n    }\n    $result = $result.sort(function($a, $b) {\n        return $b - $a;\n    });\n    $result = $result.sort(function($a, $b) {\n        return $a - $b;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp91c0d2r1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $test = $test.replace(/\\s/g, \"\");\n    $test = $test.split(\"\");\n    $count = {};\n    $max = 0;\n    $max_index = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_index = $i;\n        }\n    }\n    $result = [];\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === $max) {\n            $result.push($test[$i]);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmp5bq893bf.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        $letter = $test[$i];\n        if ($count[$letter] === undefined) {\n            $count[$letter] = 1;\n        } else {\n            $count[$letter]++;\n        }\n        if ($count[$letter] > $max) {\n            $max = $count[$letter];\n            $max_letter = $letter;\n        }\n    }\n    return $count[$max_letter];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp7ypb77hq.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $test = $test.replace(/\\s/g, '');\n    $test = $test.split('');\n    $count = {};\n    $max = 0;\n    $max_count = 0;\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]] += 1;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max = $test[$i];\n        }\n    }\n    $count = $count[$max];\n    return $count === undefined ? [] : [$max, $count];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmpa6qqq3qc.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    // your code goes here\n    var arr = $test.split(\" \");\n    var max = 0;\n    var max_count = 0;\n    var result = [];\n    for (var i = 0; i < arr.length; i++) {\n        var count = 0;\n        for (var j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count > max_count) {\n            max_count = count;\n            max = arr[i];\n        }\n    }\n    for (var i = 0; i < arr.length; i++) {\n        if (arr[i] == max) {\n            result.push(arr[i]);\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpp3hf0ddw.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]] += 1;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    $count = $count[$max_letter];\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpa83lu59h.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]] += 1;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    return $count[$max_key];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpfsvfh73n.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_index = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        $count[$test[$i]]++;\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_index = $i;\n        }\n    }\n    $result = array();\n    for ($i = 0; $i < strlen($test); $i++) {\n        if ($count[$test[$i]] == $max) {\n            $result[$test[$i]] = $count[$test[$i]];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nWarning: Undefined array key \"a\" in /tmp/tmph1ls3pud.php on line 21\n\nWarning: Undefined array key \" \" in /tmp/tmph1ls3pud.php on line 21\n\nWarning: Undefined array key \"b\" in /tmp/tmph1ls3pud.php on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph1ls3pud.php:41\nStack trace:\n#0 /tmp/tmph1ls3pud.php(51): test()\n#1 {main}\n  thrown in /tmp/tmph1ls3pud.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    return $count[$max_key];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp57mmz72s.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($test[$i] in $count) {\n            $count[$test[$i]]++;\n        } else {\n            $count[$test[$i]] = 1;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    return $count[$max_letter];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp7pxzkngh.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        $count = 0;\n        if ($test[$i] in $result) {\n            $count = $result[$test[$i]];\n        }\n        $count++;\n        if ($count > $max) {\n            $max = $count;\n        }\n        $result[$test[$i]] = $count;\n    }\n    $result = array_keys($result);\n    $result.sort();\n    $result = array_values($result);\n    $result.sort();\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected identifier \"in\" in /tmp/tmpn9zp2pr3.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    $count = $count[$max_key];\n    return $count === undefined ? [] : $count;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp7h2vbd7l.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    $max = 0;\n    $max_index = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        $count = $count + 1;\n        if ($count > $max) {\n            $max = $count;\n            $max_index = $i;\n        }\n        if ($count == $max) {\n            $result[$max_index] = $max_index;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiodprok8.php:39\nStack trace:\n#0 /tmp/tmpiodprok8.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpiodprok8.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $test = $test.replace(/\\s/g, '');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmphlj_ba5k.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_count = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        $c = $test[$i];\n        if (!isset($count[$c])) {\n            $count[$c] = 1;\n        } else {\n            $count[$c]++;\n        }\n        if ($count[$c] > $max_count) {\n            $max_count = $count[$c];\n            $max = $c;\n        }\n    }\n    $count = array_keys($count);\n    $count.sort();\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught ArgumentCountError: sort() expects at least 1 argument, 0 given in /tmp/tmpolqo4uzq.php:33\nStack trace:\n#0 /tmp/tmpolqo4uzq.php(33): sort()\n#1 /tmp/tmpolqo4uzq.php(38): histogram('a b b a')\n#2 /tmp/tmpolqo4uzq.php(42): candidate('a b b a')\n#3 /tmp/tmpolqo4uzq.php(52): test()\n#4 {main}\n  thrown in /tmp/tmpolqo4uzq.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    return $count[$max_key];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpubmbfm_v.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        if (!isset($result[$test[$i]])) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]]++;\n        }\n        $count++;\n    }\n    $max = 0;\n    $max_index = 0;\n    for ($i = 0; $i < strlen($result); $i++) {\n        if ($result[$i] > $max) {\n            $max = $result[$i];\n            $max_index = $i;\n        }\n    }\n    $result[$max_index] = $count;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmphwyxg7vj.php:29\nStack trace:\n#0 /tmp/tmphwyxg7vj.php(40): histogram('a b b a')\n#1 /tmp/tmphwyxg7vj.php(44): candidate('a b b a')\n#2 /tmp/tmphwyxg7vj.php(54): test()\n#3 {main}\n  thrown in /tmp/tmphwyxg7vj.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.replace(/\\s/g, '');\n    var $count = {};\n    var $result = [];\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n    }\n    for (var $key in $count) {\n        $result.push([$key, $count[$key]]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmp0ltavb93.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_index = 0;\n    $max_count = 0;\n    $max_count_index = 0;\n    $max_count_count = 0;\n    $count_index = 0;\n    $count_count = 0;\n    $count_count_index = 0;\n    $count_count_count = 0;\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpzw21cah4.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_index = 0;\n    $test = $test.split(\" \");\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_index = $i;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpepzs5gkj.php:20\nStack trace:\n#0 /tmp/tmpepzs5gkj.php(36): histogram('a b b a')\n#1 /tmp/tmpepzs5gkj.php(40): candidate('a b b a')\n#2 /tmp/tmpepzs5gkj.php(50): test()\n#3 {main}\n  thrown in /tmp/tmpepzs5gkj.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_count = 0;\n    $max_letter = \"\";\n    $letters = explode(\" \", $test);\n    for ($i = 0; $i < $letters.length; $i++) {\n        if ($count[$letters[$i]] === undefined) {\n            $count[$letters[$i]] = 1;\n        } else {\n            $count[$letters[$i]]++;\n        }\n        if ($count[$letters[$i]] > $max_count) {\n            $max_count = $count[$letters[$i]];\n            $max_letter = $letters[$i];\n        }\n    }\n    $count = array_keys($count);\n    $count.sort();\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp1fhqshqq.php:22\nStack trace:\n#0 /tmp/tmp1fhqshqq.php(39): histogram('a b b a')\n#1 /tmp/tmp1fhqshqq.php(43): candidate('a b b a')\n#2 /tmp/tmp1fhqshqq.php(53): test()\n#3 {main}\n  thrown in /tmp/tmp1fhqshqq.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    var $max_letter = '';\n    var $max_count = 0;\n    var $letters = $test.split(' ');\n    for (var $i = 0; $i < $letters.length; $i++) {\n        if ($result[$letters[$i]] === undefined) {\n            $result[$letters[$i]] = 1;\n        } else {\n            $result[$letters[$i]]++;\n        }\n        if ($result[$letters[$i]] > $max_count) {\n            $max_count = $result[$letters[$i]];\n            $max_letter = $letters[$i];\n        }\n    }\n    $count = $max_count;\n    $max = $max_letter;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpcemah_73.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $test = $test.split(\" \");\n    for ($i = 0; $i < $test.length; $i++) {\n        if (!$count[$test[$i]]) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n    }\n    $max = 0;\n    $max_index = \"\";\n    for ($i = 0; $i < $count.length; $i++) {\n        if ($count[$i] > $max) {\n            $max = $count[$i];\n            $max_index = $i;\n        }\n    }\n    $result = array();\n    $result[$max_index] = $max;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmp5us5nl32.php:18\nStack trace:\n#0 /tmp/tmp5us5nl32.php(40): histogram('a b b a')\n#1 /tmp/tmp5us5nl32.php(44): candidate('a b b a')\n#2 /tmp/tmp5us5nl32.php(54): test()\n#3 {main}\n  thrown in /tmp/tmp5us5nl32.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    $result = [];\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === $max) {\n            $result.push($test[$i]);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmppzj5652u.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_count = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < strlen($test); $i++) {\n        $letter = $test[$i];\n        if ($count[$letter] == 0) {\n            $count[$letter] = 1;\n        } else {\n            $count[$letter]++;\n        }\n        if ($count[$letter] > $max_count) {\n            $max_count = $count[$letter];\n            $max_letter = $letter;\n        }\n    }\n    $result = array();\n    for ($i = 0; $i < strlen($count); $i++) {\n        if ($count[$i] == $max_count) {\n            $result[$i] = $max_letter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nWarning: Undefined array key \"a\" in /tmp/tmpgxssx_rz.php on line 23\n\nWarning: Undefined array key \" \" in /tmp/tmpgxssx_rz.php on line 23\n\nWarning: Undefined array key \"b\" in /tmp/tmpgxssx_rz.php on line 23\n\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpgxssx_rz.php:34\nStack trace:\n#0 /tmp/tmpgxssx_rz.php(43): histogram('a b b a')\n#1 /tmp/tmpgxssx_rz.php(47): candidate('a b b a')\n#2 /tmp/tmpgxssx_rz.php(57): test()\n#3 {main}\n  thrown in /tmp/tmpgxssx_rz.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < strlen($test); $i++) {\n        $letter = $test[$i];\n        if ($result[$letter] == 0) {\n            $result[$letter] = 1;\n            $count = 1;\n        } else {\n            $count++;\n        }\n        if ($count > $max) {\n            $max = $count;\n            $max_letter = $letter;\n        }\n    }\n    $result[$max_letter] = $max;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nWarning: Undefined array key \"a\" in /tmp/tmp316ixsgq.php on line 23\n\nWarning: Undefined array key \" \" in /tmp/tmp316ixsgq.php on line 23\n\nWarning: Undefined array key \"b\" in /tmp/tmp316ixsgq.php on line 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp316ixsgq.php:43\nStack trace:\n#0 /tmp/tmp316ixsgq.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp316ixsgq.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    // your code goes here\n    var arr = $test.split(\" \");\n    var result = [];\n    var max = 0;\n    for (var i = 0; i < arr.length; i++) {\n        var count = 0;\n        for (var j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count > max) {\n            max = count;\n            result = [];\n            result[0] = arr[i];\n            result[1] = count;\n        } else if (count == max) {\n            result.push(arr[i]);\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpzdz6wtgb.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($test[$i] in $count) {\n            $count[$test[$i]]++;\n        } else {\n            $count[$test[$i]] = 1;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    return $count[$max_letter];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp7pxzkngh.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < strlen($test); $i++) {\n        $letter = $test[$i];\n        if (!isset($count[$letter])) {\n            $count[$letter] = 1;\n        } else {\n            $count[$letter]++;\n        }\n        if ($count[$letter] > $max) {\n            $max = $count[$letter];\n            $max_letter = $letter;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpba4fqi4e.php:40\nStack trace:\n#0 /tmp/tmpba4fqi4e.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpba4fqi4e.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        if (!isset($result[$test[$i]])) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]]++;\n        }\n        $count++;\n    }\n    $max = 0;\n    $max_index = \"\";\n    for ($i = 0; $i < strlen($result); $i++) {\n        if ($result[$i] > $max) {\n            $max = $result[$i];\n            $max_index = $i;\n        }\n    }\n    $result[$max_index] = $count;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmprbvn8wfa.php:29\nStack trace:\n#0 /tmp/tmprbvn8wfa.php(40): histogram('a b b a')\n#1 /tmp/tmprbvn8wfa.php(44): candidate('a b b a')\n#2 /tmp/tmprbvn8wfa.php(54): test()\n#3 {main}\n  thrown in /tmp/tmprbvn8wfa.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        $key = $test.charAt($i);\n        if ($count[$key] === undefined) {\n            $count[$key] = 1;\n        } else {\n            $count[$key]++;\n        }\n        if ($count[$key] > $max) {\n            $max = $count[$key];\n            $max_key = $key;\n        }\n    }\n    $result = [];\n    for ($key in $count) {\n        if ($count[$key] === $max) {\n            $result.push($key);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp7mzfuybg.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < strlen($test); $i++) {\n        if ($count == 0) {\n            $count = 1;\n            $max = 1;\n            $max_letter = $test[$i];\n        } else if ($test[$i] == $max_letter) {\n            $count++;\n            if ($count > $max) {\n                $max = $count;\n                $max_letter = $test[$i];\n            }\n        } else {\n            $count = 1;\n            $max = 1;\n            $max_letter = $test[$i];\n        }\n        $result[$test[$i]] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprazclwby.php:47\nStack trace:\n#0 /tmp/tmprazclwby.php(57): test()\n#1 {main}\n  thrown in /tmp/tmprazclwby.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $result = {};\n    $max = 0;\n    $max_letter = \"\";\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($test[$i] in $result) {\n            $result[$test[$i]] += 1;\n        } else {\n            $result[$test[$i]] = 1;\n        }\n        if ($result[$test[$i]] > $max) {\n            $max = $result[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    return $result[$max_letter];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp_6u4u3ot.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for($i = 0; $i < $test.length; $i++) {\n        if($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    $count = $count[$max_key];\n    $count = $count === undefined ? 0 : $count;\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpl9lx1qir.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    // your code goes here\n    var arr = $test.split(\" \");\n    var max = 0;\n    var max_count = 0;\n    var result = [];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] != \"\"){\n            if(arr[i] > max){\n                max = arr[i];\n                max_count = 1;\n            }\n            else if(arr[i] == max){\n                max_count++;\n            }\n        }\n    }\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] == max){\n            result.push(arr[i]);\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpjqr59xyv.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    $max_count = 0;\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    $result = [];\n    for ($i in $count) {\n        if ($count[$i] === $max_count) {\n            $result.push($i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpex8tvu1r.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_count = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    $result = [];\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($test[$i] === $max_letter) {\n            $result.push($max_letter);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpzvqxkdea.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_letter = '';\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($test.charAt($i) in $count) {\n            $count[$test.charAt($i)]++;\n        } else {\n            $count[$test.charAt($i)] = 1;\n        }\n        if ($count[$test.charAt($i)] > $max) {\n            $max = $count[$test.charAt($i)];\n            $max_letter = $test.charAt($i);\n        }\n    }\n    return $count[$max_letter] > 1 ? $count : $count[$max_letter];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp1lw0fnmd.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $test = $test.replace(/[^a-z]/g, '');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmp5hwhukzl.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_count = 0;\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]] += 1;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max = $test[$i];\n        }\n    }\n    return $max_count === 0 ? [] : [$max, $count[$max]];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpbamt_0h6.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_index = 0;\n    $test = $test.split(\" \");\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_index = $i;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpepzs5gkj.php:20\nStack trace:\n#0 /tmp/tmpepzs5gkj.php(36): histogram('a b b a')\n#1 /tmp/tmpepzs5gkj.php(40): candidate('a b b a')\n#2 /tmp/tmpepzs5gkj.php(50): test()\n#3 {main}\n  thrown in /tmp/tmpepzs5gkj.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    $max = 0;\n    $max_index = 0;\n    $max_count = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        $c = $test[$i];\n        if (!isset($result[$c])) {\n            $result[$c] = 1;\n        } else {\n            $result[$c]++;\n        }\n        if ($result[$c] > $max_count) {\n            $max_count = $result[$c];\n            $max_index = $i;\n        }\n        if ($result[$c] > $count) {\n            $count = $result[$c];\n        }\n        if ($result[$c] > $max) {\n            $max = $result[$c];\n        }\n    }\n    $result[$max_index] = $max_count;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0l7gj2jh.php:49\nStack trace:\n#0 /tmp/tmp0l7gj2jh.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp0l7gj2jh.php on line 49\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    return $count[$max_key];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp57mmz72s.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.replace(/\\s/g, '');\n    var $count = {};\n    var $max = 0;\n    var $result = [];\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n        }\n    }\n    for (var $key in $count) {\n        if ($count[$key] === $max) {\n            $result.push($key);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmp0axdlie2.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    return $count[$max_key];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp57mmz72s.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        if (!isset($result[$test[$i]])) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]]++;\n        }\n        $count++;\n    }\n    $max = 0;\n    $max_index = 0;\n    for ($i = 0; $i < strlen($result); $i++) {\n        if ($result[$i] > $max) {\n            $max = $result[$i];\n            $max_index = $i;\n        }\n    }\n    $result[$max_index] = $count;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmphwyxg7vj.php:29\nStack trace:\n#0 /tmp/tmphwyxg7vj.php(40): histogram('a b b a')\n#1 /tmp/tmphwyxg7vj.php(44): candidate('a b b a')\n#2 /tmp/tmphwyxg7vj.php(54): test()\n#3 {main}\n  thrown in /tmp/tmphwyxg7vj.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        if (!isset($result[$test[$i]])) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]]++;\n        }\n        $count++;\n    }\n    $max = 0;\n    $max_index = 0;\n    for ($i = 0; $i < strlen($result); $i++) {\n        if ($result[$i] > $max) {\n            $max = $result[$i];\n            $max_index = $i;\n        }\n    }\n    $result[$max_index] = $count;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmphwyxg7vj.php:29\nStack trace:\n#0 /tmp/tmphwyxg7vj.php(40): histogram('a b b a')\n#1 /tmp/tmphwyxg7vj.php(44): candidate('a b b a')\n#2 /tmp/tmphwyxg7vj.php(54): test()\n#3 {main}\n  thrown in /tmp/tmphwyxg7vj.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    var $max_letter = \"\";\n    var $max_count = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        var $letter = $test.charAt($i);\n        if ($result[$letter] === undefined) {\n            $result[$letter] = 1;\n        } else {\n            $result[$letter] += 1;\n        }\n        $count += 1;\n        if ($result[$letter] > $max_count) {\n            $max_count = $result[$letter];\n            $max_letter = $letter;\n        }\n    }\n    $result[$max_letter] = $max_count;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp0d__yoh3.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.replace(/\\s/g, '');\n    var $result = {};\n    var $count = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($result[$test[$i]] === undefined) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]]++;\n        }\n        $count++;\n    }\n    for (var $key in $result) {\n        if ($result[$key] > $count) {\n            $count = $result[$key];\n        }\n    }\n    $result = $result.sort(function($a, $b) {\n        return $b - $a;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmp5ei70lwl.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    $result = [];\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($test[$i] === $max_letter) {\n            $result.push($test[$i]);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpc5c1rdb_.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    // your code goes here\n    var arr = $test.split(\" \");\n    var max = 0;\n    var max_count = 0;\n    var result = [];\n    for (var i = 0; i < arr.length; i++) {\n        if (arr[i] in result) {\n            result[arr[i]] += 1;\n        } else {\n            result[arr[i]] = 1;\n        }\n        if (result[arr[i]] > max_count) {\n            max_count = result[arr[i]];\n            max = arr[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp3_obui_m.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        if (!isset($result[$test[$i]])) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]]++;\n        }\n        $count++;\n    }\n    $max = 0;\n    $max_index = 0;\n    for ($i = 0; $i < strlen($result); $i++) {\n        if ($result[$i] > $max) {\n            $max = $result[$i];\n            $max_index = $i;\n        }\n    }\n    $result[$max_index] = $count;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmphwyxg7vj.php:29\nStack trace:\n#0 /tmp/tmphwyxg7vj.php(40): histogram('a b b a')\n#1 /tmp/tmphwyxg7vj.php(44): candidate('a b b a')\n#2 /tmp/tmphwyxg7vj.php(54): test()\n#3 {main}\n  thrown in /tmp/tmphwyxg7vj.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $result = array();\n    for ($i = 0; $i < strlen($test); $i++) {\n        $count[$test[$i]] = $count[$test[$i]] ? $count[$test[$i]] + 1 : 1;\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $result = array($test[$i]);\n        } else if ($count[$test[$i]] == $max) {\n            $result = array_merge($result, array($test[$i]));\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nWarning: Undefined array key \"a\" in /tmp/tmpmtwpib5g.php on line 21\n\nWarning: Undefined array key \" \" in /tmp/tmpmtwpib5g.php on line 21\n\nWarning: Undefined array key \"b\" in /tmp/tmpmtwpib5g.php on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmtwpib5g.php:37\nStack trace:\n#0 /tmp/tmpmtwpib5g.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpmtwpib5g.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($test[$i] in $count) {\n            $count[$test[$i]]++;\n        } else {\n            $count[$test[$i]] = 1;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    return $count[$max_letter];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpw3_jj4gx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_index = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        if (!isset($count[$test[$i]])) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_index = $i;\n        }\n    }\n    return array($test[$max_index], $max);\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3yoevbi.php:39\nStack trace:\n#0 /tmp/tmpe3yoevbi.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpe3yoevbi.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_index = 0;\n    $test = $test.toLowerCase();\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_index = $i;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toLowerCase() in /tmp/tmpwh6kccdj.php:20\nStack trace:\n#0 /tmp/tmpwh6kccdj.php(36): histogram('a b b a')\n#1 /tmp/tmpwh6kccdj.php(40): candidate('a b b a')\n#2 /tmp/tmpwh6kccdj.php(50): test()\n#3 {main}\n  thrown in /tmp/tmpwh6kccdj.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    var $result = {};\n    var $count = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($result[$test[$i]] === undefined) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]]++;\n        }\n        $count++;\n    }\n    for (var $key in $result) {\n        if ($result[$key] > $count) {\n            $count = $result[$key];\n        }\n    }\n    for (var $key in $result) {\n        if ($result[$key] === $count) {\n            $result[$key] = $key;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpk2q24lt1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    $max_count = 0;\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    $result = [];\n    for ($i = 0; $i < $count.length; $i++) {\n        if ($count[$i] === $max_count) {\n            $result.push($max_key);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp_fd7pkvu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.replace(/\\s/g, '');\n    var $count = {};\n    var $max = 0;\n    var $result = [];\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n        }\n    }\n    for (var $key in $count) {\n        if ($count[$key] === $max) {\n            $result.push($key);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmp0axdlie2.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($result[$test[$i]] === undefined) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]]++;\n        }\n        $count++;\n    }\n    for (var $key in $result) {\n        $result[$key] = $result[$key] / $count;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp_9kw5p3b.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_count = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        $letter = $test.charAt($i);\n        if ($count[$letter] === undefined) {\n            $count[$letter] = 1;\n        } else {\n            $count[$letter]++;\n        }\n        if ($count[$letter] > $max_count) {\n            $max_count = $count[$letter];\n            $max_letter = $letter;\n        }\n    }\n    $result = [];\n    for ($i = 0; $i < $count.length; $i++) {\n        if ($count[$i] === $max_count) {\n            $result.push($i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpyb9oy07_.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $test = $test.replace(/\\s/g, '');\n    $test = $test.split('');\n    $count = {};\n    $max = 0;\n    $max_count = 0;\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max = $test[$i];\n        }\n    }\n    $count = $count[$max];\n    return $count === undefined ? [] : [$max, $count];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmplrovxpq0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    var $max_letter = \"\";\n    var $max_count = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        var $letter = $test.charAt($i);\n        if ($result[$letter] === undefined) {\n            $result[$letter] = 1;\n        } else {\n            $result[$letter]++;\n        }\n        if ($result[$letter] > $max_count) {\n            $max_count = $result[$letter];\n            $max_letter = $letter;\n        }\n        $count++;\n    }\n    if ($count === 0) {\n        return [];\n    }\n    $result[$max_letter] = $max_count;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmps054hqd2.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.replace(/\\s/g, '');\n    var $count = {};\n    var $result = [];\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]] += 1;\n        }\n    }\n    for (var $key in $count) {\n        $result.push([$key, $count[$key]]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmpbus791mf.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_count = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    $result = [];\n    for ($i in $count) {\n        if ($count[$i] === $max_count) {\n            $result.push($i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp5lczrnv6.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    // your code goes here\n    var arr = $test.split(\" \");\n    var max = 0;\n    var max_index = 0;\n    var count = 0;\n    var result = [];\n    for (var i = 0; i < arr.length; i++) {\n        if (arr[i] != \"\") {\n            count = 0;\n            for (var j = 0; j < arr.length; j++) {\n                if (arr[i] == arr[j]) {\n                    count++;\n                }\n            }\n            if (count > max) {\n                max = count;\n                max_index = i;\n            }\n        }\n    }\n    if (max > 0) {\n        result.push(arr[max_index]);\n        result.push(max);\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpdic21rvb.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $test = $test.replace(/\\s+/g, ' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test =\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmpjq5oopaz.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        if (!isset($result[$test[$i]])) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]]++;\n        }\n        $count++;\n    }\n    $max = 0;\n    $max_index = 0;\n    for ($i = 0; $i < strlen($result); $i++) {\n        if ($result[$i] > $max) {\n            $max = $result[$i];\n            $max_index = $i;\n        }\n    }\n    $result[$max_index] = $count;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmphwyxg7vj.php:29\nStack trace:\n#0 /tmp/tmphwyxg7vj.php(40): histogram('a b b a')\n#1 /tmp/tmphwyxg7vj.php(44): candidate('a b b a')\n#2 /tmp/tmphwyxg7vj.php(54): test()\n#3 {main}\n  thrown in /tmp/tmphwyxg7vj.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    var $max_letter = \"\";\n    var $max_count = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        var $letter = $test.charAt($i);\n        if ($result[$letter] === undefined) {\n            $result[$letter] = 1;\n        } else {\n            $result[$letter]++;\n        }\n        if ($result[$letter] > $max_count) {\n            $max_count = $result[$letter];\n            $max_letter = $letter;\n        }\n        $count += $result[$letter];\n    }\n    $max = $count;\n    $count = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        var $letter = $test.charAt($i);\n        if ($result[$letter] === undefined) {\n            $result[$letter] = 1;\n        } else {\n            $result[$letter]++;\n        }\n        if ($result[$letter] === $max_count) {\n            $result[$letter] = $max;\n        }\n        $count += $result[$letter];\n    }\n    $max = $count;\n    $count = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        var $letter = $test.charAt($i);\n        if ($result[$letter] === undefined) {\n            $result[$letter] = 1;\n        } else {\n            $result[$letter]++;\n        }\n        if ($result[$letter] === $max_count) {\n            $result[$letter] = $max;\n        }\n        $count += $result[$letter];\n    }\n    $max = $count;\n    $count = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        var $letter = $test.charAt($i);\n        if ($result[$letter] === undefined\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpo58h9uo2.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    var $max_letter = \"\";\n    var $max_count = 0;\n    var $letters = $test.split(\" \");\n    for (var $i = 0; $i < $letters.length; $i++) {\n        if ($letters[$i] in $result) {\n            $count = $result[$letters[$i]];\n            $count++;\n            $result[$letters[$i]] = $count;\n        } else {\n            $result[$letters[$i]] = 1;\n            $count = 1;\n        }\n        if ($count > $max_count) {\n            $max_count = $count;\n            $max_letter = $letters[$i];\n        }\n    }\n    $result[$max_letter] = $max_count;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpc4wp75l7.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_count = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    $result = [];\n    for ($i = 0; $i < $count.length; $i++) {\n        if ($count[$i] === $max_count) {\n            $result.push($i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpfyqgpawp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    $result = [];\n    for ($i in $count) {\n        if ($count[$i] === $max) {\n            $result.push($i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmptgslvzdv.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    var $max_letter = '';\n    var $max_count = 0;\n    var $letters = $test.split(' ');\n    for (var $i = 0; $i < $letters.length; $i++) {\n        if ($result[$letters[$i]] === undefined) {\n            $result[$letters[$i]] = 1;\n        } else {\n            $result[$letters[$i]]++;\n        }\n        if ($result[$letters[$i]] > $max_count) {\n            $max_count = $result[$letters[$i]];\n            $max_letter = $letters[$i];\n        }\n    }\n    $count = $max_count;\n    $max = $max_letter;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpcemah_73.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    return $count[$max_key];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp57mmz72s.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $test = $test.split(\" \");\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n    }\n    $max = 0;\n    $max_index = \"\";\n    for ($i = 0; $i < $count.length; $i++) {\n        if ($count[$i] > $max) {\n            $max = $count[$i];\n            $max_index = $i;\n        }\n    }\n    return $count[$max_index];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpaae7zubi.php:18\nStack trace:\n#0 /tmp/tmpaae7zubi.php(38): histogram('a b b a')\n#1 /tmp/tmpaae7zubi.php(42): candidate('a b b a')\n#2 /tmp/tmpaae7zubi.php(52): test()\n#3 {main}\n  thrown in /tmp/tmpaae7zubi.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_index = 0;\n    $test = $test.split(\" \");\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_index = $i;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpepzs5gkj.php:20\nStack trace:\n#0 /tmp/tmpepzs5gkj.php(36): histogram('a b b a')\n#1 /tmp/tmpepzs5gkj.php(40): candidate('a b b a')\n#2 /tmp/tmpepzs5gkj.php(50): test()\n#3 {main}\n  thrown in /tmp/tmpepzs5gkj.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    $result = [];\n    for ($i in $count) {\n        if ($count[$i] === $max) {\n            $result.push($i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpme6l523t.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    return $count[$max_key];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp57mmz72s.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_count = 0;\n    $result = [];\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max = $test[$i];\n        }\n    }\n    for ($i in $count) {\n        if ($count[$i] === $max_count) {\n            $result.push($i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp7ke1vvmv.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    var $max_letter = '';\n    var $max_count = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        var $letter = $test.substr($i, 1);\n        if ($result[$letter] === undefined) {\n            $result[$letter] = 1;\n        } else {\n            $result[$letter]++;\n        }\n        if ($result[$letter] > $max_count) {\n            $max_count = $result[$letter];\n            $max_letter = $letter;\n        }\n        $count += $result[$letter];\n    }\n    $result[$max_letter] = $max_count;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpawfmg6eb.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    return $count[$max_letter];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpg1ab5ymd.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        $letter = $test[$i];\n        if ($count[$letter] === undefined) {\n            $count[$letter] = 1;\n        } else {\n            $count[$letter]++;\n        }\n        if ($count[$letter] > $max) {\n            $max = $count[$letter];\n            $max_letter = $letter;\n        }\n    }\n    $result = [];\n    for ($i in $count) {\n        if ($count[$i] === $max) {\n            $result.push($i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpxnztzo40.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    var $max_letter = \"\";\n    var $max_count = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        var $letter = $test.charAt($i);\n        if ($result[$letter] === undefined) {\n            $result[$letter] = 1;\n            $count++;\n        } else {\n            $result[$letter]++;\n        }\n        if ($result[$letter] > $max_count) {\n            $max_count = $result[$letter];\n            $max_letter = $letter;\n        }\n    }\n    $result[$max_letter] = $count;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpni55grsh.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        if (!isset($result[$test[$i]])) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]]++;\n        }\n        if ($result[$test[$i]] > $max) {\n            $max = $result[$test[$i]];\n        }\n    }\n    for ($i = 0; $i < strlen($test); $i++) {\n        if ($result[$test[$i]] == $max) {\n            $count++;\n        }\n    }\n    $result = array_keys($result);\n    $result = array_sort($result, function($a, $b) {\n        return $result[$a] - $result[$b];\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpfzjar4ez.php:36\nStack trace:\n#0 /tmp/tmpfzjar4ez.php(43): histogram('a b b a')\n#1 /tmp/tmpfzjar4ez.php(47): candidate('a b b a')\n#2 /tmp/tmpfzjar4ez.php(57): test()\n#3 {main}\n  thrown in /tmp/tmpfzjar4ez.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        var $letter = $test.charAt($i);\n        if ($result[$letter] === undefined) {\n            $result[$letter] = 1;\n        } else {\n            $result[$letter] += 1;\n        }\n        if ($result[$letter] > $max) {\n            $max = $result[$letter];\n        }\n        $count += 1;\n    }\n    for (var $key in $result) {\n        if ($result[$key] == $max) {\n            $result[$key] = $count;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpykkzaduo.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_index = 0;\n    $test = $test.split(\" \");\n    for($i = 0; $i < $test.length; $i++) {\n        if($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_index = $i;\n        }\n    }\n    return $count[$test[$max_index]];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmp5qi7rrqk.php:20\nStack trace:\n#0 /tmp/tmp5qi7rrqk.php(36): histogram('a b b a')\n#1 /tmp/tmp5qi7rrqk.php(40): candidate('a b b a')\n#2 /tmp/tmp5qi7rrqk.php(50): test()\n#3 {main}\n  thrown in /tmp/tmp5qi7rrqk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        $key = $test.charAt($i);\n        if ($count[$key] === undefined) {\n            $count[$key] = 1;\n        } else {\n            $count[$key]++;\n        }\n        if ($count[$key] > $max) {\n            $max = $count[$key];\n            $max_key = $key;\n        }\n    }\n    return $count[$max_key];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp25tju2gr.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    return $count[$max_letter];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpg1ab5ymd.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_count = 0;\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]] += 1;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max = $test[$i];\n        }\n    }\n    $count = $count[$max];\n    $count = $count === undefined ? 0 : $count;\n    return $count === 0 ? [] : [$max, $count];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpwt0tsklv.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    $count = $count[$max_letter];\n    $count = $count === undefined ? 0 : $count;\n    $count = $count === 0 ? [] : [$max_letter, $count];\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpfc_x9ld_.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    var $max_index = 0;\n    var $max_count = 0;\n    var $max_count_index = 0;\n    var $max_count_count = 0;\n    var $max_count_count_index = 0;\n    var $max_count_count_count = 0;\n    var $max_count_count_count_index = 0;\n    var $max_count_count_count_count = 0;\n    var $max_count_count_count_count_index = 0;\n    var $max_count_count_count_count_count = 0;\n    var $max_count_count_count_count_count_index = 0;\n    var $max_count_count_count_count_count_count = 0;\n    var $max_count_count_count_count_count_count_index = 0;\n    var $max_count_count_count_count_count_count_count = 0;\n    var $max_count_count_count_count_count_count_count_index = 0;\n    var $max_count_count_count_count_count_count_count_count = 0;\n    var $max_count_count_count_count_count_count_count_count_index = 0;\n    var $max_count_count_count_count_count_count_count_count_count = 0;\n    var $max_count_count_count_count_count_count_count_count_count_index = 0;\n    var $max_count_count_count_count_count_count_count_count_count_count = 0;\n    var $max_count_count_count_count_count_count_count_count_count_count_index = 0;\n    var $max_count_count_count_count_count_count_count_count_count_count_count = 0;\n    var $max_count_count_count_count_count_count_count_count_count_count_count_index = 0;\n    var $max_count_count_count_count_count_count\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpb1ty9pdh.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $result = {};\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($test[$i] in $result) {\n            $result[$test[$i]]++;\n        } else {\n            $result[$test[$i]] = 1;\n        }\n    }\n    $result = $result.sort(function($a, $b) {\n        return $b - $a;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpvs8k3bf8.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        $c = $test[$i];\n        if (!isset($count[$c])) {\n            $count[$c] = 1;\n        } else {\n            $count[$c]++;\n        }\n        if ($count[$c] > $max) {\n            $max = $count[$c];\n        }\n    }\n    $result = array();\n    for ($i = 0; $i < strlen($count); $i++) {\n        if ($count[$i] == $max) {\n            $result[$i] = $count[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpiwtg3r76.php:31\nStack trace:\n#0 /tmp/tmpiwtg3r76.php(40): histogram('a b b a')\n#1 /tmp/tmpiwtg3r76.php(44): candidate('a b b a')\n#2 /tmp/tmpiwtg3r76.php(54): test()\n#3 {main}\n  thrown in /tmp/tmpiwtg3r76.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    $max = 0;\n    $max_index = 0;\n    $max_count = 0;\n    $max_count_index = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        $c = $test[$i];\n        if ($result[$c] == 0) {\n            $result[$c] = 1;\n            $count = 1;\n        } else {\n            $count++;\n        }\n        if ($count > $max_count) {\n            $max_count = $count;\n            $max_count_index = $i;\n        }\n        if ($count == $max_count) {\n            $max_index = $i;\n        }\n    }\n    $result[$max_index] = $max_count;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nWarning: Undefined array key \"a\" in /tmp/tmpclde1h2_.php on line 25\n\nWarning: Undefined array key \" \" in /tmp/tmpclde1h2_.php on line 25\n\nWarning: Undefined array key \"b\" in /tmp/tmpclde1h2_.php on line 25\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpclde1h2_.php:48\nStack trace:\n#0 /tmp/tmpclde1h2_.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpclde1h2_.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($result[$test[$i]] === undefined) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]]++;\n        }\n        $count++;\n    }\n    for (var $key in $result) {\n        $result[$key] = $result[$key] / $count;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp_9kw5p3b.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for($i = 0; $i < $test.length; $i++) {\n        if($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    $result = [];\n    for($i = 0; $i < $max; $i++) {\n        $result.push($max_key);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpne8h2q02.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    // your code goes here\n    var arr = $test.split(\" \");\n    var result = [];\n    var max = 0;\n    var max_index = 0;\n    for (var i = 0; i < arr.length; i++) {\n        if (arr[i] in result) {\n            result[arr[i]].count++;\n        } else {\n            result[arr[i]] = {count: 1};\n        }\n        if (result[arr[i]].count > max) {\n            max = result[arr[i]].count;\n            max_index = arr[i];\n        }\n    }\n    result[max_index] = {count: max};\n    return result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp0_inzlb5.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    var $result = {};\n    var $count = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($result[$test[$i]] === undefined) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]]++;\n        }\n        $count++;\n    }\n    for (var $key in $result) {\n        if ($result[$key] === $count) {\n            $result[$key] = $key;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp55pskd_r.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    var $max_letter = \"\";\n    var $max_count = 0;\n    var $letters = $test.split(\" \");\n    for (var $i = 0; $i < $letters.length; $i++) {\n        if ($letters[$i] in $result) {\n            $count = $result[$letters[$i]];\n            $count++;\n            $result[$letters[$i]] = $count;\n        } else {\n            $result[$letters[$i]] = 1;\n            $count = 1;\n        }\n        if ($count > $max_count) {\n            $max_count = $count;\n            $max_letter = $letters[$i];\n        }\n    }\n    $result[$max_letter] = $max_count;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpc4wp75l7.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]] += 1;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    return $count[$max_letter];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpgvbj22fh.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]] += 1;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    return $count[$max_letter];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpgvbj22fh.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $test = $test.replace(/\\s+/g, ' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test =\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmpjq5oopaz.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        $c = $test[$i];\n        if (!isset($count[$c])) {\n            $count[$c] = 1;\n        } else {\n            $count[$c]++;\n        }\n        if ($count[$c] > $max) {\n            $max = $count[$c];\n        }\n    }\n    $result = array();\n    for ($i = 0; $i < strlen($count); $i++) {\n        if ($count[$i] == $max) {\n            $result[$i] = $count[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpiwtg3r76.php:31\nStack trace:\n#0 /tmp/tmpiwtg3r76.php(40): histogram('a b b a')\n#1 /tmp/tmpiwtg3r76.php(44): candidate('a b b a')\n#2 /tmp/tmpiwtg3r76.php(54): test()\n#3 {main}\n  thrown in /tmp/tmpiwtg3r76.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ( $i = 0; $i < $test.length; $i++ ) {\n        if ( $count[$test[$i]] === undefined ) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ( $count[$test[$i]] > $max ) {\n            $max = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    return $count[$max_letter];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpoj2322qm.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_index = 0;\n    $max_count = 0;\n    $count_index = 0;\n    $count_count = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        if (isset($count[$test[$i]])) {\n            $count_count++;\n            $count_index = $i;\n        } else {\n            $count_count = 1;\n            $count_index = $i;\n        }\n        $count[$test[$i]] = $count_count;\n        if ($count_count > $max_count) {\n            $max_count = $count_count;\n            $max_index = $count_index;\n        }\n    }\n    $max = $count_count;\n    $max_index = $count_index;\n    $count = array_reverse($count);\n    $count = array_keys(array_flip($count));\n    $count = array_sort($count, function($a, $b) {\n        return $count[$b] - $count[$a];\n    });\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpx7p4mxhm.php:41\nStack trace:\n#0 /tmp/tmpx7p4mxhm.php(48): histogram('a b b a')\n#1 /tmp/tmpx7p4mxhm.php(52): candidate('a b b a')\n#2 /tmp/tmpx7p4mxhm.php(62): test()\n#3 {main}\n  thrown in /tmp/tmpx7p4mxhm.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    $max = 0;\n    $max_index = 0;\n    $max_count = 0;\n    $index = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count = 0;\n    $count =\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpgnby8l0g.php on line 90\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    $max = 0;\n    $max_index = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        if ($count == 0) {\n            $count = 1;\n            $result[$test[$i]] = 1;\n        } else if ($test[$i] == $result[$max_index]) {\n            $count++;\n            $result[$max_index] = $count;\n        } else if ($count > $max) {\n            $max = $count;\n            $max_index = $i;\n            $count = 1;\n            $result[$test[$i]] = 1;\n        } else {\n            $count = 0;\n        }\n    }\n    if ($count > $max) {\n        $max = $count;\n        $max_index = $i;\n        $count = 1;\n        $result[$test[$i]] = 1;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmps7szxb4m.php on line 25\n\nWarning: Undefined array key 1 in /tmp/tmps7szxb4m.php on line 25\n\nWarning: Undefined array key 1 in /tmp/tmps7szxb4m.php on line 25\n\nWarning: Undefined array key 1 in /tmp/tmps7szxb4m.php on line 25\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps7szxb4m.php:51\nStack trace:\n#0 /tmp/tmps7szxb4m.php(61): test()\n#1 {main}\n  thrown in /tmp/tmps7szxb4m.php on line 51\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        var $letter = $test.charAt($i);\n        if ($result[$letter] === undefined) {\n            $result[$letter] = 1;\n        } else {\n            $result[$letter]++;\n        }\n        $count += $result[$letter];\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    for (var $key in $result) {\n        if ($result[$key] === $max) {\n            $result[$key] = $key;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpazzf93xp.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    $max_count = 0;\n    for ($i = 0; $i < $test.length; $i++) {\n        $letter = $test[$i];\n        if ($count[$letter] === undefined) {\n            $count[$letter] = 1;\n        } else {\n            $count[$letter]++;\n        }\n        if ($count[$letter] > $max_count) {\n            $max_count = $count[$letter];\n            $max_letter = $letter;\n        }\n    }\n    $result = [];\n    for ($i in $count) {\n        if ($count[$i] === $max_count) {\n            $result.push($i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp82oo63z1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_count = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]] += 1;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    $result = [];\n    for ($i = 0; $i < $count.length; $i++) {\n        if ($count[$i] === $max_count) {\n            $result.push($i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpbhoes1xc.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    $max = 0;\n    $max_index = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        if ($count == 0) {\n            $count = 1;\n            $result[$test[$i]] = 1;\n        } else if ($test[$i] == $result[$max_index]) {\n            $count++;\n            $result[$max_index] = $count;\n        } else if ($count > $max) {\n            $max = $count;\n            $max_index = $i;\n            $count = 1;\n            $result[$max_index] = $count;\n        } else {\n            $count = 0;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmp32ai58gy.php on line 25\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp32ai58gy.php:45\nStack trace:\n#0 /tmp/tmp32ai58gy.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp32ai58gy.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_letter = '';\n    for ($i = 0; $i < $test.length; $i++) {\n        $letter = $test.substr($i, 1);\n        if ($count[$letter] === undefined) {\n            $count[$letter] = 1;\n        } else {\n            $count[$letter]++;\n        }\n        if ($count[$letter] > $max) {\n            $max = $count[$letter];\n            $max_letter = $letter;\n        }\n    }\n    $result = [];\n    for ($i = 0; $i < $test.length; $i++) {\n        $letter = $test.substr($i, 1);\n        if ($count[$letter] === $max) {\n            $result.push($letter);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp8xocswt_.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    return $count[$max_letter];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpg1ab5ymd.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    $result = [];\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    for ($i in $count) {\n        if ($count[$i] === $max) {\n            $result.push($i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp8c40pyug.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.replace(/\\s+/g, '');\n    var $count = {};\n    var $max = 0;\n    var $result = [];\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n        }\n    }\n    for (var $key in $count) {\n        if ($count[$key] === $max) {\n            $result.push($key);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmpqld6wep7.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    // your code goes here\n    var arr = $test.split(\" \");\n    var max = 0;\n    var max_index = 0;\n    var count = 0;\n    var result = [];\n    for (var i = 0; i < arr.length; i++) {\n        if (arr[i] != \"\") {\n            count = 0;\n            for (var j = 0; j < arr.length; j++) {\n                if (arr[i] == arr[j]) {\n                    count++;\n                }\n            }\n            if (count > max) {\n                max = count;\n                max_index = i;\n            }\n        }\n    }\n    if (max_index != 0) {\n        result.push(arr[max_index]);\n        result.push(max);\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpoa9y388d.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    return $count[$max_letter];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpg1ab5ymd.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_index = 0;\n    $max_count = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        if (!isset($count[$test[$i]])) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max_index = $i;\n        }\n    }\n    $max = $max_count;\n    $max_index = $max_index;\n    $max_count = $max_count;\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvn9bk51t.php:43\nStack trace:\n#0 /tmp/tmpvn9bk51t.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpvn9bk51t.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.replace(/\\s/g, '');\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($result[$test[$i]] === undefined) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]]++;\n        }\n        $count += $result[$test[$i]];\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    for (var $key in $result) {\n        if ($result[$key] === $max) {\n            $result[$key] = $key;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmp3n6wqo8e.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $test = $test.replace(/\\s/g, '');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmphlj_ba5k.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    $result = [];\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    for ($i in $count) {\n        if ($count[$i] === $max) {\n            $result.push($i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp8c40pyug.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $count = {};\n    var $result = [];\n    var $max = 0;\n    var $max_key = \"\";\n    var $max_count = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        var $letter = $test.substr($i, 1);\n        if ($count[$letter] === undefined) {\n            $count[$letter] = 1;\n        } else {\n            $count[$letter]++;\n        }\n        if ($count[$letter] > $max_count) {\n            $max_count = $count[$letter];\n            $max_key = $letter;\n        }\n    }\n    $result.push($max_key);\n    $result.push($max_count);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmps54430oj.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < strlen($test); $i++) {\n        $letter = $test[$i];\n        if ($result[$letter] == null) {\n            $result[$letter] = 1;\n        } else {\n            $result[$letter]++;\n        }\n        if ($result[$letter] > $count) {\n            $count = $result[$letter];\n            $max = $count;\n            $max_letter = $letter;\n        }\n    }\n    $result[$max_letter] = $max;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nWarning: Undefined array key \"a\" in /tmp/tmpctlgxjgi.php on line 23\n\nWarning: Undefined array key \" \" in /tmp/tmpctlgxjgi.php on line 23\n\nWarning: Undefined array key \"b\" in /tmp/tmpctlgxjgi.php on line 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpctlgxjgi.php:43\nStack trace:\n#0 /tmp/tmpctlgxjgi.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpctlgxjgi.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.replace(/\\s/g, '');\n    var $count = {};\n    var $max = 0;\n    var $result = [];\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n        }\n    }\n    for (var $key in $count) {\n        if ($count[$key] === $max) {\n            $result.push($key);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmp0axdlie2.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n        }\n    }\n    $result = [];\n    for ($i in $count) {\n        if ($count[$i] === $max) {\n            $result.push($i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp845hxf0c.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        $letter = $test[$i];\n        if ($count[$letter] === undefined) {\n            $count[$letter] = 1;\n        } else {\n            $count[$letter]++;\n        }\n        if ($count[$letter] > $max) {\n            $max = $count[$letter];\n            $max_letter = $letter;\n        }\n    }\n    $result = [];\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($test[$i] === $max_letter) {\n            $result.push($test[$i]);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp2f9iz_vv.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = 0;\n    $max = 0;\n    $result = array();\n    $test = $test.split(\" \");\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($test[$i] in $result) {\n            $count = $result[$test[$i]];\n            $count++;\n            $result[$test[$i]] = $count;\n        } else {\n            $count = 1;\n            $result[$test[$i]] = $count;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    for ($i = 0; $i < $result.length; $i++) {\n        if ($result[$i] == $max) {\n            $result[$i] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected identifier \"in\" in /tmp/tmpuut_70be.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_count = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < strlen($test); $i++) {\n        $letter = $test[$i];\n        if ($count[$letter] == 0) {\n            $count[$letter] = 1;\n        } else {\n            $count[$letter]++;\n        }\n        if ($count[$letter] > $max_count) {\n            $max_count = $count[$letter];\n            $max_letter = $letter;\n        }\n    }\n    $result = array();\n    $result[$max_letter] = $max_count;\n    for ($i = 0; $i < strlen($count); $i++) {\n        if ($count[$i] == $max_count) {\n            $result[$i] = $count[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nWarning: Undefined array key \"a\" in /tmp/tmptgjx3_2v.php on line 23\n\nWarning: Undefined array key \" \" in /tmp/tmptgjx3_2v.php on line 23\n\nWarning: Undefined array key \"b\" in /tmp/tmptgjx3_2v.php on line 23\n\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmptgjx3_2v.php:35\nStack trace:\n#0 /tmp/tmptgjx3_2v.php(44): histogram('a b b a')\n#1 /tmp/tmptgjx3_2v.php(48): candidate('a b b a')\n#2 /tmp/tmptgjx3_2v.php(58): test()\n#3 {main}\n  thrown in /tmp/tmptgjx3_2v.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $test = $test.replace(/[^a-z]/g, '');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmp5hwhukzl.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_count = 0;\n    $result = [];\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]] += 1;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max = $test[$i];\n        }\n    }\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === $max_count) {\n            $result.push($test[$i]);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpepjaw1tr.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $test = $test.replace(/\\s/g, '');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test.split('');\n    $test = $test.sort();\n    $test = $test.join('');\n    $test = $test\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmphlj_ba5k.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $result = {};\n    $max = 0;\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($result[$test[$i]] === undefined) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]]++;\n        }\n        if ($result[$test[$i]] > $max) {\n            $max = $result[$test[$i]];\n        }\n    }\n    $result = $result.sort(function ($a, $b) {\n        return $b - $a;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp7z0821ub.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_count = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]] += 1;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    $result = [];\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === $max_count) {\n            $result.push($test[$i]);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp0px9zvgj.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $count = {};\n    var $result = [];\n    for (var $i = 0; $i < $test.length; $i++) {\n        var $letter = $test.charAt($i);\n        if ($count[$letter] === undefined) {\n            $count[$letter] = 1;\n        } else {\n            $count[$letter]++;\n        }\n    }\n    for (var $key in $count) {\n        $result.push([$key, $count[$key]]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp81adq505.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($result[$test[$i]] === undefined) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]] += 1;\n        }\n        $count += 1;\n    }\n    for (var $key in $result) {\n        if ($result[$key] > $count) {\n            $count = $result[$key];\n        }\n    }\n    $result = $result.sort(function($a, $b) {\n        return $b - $a;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpv9145cfr.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $test = $test.replace(/ /g, '');\n    $test = $test.toLowerCase();\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n    }\n    $max = 0;\n    $max_index = 0;\n    for ($i = 0; $i < $count.length; $i++) {\n        if ($count[$i] > $max) {\n            $max = $count[$i];\n            $max_index = $i;\n        }\n    }\n    return $count[$max_index];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmpknev9ea4.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    return $count[$max_key];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp57mmz72s.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    return $count[$max_key];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp57mmz72s.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    return $count[$max_key];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp57mmz72s.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_index = 0;\n    $max_count = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max_index = $i;\n        }\n    }\n    $max = $test[$max_index];\n    $count = array_filter($count, function($value) {\n        return $value > 0;\n    });\n    return array($max, $count);\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nWarning: Undefined array key \"a\" in /tmp/tmpp0dh5c72.php on line 22\n\nFatal error: Uncaught Error: Undefined constant \"undefined\" in /tmp/tmpp0dh5c72.php:22\nStack trace:\n#0 /tmp/tmpp0dh5c72.php(40): histogram('a b b a')\n#1 /tmp/tmpp0dh5c72.php(44): candidate('a b b a')\n#2 /tmp/tmpp0dh5c72.php(54): test()\n#3 {main}\n  thrown in /tmp/tmpp0dh5c72.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = 0;\n    $max = 0;\n    $result = array();\n    $test = $test.split(\" \");\n    for ($i = 0; $i < $test.length; $i++) {\n        $count = $count + $test[$i];\n        if ($count > $max) {\n            $max = $count;\n            $result = array($test[$i]);\n        } else if ($count == $max) {\n            $result[$i] = $test[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpz_c_1xhy.php:20\nStack trace:\n#0 /tmp/tmpz_c_1xhy.php(34): histogram('a b b a')\n#1 /tmp/tmpz_c_1xhy.php(38): candidate('a b b a')\n#2 /tmp/tmpz_c_1xhy.php(48): test()\n#3 {main}\n  thrown in /tmp/tmpz_c_1xhy.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        if (!isset($count[$test[$i]])) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n        }\n    }\n    $result = array();\n    for ($i = 0; $i < strlen($test); $i++) {\n        if ($count[$test[$i]] == $max) {\n            $result[$test[$i]] = $count[$test[$i]];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjp5soo5p.php:43\nStack trace:\n#0 /tmp/tmpjp5soo5p.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpjp5soo5p.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    $max_count = 0;\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    $count = $count[$max_letter];\n    return $count === undefined ? [] : [$max_letter, $count];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpyowzp52w.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = 0;\n    $max = 0;\n    $result = array();\n    for ($i = 0; $i < strlen($test); $i++) {\n        $count = $count + 1;\n        if ($count > $max) {\n            $max = $count;\n            $result = array($test[$i]);\n        } else if ($test[$i] == $result[0]) {\n            $result[0] = $result[0] + 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptn1030b0.php:37\nStack trace:\n#0 /tmp/tmptn1030b0.php(47): test()\n#1 {main}\n  thrown in /tmp/tmptn1030b0.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($result[$test[$i]] === undefined) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]]++;\n        }\n        if ($result[$test[$i]] > $max) {\n            $max = $result[$test[$i]];\n        }\n    }\n    for (var $i in $result) {\n        if ($result[$i] === $max) {\n            $count++;\n        }\n    }\n    return $count === 0 ? [] : $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpl5pw5fa4.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $test = $test.split(\" \");\n    for ($i = 0; $i < $test.length; $i++) {\n        if (!$count[$test[$i]]) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n    }\n    $max = 0;\n    $max_index = \"\";\n    for ($i = 0; $i < $count.length; $i++) {\n        if ($count[$i] > $max) {\n            $max = $count[$i];\n            $max_index = $i;\n        }\n    }\n    return $count[$max_index];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpa82bf0q3.php:18\nStack trace:\n#0 /tmp/tmpa82bf0q3.php(38): histogram('a b b a')\n#1 /tmp/tmpa82bf0q3.php(42): candidate('a b b a')\n#2 /tmp/tmpa82bf0q3.php(52): test()\n#3 {main}\n  thrown in /tmp/tmpa82bf0q3.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    var $max_letter = \"\";\n    var $max_count = 0;\n    var $letters = $test.split(\" \");\n    for (var $i = 0; $i < $letters.length; $i++) {\n        if ($result[$letters[$i]] === undefined) {\n            $result[$letters[$i]] = 1;\n        } else {\n            $result[$letters[$i]] += 1;\n        }\n        if ($result[$letters[$i]] > $max_count) {\n            $max_count = $result[$letters[$i]];\n            $max_letter = $letters[$i];\n        }\n    }\n    $count = $max_count;\n    $max = $max_letter;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp402993rw.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    $result = [];\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($test[$i] === $max_key) {\n            $result.push($test[$i]);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpox27qk08.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $count = {};\n    var $result = [];\n    for (var $i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n    }\n    for (var $key in $count) {\n        $result.push([$key, $count[$key]]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpr_hvo2xc.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        $letter = $test[$i];\n        if ($count[$letter] === undefined) {\n            $count[$letter] = 1;\n        } else {\n            $count[$letter]++;\n        }\n        if ($count[$letter] > $max) {\n            $max = $count[$letter];\n            $max_letter = $letter;\n        }\n    }\n    return $count[$max_letter];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp7ypb77hq.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        $count = $count + 1;\n        if ($count > $max) {\n            $max = $count;\n            $result[$test[$i]] = $count;\n        } else if ($count == $max) {\n            $result[$test[$i]] = $count;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjkcgxqtb.php:37\nStack trace:\n#0 /tmp/tmpjkcgxqtb.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpjkcgxqtb.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        if (!isset($count[$test[$i]])) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n        }\n    }\n    $result = array();\n    for ($i = 0; $i < strlen($test); $i++) {\n        if ($count[$test[$i]] == $max) {\n            $result[$test[$i]] = $count[$test[$i]];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjp5soo5p.php:43\nStack trace:\n#0 /tmp/tmpjp5soo5p.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpjp5soo5p.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $test = $test.replace(/\\s/g, '');\n    $test = $test.split('');\n    $count = {};\n    $max = 0;\n    $max_key = '';\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    $result = [];\n    for ($i = 0; $i < $max; $i++) {\n        $result.push($max_key);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmps1xw127w.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        if (!isset($count[$test[$i]])) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n        }\n    }\n    $result = array();\n    for ($i = 0; $i < strlen($test); $i++) {\n        if ($count[$test[$i]] == $max) {\n            $result[$test[$i]] = $count[$test[$i]];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjp5soo5p.php:43\nStack trace:\n#0 /tmp/tmpjp5soo5p.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpjp5soo5p.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    var $max_letter = '';\n    var $max_count = 0;\n    var $letters = $test.split(' ');\n    for (var $i = 0; $i < $letters.length; $i++) {\n        if ($letters[$i] in $result) {\n            $count = $result[$letters[$i]];\n            $count++;\n            $result[$letters[$i]] = $count;\n        } else {\n            $result[$letters[$i]] = 1;\n            $count = 1;\n        }\n        if ($count > $max_count) {\n            $max_count = $count;\n            $max_letter = $letters[$i];\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    $result[$max_letter] = $max_count;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpp47zhqea.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    var $max_letter = \"\";\n    var $max_count = 0;\n    for (var $i = 0; $i < $test.length; $i++) {\n        var $letter = $test.charAt($i);\n        if ($result[$letter] === undefined) {\n            $result[$letter] = 1;\n        } else {\n            $result[$letter]++;\n        }\n        if ($result[$letter] > $max_count) {\n            $max_count = $result[$letter];\n            $max_letter = $letter;\n        }\n        $count += $result[$letter];\n    }\n    if ($count > $max) {\n        $max = $count;\n    }\n    $result[$max_letter] = $max;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpsggtap_8.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        if (!isset($result[$test[$i]])) {\n            $result[$test[$i]] = 1;\n        } else {\n            $result[$test[$i]]++;\n        }\n        $count++;\n    }\n    $max = 0;\n    $max_index = 0;\n    for ($i = 0; $i < strlen($result); $i++) {\n        if ($result[$i] > $max) {\n            $max = $result[$i];\n            $max_index = $i;\n        }\n    }\n    $result[$max_index] = $count;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmphwyxg7vj.php:29\nStack trace:\n#0 /tmp/tmphwyxg7vj.php(40): histogram('a b b a')\n#1 /tmp/tmphwyxg7vj.php(44): candidate('a b b a')\n#2 /tmp/tmphwyxg7vj.php(54): test()\n#3 {main}\n  thrown in /tmp/tmphwyxg7vj.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    var $max_letter = '';\n    var $letters = $test.split(' ');\n    for (var $i = 0; $i < $letters.length; $i++) {\n        if ($letters[$i] in $result) {\n            $count = $result[$letters[$i]];\n        }\n        $count++;\n        $result[$letters[$i]] = $count;\n        if ($count > $max) {\n            $max = $count;\n            $max_letter = $letters[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpwuqqgjsu.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ( $i = 0; $i < $test.length; $i++ ) {\n        if ( $count[$test[$i]] === undefined ) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ( $count[$test[$i]] > $max ) {\n            $max = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    $result = [];\n    for ( $i = 0; $i < $max; $i++ ) {\n        if ( $count[$max_letter] === $i ) {\n            $result.push($max_letter);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpemvot6rj.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_index = 0;\n    $result = array();\n    for ( $i = 0; $i < strlen($test); $i++ ) {\n        if ( $count[$test[$i]] === undefined ) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ( $count[$test[$i]] > $max ) {\n            $max = $count[$test[$i]];\n            $max_index = $i;\n        }\n    }\n    $result[$max_index] = $max;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nWarning: Undefined array key \"a\" in /tmp/tmp4d6cl9w_.php on line 22\n\nFatal error: Uncaught Error: Undefined constant \"undefined\" in /tmp/tmp4d6cl9w_.php:22\nStack trace:\n#0 /tmp/tmp4d6cl9w_.php(37): histogram('a b b a')\n#1 /tmp/tmp4d6cl9w_.php(41): candidate('a b b a')\n#2 /tmp/tmp4d6cl9w_.php(51): test()\n#3 {main}\n  thrown in /tmp/tmp4d6cl9w_.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $test = $test.replace(/\\s+/g, ' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test = $test.split(' ');\n    $test = $test.sort();\n    $test = $test.join(' ');\n    $test =\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmpjq5oopaz.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    // your code goes here\n    var arr = $test.split(\" \");\n    var max = 0;\n    var max_count = 0;\n    var result = [];\n    for (var i = 0; i < arr.length; i++) {\n        var count = 0;\n        for (var j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count > max_count) {\n            max_count = count;\n            max = arr[i];\n        }\n    }\n    for (var i = 0; i < arr.length; i++) {\n        if (arr[i] == max) {\n            result.push(arr[i]);\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpp3hf0ddw.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    $max_count = 0;\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    $result = [];\n    for ($i in $count) {\n        if ($count[$i] === $max_count) {\n            $result.push($i);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpex8tvu1r.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.toLowerCase();\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    $result = [];\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === $max) {\n            $result.push($test[$i]);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmp72lmybi8.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        if (!isset($count[$test[$i]])) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n        }\n    }\n    $result = array();\n    for ($i = 0; $i < strlen($test); $i++) {\n        if ($count[$test[$i]] == $max) {\n            $result[$test[$i]] = $count[$test[$i]];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjp5soo5p.php:43\nStack trace:\n#0 /tmp/tmpjp5soo5p.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpjp5soo5p.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $count = array();\n    $max = 0;\n    $max_index = 0;\n    $max_count = 0;\n    $test = $test.toLowerCase();\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max_count) {\n            $max_count = $count[$test[$i]];\n            $max_index = $i;\n        }\n    }\n    $max = $max_count;\n    $count = array_keys($count);\n    $count.sort();\n    $count.reverse();\n    $count = array_values($count);\n    $count.sort();\n    $count.reverse();\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toLowerCase() in /tmp/tmpgona9yh_.php:21\nStack trace:\n#0 /tmp/tmpgona9yh_.php(44): histogram('a b b a')\n#1 /tmp/tmpgona9yh_.php(48): candidate('a b b a')\n#2 /tmp/tmpgona9yh_.php(58): test()\n#3 {main}\n  thrown in /tmp/tmpgona9yh_.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        if ($count == 0) {\n            $count = 1;\n            $result[$test[$i]] = 1;\n        } else if ($test[$i] == $result[$test[$i]]) {\n            $count++;\n        } else {\n            $count--;\n            $result[$test[$i]] = $count;\n            $count = 1;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    if ($max == 0) {\n        return $result;\n    }\n    for ($i = 0; $i < strlen($test); $i++) {\n        if ($result[$test[$i]] == $max) {\n            $result[$test[$i]] = $max;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nWarning: Undefined array key \" \" in /tmp/tmpf70_ho67.php on line 24\n\nWarning: Undefined array key \"b\" in /tmp/tmpf70_ho67.php on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf70_ho67.php:51\nStack trace:\n#0 /tmp/tmpf70_ho67.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpf70_ho67.php on line 51\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $result = array();\n    $count = 0;\n    for ($i = 0; $i < strlen($test); $i++) {\n        $c = $test[$i];\n        if (!isset($result[$c])) {\n            $result[$c] = 1;\n        } else {\n            $result[$c]++;\n        }\n        $count++;\n    }\n    $max = 0;\n    $max_c = \"\";\n    for ($i = 0; $i < strlen($result); $i++) {\n        if ($result[$i] > $max) {\n            $max = $result[$i];\n            $max_c = $i;\n        }\n    }\n    $result[$max_c] = $count;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmp4v676g87.php:30\nStack trace:\n#0 /tmp/tmp4v676g87.php(41): histogram('a b b a')\n#1 /tmp/tmp4v676g87.php(45): candidate('a b b a')\n#2 /tmp/tmp4v676g87.php(55): test()\n#3 {main}\n  thrown in /tmp/tmp4v676g87.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_letter = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_letter = $test[$i];\n        }\n    }\n    return $count[$max_letter];\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292844,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpg1ab5ymd.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    $test = $test.split(\" \");\n    $count = {};\n    $max = 0;\n    $max_key = \"\";\n    for ($i = 0; $i < $test.length; $i++) {\n        if ($count[$test[$i]] === undefined) {\n            $count[$test[$i]] = 1;\n        } else {\n            $count[$test[$i]]++;\n        }\n        if ($count[$test[$i]] > $max) {\n            $max = $count[$test[$i]];\n            $max_key = $test[$i];\n        }\n    }\n    $result = [];\n    for ($i = 0; $i < $max; $i++) {\n        $result.push($max_key);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"{\" in /tmp/tmpifc20jqx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    var $max_letter = \"\";\n    for (var $i = 0; $i < $test.length; $i++) {\n        var $letter = $test.charAt($i);\n        if ($result[$letter] === undefined) {\n            $result[$letter] = 1;\n        } else {\n            $result[$letter]++;\n        }\n        if ($result[$letter] > $count) {\n            $count = $result[$letter];\n            $max = $count;\n            $max_letter = $letter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpaukrdlut.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string representing a space separated lowercase letters, return an array\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>> histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\nfunction histogram($test) {\n    var $result = {};\n    var $count = 0;\n    var $max = 0;\n    var $max_letter = \"\";\n    for (var $i = 0; $i < $test.length; $i++) {\n        var $letter = $test.substr($i, 1);\n        if ($result[$letter] === undefined) {\n            $result[$letter] = 1;\n        } else {\n            $result[$letter]++;\n        }\n        if ($result[$letter] > $count) {\n            $count = $result[$letter];\n            $max = $count;\n            $max_letter = $letter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292845,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp3l4ndw75.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
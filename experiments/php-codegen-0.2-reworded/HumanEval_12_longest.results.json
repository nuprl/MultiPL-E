{
  "name": "HumanEval_12_longest",
  "language": "php",
  "prompt": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n",
  "tests": "function candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4he8lsva.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyndjhg0x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = 0;\n    var max_str = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if ($strings[i].length > max) {\n            max = $strings[i].length;\n            max_str = $strings[i];\n        }\n    }\n    return max_str;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp7bu27_rj.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpjqzd22on.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n\n    $longest = null;\n    $longest_length = 0;\n\n    foreach ($strings as $string) {\n        if (strlen($string) > $longest_length) {\n            $longest = $string;\n            $longest_length = strlen($string);\n        }\n    }\n\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = 0;\n    var max_index = 0;\n    for (var i = 0; i < $strings.length; i++) {\n        if ($strings[i].length > max) {\n            max = $strings[i].length;\n            max_index = i;\n        }\n    }\n\n    return $strings[max_index];\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpb5r5q8ct.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings) {\n        return null;\n    }\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        var string = $strings[i];\n        if (max === null || max.length < string.length) {\n            max = string;\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4v78wvrg.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyndjhg0x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1gz0zukr.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings) {\n        return null;\n    }\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpedmh5we_.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (!empty($longest) && $longest->length() < $string->length()) {\n            continue;\n        }\n        $longest = $string;\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to a member function length() on string in /tmp/tmpwb8mzlns.php:16\nStack trace:\n#0 /tmp/tmpwb8mzlns.php(25): longest(Array)\n#1 /tmp/tmpwb8mzlns.php(30): candidate(Array)\n#2 /tmp/tmpwb8mzlns.php(34): test()\n#3 {main}\n  thrown in /tmp/tmpwb8mzlns.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpoplty25i.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (!$longest || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || length($longest) < length($string)) {\n            $longest = $string;\n        }\n    }\n\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function length() in /tmp/tmpy3nq3ku_.php:17\nStack trace:\n#0 /tmp/tmpy3nq3ku_.php(26): longest(Array)\n#1 /tmp/tmpy3nq3ku_.php(31): candidate(Array)\n#2 /tmp/tmpy3nq3ku_.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpy3nq3ku_.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var longest_string = null;\n    var longest_length = 0;\n\n    for (var i = 0; i < $strings.length; i++) {\n        if ($strings[i].length > longest_length) {\n            longest_length = $strings[i].length;\n            longest_string = $strings[i];\n        }\n    }\n\n    return longest_string;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpgci1sqcl.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpoplty25i.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || length($longest) < length($string)) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function length() in /tmp/tmpepb0oj6j.php:16\nStack trace:\n#0 /tmp/tmpepb0oj6j.php(24): longest(Array)\n#1 /tmp/tmpepb0oj6j.php(29): candidate(Array)\n#2 /tmp/tmpepb0oj6j.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpepb0oj6j.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1gz0zukr.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyndjhg0x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n\n    $longest = null;\n    foreach ($strings as $string) {\n        if (!empty($longest) && $longest->length() < $string->length()) {\n            $longest = $string;\n        } else if (empty($longest)) {\n            $longest = $string;\n        }\n    }\n\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to a member function length() on string in /tmp/tmpro4ymznt.php:17\nStack trace:\n#0 /tmp/tmpro4ymznt.php(28): longest(Array)\n#1 /tmp/tmpro4ymznt.php(33): candidate(Array)\n#2 /tmp/tmpro4ymznt.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpro4ymznt.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings) {\n        return null;\n    }\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpedmh5we_.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = 0;\n    var max_str = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if ($strings[i].length > max) {\n            max = $strings[i].length;\n            max_str = $strings[i];\n        }\n    }\n\n    return max_str;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpnh_mt_sj.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyndjhg0x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var longest_length = 0;\n    var longest_string = null;\n    for (var i = 0; i < $strings.length; i++) {\n        var string = $strings[i];\n        if (string.length > longest_length) {\n            longest_length = string.length;\n            longest_string = string;\n        }\n    }\n\n    return longest_string;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpmgmnhf0u.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = 0;\n    var maxStr = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if ($strings[i].length > max) {\n            max = $strings[i].length;\n            maxStr = $strings[i];\n        }\n    }\n    return maxStr;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpfstc52ru.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp3e8vacsb.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || length($longest) < length($string)) {\n            $longest = $string;\n        }\n    }\n\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function length() in /tmp/tmpy3nq3ku_.php:17\nStack trace:\n#0 /tmp/tmpy3nq3ku_.php(26): longest(Array)\n#1 /tmp/tmpy3nq3ku_.php(31): candidate(Array)\n#2 /tmp/tmpy3nq3ku_.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpy3nq3ku_.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpoplty25i.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1gz0zukr.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1ln354qq.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || length($longest) < length($string)) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function length() in /tmp/tmpepb0oj6j.php:16\nStack trace:\n#0 /tmp/tmpepb0oj6j.php(24): longest(Array)\n#1 /tmp/tmpepb0oj6j.php(29): candidate(Array)\n#2 /tmp/tmpepb0oj6j.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpepb0oj6j.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings) {\n        return null;\n    }\n    var result = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (result === null || $strings[i].length > result.length) {\n            result = $strings[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp0qapkd08.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = 0;\n    var max_index = 0;\n    for (var i = 0; i < $strings.length; i++) {\n        if ($strings[i].length > max) {\n            max = $strings[i].length;\n            max_index = i;\n        }\n    }\n    return $strings[max_index];\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp33f0m25g.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (null === $longest || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmp8zdlkr7v.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp8zdlkr7v.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp8zdlkr7v.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp8zdlkr7v.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp8zdlkr7v.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp8zdlkr7v.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp8zdlkr7v.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp8zdlkr7v.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp8zdlkr7v.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp8zdlkr7v.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp8zdlkr7v.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (!max || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyoterxz1.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || length($longest) < length($string)) {\n            $longest = $string;\n        }\n    }\n\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function length() in /tmp/tmpy3nq3ku_.php:17\nStack trace:\n#0 /tmp/tmpy3nq3ku_.php(26): longest(Array)\n#1 /tmp/tmpy3nq3ku_.php(31): candidate(Array)\n#2 /tmp/tmpy3nq3ku_.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpy3nq3ku_.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpoplty25i.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (!$strings[i]) {\n            continue;\n        }\n\n        if (!max || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpfr760gv0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || length($longest) < length($string)) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function length() in /tmp/tmpepb0oj6j.php:16\nStack trace:\n#0 /tmp/tmpepb0oj6j.php(24): longest(Array)\n#1 /tmp/tmpepb0oj6j.php(29): candidate(Array)\n#2 /tmp/tmpepb0oj6j.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpepb0oj6j.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (!$strings[i]) {\n            continue;\n        }\n        if (!max || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpos_yh_hz.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n\n    // Find the longest string\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if (strlen($strings[i]) > strlen(longest)) {\n            longest = $strings[i];\n        }\n    }\n\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpsot1ub6s.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var longest_string = null;\n    var longest_length = 0;\n\n    for (var i = 0; i < $strings.length; i++) {\n        if ($strings[i].length > longest_length) {\n            longest_length = $strings[i].length;\n            longest_string = $strings[i];\n        }\n    }\n\n    return longest_string;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpgci1sqcl.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp3e8vacsb.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpjqzd22on.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (!max || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmptj2ajxic.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (null === $longest || $longest.length < $string.length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpteqxlchd.php:16\nStack trace:\n#0 /tmp/tmpteqxlchd.php(24): longest(Array)\n#1 /tmp/tmpteqxlchd.php(29): candidate(Array)\n#2 /tmp/tmpteqxlchd.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpteqxlchd.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings) {\n        return null;\n    }\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpedmh5we_.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyndjhg0x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1gz0zukr.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (!$longest || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        var string = $strings[i];\n        if (max === null || string.length > max.length) {\n            max = string;\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp5r4j4_28.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1gz0zukr.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n\n    $longest = null;\n    foreach ($strings as $string) {\n        if ($longest === null || $longest.length < $string.length) {\n            $longest = $string;\n        }\n    }\n\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpm95cygp3.php:17\nStack trace:\n#0 /tmp/tmpm95cygp3.php(26): longest(Array)\n#1 /tmp/tmpm95cygp3.php(31): candidate(Array)\n#2 /tmp/tmpm95cygp3.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpm95cygp3.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n\n    let maxLength = 0;\n    let maxString = null;\n\n    for (let i = 0; i < $strings.length; i++) {\n        if ($strings[i].length > maxLength) {\n            maxLength = $strings[i].length;\n            maxString = $strings[i];\n        }\n    }\n\n    return maxString;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected identifier \"maxLength\" in /tmp/tmpx5sb6vvd.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings) {\n        return null;\n    }\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpedmh5we_.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyndjhg0x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1gz0zukr.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest < $string) {\n            $longest = $string;\n        }\n    }\n\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk4l3799c.php:31\nStack trace:\n#0 /tmp/tmpk4l3799c.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpk4l3799c.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $max = 0;\n    $max_string = null;\n    foreach ($strings as $string) {\n        if (strlen($string) > $max) {\n            $max = strlen($string);\n            $max_string = $string;\n        }\n    }\n    return $max_string;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings) {\n        return null;\n    }\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpedmh5we_.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings) {\n        return null;\n    }\n    var longest = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (longest === null || $strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyd0cw40f.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp3e8vacsb.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpjqzd22on.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || length($longest) < length($string)) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function length() in /tmp/tmpepb0oj6j.php:16\nStack trace:\n#0 /tmp/tmpepb0oj6j.php(24): longest(Array)\n#1 /tmp/tmpepb0oj6j.php(29): candidate(Array)\n#2 /tmp/tmpepb0oj6j.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpepb0oj6j.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (null === $longest || $longest.length < $string.length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpteqxlchd.php:16\nStack trace:\n#0 /tmp/tmpteqxlchd.php(24): longest(Array)\n#1 /tmp/tmpteqxlchd.php(29): candidate(Array)\n#2 /tmp/tmpteqxlchd.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpteqxlchd.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1ln354qq.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings) {\n        return null;\n    }\n    var longest = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (longest === null || $strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyd0cw40f.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest < $string) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zqn7k13.php:29\nStack trace:\n#0 /tmp/tmp_zqn7k13.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_zqn7k13.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpjqzd22on.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp3e8vacsb.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (!is_string($string)) {\n            continue;\n        }\n        if (!$longest || strlen($longest) < strlen($string)) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var maxLength = 0;\n    var maxString = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if ($strings[i].length > maxLength) {\n            maxLength = $strings[i].length;\n            maxString = $strings[i];\n        }\n    }\n\n    return maxString;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp31ca_2b3.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (!empty($longest) && $longest->length() < $string->length()) {\n            $longest = $string;\n        } else if (empty($longest)) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to a member function length() on string in /tmp/tmpsw2tnhml.php:16\nStack trace:\n#0 /tmp/tmpsw2tnhml.php(26): longest(Array)\n#1 /tmp/tmpsw2tnhml.php(31): candidate(Array)\n#2 /tmp/tmpsw2tnhml.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpsw2tnhml.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1gz0zukr.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyndjhg0x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpoplty25i.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || length($longest) < length($string)) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function length() in /tmp/tmpepb0oj6j.php:16\nStack trace:\n#0 /tmp/tmpepb0oj6j.php(24): longest(Array)\n#1 /tmp/tmpepb0oj6j.php(29): candidate(Array)\n#2 /tmp/tmpepb0oj6j.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpepb0oj6j.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = 0;\n    var maxStr = null;\n    for (var i = 0; i < $strings.length; i++) {\n        var len = $strings[i].length;\n        if (len > max) {\n            max = len;\n            maxStr = $strings[i];\n        }\n    }\n    return maxStr;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpshfg071v.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4he8lsva.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyndjhg0x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n\n    $longest = null;\n    foreach ($strings as $string) {\n        if (!empty($longest) && $longest->length() < $string->length()) {\n            $longest = $string;\n        } else if (empty($longest)) {\n            $longest = $string;\n        }\n    }\n\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to a member function length() on string in /tmp/tmpro4ymznt.php:17\nStack trace:\n#0 /tmp/tmpro4ymznt.php(28): longest(Array)\n#1 /tmp/tmpro4ymznt.php(33): candidate(Array)\n#2 /tmp/tmpro4ymznt.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpro4ymznt.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = null;\n    var maxLen = 0;\n\n    for (var i = 0; i < $strings.length; i++) {\n        var len = $strings[i].length;\n        if (len > maxLen) {\n            max = $strings[i];\n            maxLen = len;\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpaytve3uv.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (!empty($longest) && $longest->length() < $string->length()) {\n            $longest = $string;\n        } else if (empty($longest)) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to a member function length() on string in /tmp/tmpsw2tnhml.php:16\nStack trace:\n#0 /tmp/tmpsw2tnhml.php(26): longest(Array)\n#1 /tmp/tmpsw2tnhml.php(31): candidate(Array)\n#2 /tmp/tmpsw2tnhml.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpsw2tnhml.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpoplty25i.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $max = 0;\n    $max_string = null;\n    foreach ($strings as $string) {\n        if (strlen($string) > $max) {\n            $max = strlen($string);\n            $max_string = $string;\n        }\n    }\n    return $max_string;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyndjhg0x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || length($longest) < length($string)) {\n            $longest = $string;\n        }\n    }\n\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function length() in /tmp/tmpy3nq3ku_.php:17\nStack trace:\n#0 /tmp/tmpy3nq3ku_.php(26): longest(Array)\n#1 /tmp/tmpy3nq3ku_.php(31): candidate(Array)\n#2 /tmp/tmpy3nq3ku_.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpy3nq3ku_.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings) {\n        return null;\n    }\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpedmh5we_.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (!empty($longest) && $longest->length() < $string->length()) {\n            $longest = $string;\n        } else if (empty($longest) || $longest->length() < $string->length()) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to a member function length() on string in /tmp/tmp7ihiojks.php:16\nStack trace:\n#0 /tmp/tmp7ihiojks.php(26): longest(Array)\n#1 /tmp/tmp7ihiojks.php(31): candidate(Array)\n#2 /tmp/tmp7ihiojks.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp7ihiojks.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n\n    $longest = null;\n    foreach ($strings as $string) {\n        if (!$longest || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpoplty25i.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyndjhg0x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings) {\n        return null;\n    }\n    let max = null;\n    let maxLen = 0;\n    for (let i = 0; i < $strings.length; i++) {\n        let len = $strings[i].length;\n        if (len > maxLen) {\n            max = $strings[i];\n            maxLen = len;\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected identifier \"max\" in /tmp/tmpxzs0_rej.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1ln354qq.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings) {\n        return null;\n    }\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        var string = $strings[i];\n        if (max === null || max.length < string.length) {\n            max = string;\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4v78wvrg.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpoplty25i.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || length($longest) < length($string)) {\n            $longest = $string;\n        }\n    }\n\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function length() in /tmp/tmpy3nq3ku_.php:17\nStack trace:\n#0 /tmp/tmpy3nq3ku_.php(26): longest(Array)\n#1 /tmp/tmpy3nq3ku_.php(31): candidate(Array)\n#2 /tmp/tmpy3nq3ku_.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpy3nq3ku_.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyndjhg0x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $max = 0;\n    $max_string = null;\n    foreach ($strings as $string) {\n        if (strlen($string) > $max) {\n            $max = strlen($string);\n            $max_string = $string;\n        }\n    }\n    return $max_string;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || length($longest) < length($string)) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function length() in /tmp/tmpepb0oj6j.php:16\nStack trace:\n#0 /tmp/tmpepb0oj6j.php(24): longest(Array)\n#1 /tmp/tmpepb0oj6j.php(29): candidate(Array)\n#2 /tmp/tmpepb0oj6j.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpepb0oj6j.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings) {\n        return null;\n    }\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpedmh5we_.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpoplty25i.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp3e8vacsb.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || length($longest) < length($string)) {\n            $longest = $string;\n        }\n    }\n\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function length() in /tmp/tmpy3nq3ku_.php:17\nStack trace:\n#0 /tmp/tmpy3nq3ku_.php(26): longest(Array)\n#1 /tmp/tmpy3nq3ku_.php(31): candidate(Array)\n#2 /tmp/tmpy3nq3ku_.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpy3nq3ku_.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpwrvvdxdu.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpwrvvdxdu.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings) {\n        return null;\n    }\n\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (!max || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpf1a0mggv.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (!max || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmptj2ajxic.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4he8lsva.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyndjhg0x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpoplty25i.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyndjhg0x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    let max = $strings[0];\n    for (let i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected identifier \"max\" in /tmp/tmpiwu_l2us.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyndjhg0x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest)) {\n            $longest = $string;\n        } else if (strlen($longest) < strlen($string)) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n\n    var maxLength = 0;\n    var maxString = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if ($strings[i].length > maxLength) {\n            maxLength = $strings[i].length;\n            maxString = $strings[i];\n        }\n    }\n\n    return maxString;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyvmc70vi.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1gz0zukr.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyndjhg0x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || length($longest) < length($string)) {\n            $longest = $string;\n        }\n    }\n\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function length() in /tmp/tmpy3nq3ku_.php:17\nStack trace:\n#0 /tmp/tmpy3nq3ku_.php(26): longest(Array)\n#1 /tmp/tmpy3nq3ku_.php(31): candidate(Array)\n#2 /tmp/tmpy3nq3ku_.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpy3nq3ku_.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (null === $longest || $longest.length < $string.length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpteqxlchd.php:16\nStack trace:\n#0 /tmp/tmpteqxlchd.php(24): longest(Array)\n#1 /tmp/tmpteqxlchd.php(29): candidate(Array)\n#2 /tmp/tmpteqxlchd.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpteqxlchd.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4he8lsva.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1gz0zukr.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpjqzd22on.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n\n    $longest = null;\n    foreach ($strings as $string) {\n        if (!$longest || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (!$strings[i]) {\n            continue;\n        }\n        if (!max || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpos_yh_hz.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1gz0zukr.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings) {\n        return null;\n    }\n    var result = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (result === null || $strings[i].length > result.length) {\n            result = $strings[i];\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp0qapkd08.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpwrvvdxdu.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpoplty25i.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpoplty25i.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || length($longest) < length($string)) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function length() in /tmp/tmpepb0oj6j.php:16\nStack trace:\n#0 /tmp/tmpepb0oj6j.php(24): longest(Array)\n#1 /tmp/tmpepb0oj6j.php(29): candidate(Array)\n#2 /tmp/tmpepb0oj6j.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpepb0oj6j.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp3e8vacsb.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1ln354qq.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp3e8vacsb.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n\n    var max = $strings[0];\n    var max_len = $strings[0].length;\n\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max_len) {\n            max = $strings[i];\n            max_len = $strings[i].length;\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpagecgtka.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || length($longest) < length($string)) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function length() in /tmp/tmpepb0oj6j.php:16\nStack trace:\n#0 /tmp/tmpepb0oj6j.php(24): longest(Array)\n#1 /tmp/tmpepb0oj6j.php(29): candidate(Array)\n#2 /tmp/tmpepb0oj6j.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpepb0oj6j.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1gz0zukr.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyndjhg0x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp3e8vacsb.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1ln354qq.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n\n    $longest = null;\n    foreach ($strings as $string) {\n        if (!$longest || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2v8bxszu.php on line 17\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkmntm51n.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (!empty($longest) && $longest < $string) {\n            return $longest;\n        }\n        $longest = $string;\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte8jn1_u.php:31\nStack trace:\n#0 /tmp/tmpte8jn1_u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpte8jn1_u.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n\n    var longest_length = 0;\n    var longest_string = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if ($strings[i].length > longest_length) {\n            longest_length = $strings[i].length;\n            longest_string = $strings[i];\n        }\n    }\n\n    return longest_string;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpoz2gsckm.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = 0;\n    var max_string = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if ($strings[i].length > max) {\n            max = $strings[i].length;\n            max_string = $strings[i];\n        }\n    }\n    return max_string;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpk6ob3xue.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = 0;\n    var max_string = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if ($strings[i].length > max) {\n            max = $strings[i].length;\n            max_string = $strings[i];\n        }\n    }\n\n    return max_string;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp0e13t6_j.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || $strings.length === 0) {\n        return null;\n    }\n\n    var max = $strings[0];\n    var maxLen = $strings[0].length;\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > maxLen) {\n            max = $strings[i];\n            maxLen = $strings[i].length;\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpm3sg9yta.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1ln354qq.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings) {\n        return null;\n    }\n    $longest = null;\n    $longest_length = 0;\n    for (var $i = 0; $i < $strings.length; $i++) {\n        if ($strings[$i].length > $longest_length) {\n            $longest = $strings[$i];\n            $longest_length = $strings[$i].length;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpwoypwqyt.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest < $string) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zqn7k13.php:29\nStack trace:\n#0 /tmp/tmp_zqn7k13.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_zqn7k13.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmpdpyatumw.php on line 17\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var longest = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > longest.length) {\n            longest = $strings[i];\n        }\n    }\n    return longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyndjhg0x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (null === $longest || $longest.length < $string.length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpteqxlchd.php:16\nStack trace:\n#0 /tmp/tmpteqxlchd.php(24): longest(Array)\n#1 /tmp/tmpteqxlchd.php(29): candidate(Array)\n#2 /tmp/tmpteqxlchd.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpteqxlchd.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n\n    var maxLength = 0;\n    var maxString = null;\n\n    for (var i = 0; i < $strings.length; i++) {\n        var length = $strings[i].length;\n        if (length > maxLength) {\n            maxLength = length;\n            maxString = $strings[i];\n        }\n    }\n\n    return maxString;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmps61nz0li.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpoplty25i.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (empty($longest) || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmplde_lnvc.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = null;\n    for (var i = 0; i < $strings.length; i++) {\n        if (max === null || $strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpjqzd22on.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n    $longest = null;\n    foreach ($strings as $string) {\n        if (!$longest || $longest->length < $string->length) {\n            $longest = $string;\n        }\n    }\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" on string in /tmp/tmp2pyqroij.php on line 16\n\nWarning: Attempt to read property \"length\" o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (empty($strings)) {\n        return null;\n    }\n\n    $longest = null;\n    foreach ($strings as $string) {\n        if (!empty($longest) && $longest->length() < $string->length()) {\n            $longest = $string;\n        } else if (empty($longest)) {\n            $longest = $string;\n        }\n    }\n\n    return $longest;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nFatal error: Uncaught Error: Call to a member function length() on string in /tmp/tmpro4ymznt.php:17\nStack trace:\n#0 /tmp/tmpro4ymznt.php(28): longest(Array)\n#1 /tmp/tmpro4ymznt.php(33): candidate(Array)\n#2 /tmp/tmpro4ymznt.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpro4ymznt.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpoplty25i.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Out of array of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return null in case the input array is empty.\n// >>> longest(array())\n// null\n// >>> longest(array(\"a\", \"b\", \"c\"))\n// \"a\"\n// >>> longest(array(\"a\", \"bb\", \"ccc\"))\n// \"ccc\"\nfunction longest($strings) {\n    if (!$strings || !$strings.length) {\n        return null;\n    }\n    var max = $strings[0];\n    for (var i = 1; i < $strings.length; i++) {\n        if ($strings[i].length > max.length) {\n            max = $strings[i];\n        }\n    }\n    return max;\n}\n\nfunction candidate(...$args) {\n    return longest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"y\", \"z\")) !== \"x\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\")) !== \"zzzz\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293175,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpoplty25i.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
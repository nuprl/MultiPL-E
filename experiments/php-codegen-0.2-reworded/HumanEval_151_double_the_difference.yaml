name: HumanEval_151_double_the_difference
language: php
prompt: "<?php\n// Given an array of numbers, return the sum of squares of the numbers\n\
  // in the array that are odd. Ignore numbers that are negative or not integers.\n\
  // >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
  \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
  // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
  \ {\n"
tests: "function candidate(...$args) {\n    return double_the_difference(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
  \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
  \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
  \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n \
    \   foreach($lst as $n) {\n        if (is_int($n) && $n > 0) {\n            $sum\
    \ += $n * $n;\n        }\n    }\n    return $sum;\n}\n", "    if (empty($lst))\
    \ {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst as $n) {\n    \
    \    if (is_int($n) && $n > 0) {\n            $sum += $n * $n;\n        }\n  \
    \  }\n    return $sum;\n}\n", "    if (!$lst) {\n        return 0;\n    }\n  \
    \  var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n        if ($lst[i]\
    \ < 0 || isNaN($lst[i])) {\n            continue;\n        }\n        sum += $lst[i]\
    \ * $lst[i];\n    }\n    return sum;\n}\n", "    if (empty($lst)) {\n        return\
    \ 0;\n    }\n    $sum = 0;\n    foreach ($lst as $i => $n) {\n        if ($n <\
    \ 0 || !is_int($n)) {\n            continue;\n        }\n        $sum += pow($n,\
    \ 2);\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n        return\
    \ 0;\n    }\n    $sum = 0;\n    foreach($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n\
    \    foreach($lst as $n) {\n        if (is_int($n) && $n >= 0) {\n           \
    \ $sum += pow($n, 2);\n        }\n    }\n    return $sum;\n}\n", "    if(!$lst)\
    \ return 0;\n    var sum = 0;\n    for(var i = 0; i < $lst.length; i++) {\n  \
    \      if($lst[i] < 0 || !is_int($lst[i])) continue;\n        sum += $lst[i] *\
    \ $lst[i];\n    }\n    return sum;\n}\n", "    if (empty($lst)) {\n        return\
    \ 0;\n    }\n    $sum = 0;\n    foreach($lst as $num) {\n        if ($num < 0)\
    \ {\n            continue;\n        }\n        if (is_int($num)) {\n         \
    \   $sum += pow($num, 2);\n        }\n    }\n    return $sum;\n}\n", "    if (!$lst\
    \ || !$lst.length) {\n        return 0;\n    }\n    var sum = 0;\n    for (var\
    \ i = 0; i < $lst.length; i++) {\n        if ($lst[i] > 0 && $lst[i] % 2) {\n\
    \            sum += Math.pow($lst[i], 2);\n        }\n    }\n    return sum;\n\
    }\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        if (is_int($n) && $n >= 0) {\n            $sum += pow($n,\
    \ 2);\n        }\n    }\n    return $sum;\n}\n", "    if (!$lst || !$lst.length)\
    \ {\n        return 0;\n    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length;\
    \ i++) {\n        if ($lst[i] < 0 || isNaN($lst[i])) {\n            continue;\n\
    \        }\n        sum += Math.pow($lst[i], 2);\n    }\n    return sum;\n}\n",
  "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        if (is_int($n) && $n > 0) {\n            $sum += $n * $n;\n\
    \        }\n    }\n    return $sum;\n}\n", "    if (!$lst || $lst.length === 0)\
    \ {\n        return 0;\n    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length;\
    \ i++) {\n        if ($lst[i] > 0 && $lst[i] % 1 === 1) {\n            sum +=\
    \ Math.pow($lst[i], 2);\n        }\n    }\n    return sum;\n}\n", "    if (empty($lst))\
    \ {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst as $n) {\n    \
    \    if (is_int($n) && $n > 0) {\n            $sum += pow($n, 2);\n        }\n\
    \    }\n    return $sum;\n}\n", "    if (!$lst) {\n        return 0;\n    }\n\
    \    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n        if ($lst[i]\
    \ > 0 && $lst[i] % 2) {\n            sum += $lst[i] * $lst[i];\n        }\n  \
    \  }\n    return sum;\n}\n", "    $sum = 0;\n    foreach($lst as $num) {\n   \
    \     if (is_int($num) && $num > 0) {\n            if ($num % 2) {\n         \
    \       $sum += $num * $num;\n            }\n        }\n    }\n    return $sum;\n\
    }\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach\
    \ ($lst as $i => $n) {\n        if (is_int($n) && $n >= 0) {\n            $sum\
    \ += $n * $n;\n        }\n    }\n    return $sum;\n}\n", "    if (empty($lst))\
    \ {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst as $num) {\n  \
    \      if (is_int($num) && $num > 0) {\n            $sum += pow($num, 2);\n  \
    \      }\n    }\n    return $sum;\n}\n", "    if (!$lst) {\n        return 0;\n\
    \    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n      \
    \  if ($lst[i] < 0 || !is_int($lst[i])) {\n            continue;\n        }\n\
    \        if ($lst[i] % 2) {\n            sum += $lst[i] * $lst[i];\n        }\n\
    \    }\n    return sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n  \
    \  }\n    $sum = 0;\n    foreach ($lst as $i => $n) {\n        if ($n < 0 || !is_int($n))\
    \ {\n            continue;\n        }\n        $sum += pow($n, 2);\n    }\n  \
    \  return $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n\n \
    \   $sum = 0;\n    foreach($lst as $n) {\n        if (is_int($n) && $n >= 0) {\n\
    \            $sum += $n * $n;\n        }\n    }\n\n    return $sum;\n}\n", " \
    \   if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach ($lst\
    \ as $n) {\n        if (is_int($n) && $n > 0) {\n            $sum += $n * $n;\n\
    \        }\n    }\n    return $sum;\n}\n", "    if (!$lst) {\n        return 0;\n\
    \    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n      \
    \  if ($lst[i] < 0 || isNaN($lst[i])) {\n            continue;\n        }\n  \
    \      if ($lst[i] % 2) {\n            sum += $lst[i] * $lst[i];\n        }\n\
    \    }\n    return sum;\n}\n", "    if (!$lst || !$lst.length) {\n        return\
    \ 0;\n    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n \
    \       if ($lst[i] > 0 && $lst[i] % 2) {\n            sum += Math.pow($lst[i],\
    \ 2);\n        }\n    }\n    return sum;\n}\n", "    if (empty($lst)) {\n    \
    \    return 0;\n    }\n    $sum = 0;\n    foreach($lst as $num) {\n        if\
    \ (is_int($num) && $num > 0) {\n            $sum += $num * $num;\n        }\n\
    \    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n  \
    \      if ($n < 0) {\n            continue;\n        }\n        if (!is_int($n))\
    \ {\n            continue;\n        }\n        $sum += pow($n, 2);\n    }\n  \
    \  return $sum;\n}\n", "    if (!$lst) {\n        return 0;\n    }\n    var sum\
    \ = 0;\n    for (var i = 0; i < $lst.length; i++) {\n        if ($lst[i] > 0 &&\
    \ $lst[i] % 1 == 1) {\n            sum += $lst[i] * $lst[i];\n        }\n    }\n\
    \    return sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n  \
    \  $sum = 0;\n    foreach($lst as $num) {\n        if (is_int($num) && $num >\
    \ 0) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n\
    }\n", "    $sum = 0;\n    foreach($lst as $i => $n) {\n        if ($n < 0 || !is_int($n))\
    \ {\n            continue;\n        }\n        $sum += pow($n, 2);\n    }\n  \
    \  return $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n   \
    \ $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) && $num >\
    \ 0) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n\
    }\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $i => $n) {\n        if (is_int($n)) {\n            $sum += pow($n, 2);\n\
    \        }\n    }\n    return $sum;\n}\n", "    if (!$lst || !$lst.length) {\n\
    \        return 0;\n    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length;\
    \ i++) {\n        if ($lst[i] < 0 || !is_int($lst[i])) {\n            continue;\n\
    \        }\n        sum += $lst[i] * $lst[i];\n    }\n    return sum;\n}\n", " \
    \   if (empty($lst)) {\n        return 0;\n    }\n\n    $sum = 0;\n    foreach($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n\n    return $sum;\n}\n", "    if (!$lst || !$lst.length)\
    \ {\n        return 0;\n    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length;\
    \ i++) {\n        if ($lst[i] > 0 && $lst[i] % 2) {\n            sum += Math.pow($lst[i],\
    \ 2);\n        }\n    }\n    return sum;\n}\n", "    if (empty($lst)) {\n    \
    \    return 0;\n    }\n\n    $sum = 0;\n    foreach($lst as $n) {\n        if\
    \ ($n < 0) {\n            continue;\n        }\n\n        if (is_int($n)) {\n\
    \            $sum += pow($n, 2);\n        }\n    }\n\n    return $sum;\n}\n",
  "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        if (is_int($n) && $n >= 0) {\n            $sum += $n * $n;\n\
    \        }\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n        return\
    \ 0;\n    }\n    $sum = 0;\n    foreach ($lst as $n) {\n        if (is_int($n)\
    \ && $n > 0) {\n            $sum += pow($n, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n", "    if (!$lst) {\n        return 0;\n    }\n    $sum = 0;\n  \
    \  foreach ($lst as $n) {\n        if ($n < 0 || !is_int($n)) {\n            continue;\n\
    \        }\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    if\
    \ (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst as\
    \ $n) {\n        if ($n < 0) {\n            continue;\n        }\n        if (is_int($n))\
    \ {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n", " \
    \   if (empty($lst)) {\n        return 0;\n    }\n\n    $sum = 0;\n    foreach\
    \ ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum\
    \ += $num * $num;\n        }\n    }\n\n    return $sum;\n}\n", "    if(!$lst)\
    \ return 0;\n    var sum = 0;\n    for(var i = 0; i < $lst.length; i++) {\n  \
    \      if($lst[i] < 0 || !is_int($lst[i])) continue;\n        sum += $lst[i] *\
    \ $lst[i];\n    }\n    return sum;\n}\n", "    if (empty($lst)) {\n        return\
    \ 0;\n    }\n    $sum = 0;\n    foreach($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n\n    $sum =\
    \ 0;\n    foreach ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n\
    \            $sum += pow($num, 2);\n        }\n    }\n\n    return $sum;\n}\n",
  "    if (empty($lst)) {\n        return 0;\n    }\n\n    $sum = 0;\n    foreach\
    \ ($lst as $n) {\n        if (is_int($n) && $n > 0) {\n            $sum += $n\
    \ * $n;\n        }\n    }\n\n    return $sum;\n}\n", "    if (empty($lst)) {\n\
    \        return 0;\n    }\n    $sum = 0;\n    foreach($lst as $num) {\n      \
    \  if (is_int($num) && $num > 0) {\n            $sum += $num * $num;\n       \
    \ }\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n\
    \    }\n    $sum = 0;\n    foreach($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n\
    \    foreach($lst as $n) {\n        if ($n < 0 || !is_int($n)) {\n           \
    \ continue;\n        }\n        $sum += pow($n, 2);\n    }\n    return $sum;\n\
    }\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        if ($n < 0) {\n            continue;\n        }\n        if\
    \ (!is_int($n)) {\n            continue;\n        }\n        $sum += $n * $n;\n\
    \    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $i => $n)\
    \ {\n        if ($n < 0 || !is_int($n)) {\n            continue;\n        }\n\
    \        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    if (empty($lst))\
    \ {\n        return 0;\n    }\n\n    $sum = 0;\n    foreach ($lst as $num) {\n\
    \        if (is_int($num) && $num > 0) {\n            $sum += pow($num, 2);\n\
    \        }\n    }\n\n    return $sum;\n}\n", "    if (empty($lst)) {\n       \
    \ return 0;\n    }\n    $sum = 0;\n    foreach($lst as $i => $n) {\n        if\
    \ (is_int($n) && $n > 0) {\n            $sum += $n * $n;\n        }\n    }\n \
    \   return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $i => $n) {\n    \
    \    if ($n < 0 || !is_int($n)) {\n            continue;\n        }\n        $sum\
    \ += $n * $n;\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        if ($n < 0) {\n            continue;\n        }\n        if\
    \ (!is_int($n)) {\n            continue;\n        }\n        if ($n % 2 == 1)\
    \ {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n", " \
    \   if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += pow($num,\
    \ 2);\n        }\n    }\n    return $sum;\n}\n", "    if(!$lst || $lst.length\
    \ === 0) {\n        return 0;\n    }\n    var sum = 0;\n    for(var i = 0; i <\
    \ $lst.length; i++) {\n        if($lst[i] > 0 && $lst[i] % 1 === 1) {\n      \
    \      sum += Math.pow($lst[i], 2);\n        }\n    }\n    return sum;\n}\n",
  "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        if (is_int($n) && $n > 0) {\n            $sum += $n * $n;\n\
    \        }\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n        return\
    \ 0;\n    }\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n\
    \    foreach($lst as $n) {\n        if (is_int($n) && $n > 0) {\n            $sum\
    \ += $n * $n;\n        }\n    }\n    return $sum;\n}\n", "    if (!$lst || $lst.length\
    \ == 0) {\n        return 0;\n    }\n\n    var sum = 0;\n    for (var i = 0; i\
    \ < $lst.length; i++) {\n        if ($lst[i] > 0 && $lst[i] % 2 == 1) {\n    \
    \        sum += Math.pow($lst[i], 2);\n        }\n    }\n    return sum;\n}\n",
  "    if (empty($lst)) {\n        return 0;\n    }\n\n    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        if (is_int($n) && $n > 0) {\n            $sum += $n * $n;\n\
    \        }\n    }\n\n    return $sum;\n}\n", "    if (!$lst) {\n        return\
    \ 0;\n    }\n\n    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n\
    \        if ($lst[i] > 0 && $lst[i] % 2 == 1) {\n            sum += $lst[i] *\
    \ $lst[i];\n        }\n    }\n\n    return sum;\n}\n", "    if (empty($lst)) {\n\
    \        return 0;\n    }\n    $sum = 0;\n    foreach($lst as $n) {\n        if\
    \ (is_int($n) && $n >= 0) {\n            $sum += pow($n, 2);\n        }\n    }\n\
    \    return $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n \
    \   $sum = 0;\n    foreach($lst as $n) {\n        if (is_int($n)) {\n        \
    \    if ($n > 0) {\n                $sum += $n * $n;\n            }\n        }\n\
    \    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n \
    \   }\n    $sum = 0;\n    foreach ($lst as $i => $n) {\n        if (is_int($n)\
    \ && $n > 0) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n\
    }\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach\
    \ ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum\
    \ += pow($num, 2);\n        }\n    }\n    return $sum;\n}\n", "    if (empty($lst))\
    \ {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst as $num) {\n  \
    \      if (is_int($num)) {\n            if ($num % 2) {\n                $sum\
    \ += $num * $num;\n            }\n        }\n    }\n    return $sum;\n}\n", " \
    \   $sum = 0;\n    foreach($lst as $num) {\n        if (is_int($num) && $num >\
    \ 0) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n\
    }\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $num) {\n        if (is_int($num)) {\n            $sum += abs($num) * abs($num);\n\
    \        }\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n        return\
    \ 0;\n    }\n    $sum = 0;\n    foreach($lst as $n) {\n        if (is_int($n)\
    \ && $n > 0) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n\
    }\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        if (is_int($n) && $n > 0) {\n            $sum += pow($n, 2);\n\
    \        }\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n        return\
    \ 0;\n    }\n    $sum = 0;\n    foreach($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n\
    \    foreach($lst as $num) {\n        if (is_int($num) && $num > 0) {\n      \
    \      $sum += pow($num, 2);\n        }\n    }\n    return $sum;\n}\n", "    if\
    \ (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += pow($num,\
    \ 2);\n        }\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n   \
    \     return 0;\n    }\n    $sum = 0;\n    foreach($lst as $n) {\n        if (is_int($n)\
    \ && $n > 0) {\n            $sum += pow($n, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n\n    $sum =\
    \ 0;\n    foreach($lst as $num) {\n        if ($num < 0 || !is_int($num)) {\n\
    \            continue;\n        }\n\n        $sum += pow($num, 2);\n    }\n\n\
    \    return $sum;\n}\n", "    if (!$lst || $lst.length == 0) {\n        return\
    \ 0;\n    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n \
    \       if ($lst[i] < 0 || isNaN($lst[i])) {\n            continue;\n        }\n\
    \        if ($lst[i] % 2 == 1) {\n            sum += $lst[i] * $lst[i];\n    \
    \    }\n    }\n    return sum;\n}\n", "    if (!$lst || !$lst.length) {\n    \
    \    return 0;\n    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length;\
    \ i++) {\n        if ($lst[i] < 0 || !isFinite($lst[i])) {\n            continue;\n\
    \        }\n        if ($lst[i] % 2) {\n            sum += $lst[i] * $lst[i];\n\
    \        }\n    }\n    return sum;\n}\n", "    if (empty($lst)) {\n        return\
    \ 0;\n    }\n\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n\n    return\
    \ $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n\
    \    foreach($lst as $num) {\n        if (is_int($num) && $num > 0) {\n      \
    \      $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n", "    if\
    \ (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst as\
    \ $n) {\n        if (is_int($n) && $n > 0) {\n            $sum += pow($n, 2);\n\
    \        }\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n        return\
    \ 0;\n    }\n    $sum = 0;\n    foreach($lst as $i => $j) {\n        if ($i <\
    \ 0 || !is_int($i)) {\n            continue;\n        }\n        $sum += pow($i,\
    \ 2);\n    }\n    return $sum;\n}\n", "    if (!$lst) {\n        return 0;\n \
    \   }\n    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n       \
    \ if ($lst[i] > 0 && $lst[i] % 2) {\n            sum += $lst[i] * $lst[i];\n \
    \       }\n    }\n    return sum;\n}\n", "    if (empty($lst)) {\n        return\
    \ 0;\n    }\n\n    $sum = 0;\n    foreach($lst as $num) {\n        if (is_int($num))\
    \ {\n            $sum += abs($num) * abs($num);\n        }\n    }\n\n    return\
    \ $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n\
    \    foreach($lst as $n) {\n        if ($n < 0) {\n            continue;\n   \
    \     }\n        if (is_int($n)) {\n            $sum += pow($n, 2);\n        }\n\
    \    }\n    return $sum;\n}\n", "    if (!$lst || !$lst.length) {\n        return\
    \ 0;\n    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n \
    \       if ($lst[i] > 0 && $lst[i] % 2) {\n            sum += Math.pow($lst[i],\
    \ 2);\n        }\n    }\n    return sum;\n}\n", "    if (!$lst) {\n        return\
    \ 0;\n    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n \
    \       if ($lst[i] > 0 && $lst[i] % 2) {\n            sum += $lst[i] * $lst[i];\n\
    \        }\n    }\n    return sum;\n}\n", "    if (!$lst || !$lst.length) {\n\
    \        return 0;\n    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length;\
    \ i++) {\n        if ($lst[i] > 0 && $lst[i] % 1 === 1) {\n            sum +=\
    \ Math.pow($lst[i], 2);\n        }\n    }\n    return sum;\n}\n", "    if (empty($lst))\
    \ {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst as $n) {\n    \
    \    if (is_int($n) && $n >= 0) {\n            $sum += $n * $n;\n        }\n \
    \   }\n    return $sum;\n}\n", "    if (!$lst) {\n        return 0;\n    }\n \
    \   var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n        if ($lst[i]\
    \ < 0 || !is_int($lst[i])) {\n            continue;\n        }\n        sum +=\
    \ Math.pow($lst[i], 2);\n    }\n    return sum;\n}\n", "    if (empty($lst)) {\n\
    \        return 0;\n    }\n    $sum = 0;\n    foreach($lst as $n) {\n        if\
    \ (is_int($n)) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n\
    }\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}\n", "    if (is_empty($lst))\
    \ {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst as $num) {\n  \
    \      if (is_int($num)) {\n            $sum += pow($num, 2);\n        }\n   \
    \ }\n    return $sum;\n}\n", "    if (!$lst || $lst.length == 0) {\n        return\
    \ 0;\n    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n \
    \       if ($lst[i] > 0 && $lst[i] % 2 == 1) {\n            sum += $lst[i] * $lst[i];\n\
    \        }\n    }\n    return sum;\n}\n", "    if (empty($lst)) {\n        return\
    \ 0;\n    }\n    $sum = 0;\n    foreach ($lst as $n) {\n        if (is_int($n)\
    \ && $n > 0) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n\
    }\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += pow($num,\
    \ 2);\n        }\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n   \
    \     return 0;\n    }\n    $sum = 0;\n    foreach($lst as $num) {\n        if\
    \ (is_int($num) && $num > 0) {\n            $sum += $num * $num;\n        }\n\
    \    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n \
    \   }\n    $sum = 0;\n    foreach($lst as $n) {\n        if (is_int($n)) {\n \
    \           $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n", "    if\
    \ (!$lst) {\n        return 0;\n    }\n    $sum = 0;\n    for (var $i = 0; $i\
    \ < $lst.length; $i++) {\n        if ($lst[$i] > 0 && $lst[$i] % 1 == 1) {\n \
    \           $sum += $lst[$i] * $lst[$i];\n        }\n    }\n    return $sum;\n\
    }\n", "    if (!$lst || !$lst.length) {\n        return 0;\n    }\n    var sum\
    \ = 0;\n    for (var i = 0; i < $lst.length; i++) {\n        if ($lst[i] > 0 &&\
    \ $lst[i] % 2) {\n            sum += Math.pow($lst[i], 2);\n        }\n    }\n\
    \    return sum;\n}\n", "    if (!$lst || !$lst.length) {\n        return 0;\n\
    \    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n      \
    \  if ($lst[i] < 0 || isNaN($lst[i])) {\n            continue;\n        }\n  \
    \      if ($lst[i] % 2) {\n            sum += $lst[i] * $lst[i];\n        }\n\
    \    }\n    return sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n  \
    \  }\n\n    $sum = 0;\n    foreach($lst as $n) {\n        if (is_int($n) && $n\
    \ > 0) {\n            $sum += $n * $n;\n        }\n    }\n\n    return $sum;\n\
    }\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        if (is_int($n) && $n > 0) {\n            $sum += $n * $n;\n\
    \        }\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n        return\
    \ 0;\n    }\n\n    $sum = 0;\n    foreach($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n\n    return\
    \ $sum;\n}\n", "    if (!$lst || $lst.length === 0) {\n        return 0;\n   \
    \ }\n    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n        if\
    \ ($lst[i] < 0 || $lst[i] % 1 !== 0) {\n            continue;\n        }\n   \
    \     sum += $lst[i] * $lst[i];\n    }\n    return sum;\n}\n", "    if (empty($lst))\
    \ {\n        return 0;\n    }\n    $sum = 0;\n    foreach ($lst as $n) {\n   \
    \     if ($n < 0 || !is_int($n)) {\n            continue;\n        }\n       \
    \ $sum += $n * $n;\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n \
    \       return 0;\n    }\n    $sum = 0;\n    foreach($lst as $n) {\n        if\
    \ (is_int($n) && $n >= 0) {\n            $sum += $n * $n;\n        }\n    }\n\
    \    return $sum;\n}\n", "    if (!$lst || !$lst.length) {\n        return 0;\n\
    \    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n      \
    \  if ($lst[i] > 0 && $lst[i] % 1 == 1) {\n            sum += $lst[i] * $lst[i];\n\
    \        }\n    }\n    return sum;\n}\n", "    if (!$lst) {\n        return 0;\n\
    \    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n      \
    \  if ($lst[i] > 0 && $lst[i] % 2 == 1) {\n            sum += Math.pow($lst[i],\
    \ 2);\n        }\n    }\n    return sum;\n}\n", "    if(!$lst || $lst.length ===\
    \ 0) {\n        return 0;\n    }\n    var sum = 0;\n    for(var i = 0; i < $lst.length;\
    \ i++) {\n        if($lst[i] < 0 || isNaN($lst[i])) {\n            continue;\n\
    \        }\n        sum += Math.pow($lst[i], 2);\n    }\n    return sum;\n}\n",
  "    if(!$lst) return 0;\n    $sum = 0;\n    foreach($lst as $i => $n) {\n     \
    \   if($n < 0 || !is_int($n)) continue;\n        $sum += $n * $n;\n    }\n   \
    \ return $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n\n  \
    \  $sum = 0;\n    foreach($lst as $i) {\n        if (is_int($i) && $i > 0) {\n\
    \            $sum += pow($i, 2);\n        }\n    }\n\n    return $sum;\n}\n",
  "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        if ($n < 0) {\n            continue;\n        }\n        if\
    \ (is_int($n)) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n\
    }\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $i => $n) {\n        if ($n < 0 || !is_int($n)) {\n            continue;\n\
    \        }\n        $sum += $n * $n;\n    }\n    return $sum;\n}\n", "    if (empty($lst))\
    \ {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst as $i => $n) {\n\
    \        if ($n < 0 || !is_int($n)) {\n            continue;\n        }\n    \
    \    $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        if ($n < 0) {\n            continue;\n        }\n        if\
    \ (is_int($n)) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n\
    }\n", "    if (!$lst) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $num) {\n        if ($num < 0 || !is_int($num)) {\n            continue;\n\
    \        }\n        $sum += pow($num, 2);\n    }\n    return $sum;\n}\n", "  \
    \  if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += pow($num,\
    \ 2);\n        }\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n   \
    \     return 0;\n    }\n    $sum = 0;\n    foreach($lst as $n) {\n        if (is_int($n))\
    \ {\n            $sum += pow($n, 2);\n        }\n    }\n    return $sum;\n}\n",
  "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        if (is_int($n) && $n > 0) {\n            $sum += $n * $n;\n\
    \        }\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n        return\
    \ 0;\n    }\n    $sum = 0;\n    foreach($lst as $num) {\n        if (is_int($num))\
    \ {\n            $sum += pow($num, 2);\n        }\n    }\n    return $sum;\n}\n",
  "    if (empty($lst)) {\n        return 0;\n    }\n\n    $sum = 0;\n    foreach\
    \ ($lst as $n) {\n        if (is_int($n) && $n > 0) {\n            $sum += pow($n,\
    \ 2);\n        }\n    }\n\n    return $sum;\n}\n", "    if (empty($lst)) {\n \
    \       return 0;\n    }\n    $sum = 0;\n    foreach($lst as $i => $n) {\n   \
    \     if (is_int($n)) {\n            if ($n < 0) {\n                continue;\n\
    \            }\n            $sum += pow($n, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n", "    if(!$lst || $lst.length == 0) return 0;\n    var sum = 0;\n\
    \    for(var i = 0; i < $lst.length; i++) {\n        if($lst[i] > 0 && $lst[i]\
    \ % 1 == 0) {\n            sum += Math.pow($lst[i], 2);\n        }\n    }\n  \
    \  return sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum\
    \ = 0;\n    foreach($lst as $num) {\n        if (is_int($num) && $num > 0) {\n\
    \            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n", " \
    \   if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        if (is_int($n)) {\n            $sum += pow($n, 2);\n     \
    \   }\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n        return\
    \ 0;\n    }\n\n    $sum = 0;\n    foreach($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n\n    return\
    \ $sum;\n}\n", "    if(!$lst) {\n        return 0;\n    }\n    var sum = 0;\n\
    \    for(var i = 0; i < $lst.length; i++) {\n        if($lst[i] < 0 || !is_int($lst[i]))\
    \ {\n            continue;\n        }\n        sum += $lst[i] * $lst[i];\n   \
    \ }\n    return sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n\
    \    $sum = 0;\n    foreach ($lst as $i => $n) {\n        if (is_int($n) && $n\
    \ >= 0) {\n            $sum += pow($n, 2);\n        }\n    }\n    return $sum;\n\
    }\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n\
    \        return 0;\n    }\n    $sum = 0;\n    foreach($lst as $num) {\n      \
    \  if (is_int($num) && $num > 0) {\n            $sum += $num * $num;\n       \
    \ }\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n\
    \    }\n\n    $sum = 0;\n    foreach($lst as $n) {\n        if ($n < 0 || !is_int($n))\
    \ {\n            continue;\n        }\n\n        $sum += pow($n, 2);\n    }\n\n\
    \    return $sum;\n}\n", "    if (!$lst || $lst.length === 0) {\n        return\
    \ 0;\n    }\n\n    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n\
    \        if ($lst[i] > 0 && $lst[i] % 1 === 1) {\n            sum += Math.pow($lst[i],\
    \ 2);\n        }\n    }\n\n    return sum;\n}\n", "    if (!$lst || $lst.length\
    \ === 0) {\n        return 0;\n    }\n    var sum = 0;\n    for (var i = 0; i\
    \ < $lst.length; i++) {\n        if ($lst[i] > 0 && $lst[i] % 1 === 1) {\n   \
    \         sum += Math.pow($lst[i], 2);\n        }\n    }\n    return sum;\n}\n",
  "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        if (is_int($n) && $n > 0) {\n            $sum += $n * $n;\n\
    \        }\n    }\n    return $sum;\n}\n", "    if(!$lst) return 0;\n    $sum\
    \ = 0;\n    foreach($lst as $num) {\n        if(is_int($num) && $num > 0) {\n\
    \            $sum += pow($num, 2);\n        }\n    }\n    return $sum;\n}\n",
  "    if (!$lst || $lst.length === 0) {\n        return 0;\n    }\n\n    var sum\
    \ = 0;\n    for (var i = 0; i < $lst.length; i++) {\n        if ($lst[i] > 0 &&\
    \ $lst[i] % 1 === 1) {\n            sum += Math.pow($lst[i], 2);\n        }\n\
    \    }\n\n    return sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n \
    \       if ($n < 0) {\n            continue;\n        }\n        if (is_int($n))\
    \ {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n", " \
    \   if (empty($lst)) {\n        return 0;\n    }\n\n    $sum = 0;\n    foreach($lst\
    \ as $num) {\n        if (is_int($num)) {\n            if ($num % 2) {\n     \
    \           $sum += pow($num, 2);\n            }\n        }\n    }\n\n    return\
    \ $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n\
    \    foreach($lst as $n) {\n        if (is_int($n)) {\n            $sum += pow($n,\
    \ 2);\n        }\n    }\n    return $sum;\n}\n", "    if (!$lst || !$lst.length)\
    \ {\n        return 0;\n    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length;\
    \ i++) {\n        if ($lst[i] < 0 || !isFinite($lst[i])) {\n            continue;\n\
    \        }\n        sum += Math.pow($lst[i], 2);\n    }\n    return sum;\n}\n",
  "    if(!$lst) return 0;\n    $sum = 0;\n    foreach($lst as $n) {\n        if(is_int($n)\
    \ && $n > 0) {\n            $sum += pow($n, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n", "    if (is_empty($lst)) {\n        return 0;\n    }\n    $sum\
    \ = 0;\n    foreach ($lst as $i => $n) {\n        if (is_int($n) && $n > 0) {\n\
    \            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n", "   \
    \ if(!$lst || $lst.length === 0) {\n        return 0;\n    }\n    var sum = 0;\n\
    \    for(var i = 0; i < $lst.length; i++) {\n        if($lst[i] < 0 || $lst[i]\
    \ % 1 !== 0) {\n            continue;\n        }\n        sum += Math.pow($lst[i],\
    \ 2);\n    }\n    return sum;\n}\n", "    if(!$lst) return 0;\n    var sum = 0;\n\
    \    for(var i = 0; i < $lst.length; i++) {\n        if($lst[i] < 0 || isNaN($lst[i]))\
    \ continue;\n        if($lst[i] % 2) sum += $lst[i] * $lst[i];\n    }\n    return\
    \ sum;\n}\n", "    $sum = 0;\n    foreach($lst as $i => $n) {\n        if ($n\
    \ < 0) {\n            continue;\n        }\n        if (is_int($n)) {\n      \
    \      $sum += pow($n, 2);\n        }\n    }\n    return $sum;\n}\n", "    if\
    \ (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        if ($num < 0 || !is_int($num)) {\n            continue;\n\
    \        }\n        $sum += pow($num, 2);\n    }\n    return $sum;\n}\n", "  \
    \  if (is_empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach\
    \ ($lst as $n) {\n        if ($n < 0 || !is_int($n)) {\n            continue;\n\
    \        }\n        $sum += $n * $n;\n    }\n    return $sum;\n}\n", "    if (empty($lst))\
    \ {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst as $num) {\n  \
    \      if (is_int($num) && $num > 0) {\n            $sum += $num * $num;\n   \
    \     }\n    }\n    return $sum;\n}\n", "    if (!$lst) {\n        return 0;\n\
    \    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n      \
    \  if ($lst[i] > 0 && $lst[i] % 2 == 1) {\n            sum += $lst[i] * $lst[i];\n\
    \        }\n    }\n    return sum;\n}\n", "    if (empty($lst)) {\n        return\
    \ 0;\n    }\n    $sum = 0;\n    foreach($lst as $n) {\n        if ($n < 0 || !is_int($n))\
    \ {\n            continue;\n        }\n        $sum += pow($n, 2);\n    }\n  \
    \  return $sum;\n}\n", "    if (!$lst || !$lst.length) {\n        return 0;\n\
    \    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n      \
    \  if ($lst[i] < 0 || isNaN($lst[i])) {\n            continue;\n        }\n  \
    \      sum += Math.pow($lst[i], 2);\n    }\n    return sum;\n}\n", "    if (empty($lst))\
    \ {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst as $i => $n) {\n\
    \        if ($n < 0 || !is_int($n)) {\n            continue;\n        }\n    \
    \    $sum += $n * $n;\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n\
    \        return 0;\n    }\n    $sum = 0;\n    foreach($lst as $num) {\n      \
    \  if ($num < 0 || !is_int($num)) {\n            continue;\n        }\n      \
    \  $sum += $num * $num;\n    }\n    return $sum;\n}\n", "    if (empty($lst))\
    \ {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst as $n) {\n    \
    \    if (is_int($n) && $n >= 0) {\n            $sum += $n * $n;\n        }\n \
    \   }\n    return $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n  \
    \  }\n\n    $sum = 0;\n    foreach($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n\n    return\
    \ $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n\
    \    foreach ($lst as $i => $n) {\n        if ($n < 0 || !is_int($n)) {\n    \
    \        continue;\n        }\n        $sum += pow($n, 2);\n    }\n    return\
    \ $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n\n    $sum =\
    \ 0;\n    foreach($lst as $n) {\n        if (is_int($n) && $n > 0) {\n       \
    \     $sum += pow($n, 2);\n        }\n    }\n\n    return $sum;\n}\n", "    if\
    \ (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst as\
    \ $n) {\n        if ($n < 0 || !is_int($n)) {\n            continue;\n       \
    \ }\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    if (empty($lst))\
    \ {\n        return 0;\n    }\n\n    $sum = 0;\n    foreach ($lst as $num) {\n\
    \        if (is_int($num) && $num > 0) {\n            $sum += pow($num, 2);\n\
    \        }\n    }\n\n    return $sum;\n}\n", "    if (empty($lst)) {\n       \
    \ return 0;\n    }\n    $sum = 0;\n    foreach($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n", "    if(!$lst) return 0;\n    $sum = 0;\n    foreach($lst as $num)\
    \ {\n        if(is_int($num) && $num > 0) {\n            $sum += pow($num, 2);\n\
    \        }\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n        return\
    \ 0;\n    }\n    $sum = 0;\n    foreach($lst as $i => $j) {\n        if (is_int($i)\
    \ && $i > 0) {\n            $sum += pow($i, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n\
    \    foreach($lst as $n) {\n        if (is_int($n) && $n >= 0) {\n           \
    \ $sum += pow($n, 2);\n        }\n    }\n    return $sum;\n}\n", "    if (empty($lst))\
    \ {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst as $n) {\n    \
    \    if (is_int($n) && $n >= 0) {\n            $sum += pow($n, 2);\n        }\n\
    \    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $i => $n)\
    \ {\n        if ($n < 0) {\n            continue;\n        }\n        if (is_int($n))\
    \ {\n            $sum += pow($n, 2);\n        }\n    }\n    return $sum;\n}\n",
  "    if (empty($lst)) {\n        return 0;\n    }\n\n    $sum = 0;\n    foreach\
    \ ($lst as $n) {\n        if ($n < 0 || !is_int($n)) {\n            continue;\n\
    \        }\n\n        $sum += pow($n, 2);\n    }\n\n    return $sum;\n}\n", " \
    \   if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        if (is_int($n) && $n > 0) {\n            $sum += $n * $n;\n\
    \        }\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n        return\
    \ 0;\n    }\n\n    $sum = 0;\n    foreach($lst as $n) {\n        if (is_int($n)\
    \ && $n > 0) {\n            $sum += pow($n, 2);\n        }\n    }\n\n    return\
    \ $sum;\n}\n", "    if (!$lst || $lst.length === 0) {\n        return 0;\n   \
    \ }\n    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n        if\
    \ ($lst[i] > 0 && $lst[i] % 1 === 1) {\n            sum += $lst[i] * $lst[i];\n\
    \        }\n    }\n    return sum;\n}\n", "    if (empty($lst)) {\n        return\
    \ 0;\n    }\n    $sum = 0;\n    foreach($lst as $n) {\n        if (is_int($n)\
    \ && $n > 0) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n\
    }\n", "    if (!$lst || $lst.length === 0) {\n        return 0;\n    }\n    var\
    \ sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n        if ($lst[i] >\
    \ 0 && $lst[i] % 1 === 1) {\n            sum += Math.pow($lst[i], 2);\n      \
    \  }\n    }\n    return sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n\
    \    }\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n\
    \    foreach($lst as $num) {\n        if (is_int($num) && $num > 0) {\n      \
    \      $sum += $num * $num;\n        }\n    }\n    return $sum;\n}\n", "    if\
    \ (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst as\
    \ $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num *\
    \ $num;\n        }\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n \
    \       return 0;\n    }\n    $sum = 0;\n    foreach($lst as $n) {\n        if\
    \ (is_int($n) && $n > 0) {\n            $sum += pow($n, 2);\n        }\n    }\n\
    \    return $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n \
    \   $sum = 0;\n    foreach($lst as $num) {\n        if (is_int($num) && $num >\
    \ 0) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n\
    }\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        if ($n < 0) {\n            continue;\n        }\n        if\
    \ (is_int($n)) {\n            $sum += pow($n, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n\
    \    foreach ($lst as $n) {\n        if (is_int($n) && $n >= 0) {\n          \
    \  $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n", "    if (empty($lst))\
    \ {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst as $n) {\n    \
    \    if ($n < 0) {\n            continue;\n        }\n        if (is_int($n))\
    \ {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n", " \
    \   if (empty($lst)) {\n        return 0;\n    }\n\n    $sum = 0;\n    foreach($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += pow($num,\
    \ 2);\n        }\n    }\n\n    return $sum;\n}\n", "    if (empty($lst)) {\n \
    \       return 0;\n    }\n    $sum = 0;\n    foreach($lst as $n) {\n        if\
    \ ($n < 0) {\n            continue;\n        }\n        if (is_int($n)) {\n  \
    \          $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n", "    if\
    \ (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst as\
    \ $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += pow($num,\
    \ 2);\n        }\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n   \
    \     return 0;\n    }\n    $sum = 0;\n    foreach($lst as $n) {\n        if (is_int($n)\
    \ && $n > 0) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n\
    }\n", "    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n\
    \        return 0;\n    }\n    $sum = 0;\n    foreach ($lst as $num) {\n     \
    \   if (is_int($num) && $num > 0) {\n            $sum += $num * $num;\n      \
    \  }\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n\
    \        if ($n < 0) {\n            continue;\n        }\n        if (!is_int($n))\
    \ {\n            continue;\n        }\n        $sum += pow($n, 2);\n    }\n  \
    \  return $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n   \
    \ $sum = 0;\n    foreach($lst as $n) {\n        if (is_int($n)) {\n          \
    \  $sum += pow($n, 2);\n        }\n    }\n    return $sum;\n}\n", "    if (empty($lst))\
    \ {\n        return 0;\n    }\n\n    $sum = 0;\n    foreach($lst as $num) {\n\
    \        if (is_int($num) && $num > 0) {\n            $sum += $num * $num;\n \
    \       }\n    }\n\n    return $sum;\n}\n", "    if (empty($lst)) {\n        return\
    \ 0;\n    }\n    $sum = 0;\n    foreach ($lst as $n) {\n        if (is_int($n))\
    \ {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n", " \
    \   if (empty($lst)) {\n        return 0;\n    }\n\n    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        if (is_int($n) && $n > 0) {\n            $sum += $n * $n;\n\
    \        }\n    }\n\n    return $sum;\n}\n", "    if (!$lst || $lst.length ===\
    \ 0) {\n        return 0;\n    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length;\
    \ i++) {\n        if ($lst[i] > 0 && $lst[i] % 2 === 1) {\n            sum +=\
    \ Math.pow($lst[i], 2);\n        }\n    }\n    return sum;\n}\n", "    if(!$lst)\
    \ return 0;\n    $sum = 0;\n    foreach($lst as $i => $j) {\n        if($i < 0\
    \ || $j < 0 || !is_int($i) || !is_int($j)) continue;\n        $sum += pow($i,\
    \ 2) + pow($j, 2);\n    }\n    return $sum;\n}\n", "    if (empty($lst)) {\n \
    \       return 0;\n    }\n\n    $sum = 0;\n    foreach ($lst as $num) {\n    \
    \    if (is_int($num) && $num > 0) {\n            $sum += $num * $num;\n     \
    \   }\n    }\n\n    return $sum;\n}\n", "    if (!$lst || $lst.length == 0) {\n\
    \        return 0;\n    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length;\
    \ i++) {\n        if ($lst[i] > 0 && $lst[i] % 2 == 1) {\n            sum += $lst[i]\
    \ * $lst[i];\n        }\n    }\n    return sum;\n}\n", "    if (empty($lst)) {\n\
    \        return 0;\n    }\n    $sum = 0;\n    foreach ($lst as $num) {\n     \
    \   if ($num < 0 || !is_int($num)) {\n            continue;\n        }\n     \
    \   $sum += pow($num, 2);\n    }\n    return $sum;\n}\n", "    if (!$lst) {\n\
    \        return 0;\n    }\n    var sum = 0;\n    for (var i = 0; i < $lst.length;\
    \ i++) {\n        if ($lst[i] > 0 && $lst[i] % 2) {\n            sum += Math.pow($lst[i],\
    \ 2);\n        }\n    }\n    return sum;\n}\n", "    if (empty($lst)) {\n    \
    \    return 0;\n    }\n\n    $sum = 0;\n    foreach($lst as $n) {\n        if\
    \ (is_int($n) && $n >= 0) {\n            $sum += pow($n, 2);\n        }\n    }\n\
    \n    return $sum;\n}\n", "    if (empty($lst)) {\n        return 0;\n    }\n\
    \    $sum = 0;\n    foreach($lst as $n) {\n        if (is_int($n) && $n > 0) {\n\
    \            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n", "   \
    \ if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        if ($n < 0 || !is_int($n)) {\n            continue;\n    \
    \    }\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

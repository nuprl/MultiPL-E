{
  "name": "HumanEval_25_factorize",
  "language": "php",
  "prompt": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n",
  "tests": "function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors_count = 0;\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors_count++;\n            $factors[$factors_count] = $factor;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292909,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 134217736 bytes) in /tmp/tmpr_577pds.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[0] = 1;\n    $factors[1] = 1;\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[4] = 1;\n    $factors[5] = 1;\n    $factors[6] = 1;\n    $factors[7] = 1;\n    $factors[8] = 1;\n    $factors[9] = 1;\n    $factors[10] = 1;\n    $factors[11] = 1;\n    $factors[12] = 1;\n    $factors[13] = 1;\n    $factors[14] = 1;\n    $factors[15] = 1;\n    $factors[16] = 1;\n    $factors[17] = 1;\n    $factors[18] = 1;\n    $factors[19] = 1;\n    $factors[20] = 1;\n    $factors[21] = 1;\n    $factors[22] = 1;\n    $factors[23] = 1;\n    $factors[24] = 1;\n    $factors[25] = 1;\n    $factors[26] = 1;\n    $factors[27] = 1;\n    $factors[28] = 1;\n    $factors[29] = 1;\n    $factors[30] = 1;\n    $factors[31] = 1;\n    $factors[32] = 1;\n    $factors[33] = 1;\n    $factors[34] = 1;\n    $factors[35] = 1;\n    $factors[36] = 1;\n    $factors[37] = 1;\n    $factors[38] = 1;\n    $factors[39] = 1;\n    $factors[40] = 1;\n    $factors[41] = 1;\n    $factors[42] = 1;\n    $factors[43] = 1;\n    $factors[44] = 1;\n    $factors[45] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmppj45fmfp.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[5] = 1;\n    $factors[7] = 1;\n    $factors[11] = 1;\n    $factors[13] = 1;\n    $factors[17] = 1;\n    $factors[19] = 1;\n    $factors[23] = 1;\n    $factors[29] = 1;\n    $factors[31] = 1;\n    $factors[37] = 1;\n    $factors[41] = 1;\n    $factors[43] = 1;\n    $factors[47] = 1;\n    $factors[53] = 1;\n    $factors[59] = 1;\n    $factors[61] = 1;\n    $factors[67] = 1;\n    $factors[71] = 1;\n    $factors[73] = 1;\n    $factors[79] = 1;\n    $factors[83] = 1;\n    $factors[89] = 1;\n    $factors[97] = 1;\n    $factors[101] = 1;\n    $factors[103] = 1;\n    $factors[107] = 1;\n    $factors[109] = 1;\n    $factors[113] = 1;\n    $factors[127] = 1;\n    $factors[131] = 1;\n    $factors[137] = 1;\n    $factors[139] = 1;\n    $factors[149] = 1;\n    $factors[151] = 1;\n    $factors[157] = 1;\n    $factors[163] = 1;\n    $factors[167] = 1;\n    $factors[173] = 1;\n    $factors[179] = 1;\n    $factors[181] = 1;\n    $factors[191] = 1;\n    $factors[193] = 1;\n    $factors[197] = 1;\n    $factors[199] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpg82ivjzw.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[2] = $n % 2;\n    $factors[3] = $n % 3;\n    $factors[5] = $n % 5;\n    $factors[7] = $n % 7;\n    $factors[11] = $n % 11;\n    $factors[13] = $n % 13;\n    $factors[17] = $n % 17;\n    $factors[19] = $n % 19;\n    $factors[23] = $n % 23;\n    $factors[29] = $n % 29;\n    $factors[31] = $n % 31;\n    $factors[37] = $n % 37;\n    $factors[41] = $n % 41;\n    $factors[43] = $n % 43;\n    $factors[47] = $n % 47;\n    $factors[53] = $n % 53;\n    $factors[59] = $n % 59;\n    $factors[61] = $n % 61;\n    $factors[67] = $n % 67;\n    $factors[71] = $n % 71;\n    $factors[73] = $n % 73;\n    $factors[79] = $n % 79;\n    $factors[83] = $n % 83;\n    $factors[89] = $n % 89;\n    $factors[97] = $n % 97;\n    $factors[101] = $n % 101;\n    $factors[103] = $n % 103;\n    $factors[107] = $n % 107;\n    $factors[109] = $n % 109;\n    $factors[113] = $n % 113;\n    $factors[127] = $n % 127;\n    $factors[131] = $n % 131;\n    $factors[137] = $n % 137;\n    $factors[139] = $n % 139;\n    $factors[149] = $n % 149;\n    $factors[151] = $n % 151;\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmp0gad0fik.php on line 65\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $factor = $n % 2;\n        if (!$factor) {\n            $n = $n / 2;\n            continue;\n        }\n        $factors[$factor] = $factors[$factor] + 1;\n        $n = $n / 2;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_dtbi1bv.php:31\nStack trace:\n#0 /tmp/tmp_dtbi1bv.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_dtbi1bv.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $factor = $n % 2;\n        if ($factor == 0) {\n            $factors[0] = $factor;\n            $n = $n / 2;\n        } else {\n            $factors[$factor] = $factor;\n            $n = $n / 2;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9pr68o_6.php:32\nStack trace:\n#0 /tmp/tmp9pr68o_6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9pr68o_6.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $factor = $n % 2;\n        if (!$factor) {\n            $n = $n / 2;\n            $factors[0]++;\n        } else {\n            $n = $n / 2;\n            $factors[1]++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmptcl_sked.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptcl_sked.php:32\nStack trace:\n#0 /tmp/tmptcl_sked.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptcl_sked.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $factor = $n % 2;\n        if ($factor == 0) {\n            $n = $n / 2;\n            $factors[0] = $factor;\n        } else {\n            $n = $n / 2;\n            $factors[$factor] = $factor;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5jtt1chv.php:32\nStack trace:\n#0 /tmp/tmp5jtt1chv.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5jtt1chv.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 1;\n    while ($n > 1) {\n        if ($n % 2 == 0) {\n            $factors[2] = $factors[2] + 1;\n            $n = $n / 2;\n        } else if ($n % 3 == 0) {\n            $factors[3] = $factors[3] + 1;\n            $n = $n / 3;\n        } else if ($n % 5 == 0) {\n            $factors[5] = $factors[5] + 1;\n            $n = $n / 5;\n        } else if ($n % 7 == 0) {\n            $factors[7] = $factors[7] + 1;\n            $n = $n / 7;\n        } else {\n            $factors[$i] = $factors[$i] + 1;\n            $n = $n / $i;\n        }\n        $i++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nWarning: Undefined array key 2 in /tmp/tmpp7xdh2r2.php on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7xdh2r2.php:41\nStack trace:\n#0 /tmp/tmpp7xdh2r2.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpp7xdh2r2.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 0;\n    while ($n > 1) {\n        $i++;\n        $f = $n % 2;\n        if (!$f) {\n            $n = $n / 2;\n        } else {\n            $f = $n % 3;\n            if (!$f) {\n                $n = $n / 3;\n            } else {\n                $f = $n % 5;\n                if (!$f) {\n                    $n = $n / 5;\n                } else {\n                    $f = $n % 7;\n                    if (!$f) {\n                        $n = $n / 7;\n                    } else {\n                        $f = $n % 11;\n                        if (!$f) {\n                            $n = $n / 11;\n                        } else {\n                            $f = $n % 13;\n                            if (!$f) {\n                                $n = $n / 13;\n                            } else {\n                                $f = $n % 17;\n                                if (!$f) {\n                                    $n = $n / 17;\n                                } else {\n                                    $f = $n % 19;\n                                    if (!$f) {\n                                        $n = $n / 19;\n                                    } else {\n                                        $f = $n % 23;\n                                        if (!$f) {\n                                            $n = $n / 23;\n                                        } else {\n                                            $f = $n % 29;\n                                            if (!$f) {\n                                                $n = $n / 29;\n                                            } else {\n                                                $f = $n % 31;\n                                                if (!$f) {\n                                                    $n = $n / 31;\n                                                } else {\n                                                    $f = $n % 37;\n                                                    if (!$f) {\n                                                        $n = $n / 37;\n                                                    } else {\n                                                        $f = $n % 41;\n                                                        if (!$\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpwlxv2mg6.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n = $n / $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmps8bltwoc.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n = $n / $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmps8bltwoc.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[5] = 1;\n    $factors[7] = 1;\n    $factors[11] = 1;\n    $factors[13] = 1;\n    $factors[17] = 1;\n    $factors[19] = 1;\n    $factors[23] = 1;\n    $factors[29] = 1;\n    $factors[31] = 1;\n    $factors[37] = 1;\n    $factors[41] = 1;\n    $factors[43] = 1;\n    $factors[47] = 1;\n    $factors[53] = 1;\n    $factors[59] = 1;\n    $factors[61] = 1;\n    $factors[67] = 1;\n    $factors[71] = 1;\n    $factors[73] = 1;\n    $factors[79] = 1;\n    $factors[83] = 1;\n    $factors[89] = 1;\n    $factors[97] = 1;\n    $factors[101] = 1;\n    $factors[103] = 1;\n    $factors[107] = 1;\n    $factors[109] = 1;\n    $factors[113] = 1;\n    $factors[127] = 1;\n    $factors[131] = 1;\n    $factors[137] = 1;\n    $factors[139] = 1;\n    $factors[149] = 1;\n    $factors[151] = 1;\n    $factors[157] = 1;\n    $factors[163] = 1;\n    $factors[167] = 1;\n    $factors[173] = 1;\n    $factors[179] = 1;\n    $factors[181] = 1;\n    $factors[191] = 1;\n    $factors[193] = 1;\n    $factors[197] = 1;\n    $factors[199] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpg82ivjzw.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n = $n / $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmps8bltwoc.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[0] = 1;\n    $factors[1] = 1;\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[4] = 1;\n    $factors[5] = 1;\n    $factors[6] = 1;\n    $factors[7] = 1;\n    $factors[8] = 1;\n    $factors[9] = 1;\n    $factors[10] = 1;\n    $factors[11] = 1;\n    $factors[12] = 1;\n    $factors[13] = 1;\n    $factors[14] = 1;\n    $factors[15] = 1;\n    $factors[16] = 1;\n    $factors[17] = 1;\n    $factors[18] = 1;\n    $factors[19] = 1;\n    $factors[20] = 1;\n    $factors[21] = 1;\n    $factors[22] = 1;\n    $factors[23] = 1;\n    $factors[24] = 1;\n    $factors[25] = 1;\n    $factors[26] = 1;\n    $factors[27] = 1;\n    $factors[28] = 1;\n    $factors[29] = 1;\n    $factors[30] = 1;\n    $factors[31] = 1;\n    $factors[32] = 1;\n    $factors[33] = 1;\n    $factors[34] = 1;\n    $factors[35] = 1;\n    $factors[36] = 1;\n    $factors[37] = 1;\n    $factors[38] = 1;\n    $factors[39] = 1;\n    $factors[40] = 1;\n    $factors[41] = 1;\n    $factors[42] = 1;\n    $factors[43] = 1;\n    $factors[44] = 1;\n    $factors[45] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmppj45fmfp.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n = $n / $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmps8bltwoc.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for (; $n > 1; $n--) {\n        if ($n % 2 == 0) {\n            $factors[2]++;\n            $n /= 2;\n        } else if ($n % 3 == 0) {\n            $factors[3]++;\n            $n /= 3;\n        } else if ($n % 5 == 0) {\n            $factors[5]++;\n            $n /= 5;\n        } else if ($n % 7 == 0) {\n            $factors[7]++;\n            $n /= 7;\n        } else {\n            $factors[$n]++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nWarning: Undefined array key 2 in /tmp/tmp2mg93dnv.php on line 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2mg93dnv.php:38\nStack trace:\n#0 /tmp/tmp2mg93dnv.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp2mg93dnv.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor]++;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpu2vyfhmv.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 1;\n    while ($n > 1) {\n        if ($n % $i == 0) {\n            $factors[$i] = $factors[$i] + 1;\n            $n = $n / $i;\n        } else {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpbi08n__p.php on line 16\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $factor = $n % 2;\n        if (!$factor) {\n            $n = $n / 2;\n            $factors[0]++;\n        } else {\n            $n = $n / 2;\n            $factors[1]++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmptcl_sked.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptcl_sked.php:32\nStack trace:\n#0 /tmp/tmptcl_sked.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptcl_sked.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while($n > 1) {\n        $i = 0;\n        while($n % $factor == 0) {\n            $n /= $factor;\n            $i++;\n        }\n        $factors[$factor] = $i;\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 1;\n    while ($n > 1) {\n        if ($n % $i == 0) {\n            $n = $n / $i;\n            $factors[$i] = $factors[$i] + 1;\n        } else {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpsjcln410.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $factor = $n % 2;\n        if (!$factor) {\n            $n = $n / 2;\n        } else {\n            $factors[0] = $factor;\n            $factors[1] = 1;\n            $n = $n / 2;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph5gm_hjg.php:32\nStack trace:\n#0 /tmp/tmph5gm_hjg.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph5gm_hjg.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[0] = 1;\n    $factors[1] = 1;\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[4] = 1;\n    $factors[5] = 1;\n    $factors[6] = 1;\n    $factors[7] = 1;\n    $factors[8] = 1;\n    $factors[9] = 1;\n    $factors[10] = 1;\n    $factors[11] = 1;\n    $factors[12] = 1;\n    $factors[13] = 1;\n    $factors[14] = 1;\n    $factors[15] = 1;\n    $factors[16] = 1;\n    $factors[17] = 1;\n    $factors[18] = 1;\n    $factors[19] = 1;\n    $factors[20] = 1;\n    $factors[21] = 1;\n    $factors[22] = 1;\n    $factors[23] = 1;\n    $factors[24] = 1;\n    $factors[25] = 1;\n    $factors[26] = 1;\n    $factors[27] = 1;\n    $factors[28] = 1;\n    $factors[29] = 1;\n    $factors[30] = 1;\n    $factors[31] = 1;\n    $factors[32] = 1;\n    $factors[33] = 1;\n    $factors[34] = 1;\n    $factors[35] = 1;\n    $factors[36] = 1;\n    $factors[37] = 1;\n    $factors[38] = 1;\n    $factors[39] = 1;\n    $factors[40] = 1;\n    $factors[41] = 1;\n    $factors[42] = 1;\n    $factors[43] = 1;\n    $factors[44] = 1;\n    $factors[45] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmppj45fmfp.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[0] = 1;\n    $factors[1] = 1;\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[4] = 1;\n    $factors[5] = 1;\n    $factors[6] = 1;\n    $factors[7] = 1;\n    $factors[8] = 1;\n    $factors[9] = 1;\n    $factors[10] = 1;\n    $factors[11] = 1;\n    $factors[12] = 1;\n    $factors[13] = 1;\n    $factors[14] = 1;\n    $factors[15] = 1;\n    $factors[16] = 1;\n    $factors[17] = 1;\n    $factors[18] = 1;\n    $factors[19] = 1;\n    $factors[20] = 1;\n    $factors[21] = 1;\n    $factors[22] = 1;\n    $factors[23] = 1;\n    $factors[24] = 1;\n    $factors[25] = 1;\n    $factors[26] = 1;\n    $factors[27] = 1;\n    $factors[28] = 1;\n    $factors[29] = 1;\n    $factors[30] = 1;\n    $factors[31] = 1;\n    $factors[32] = 1;\n    $factors[33] = 1;\n    $factors[34] = 1;\n    $factors[35] = 1;\n    $factors[36] = 1;\n    $factors[37] = 1;\n    $factors[38] = 1;\n    $factors[39] = 1;\n    $factors[40] = 1;\n    $factors[41] = 1;\n    $factors[42] = 1;\n    $factors[43] = 1;\n    $factors[44] = 1;\n    $factors[45] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmppj45fmfp.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n = $n / $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmps8bltwoc.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $factor = $n % 2;\n        if (!$factor) {\n            $n = $n / 2;\n            continue;\n        }\n        $factors[$factor] = $factors[$factor] ? $factors[$factor] + 1 : 1;\n        $n = $n / 2;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm2gt3sft.php:31\nStack trace:\n#0 /tmp/tmpm2gt3sft.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm2gt3sft.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $i = 0;\n        while ($n % $factor == 0) {\n            $n = $n / $factor;\n            $i++;\n        }\n        $factors[$i] = $factor;\n        $factor = $factor * $factor;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n = $n / $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmps8bltwoc.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[0] = 1;\n    $factors[1] = 1;\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[4] = 1;\n    $factors[5] = 1;\n    $factors[6] = 1;\n    $factors[7] = 1;\n    $factors[8] = 1;\n    $factors[9] = 1;\n    $factors[10] = 1;\n    $factors[11] = 1;\n    $factors[12] = 1;\n    $factors[13] = 1;\n    $factors[14] = 1;\n    $factors[15] = 1;\n    $factors[16] = 1;\n    $factors[17] = 1;\n    $factors[18] = 1;\n    $factors[19] = 1;\n    $factors[20] = 1;\n    $factors[21] = 1;\n    $factors[22] = 1;\n    $factors[23] = 1;\n    $factors[24] = 1;\n    $factors[25] = 1;\n    $factors[26] = 1;\n    $factors[27] = 1;\n    $factors[28] = 1;\n    $factors[29] = 1;\n    $factors[30] = 1;\n    $factors[31] = 1;\n    $factors[32] = 1;\n    $factors[33] = 1;\n    $factors[34] = 1;\n    $factors[35] = 1;\n    $factors[36] = 1;\n    $factors[37] = 1;\n    $factors[38] = 1;\n    $factors[39] = 1;\n    $factors[40] = 1;\n    $factors[41] = 1;\n    $factors[42] = 1;\n    $factors[43] = 1;\n    $factors[44] = 1;\n    $factors[45] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmppj45fmfp.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[0] = 1;\n    $factors[1] = 1;\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[4] = 1;\n    $factors[5] = 1;\n    $factors[6] = 1;\n    $factors[7] = 1;\n    $factors[8] = 1;\n    $factors[9] = 1;\n    $factors[10] = 1;\n    $factors[11] = 1;\n    $factors[12] = 1;\n    $factors[13] = 1;\n    $factors[14] = 1;\n    $factors[15] = 1;\n    $factors[16] = 1;\n    $factors[17] = 1;\n    $factors[18] = 1;\n    $factors[19] = 1;\n    $factors[20] = 1;\n    $factors[21] = 1;\n    $factors[22] = 1;\n    $factors[23] = 1;\n    $factors[24] = 1;\n    $factors[25] = 1;\n    $factors[26] = 1;\n    $factors[27] = 1;\n    $factors[28] = 1;\n    $factors[29] = 1;\n    $factors[30] = 1;\n    $factors[31] = 1;\n    $factors[32] = 1;\n    $factors[33] = 1;\n    $factors[34] = 1;\n    $factors[35] = 1;\n    $factors[36] = 1;\n    $factors[37] = 1;\n    $factors[38] = 1;\n    $factors[39] = 1;\n    $factors[40] = 1;\n    $factors[41] = 1;\n    $factors[42] = 1;\n    $factors[43] = 1;\n    $factors[44] = 1;\n    $factors[45] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmppj45fmfp.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while($n > 1) {\n        if($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmp0ifd6wxv.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor]++;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpu2vyfhmv.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for (; $n > 1; $n--) {\n        if ($n % 2 == 0) {\n            $factors[2]++;\n            $n /= 2;\n        } else if ($n % 3 == 0) {\n            $factors[3]++;\n            $n /= 3;\n        } else if ($n % 5 == 0) {\n            $factors[5]++;\n            $n /= 5;\n        } else if ($n % 7 == 0) {\n            $factors[7]++;\n            $n /= 7;\n        } else if ($n % 11 == 0) {\n            $factors[11]++;\n            $n /= 11;\n        } else if ($n % 13 == 0) {\n            $factors[13]++;\n            $n /= 13;\n        } else if ($n % 17 == 0) {\n            $factors[17]++;\n            $n /= 17;\n        } else if ($n % 19 == 0) {\n            $factors[19]++;\n            $n /= 19;\n        } else if ($n % 23 == 0) {\n            $factors[23]++;\n            $n /= 23;\n        } else if ($n % 29 == 0) {\n            $factors[29]++;\n            $n /= 29;\n        } else if ($n % 31 == 0) {\n            $factors[31]++;\n            $n /= 31;\n        } else if ($n % 37 == 0) {\n            $factors[37]++;\n            $n /= 37;\n        } else if ($n % 41 == 0) {\n            $factors[41]++;\n            $n /= 41;\n        } else if ($n % 43 == 0) {\n            $factors[43]++;\n            $n /= 43;\n        } else if ($n % 47 == 0) {\n            $factors[47]++;\n            $n /= 47;\n        } else if ($n % 53 == 0) {\n            $factors[53]++;\n            $n /= 53;\n        } else if ($n % 59 == 0)\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpdliri5pm.php on line 63\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[0] = 1;\n    $factors[1] = 1;\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[4] = 1;\n    $factors[5] = 1;\n    $factors[6] = 1;\n    $factors[7] = 1;\n    $factors[8] = 1;\n    $factors[9] = 1;\n    $factors[10] = 1;\n    $factors[11] = 1;\n    $factors[12] = 1;\n    $factors[13] = 1;\n    $factors[14] = 1;\n    $factors[15] = 1;\n    $factors[16] = 1;\n    $factors[17] = 1;\n    $factors[18] = 1;\n    $factors[19] = 1;\n    $factors[20] = 1;\n    $factors[21] = 1;\n    $factors[22] = 1;\n    $factors[23] = 1;\n    $factors[24] = 1;\n    $factors[25] = 1;\n    $factors[26] = 1;\n    $factors[27] = 1;\n    $factors[28] = 1;\n    $factors[29] = 1;\n    $factors[30] = 1;\n    $factors[31] = 1;\n    $factors[32] = 1;\n    $factors[33] = 1;\n    $factors[34] = 1;\n    $factors[35] = 1;\n    $factors[36] = 1;\n    $factors[37] = 1;\n    $factors[38] = 1;\n    $factors[39] = 1;\n    $factors[40] = 1;\n    $factors[41] = 1;\n    $factors[42] = 1;\n    $factors[43] = 1;\n    $factors[44] = 1;\n    $factors[45] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmppj45fmfp.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 1;\n    while ($n > 1) {\n        if ($n % 2 == 0) {\n            $factors[2] = $factors[2] + 1;\n            $n = $n / 2;\n        } else if ($n % 3 == 0) {\n            $factors[3] = $factors[3] + 1;\n            $n = $n / 3;\n        } else if ($n % 5 == 0) {\n            $factors[5] = $factors[5] + 1;\n            $n = $n / 5;\n        } else if ($n % 7 == 0) {\n            $factors[7] = $factors[7] + 1;\n            $n = $n / 7;\n        } else {\n            $factors[$i] = $factors[$i] + 1;\n            $n = $n / $i;\n        }\n        $i++;\n    }\n    return $factors;\n}\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nWarning: Undefined array key 2 in /tmp/tmp7w8tr6fs.php on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7w8tr6fs.php:40\nStack trace:\n#0 /tmp/tmp7w8tr6fs.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp7w8tr6fs.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for (; $n > 1; $n--) {\n        if ($n % 2 == 0) {\n            $factors[2]++;\n            $n /= 2;\n        } else if ($n % 3 == 0) {\n            $factors[3]++;\n            $n /= 3;\n        } else if ($n % 5 == 0) {\n            $factors[5]++;\n            $n /= 5;\n        } else if ($n % 7 == 0) {\n            $factors[7]++;\n            $n /= 7;\n        } else if ($n % 11 == 0) {\n            $factors[11]++;\n            $n /= 11;\n        } else if ($n % 13 == 0) {\n            $factors[13]++;\n            $n /= 13;\n        } else if ($n % 17 == 0) {\n            $factors[17]++;\n            $n /= 17;\n        } else if ($n % 19 == 0) {\n            $factors[19]++;\n            $n /= 19;\n        } else if ($n % 23 == 0) {\n            $factors[23]++;\n            $n /= 23;\n        } else if ($n % 29 == 0) {\n            $factors[29]++;\n            $n /= 29;\n        } else if ($n % 31 == 0) {\n            $factors[31]++;\n            $n /= 31;\n        } else if ($n % 37 == 0) {\n            $factors[37]++;\n            $n /= 37;\n        } else if ($n % 41 == 0) {\n            $factors[41]++;\n            $n /= 41;\n        } else if ($n % 43 == 0) {\n            $factors[43]++;\n            $n /= 43;\n        } else if ($n % 47 == 0) {\n            $factors[47]++;\n            $n /= 47;\n        } else if ($n % 53 == 0) {\n            $factors[53]++;\n            $n /= 53;\n        } else if ($n % 59 == 0)\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpdliri5pm.php on line 63\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors_count = 0;\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors_count++;\n            $factors[$factors_count] = $factor;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292909,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 134217736 bytes) in /tmp/tmpr_577pds.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors_count = 0;\n    while ($n > 1) {\n        $factor = $n % 2;\n        if (!$factors[$factor]) {\n            $factors[$factor] = 1;\n            $factors_count++;\n        }\n        $n = $n / 2;\n    }\n    $factors_count--;\n    $factors_count = $factors_count * 2 - 1;\n    $factors_count = $factors_count > 0 ? $factors_count : 0;\n    $factors = array_fill($factors_count, 0);\n    $factors[0] = $factors_count;\n    $factors_count = 0;\n    for ($factor in $factors) {\n        $factors[$factors_count++] = $factor;\n    }\n    return $factors;\n}\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected identifier \"in\", expecting \";\" in /tmp/tmpe3f9pdqw.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while($n > 1) {\n        if($n % $factor == 0) {\n            $n = $n / $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmps47k2n2a.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $factor = $n % 2;\n        if ($factor == 0) {\n            $n = $n / 2;\n        } else {\n            $factors[0] = $factor;\n            $n = $n - $factor;\n            $factors[1] = $factor;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylmrgnqk.php:32\nStack trace:\n#0 /tmp/tmpylmrgnqk.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpylmrgnqk.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[0] = 1;\n    $factors[1] = 1;\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[4] = 1;\n    $factors[5] = 1;\n    $factors[6] = 1;\n    $factors[7] = 1;\n    $factors[8] = 1;\n    $factors[9] = 1;\n    $factors[10] = 1;\n    $factors[11] = 1;\n    $factors[12] = 1;\n    $factors[13] = 1;\n    $factors[14] = 1;\n    $factors[15] = 1;\n    $factors[16] = 1;\n    $factors[17] = 1;\n    $factors[18] = 1;\n    $factors[19] = 1;\n    $factors[20] = 1;\n    $factors[21] = 1;\n    $factors[22] = 1;\n    $factors[23] = 1;\n    $factors[24] = 1;\n    $factors[25] = 1;\n    $factors[26] = 1;\n    $factors[27] = 1;\n    $factors[28] = 1;\n    $factors[29] = 1;\n    $factors[30] = 1;\n    $factors[31] = 1;\n    $factors[32] = 1;\n    $factors[33] = 1;\n    $factors[34] = 1;\n    $factors[35] = 1;\n    $factors[36] = 1;\n    $factors[37] = 1;\n    $factors[38] = 1;\n    $factors[39] = 1;\n    $factors[40] = 1;\n    $factors[41] = 1;\n    $factors[42] = 1;\n    $factors[43] = 1;\n    $factors[44] = 1;\n    $factors[45] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmppj45fmfp.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $factor = $n % 2;\n        if (!$factor) {\n            $n = $n / 2;\n            $factors[0]++;\n        } else {\n            $n = $n / 2;\n            $factors[1]++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmptcl_sked.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptcl_sked.php:32\nStack trace:\n#0 /tmp/tmptcl_sked.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptcl_sked.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[0] = 1;\n    $factors[1] = 1;\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[4] = 1;\n    $factors[5] = 1;\n    $factors[6] = 1;\n    $factors[7] = 1;\n    $factors[8] = 1;\n    $factors[9] = 1;\n    $factors[10] = 1;\n    $factors[11] = 1;\n    $factors[12] = 1;\n    $factors[13] = 1;\n    $factors[14] = 1;\n    $factors[15] = 1;\n    $factors[16] = 1;\n    $factors[17] = 1;\n    $factors[18] = 1;\n    $factors[19] = 1;\n    $factors[20] = 1;\n    $factors[21] = 1;\n    $factors[22] = 1;\n    $factors[23] = 1;\n    $factors[24] = 1;\n    $factors[25] = 1;\n    $factors[26] = 1;\n    $factors[27] = 1;\n    $factors[28] = 1;\n    $factors[29] = 1;\n    $factors[30] = 1;\n    $factors[31] = 1;\n    $factors[32] = 1;\n    $factors[33] = 1;\n    $factors[34] = 1;\n    $factors[35] = 1;\n    $factors[36] = 1;\n    $factors[37] = 1;\n    $factors[38] = 1;\n    $factors[39] = 1;\n    $factors[40] = 1;\n    $factors[41] = 1;\n    $factors[42] = 1;\n    $factors[43] = 1;\n    $factors[44] = 1;\n    $factors[45] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmppj45fmfp.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 0;\n    while ($n > 1) {\n        $i++;\n        if ($n % 2 == 0) {\n            $n /= 2;\n            $factors[2] = $i;\n        } else if ($n % 3 == 0) {\n            $n /= 3;\n            $factors[3] = $i;\n        } else if ($n % 5 == 0) {\n            $n /= 5;\n            $factors[5] = $i;\n        } else if ($n % 7 == 0) {\n            $n /= 7;\n            $factors[7] = $i;\n        } else {\n            $n = $n - 1;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqx1ycunz.php:40\nStack trace:\n#0 /tmp/tmpqx1ycunz.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpqx1ycunz.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $i = 0;\n        while ($n % $factor == 0) {\n            $n /= $factor;\n            $i++;\n        }\n        $factors[$i] = $factor;\n        $factor *= $i + 1;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor]++;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpu2vyfhmv.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for (; $n > 1; $n--) {\n        if ($n % 2 == 0) {\n            $factors[2]++;\n            $n /= 2;\n        } else if ($n % 3 == 0) {\n            $factors[3]++;\n            $n /= 3;\n        } else if ($n % 5 == 0) {\n            $factors[5]++;\n            $n /= 5;\n        } else if ($n % 7 == 0) {\n            $factors[7]++;\n            $n /= 7;\n        } else if ($n % 11 == 0) {\n            $factors[11]++;\n            $n /= 11;\n        } else if ($n % 13 == 0) {\n            $factors[13]++;\n            $n /= 13;\n        } else if ($n % 17 == 0) {\n            $factors[17]++;\n            $n /= 17;\n        } else if ($n % 19 == 0) {\n            $factors[19]++;\n            $n /= 19;\n        } else if ($n % 23 == 0) {\n            $factors[23]++;\n            $n /= 23;\n        } else if ($n % 29 == 0) {\n            $factors[29]++;\n            $n /= 29;\n        } else if ($n % 31 == 0) {\n            $factors[31]++;\n            $n /= 31;\n        } else if ($n % 37 == 0) {\n            $factors[37]++;\n            $n /= 37;\n        } else if ($n % 41 == 0) {\n            $factors[41]++;\n            $n /= 41;\n        } else if ($n % 43 == 0) {\n            $factors[43]++;\n            $n /= 43;\n        } else if ($n % 47 == 0) {\n            $factors[47]++;\n            $n /= 47;\n        } else if ($n % 53 == 0) {\n            $factors[53]++;\n            $n /= 53;\n        } else if ($n % 59 == 0)\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpdliri5pm.php on line 63\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[0] = 1;\n    $factors[1] = 1;\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[4] = 1;\n    $factors[5] = 1;\n    $factors[6] = 1;\n    $factors[7] = 1;\n    $factors[8] = 1;\n    $factors[9] = 1;\n    $factors[10] = 1;\n    $factors[11] = 1;\n    $factors[12] = 1;\n    $factors[13] = 1;\n    $factors[14] = 1;\n    $factors[15] = 1;\n    $factors[16] = 1;\n    $factors[17] = 1;\n    $factors[18] = 1;\n    $factors[19] = 1;\n    $factors[20] = 1;\n    $factors[21] = 1;\n    $factors[22] = 1;\n    $factors[23] = 1;\n    $factors[24] = 1;\n    $factors[25] = 1;\n    $factors[26] = 1;\n    $factors[27] = 1;\n    $factors[28] = 1;\n    $factors[29] = 1;\n    $factors[30] = 1;\n    $factors[31] = 1;\n    $factors[32] = 1;\n    $factors[33] = 1;\n    $factors[34] = 1;\n    $factors[35] = 1;\n    $factors[36] = 1;\n    $factors[37] = 1;\n    $factors[38] = 1;\n    $factors[39] = 1;\n    $factors[40] = 1;\n    $factors[41] = 1;\n    $factors[42] = 1;\n    $factors[43] = 1;\n    $factors[44] = 1;\n    $factors[45] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmppj45fmfp.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $factors[$factor] = $factors[$factor] + 1;\n            $n = $n / $factor;\n        } else {\n            $factor = $factor + 1;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmp8i7um8kb.php on line 16\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 0;\n    while($n > 1) {\n        if($n % 2 == 0) {\n            $n = $n / 2;\n            $factors[0] = $factors[0] + 1;\n        } else if($n % 3 == 0) {\n            $n = $n / 3;\n            $factors[1] = $factors[1] + 1;\n        } else if($n % 5 == 0) {\n            $n = $n / 5;\n            $factors[2] = $factors[2] + 1;\n        } else if($n % 7 == 0) {\n            $n = $n / 7;\n            $factors[3] = $factors[3] + 1;\n        } else if($n % 11 == 0) {\n            $n = $n / 11;\n            $factors[4] = $factors[4] + 1;\n        } else if($n % 13 == 0) {\n            $n = $n / 13;\n            $factors[5] = $factors[5] + 1;\n        } else if($n % 17 == 0) {\n            $n = $n / 17;\n            $factors[6] = $factors[6] + 1;\n        } else if($n % 19 == 0) {\n            $n = $n / 19;\n            $factors[7] = $factors[7] + 1;\n        } else if($n % 23 == 0) {\n            $n = $n / 23;\n            $factors[8] = $factors[8] + 1;\n        } else if($n % 29 == 0) {\n            $n = $n / 29;\n            $factors[9] = $factors[9] + 1;\n        } else if($n % 31 == 0) {\n            $n = $n / 31;\n            $factors[10] = $factors[10] + 1;\n        } else if($n % 37 == 0) {\n            $n = $n / 37;\n            $factors[11] = $factors[11] + 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpzo312ayp.php on line 51\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $factor = $n % 2;\n        if (!$factor) {\n            $n = $n / 2;\n            continue;\n        }\n        $factors[0] = $factor;\n        $factors[1] = $n;\n        $n = $n / 2;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ulwuy7d.php:32\nStack trace:\n#0 /tmp/tmp9ulwuy7d.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9ulwuy7d.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 0;\n    while ($n > 1) {\n        $i++;\n        if ($n % 2 == 0) {\n            $factors[2] = $i;\n            $n /= 2;\n        } else if ($n % 3 == 0) {\n            $factors[3] = $i;\n            $n /= 3;\n        } else if ($n % 5 == 0) {\n            $factors[5] = $i;\n            $n /= 5;\n        } else if ($n % 7 == 0) {\n            $factors[7] = $i;\n            $n /= 7;\n        } else {\n            $factors[$n] = $i;\n            $n = 1;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl5sbbpeg.php:41\nStack trace:\n#0 /tmp/tmpl5sbbpeg.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpl5sbbpeg.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for ($i = 2; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $factors[$i] = $factors[$i] + 1;\n            $n = $n / $i;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nWarning: Undefined array key 2 in /tmp/tmp2tjtt7p1.php on line 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2tjtt7p1.php:27\nStack trace:\n#0 /tmp/tmp2tjtt7p1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2tjtt7p1.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors_count = 0;\n    $n = abs($n);\n    while ($n > 1) {\n        $i = 0;\n        while ($n % $factors[$i] == 0) {\n            $n /= $factors[$i];\n            $factors_count++;\n        }\n        $i++;\n    }\n    $factors_count++;\n    $factors = array_fill($factors_count, 0);\n    $factors[0] = $n;\n    for ($i = 1; $i < $factors_count; $i++) {\n        $factors[$i] = $factors[$i - 1] * $factors[0];\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmp28__6bjm.php on line 17\n\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp28__6bjm.php:17\nStack trace:\n#0 /tmp/tmp28__6bjm.php(33): factorize(2)\n#1 /tmp/tmp28__6bjm.php(37): candidate(2)\n#2 /tmp/tmp28__6bjm.php(47): test()\n#3 {main}\n  thrown in /tmp/tmp28__6bjm.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n = $n / $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmps8bltwoc.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $factor = $n % 2;\n        if (!$factor) {\n            $n = $n / 2;\n        } else {\n            $factors[0] = $factor;\n            $n = $n / 2;\n            $factors[1] = $factor;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiuttjxnw.php:32\nStack trace:\n#0 /tmp/tmpiuttjxnw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpiuttjxnw.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $factor = $n % 2;\n        if (!$factor) {\n            $n = $n / 2;\n            $factors[0]++;\n        } else {\n            $n = $n / 2;\n            $factors[1]++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmptcl_sked.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptcl_sked.php:32\nStack trace:\n#0 /tmp/tmptcl_sked.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptcl_sked.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[0] = 1;\n    $factors[1] = 1;\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[4] = 1;\n    $factors[5] = 1;\n    $factors[6] = 1;\n    $factors[7] = 1;\n    $factors[8] = 1;\n    $factors[9] = 1;\n    $factors[10] = 1;\n    $factors[11] = 1;\n    $factors[12] = 1;\n    $factors[13] = 1;\n    $factors[14] = 1;\n    $factors[15] = 1;\n    $factors[16] = 1;\n    $factors[17] = 1;\n    $factors[18] = 1;\n    $factors[19] = 1;\n    $factors[20] = 1;\n    $factors[21] = 1;\n    $factors[22] = 1;\n    $factors[23] = 1;\n    $factors[24] = 1;\n    $factors[25] = 1;\n    $factors[26] = 1;\n    $factors[27] = 1;\n    $factors[28] = 1;\n    $factors[29] = 1;\n    $factors[30] = 1;\n    $factors[31] = 1;\n    $factors[32] = 1;\n    $factors[33] = 1;\n    $factors[34] = 1;\n    $factors[35] = 1;\n    $factors[36] = 1;\n    $factors[37] = 1;\n    $factors[38] = 1;\n    $factors[39] = 1;\n    $factors[40] = 1;\n    $factors[41] = 1;\n    $factors[42] = 1;\n    $factors[43] = 1;\n    $factors[44] = 1;\n    $factors[45] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmppj45fmfp.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $factors[$factor] = $factors[$factor] + 1;\n            $n = $n / $factor;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpa_qyppjd.php on line 16\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for ( $i = 1; $i <= $n; $i++ ) {\n        if ( $n % $i == 0 ) {\n            $factors[$i] = $factors[$i] ? $factors[$i] + 1 : 1;\n            $n /= $i;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpcah86ri1.php on line 15\n\nWarning: Undefined array key 2 in /tmp/tmpcah86ri1.php on line 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcah86ri1.php:27\nStack trace:\n#0 /tmp/tmpcah86ri1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcah86ri1.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $factor = $n % 2;\n        if ($factor == 0) {\n            $n = $n / 2;\n            $factors[0] = $factor;\n        } else {\n            $n = $n - $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292909,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprqdq5wg4.php:32\nStack trace:\n#0 /tmp/tmprqdq5wg4.php(42): test()\n#1 {main}\n  thrown in /tmp/tmprqdq5wg4.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[0] = 1;\n    $factors[1] = 1;\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[4] = 1;\n    $factors[5] = 1;\n    $factors[6] = 1;\n    $factors[7] = 1;\n    $factors[8] = 1;\n    $factors[9] = 1;\n    $factors[10] = 1;\n    $factors[11] = 1;\n    $factors[12] = 1;\n    $factors[13] = 1;\n    $factors[14] = 1;\n    $factors[15] = 1;\n    $factors[16] = 1;\n    $factors[17] = 1;\n    $factors[18] = 1;\n    $factors[19] = 1;\n    $factors[20] = 1;\n    $factors[21] = 1;\n    $factors[22] = 1;\n    $factors[23] = 1;\n    $factors[24] = 1;\n    $factors[25] = 1;\n    $factors[26] = 1;\n    $factors[27] = 1;\n    $factors[28] = 1;\n    $factors[29] = 1;\n    $factors[30] = 1;\n    $factors[31] = 1;\n    $factors[32] = 1;\n    $factors[33] = 1;\n    $factors[34] = 1;\n    $factors[35] = 1;\n    $factors[36] = 1;\n    $factors[37] = 1;\n    $factors[38] = 1;\n    $factors[39] = 1;\n    $factors[40] = 1;\n    $factors[41] = 1;\n    $factors[42] = 1;\n    $factors[43] = 1;\n    $factors[44] = 1;\n    $factors[45] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmppj45fmfp.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for ($i = 2; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $factors[$i] = $factors[$i] + 1;\n            $n = $n / $i;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nWarning: Undefined array key 2 in /tmp/tmp2tjtt7p1.php on line 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2tjtt7p1.php:27\nStack trace:\n#0 /tmp/tmp2tjtt7p1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2tjtt7p1.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n = $n / $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmps8bltwoc.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 0;\n    while ($n > 1) {\n        if ($n % 2 == 0) {\n            $n /= 2;\n            $factors[++$i] = 2;\n        } else if ($n % 3 == 0) {\n            $n /= 3;\n            $factors[++$i] = 3;\n        } else if ($n % 5 == 0) {\n            $n /= 5;\n            $factors[++$i] = 5;\n        } else if ($n % 7 == 0) {\n            $n /= 7;\n            $factors[++$i] = 7;\n        } else {\n            $n--;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292909,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzakxdoj1.php:39\nStack trace:\n#0 /tmp/tmpzakxdoj1.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpzakxdoj1.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors_count = 0;\n    $i = 1;\n    while ($n > 1) {\n        if ($n % $i == 0) {\n            $n = $n / $i;\n            $factors_count++;\n            $factors[$factors_count] = $i;\n        } else {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292909,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 134217736 bytes) in /tmp/tmp551a3mr7.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n = $n / $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmps8bltwoc.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $factors[$factor] = $factors[$factor] + 1;\n            $n = $n / $factor;\n        } else {\n            $factor = $factor + 1;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmp8i7um8kb.php on line 16\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 0;\n    while ($n > 1) {\n        if ($n % 2 == 0) {\n            $n /= 2;\n            $factors[0] += 1;\n        } else if ($n % 3 == 0) {\n            $n /= 3;\n            $factors[1] += 1;\n        } else if ($n % 5 == 0) {\n            $n /= 5;\n            $factors[2] += 1;\n        } else {\n            $i++;\n            $factors[$i] = 1;\n            $n /= $i;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292909,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmpizdv00i0.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpizdv00i0.php:38\nStack trace:\n#0 /tmp/tmpizdv00i0.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpizdv00i0.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n = $n / $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmps8bltwoc.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    $factor_count = 0;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factor_count++;\n            $factors[$factor] = $factor_count;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292924,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $i = 0;\n        while ($n % $factor == 0) {\n            $n /= $factor;\n            $i++;\n        }\n        $factors[$i] = $factor;\n        $factor *= $i + 1;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $factors[$factor] = $factors[$factor] + 1;\n            $n = $n / $factor;\n        } else {\n            $factor = $factor + 1;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmp8i7um8kb.php on line 16\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors_count = 0;\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n = $n / $factor;\n            $factors_count++;\n            $factors[$factors_count] = $factor;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292909,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 134217736 bytes) in /tmp/tmpas60e7qp.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n = $n / $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmps8bltwoc.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n = $n / $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmps8bltwoc.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $factor = $n % 2;\n        if (!$factor) {\n            $n = $n / 2;\n            $factors[0]++;\n        } else {\n            $n = $n / 2;\n            $factors[1]++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmptcl_sked.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptcl_sked.php:32\nStack trace:\n#0 /tmp/tmptcl_sked.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptcl_sked.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $factors[$factor] = $factors[$factor] + 1;\n            $n = $n / $factor;\n        } else {\n            $factor = $factor + 1;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmp8i7um8kb.php on line 16\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[0] = 1;\n    $factors[1] = 1;\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[4] = 1;\n    $factors[5] = 1;\n    $factors[6] = 1;\n    $factors[7] = 1;\n    $factors[8] = 1;\n    $factors[9] = 1;\n    $factors[10] = 1;\n    $factors[11] = 1;\n    $factors[12] = 1;\n    $factors[13] = 1;\n    $factors[14] = 1;\n    $factors[15] = 1;\n    $factors[16] = 1;\n    $factors[17] = 1;\n    $factors[18] = 1;\n    $factors[19] = 1;\n    $factors[20] = 1;\n    $factors[21] = 1;\n    $factors[22] = 1;\n    $factors[23] = 1;\n    $factors[24] = 1;\n    $factors[25] = 1;\n    $factors[26] = 1;\n    $factors[27] = 1;\n    $factors[28] = 1;\n    $factors[29] = 1;\n    $factors[30] = 1;\n    $factors[31] = 1;\n    $factors[32] = 1;\n    $factors[33] = 1;\n    $factors[34] = 1;\n    $factors[35] = 1;\n    $factors[36] = 1;\n    $factors[37] = 1;\n    $factors[38] = 1;\n    $factors[39] = 1;\n    $factors[40] = 1;\n    $factors[41] = 1;\n    $factors[42] = 1;\n    $factors[43] = 1;\n    $factors[44] = 1;\n    $factors[45] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmppj45fmfp.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while($n > 1) {\n        if($n % $factor == 0) {\n            $factors[$factor] = $factors[$factor] + 1;\n            $n = $n / $factor;\n        } else {\n            $factor = $factor + 1;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292924,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmp6wpgz7ky.php on line 16\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 1;\n    while ($n > 1) {\n        if ($n % $i == 0) {\n            $factors[$i] = $factors[$i] + 1;\n            $n = $n / $i;\n        } else {\n            $i = $i + 1;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292924,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmp85d4lv7r.php on line 16\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n = $n / $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmps8bltwoc.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for ($i = 2; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $factors[$i] = $factors[$i] ? $factors[$i] + 1 : 1;\n            $n /= $i;\n        }\n    }\n    if ($n > 1) {\n        $factors[$n] = $factors[$n] ? $factors[$n] + 1 : 1;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292909,
      "stdout": "\nWarning: Undefined array key 2 in /tmp/tmp7bo00b2d.php on line 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7bo00b2d.php:30\nStack trace:\n#0 /tmp/tmp7bo00b2d.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp7bo00b2d.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[0] = 1;\n    $factors[1] = 1;\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[4] = 1;\n    $factors[5] = 1;\n    $factors[6] = 1;\n    $factors[7] = 1;\n    $factors[8] = 1;\n    $factors[9] = 1;\n    $factors[10] = 1;\n    $factors[11] = 1;\n    $factors[12] = 1;\n    $factors[13] = 1;\n    $factors[14] = 1;\n    $factors[15] = 1;\n    $factors[16] = 1;\n    $factors[17] = 1;\n    $factors[18] = 1;\n    $factors[19] = 1;\n    $factors[20] = 1;\n    $factors[21] = 1;\n    $factors[22] = 1;\n    $factors[23] = 1;\n    $factors[24] = 1;\n    $factors[25] = 1;\n    $factors[26] = 1;\n    $factors[27] = 1;\n    $factors[28] = 1;\n    $factors[29] = 1;\n    $factors[30] = 1;\n    $factors[31] = 1;\n    $factors[32] = 1;\n    $factors[33] = 1;\n    $factors[34] = 1;\n    $factors[35] = 1;\n    $factors[36] = 1;\n    $factors[37] = 1;\n    $factors[38] = 1;\n    $factors[39] = 1;\n    $factors[40] = 1;\n    $factors[41] = 1;\n    $factors[42] = 1;\n    $factors[43] = 1;\n    $factors[44] = 1;\n    $factors[45] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmppj45fmfp.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors_count = 0;\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors_count++;\n            $factors[$factors_count] = $factor;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292909,
      "stdout": "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 134217736 bytes) in /tmp/tmpr_577pds.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $factor = $n % 2;\n        if (!$factor) {\n            $n = $n / 2;\n            $factors[0]++;\n        } else {\n            $n = $n / 2;\n            $factors[1]++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmptcl_sked.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptcl_sked.php:32\nStack trace:\n#0 /tmp/tmptcl_sked.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptcl_sked.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $i = 0;\n        while ($n % $factor == 0) {\n            $n /= $factor;\n            $i++;\n        }\n        $factors[$i] = $factor;\n        $factor *= $i + 1;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[0] = 1;\n    $factors[1] = 1;\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[4] = 1;\n    $factors[5] = 1;\n    $factors[6] = 1;\n    $factors[7] = 1;\n    $factors[8] = 1;\n    $factors[9] = 1;\n    $factors[10] = 1;\n    $factors[11] = 1;\n    $factors[12] = 1;\n    $factors[13] = 1;\n    $factors[14] = 1;\n    $factors[15] = 1;\n    $factors[16] = 1;\n    $factors[17] = 1;\n    $factors[18] = 1;\n    $factors[19] = 1;\n    $factors[20] = 1;\n    $factors[21] = 1;\n    $factors[22] = 1;\n    $factors[23] = 1;\n    $factors[24] = 1;\n    $factors[25] = 1;\n    $factors[26] = 1;\n    $factors[27] = 1;\n    $factors[28] = 1;\n    $factors[29] = 1;\n    $factors[30] = 1;\n    $factors[31] = 1;\n    $factors[32] = 1;\n    $factors[33] = 1;\n    $factors[34] = 1;\n    $factors[35] = 1;\n    $factors[36] = 1;\n    $factors[37] = 1;\n    $factors[38] = 1;\n    $factors[39] = 1;\n    $factors[40] = 1;\n    $factors[41] = 1;\n    $factors[42] = 1;\n    $factors[43] = 1;\n    $factors[44] = 1;\n    $factors[45] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmppj45fmfp.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n = $n / $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmps8bltwoc.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[0] = 1;\n    $factors[1] = 1;\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[4] = 1;\n    $factors[5] = 1;\n    $factors[6] = 1;\n    $factors[7] = 1;\n    $factors[8] = 1;\n    $factors[9] = 1;\n    $factors[10] = 1;\n    $factors[11] = 1;\n    $factors[12] = 1;\n    $factors[13] = 1;\n    $factors[14] = 1;\n    $factors[15] = 1;\n    $factors[16] = 1;\n    $factors[17] = 1;\n    $factors[18] = 1;\n    $factors[19] = 1;\n    $factors[20] = 1;\n    $factors[21] = 1;\n    $factors[22] = 1;\n    $factors[23] = 1;\n    $factors[24] = 1;\n    $factors[25] = 1;\n    $factors[26] = 1;\n    $factors[27] = 1;\n    $factors[28] = 1;\n    $factors[29] = 1;\n    $factors[30] = 1;\n    $factors[31] = 1;\n    $factors[32] = 1;\n    $factors[33] = 1;\n    $factors[34] = 1;\n    $factors[35] = 1;\n    $factors[36] = 1;\n    $factors[37] = 1;\n    $factors[38] = 1;\n    $factors[39] = 1;\n    $factors[40] = 1;\n    $factors[41] = 1;\n    $factors[42] = 1;\n    $factors[43] = 1;\n    $factors[44] = 1;\n    $factors[45] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmppj45fmfp.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for (; $n > 1; $n--) {\n        if ($n % 2 == 0) {\n            $factors[2]++;\n            $n /= 2;\n        } else if ($n % 3 == 0) {\n            $factors[3]++;\n            $n /= 3;\n        } else if ($n % 5 == 0) {\n            $factors[5]++;\n            $n /= 5;\n        } else if ($n % 7 == 0) {\n            $factors[7]++;\n            $n /= 7;\n        } else if ($n % 11 == 0) {\n            $factors[11]++;\n            $n /= 11;\n        } else if ($n % 13 == 0) {\n            $factors[13]++;\n            $n /= 13;\n        } else if ($n % 17 == 0) {\n            $factors[17]++;\n            $n /= 17;\n        } else if ($n % 19 == 0) {\n            $factors[19]++;\n            $n /= 19;\n        } else if ($n % 23 == 0) {\n            $factors[23]++;\n            $n /= 23;\n        } else if ($n % 29 == 0) {\n            $factors[29]++;\n            $n /= 29;\n        } else if ($n % 31 == 0) {\n            $factors[31]++;\n            $n /= 31;\n        } else if ($n % 37 == 0) {\n            $factors[37]++;\n            $n /= 37;\n        } else if ($n % 41 == 0) {\n            $factors[41]++;\n            $n /= 41;\n        } else if ($n % 43 == 0) {\n            $factors[43]++;\n            $n /= 43;\n        } else if ($n % 47 == 0) {\n            $factors[47]++;\n            $n /= 47;\n        } else if ($n % 53 == 0) {\n            $factors[53]++;\n            $n /= 53;\n        } else if ($n % 59 == 0)\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpdliri5pm.php on line 63\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n = $n / $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmps8bltwoc.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[0] = 1;\n    $factors[1] = 1;\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[4] = 1;\n    $factors[5] = 1;\n    $factors[6] = 1;\n    $factors[7] = 1;\n    $factors[8] = 1;\n    $factors[9] = 1;\n    $factors[10] = 1;\n    $factors[11] = 1;\n    $factors[12] = 1;\n    $factors[13] = 1;\n    $factors[14] = 1;\n    $factors[15] = 1;\n    $factors[16] = 1;\n    $factors[17] = 1;\n    $factors[18] = 1;\n    $factors[19] = 1;\n    $factors[20] = 1;\n    $factors[21] = 1;\n    $factors[22] = 1;\n    $factors[23] = 1;\n    $factors[24] = 1;\n    $factors[25] = 1;\n    $factors[26] = 1;\n    $factors[27] = 1;\n    $factors[28] = 1;\n    $factors[29] = 1;\n    $factors[30] = 1;\n    $factors[31] = 1;\n    $factors[32] = 1;\n    $factors[33] = 1;\n    $factors[34] = 1;\n    $factors[35] = 1;\n    $factors[36] = 1;\n    $factors[37] = 1;\n    $factors[38] = 1;\n    $factors[39] = 1;\n    $factors[40] = 1;\n    $factors[41] = 1;\n    $factors[42] = 1;\n    $factors[43] = 1;\n    $factors[44] = 1;\n    $factors[45] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmppj45fmfp.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors_count = 0;\n    while ($n > 1) {\n        $factor = $n % 2;\n        if ($factor == 0) {\n            $n = $n / 2;\n        } else {\n            $factors_count++;\n            $factors[$factors_count] = $factor;\n            $n = $n / $factor;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292909,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppop9btkb.php:32\nStack trace:\n#0 /tmp/tmppop9btkb.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppop9btkb.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[2] = $n % 2;\n    $factors[3] = $n % 3;\n    $factors[5] = $n % 5;\n    $factors[7] = $n % 7;\n    $factors[11] = $n % 11;\n    $factors[13] = $n % 13;\n    $factors[17] = $n % 17;\n    $factors[19] = $n % 19;\n    $factors[23] = $n % 23;\n    $factors[29] = $n % 29;\n    $factors[31] = $n % 31;\n    $factors[37] = $n % 37;\n    $factors[41] = $n % 41;\n    $factors[43] = $n % 43;\n    $factors[47] = $n % 47;\n    $factors[53] = $n % 53;\n    $factors[59] = $n % 59;\n    $factors[61] = $n % 61;\n    $factors[67] = $n % 67;\n    $factors[71] = $n % 71;\n    $factors[73] = $n % 73;\n    $factors[79] = $n % 79;\n    $factors[83] = $n % 83;\n    $factors[89] = $n % 89;\n    $factors[97] = $n % 97;\n    $factors[101] = $n % 101;\n    $factors[103] = $n % 103;\n    $factors[107] = $n % 107;\n    $factors[109] = $n % 109;\n    $factors[113] = $n % 113;\n    $factors[127] = $n % 127;\n    $factors[131] = $n % 131;\n    $factors[137] = $n % 137;\n    $factors[139] = $n % 139;\n    $factors[149] = $n % 149;\n    $factors[151] = $n % 151;\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmp0gad0fik.php on line 65\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor]++;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpu2vyfhmv.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for ($i = 2; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $factors[$i] = $factors[$i] + 1;\n            $n = $n / $i;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nWarning: Undefined array key 2 in /tmp/tmp2tjtt7p1.php on line 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2tjtt7p1.php:27\nStack trace:\n#0 /tmp/tmp2tjtt7p1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2tjtt7p1.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $i = 0;\n        while ($n % $factor == 0) {\n            $i++;\n            $n /= $factor;\n        }\n        if ($i > 0) {\n            $factors[$factor] = $i;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292924,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while($n > 1) {\n        $factor = $n % 2;\n        if($factor == 0) {\n            $n = $n / 2;\n            $factors[0] = $factor;\n            $factors[1] = $n;\n        } else {\n            $n = $n - $factor;\n            $factors[$factors.length] = $factor;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292909,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpey_g1pb8.php:33\nStack trace:\n#0 /tmp/tmpey_g1pb8.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpey_g1pb8.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[0] = 1;\n    $factors[1] = 1;\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[4] = 1;\n    $factors[5] = 1;\n    $factors[6] = 1;\n    $factors[7] = 1;\n    $factors[8] = 1;\n    $factors[9] = 1;\n    $factors[10] = 1;\n    $factors[11] = 1;\n    $factors[12] = 1;\n    $factors[13] = 1;\n    $factors[14] = 1;\n    $factors[15] = 1;\n    $factors[16] = 1;\n    $factors[17] = 1;\n    $factors[18] = 1;\n    $factors[19] = 1;\n    $factors[20] = 1;\n    $factors[21] = 1;\n    $factors[22] = 1;\n    $factors[23] = 1;\n    $factors[24] = 1;\n    $factors[25] = 1;\n    $factors[26] = 1;\n    $factors[27] = 1;\n    $factors[28] = 1;\n    $factors[29] = 1;\n    $factors[30] = 1;\n    $factors[31] = 1;\n    $factors[32] = 1;\n    $factors[33] = 1;\n    $factors[34] = 1;\n    $factors[35] = 1;\n    $factors[36] = 1;\n    $factors[37] = 1;\n    $factors[38] = 1;\n    $factors[39] = 1;\n    $factors[40] = 1;\n    $factors[41] = 1;\n    $factors[42] = 1;\n    $factors[43] = 1;\n    $factors[44] = 1;\n    $factors[45] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmppj45fmfp.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    $count = 0;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $count++;\n            $n /= $factor;\n        } else {\n            $factors[$count] = $factor;\n            $count = 0;\n            $factor++;\n        }\n    }\n    $factors[$count] = $factor;\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292924,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for ($i = 2; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $factors[$i] = $factors[$i] + 1;\n            $n = $n / $i;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nWarning: Undefined array key 2 in /tmp/tmp2tjtt7p1.php on line 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2tjtt7p1.php:27\nStack trace:\n#0 /tmp/tmp2tjtt7p1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2tjtt7p1.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 1;\n    while ($n > 1) {\n        if ($n % 2 == 0) {\n            $factors[2] = $factors[2] + 1;\n            $n = $n / 2;\n        } else if ($n % 3 == 0) {\n            $factors[3] = $factors[3] + 1;\n            $n = $n / 3;\n        } else if ($n % 5 == 0) {\n            $factors[5] = $factors[5] + 1;\n            $n = $n / 5;\n        } else if ($n % 7 == 0) {\n            $factors[7] = $factors[7] + 1;\n            $n = $n / 7;\n        } else {\n            $factors[$i] = $factors[$i] + 1;\n            $n = $n / $i;\n        }\n        $i++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nWarning: Undefined array key 2 in /tmp/tmpp7xdh2r2.php on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7xdh2r2.php:41\nStack trace:\n#0 /tmp/tmpp7xdh2r2.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpp7xdh2r2.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    $factor_count = 0;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n = $n / $factor;\n            $factor_count++;\n            $factors[$factor] = $factor_count;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292924,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while($n > 1) {\n        if($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmp0ifd6wxv.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factors[0] = 1;\n    $factors[1] = 1;\n    $factors[2] = 1;\n    $factors[3] = 1;\n    $factors[4] = 1;\n    $factors[5] = 1;\n    $factors[6] = 1;\n    $factors[7] = 1;\n    $factors[8] = 1;\n    $factors[9] = 1;\n    $factors[10] = 1;\n    $factors[11] = 1;\n    $factors[12] = 1;\n    $factors[13] = 1;\n    $factors[14] = 1;\n    $factors[15] = 1;\n    $factors[16] = 1;\n    $factors[17] = 1;\n    $factors[18] = 1;\n    $factors[19] = 1;\n    $factors[20] = 1;\n    $factors[21] = 1;\n    $factors[22] = 1;\n    $factors[23] = 1;\n    $factors[24] = 1;\n    $factors[25] = 1;\n    $factors[26] = 1;\n    $factors[27] = 1;\n    $factors[28] = 1;\n    $factors[29] = 1;\n    $factors[30] = 1;\n    $factors[31] = 1;\n    $factors[32] = 1;\n    $factors[33] = 1;\n    $factors[34] = 1;\n    $factors[35] = 1;\n    $factors[36] = 1;\n    $factors[37] = 1;\n    $factors[38] = 1;\n    $factors[39] = 1;\n    $factors[40] = 1;\n    $factors[41] = 1;\n    $factors[42] = 1;\n    $factors[43] = 1;\n    $factors[44] = 1;\n    $factors[45] = 1\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmppj45fmfp.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n            $factors[$factor] = $factors[$factor] + 1;\n        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292923,
      "stdout": "\nWarning: Undefined array key 1 in /tmp/tmpriz32xkw.php on line 17\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return array of prime factors of given integer in the order from smallest to largest.\n// Each of the factors should be arrayed number of times corresponding to how many times it appeares in factorization.\n// Input number should be equal to the product of all factors\n// >>> factorize(8)\n// array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n    while ($n > 1) {\n        $factor = $n % 2;\n        if (!$factor) {\n            $n = $n / 2;\n            $factors[0]++;\n        } else {\n            $n = $n / 2;\n            $factors[1]++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292908,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmptcl_sked.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptcl_sked.php:32\nStack trace:\n#0 /tmp/tmptcl_sked.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptcl_sked.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
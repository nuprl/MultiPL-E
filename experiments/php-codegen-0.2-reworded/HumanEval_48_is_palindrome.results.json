{
  "name": "HumanEval_48_is_palindrome",
  "language": "php",
  "prompt": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n",
  "tests": "function candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n\n    // Check if string is empty\n    if (strlen($text) == 0) {\n        return true;\n    }\n\n    // Check if string is only one character\n    if (strlen($text) == 1) {\n        return true;\n    }\n\n    // Check if string is a palindrome\n    if ($text == $text[0] . $text[strlen($text) - 1]) {\n        return true;\n    }\n\n    return false;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdlip2m5_.php:38\nStack trace:\n#0 /tmp/tmpdlip2m5_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpdlip2m5_.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lowercase\n    $text = strtolower($text);\n\n    // Split string into an array\n    $text = explode(\"\", $text);\n\n    // Reverse array\n    $text = array_reverse($text);\n\n    // Compare array elements\n    for ( $i = 0; $i < $text.length; $i++ ) {\n        if ( $text[$i] != $text[$i] ) {\n            return false;\n        }\n    }\n\n    // Return true if all elements are equal\n    return true;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught ValueError: explode(): Argument #1 ($separator) cannot be empty in /tmp/tmpu38h1mt9.php:16\nStack trace:\n#0 /tmp/tmpu38h1mt9.php(16): explode('', '')\n#1 /tmp/tmpu38h1mt9.php(32): is_palindrome('')\n#2 /tmp/tmpu38h1mt9.php(36): candidate('')\n#3 /tmp/tmpu38h1mt9.php(45): test()\n#4 {main}\n  thrown in /tmp/tmpu38h1mt9.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = str_replace(\"\\r\\n\", \"\", $text);\n    $text = str_replace(\"\\n\", \"\", $text);\n    $text = str_replace(\"\\r\", \"\", $text);\n    $text = str_replace(\" \", \"\", $text);\n    $text = str_replace(\"\\t\", \"\", $text);\n    $text = str_replace(\"\\f\", \"\", $text);\n    $text = str_replace(\"\\v\", \"\", $text);\n    $text = str_replace(\"\\0\", \"\", $text);\n    $text = str_replace(\"\\x0\", \"\", $text);\n    $text = str_replace(\"\\x00\", \"\", $text);\n    $text = str_replace(\"\\x000\", \"\", $text);\n    $text = str_replace(\"\\x0000\", \"\", $text);\n    $text = str_replace(\"\\x00000\", \"\", $text);\n    $text = str_replace(\"\\x000000\", \"\", $text);\n    $text = str_replace(\"\\x0000000\", \"\", $text);\n    $text = str_replace(\"\\x00000000\", \"\", $text);\n    $text = str_replace(\"\\x000000000\", \"\", $text);\n    $text = str_replace(\"\\x0000000000\", \"\", $text);\n    $text = str_replace(\"\\x00000000000\", \"\", $text);\n    $text = str_replace(\"\\x000000000000\", \"\", $text);\n    $text = str_replace(\"\\x0000000000000\", \"\", $text);\n    $text = str_replace(\"\\x00000000000000\", \"\", $text);\n    $text = str_replace(\"\\x000000000000000\", \"\", $text);\n    $text = str_replace(\"\\x0000000000000000\", \"\", $text);\n    $text = str_replace(\"\\x000000000000000\", \"\", $text);\n    $text = str_replace(\"\\x0000000000000000\", \"\", $text);\n    $text = str_replace(\"\\x0000000000000000\", \"\", $text);\n    $text = str_replace(\"\\x0000000000000000\", \"\", $text);\n    $text = str_replace(\"\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: syntax error, unexpected double-quoted string \") !== true) { throw new Except...\", expecting \")\" in /tmp/tmpy5egv63g.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n\n    // Split string into an array\n    $text = explode(' ', $text);\n\n    // Reverse array\n    $text = array_reverse($text);\n\n    // Check if the array is empty\n    if (empty($text)) {\n        return true;\n    }\n\n    // Check if the array is palindrome\n    return $text == array_intersect(array_flip($text), $text);\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp424gved7.php:34\nStack trace:\n#0 /tmp/tmp424gved7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp424gved7.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = $text.toLowerCase();\n    $text = $text.replace(/[^a-z0-9]/g, '');\n    $text = $text.replace(/\\s+/g, ' ');\n    $text = $text.replace(/^\\s+|\\s+$/g, '');\n    $text = $text.replace(/\\s/g, ' ');\n    $text = $text.replace(/^\\s+|\\s+$/g, '');\n    $text = $text.replace(/\\s/g, ' ');\n    $text = $text.replace(/^\\s+|\\s+$/g, '');\n    $text = $text.replace(/\\s/g, ' ');\n    $text = $text.replace(/^\\s+|\\s+$/g, '');\n    $text = $text.replace(/\\s/g, ' ');\n    $text = $text.replace(/^\\s+|\\s+$/g, '');\n    $text = $text.replace(/\\s/g, ' ');\n    $text = $text.replace(/^\\s+|\\s+$/g, '');\n    $text = $text.replace(/\\s/g, ' ');\n    $text = $text.replace(/^\\s+|\\s+$/g, '');\n    $text = $text.replace(/\\s/g, ' ');\n    $text = $text.replace(/^\\s+|\\s+$/g, '');\n    $text = $text.replace(/\\s/g, ' ');\n    $text = $text.replace(/^\\s+|\\s+$/g, '');\n    $text = $text.replace(/\\s/g, ' ');\n    $text = $text.replace(/^\\s+|\\s+$/g, '');\n    $text = $text.replace(/\\s/g, ' ');\n    $text = $text.replace(/^\\s+|\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmpt10s6nmf.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lowercase\n    $text = strtolower($text);\n\n    // Split into an array\n    $text = explode(\" \", $text);\n\n    // Reverse the array\n    $text = array_reverse($text);\n\n    // Check if the array is the same as the original\n    return (strcmp($text, $text) == 0);\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught TypeError: strcmp(): Argument #1 ($string1) must be of type string, array given in /tmp/tmp1clqtjo8.php:22\nStack trace:\n#0 /tmp/tmp1clqtjo8.php(22): strcmp(Array, Array)\n#1 /tmp/tmp1clqtjo8.php(25): is_palindrome(Array)\n#2 /tmp/tmp1clqtjo8.php(29): candidate('')\n#3 /tmp/tmp1clqtjo8.php(38): test()\n#4 {main}\n  thrown in /tmp/tmp1clqtjo8.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lowercase\n    $text = strtolower($text);\n\n    // Split string into an array\n    $text_array = explode(\"\", $text);\n\n    // Reverse array\n    $text_array = array_reverse($text_array);\n\n    // Compare array elements\n    for ($i = 0; $i < $text_array.length; $i++) {\n        if ($text_array[$i] != $text_array[$i]) {\n            return false;\n        }\n    }\n\n    // Return true if all elements are equal\n    return true;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught ValueError: explode(): Argument #1 ($separator) cannot be empty in /tmp/tmp2stmo8wh.php:16\nStack trace:\n#0 /tmp/tmp2stmo8wh.php(16): explode('', '')\n#1 /tmp/tmp2stmo8wh.php(32): is_palindrome('')\n#2 /tmp/tmp2stmo8wh.php(36): candidate('')\n#3 /tmp/tmp2stmo8wh.php(45): test()\n#4 {main}\n  thrown in /tmp/tmp2stmo8wh.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = str_replace(\"\\r\\n\", \"\", $text);\n    $text = str_replace(\"\\n\", \"\", $text);\n    $text = str_replace(\"\\r\", \"\", $text);\n    $text = str_replace(\" \", \"\", $text);\n    $text = str_replace(\"\\t\", \"\", $text);\n    $text = str_replace(\"\\x0B\", \"\", $text);\n    $text = str_replace(\"\\x0C\", \"\", $text);\n    $text = str_replace(\"\\x0D\", \"\", $text);\n    $text = str_replace(\"\\x0E\", \"\", $text);\n    $text = str_replace(\"\\x0F\", \"\", $text);\n    $text = str_replace(\"\\x10\", \"\", $text);\n    $text = str_replace(\"\\x11\", \"\", $text);\n    $text = str_replace(\"\\x12\", \"\", $text);\n    $text = str_replace(\"\\x13\", \"\", $text);\n    $text = str_replace(\"\\x14\", \"\", $text);\n    $text = str_replace(\"\\x15\", \"\", $text);\n    $text = str_replace(\"\\x16\", \"\", $text);\n    $text = str_replace(\"\\x17\", \"\", $text);\n    $text = str_replace(\"\\x18\", \"\", $text);\n    $text = str_replace(\"\\x19\", \"\", $text);\n    $text = str_replace(\"\\x1A\", \"\", $text);\n    $text = str_replace(\"\\x1B\", \"\", $text);\n    $text = str_replace(\"\\x1C\", \"\", $text);\n    $text = str_replace(\"\\x1D\", \"\", $text);\n    $text = str_replace(\"\\x1E\", \"\", $text);\n    $text = str_replace(\"\\x1F\", \"\", $text);\n    $text = str_replace(\"\\x7F\", \"\", $text);\n    $text = str_replace(\"\\x80\", \"\", $text);\n    \nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmp8478fsbh.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = str_replace(\"\\r\\n\", \"\", $text);\n    $text = str_replace(\"\\n\", \"\", $text);\n    $text = str_replace(\"\\r\", \"\", $text);\n    $text = str_replace(\" \", \"\", $text);\n    $text = str_replace(\"\\t\", \"\", $text);\n    $text = str_replace(\"\\x0B\", \"\", $text);\n    $text = str_replace(\"\\x0C\", \"\", $text);\n    $text = str_replace(\"\\x0D\", \"\", $text);\n    $text = str_replace(\"\\x0E\", \"\", $text);\n    $text = str_replace(\"\\x0F\", \"\", $text);\n    $text = str_replace(\"\\x10\", \"\", $text);\n    $text = str_replace(\"\\x11\", \"\", $text);\n    $text = str_replace(\"\\x12\", \"\", $text);\n    $text = str_replace(\"\\x13\", \"\", $text);\n    $text = str_replace(\"\\x14\", \"\", $text);\n    $text = str_replace(\"\\x15\", \"\", $text);\n    $text = str_replace(\"\\x16\", \"\", $text);\n    $text = str_replace(\"\\x17\", \"\", $text);\n    $text = str_replace(\"\\x18\", \"\", $text);\n    $text = str_replace(\"\\x19\", \"\", $text);\n    $text = str_replace(\"\\x1A\", \"\", $text);\n    $text = str_replace(\"\\x1B\", \"\", $text);\n    $text = str_replace(\"\\x1C\", \"\", $text);\n    $text = str_replace(\"\\x1D\", \"\", $text);\n    $text = str_replace(\"\\x1E\", \"\", $text);\n    $text = str_replace(\"\\x1F\", \"\", $text);\n    $text = str_replace(\"\\x7F\", \"\", $text);\n    $text = str_replace(\"\\x80\", \"\", $text);\n    \nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmp8478fsbh.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    if ($text == \"\") {\n        return true;\n    }\n\n    var $text_length = $text.length;\n    var $half_length = $text_length / 2;\n    var $half_text = $text.substr($half_length, $half_length);\n\n    return $half_text == $text.substr(0, $half_length).reverse();\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkgg5bve0.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n\n    // Split string into an array\n    $text = explode(\" \", $text);\n\n    // Check if the length is odd\n    if (count($text) % 2 == 1) {\n        return false;\n    }\n\n    // Check if the first and last character are the same\n    if ($text[0] == $text[count($text) - 1]) {\n        return true;\n    }\n\n    // Check if the first and last character are the same\n    if ($text[0] == $text[count($text) - 1]) {\n        return true;\n    }\n\n    // Check if the first and last character are the same\n    if ($text[0] == $text[count($text) - 1]) {\n        return true;\n    }\n\n    // Check if the first and last character are the same\n    if ($text[0] == $text[count($text) - 1]) {\n        return true;\n    }\n\n    // Check if the first and last character are the same\n    if ($text[0] == $text[count($text) - 1]) {\n        return true;\n    }\n\n    // Check if the first and last character are the same\n    if ($text[0] == $text[count($text) - 1]) {\n        return true;\n    }\n\n    // Check if the first and last character are the same\n    if ($text[0] == $text[count($text) - 1]) {\n        return true;\n    }\n\n    // Check if the first and last character are the same\n    if ($text[0] == $text[count($text) - 1]) {\n        return true;\n    }\n\n    // Check if the first and last character are the same\n    if ($text[0] == $text[count($text) - 1]) {\n        return true;\n    }\n\n    // Check if the first and last character are the same\n    if ($text[0] == $text[count($text) - 1]) {\n        return true;\n    }\n\n    // Check if the first and last character are the same\n    if ($text[0] == $text[count($text) - 1]) {\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 74 in /tmp/tmpt20eohel.php on line 90\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lowercase\n    $text = strtolower($text);\n\n    // Split string into an array\n    $text = explode(\"\", $text);\n\n    // Reverse array\n    $text = array_reverse($text);\n\n    // Compare each character\n    for ($i = 0; $i < $text.length; $i++) {\n        if ($text[$i] != $text[$i]) {\n            return false;\n        }\n    }\n\n    // Return true\n    return true;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught ValueError: explode(): Argument #1 ($separator) cannot be empty in /tmp/tmp7c_imtix.php:16\nStack trace:\n#0 /tmp/tmp7c_imtix.php(16): explode('', '')\n#1 /tmp/tmp7c_imtix.php(32): is_palindrome('')\n#2 /tmp/tmp7c_imtix.php(36): candidate('')\n#3 /tmp/tmp7c_imtix.php(45): test()\n#4 {main}\n  thrown in /tmp/tmp7c_imtix.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // if text is empty, return true\n    if ($text === '') {\n        return true;\n    }\n\n    // split text into an array\n    $text = $text.split('');\n\n    // reverse array\n    $text.reverse();\n\n    // compare array\n    for (var i = 0; i < $text.length; i++) {\n        if ($text[i] !== $text[i]) {\n            return false;\n        }\n    }\n\n    // return true\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpqwkx62hr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n    // Split string into an array\n    $text = explode(\" \", $text);\n    // Reverse array\n    $text = array_reverse($text);\n    // Check if array is palindrome\n    return ($text == $text[0]);\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgaf5dbha.php:26\nStack trace:\n#0 /tmp/tmpgaf5dbha.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpgaf5dbha.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n\n    // Split string into an array\n    $text = explode(' ', $text);\n\n    // Reverse array\n    $text = array_reverse($text);\n\n    // Compare each character\n    for ( $i = 0; $i < $text.length; $i++ ) {\n        if ( $text[$i] != $text[$i] ) {\n            return false;\n        }\n    }\n\n    // Return true\n    return true;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpqhrqjrob.php:22\nStack trace:\n#0 /tmp/tmpqhrqjrob.php(32): is_palindrome(Array)\n#1 /tmp/tmpqhrqjrob.php(36): candidate('')\n#2 /tmp/tmpqhrqjrob.php(45): test()\n#3 {main}\n  thrown in /tmp/tmpqhrqjrob.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = $text.replace(/[^a-zA-Z0-9]/g, '');\n    $text = $text.toLowerCase();\n    $text = $text.split(\"\");\n    for (var i = 0; i < $text.length / 2; i++) {\n        if ($text[i] != $text[$text.length - 1 - i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmpu7k4n9ua.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    if ($text === '') {\n        return true;\n    }\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmplw22apok.php:15\nStack trace:\n#0 /tmp/tmplw22apok.php(19): is_palindrome('aba')\n#1 /tmp/tmplw22apok.php(24): candidate('aba')\n#2 /tmp/tmplw22apok.php(32): test()\n#3 {main}\n  thrown in /tmp/tmplw22apok.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    if (typeof $text === 'undefined') {\n        return true;\n    }\n    if ($text === '') {\n        return true;\n    }\n    if ($text === $text.split('').reverse().join('')) {\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: syntax error, unexpected variable \"$text\" in /tmp/tmpty73_5l6.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmp79m_whht.php:12\nStack trace:\n#0 /tmp/tmp79m_whht.php(15): is_palindrome('')\n#1 /tmp/tmp79m_whht.php(19): candidate('')\n#2 /tmp/tmp79m_whht.php(28): test()\n#3 {main}\n  thrown in /tmp/tmp79m_whht.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = str_replace(\"\\r\\n\", \"\", $text);\n    $text = str_replace(\"\\n\", \"\", $text);\n    $text = str_replace(\"\\r\", \"\", $text);\n    $text = str_replace(\" \", \"\", $text);\n    $text = str_replace(\"\\t\", \"\", $text);\n    $text = str_replace(\"\\x0B\", \"\", $text);\n    $text = str_replace(\"\\x0C\", \"\", $text);\n    $text = str_replace(\"\\x0D\", \"\", $text);\n    $text = str_replace(\"\\x0E\", \"\", $text);\n    $text = str_replace(\"\\x0F\", \"\", $text);\n    $text = str_replace(\"\\x10\", \"\", $text);\n    $text = str_replace(\"\\x11\", \"\", $text);\n    $text = str_replace(\"\\x12\", \"\", $text);\n    $text = str_replace(\"\\x13\", \"\", $text);\n    $text = str_replace(\"\\x14\", \"\", $text);\n    $text = str_replace(\"\\x15\", \"\", $text);\n    $text = str_replace(\"\\x16\", \"\", $text);\n    $text = str_replace(\"\\x17\", \"\", $text);\n    $text = str_replace(\"\\x18\", \"\", $text);\n    $text = str_replace(\"\\x19\", \"\", $text);\n    $text = str_replace(\"\\x1A\", \"\", $text);\n    $text = str_replace(\"\\x1B\", \"\", $text);\n    $text = str_replace(\"\\x1C\", \"\", $text);\n    $text = str_replace(\"\\x1D\", \"\", $text);\n    $text = str_replace(\"\\x1E\", \"\", $text);\n    $text = str_replace(\"\\x1F\", \"\", $text);\n    $text = str_replace(\"\\x7F\", \"\", $text);\n    $text = str_replace(\"\\x80\", \"\", $text);\n    \nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmp8478fsbh.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return ($text === $text.split(\"\").reverse().join(\"\"));\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmp76c62gu_.php:12\nStack trace:\n#0 /tmp/tmp76c62gu_.php(16): is_palindrome('')\n#1 /tmp/tmp76c62gu_.php(20): candidate('')\n#2 /tmp/tmp76c62gu_.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp76c62gu_.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // trim text\n    $text = $text.trim();\n    // check if empty\n    if ($text == \"\") {\n        return true;\n    }\n    // check if only one character\n    if ($text.length == 1) {\n        return true;\n    }\n    // check if odd number of characters\n    if ($text.length % 2 == 1) {\n        return false;\n    }\n    // check if first and last characters are the same\n    if ($text.charAt(0) == $text.charAt($text.length - 1)) {\n        return true;\n    }\n    // check if first and second characters are the same\n    if ($text.charAt(0) == $text.charAt($text.length - 2)) {\n        return true;\n    }\n    // check if first and third characters are the same\n    if ($text.charAt(0) == $text.charAt($text.length - 3)) {\n        return true;\n    }\n    // check if first and fourth characters are the same\n    if ($text.charAt(0) == $text.charAt($text.length - 4)) {\n        return true;\n    }\n    // check if first and fifth characters are the same\n    if ($text.charAt(0) == $text.charAt($text.length - 5)) {\n        return true;\n    }\n    // check if first and sixth characters are the same\n    if ($text.charAt(0) == $text.charAt($text.length - 6)) {\n        return true;\n    }\n    // check if first and seventh characters are the same\n    if ($text.charAt(0) == $text.charAt($text.length - 7)) {\n        return true;\n    }\n    // check if first and eighth characters are the same\n    if ($text.charAt(0) == $text.charAt($text.length - 8)) {\n        return true;\n    }\n    // check if first and ninth characters are the same\n    if ($text.charAt(0) == $text.charAt($text.length - 9)) {\n        return true;\n    }\n    // check if first and tenth characters are the same\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmp48_09bos.php on line 77\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = str_replace(\"\\r\\n\", \"\", $text);\n    $text = str_replace(\"\\n\", \"\", $text);\n    $text = str_replace(\"\\r\", \"\", $text);\n    $text = str_replace(\" \", \"\", $text);\n    $text = str_replace(\"\\t\", \"\", $text);\n    $text = str_replace(\"\\x0B\", \"\", $text);\n    $text = str_replace(\"\\x0C\", \"\", $text);\n    $text = str_replace(\"\\x0D\", \"\", $text);\n    $text = str_replace(\"\\x0E\", \"\", $text);\n    $text = str_replace(\"\\x0F\", \"\", $text);\n    $text = str_replace(\"\\x10\", \"\", $text);\n    $text = str_replace(\"\\x11\", \"\", $text);\n    $text = str_replace(\"\\x12\", \"\", $text);\n    $text = str_replace(\"\\x13\", \"\", $text);\n    $text = str_replace(\"\\x14\", \"\", $text);\n    $text = str_replace(\"\\x15\", \"\", $text);\n    $text = str_replace(\"\\x16\", \"\", $text);\n    $text = str_replace(\"\\x17\", \"\", $text);\n    $text = str_replace(\"\\x18\", \"\", $text);\n    $text = str_replace(\"\\x19\", \"\", $text);\n    $text = str_replace(\"\\x1A\", \"\", $text);\n    $text = str_replace(\"\\x1B\", \"\", $text);\n    $text = str_replace(\"\\x1C\", \"\", $text);\n    $text = str_replace(\"\\x1D\", \"\", $text);\n    $text = str_replace(\"\\x1E\", \"\", $text);\n    $text = str_replace(\"\\x1F\", \"\", $text);\n    $text = str_replace(\"\\x7F\", \"\", $text);\n    $text = str_replace(\"\\x80\", \"\", $text);\n    \nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmp8478fsbh.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    if (typeof $text === 'undefined') {\n        return true;\n    }\n    $text = $text.toLowerCase();\n    $text = $text.replace(/[^a-z]/g, '');\n    $text = $text.split('');\n    $text.reverse();\n    $text = $text.join('');\n    return $text === $text.replace(/[^a-z]/g, '');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: syntax error, unexpected variable \"$text\" in /tmp/tmptnmlg_58.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n    // Split string into an array\n    $text = explode(\" \", $text);\n    // Check if the length is odd\n    if (count($text) % 2 == 1) {\n        // Return false\n        return false;\n    }\n    // Loop through the array\n    foreach($text as $i) {\n        // Check if the current string is the same as the previous one\n        if ($i == $text[count($text) - 1]) {\n            // Return true\n            return true;\n        }\n    }\n    // Return false\n    return false;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ekcr7b1.php:37\nStack trace:\n#0 /tmp/tmp5ekcr7b1.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5ekcr7b1.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n    // Split string into an array\n    $text = explode(\" \", $text);\n    // Reverse array\n    $text = array_reverse($text);\n    // Check if the array is the same as the original\n    return $text == $text;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiy__g_8x.php:29\nStack trace:\n#0 /tmp/tmpiy__g_8x.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpiy__g_8x.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = str_replace(' ', '', $text);\n    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\\', '', $text);\n    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n    $text = str_replace('+', '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n    $text = str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n    $text = str_replace('\"', '', $text);\n    $text = str_replace('\\'', '', $text);\n    $text = str_replace('<', '', $text);\n    $text = str_replace('>', '', $text);\n    $text = str_replace('|', '', $text);\n    $text = str_replace('&', '', $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('$', '', $text);\n    $text = str_replace('@', '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('~', '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace('=', '', $text);\n    \nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmpoo6wj6tz.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = str_replace(' ', '', $text);\n    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\\', '', $text);\n    $text = str_replace('.', '', $text);\n    $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n    $text = str_replace('\\'', '', $text);\n    $text = str_replace('\"', '', $text);\n    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n    $text = str_replace('+', '', $text);\n    $text = str_replace('-', '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('&', '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('<', '', $text);\n    $text = str_replace('>', '', $text);\n    $text = str_replace('@', '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('$', '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('|', '', $text);\n    $text = str_replace('\\\\', '', $text);\n    $text = str_replace(';', '', $text);\n    \nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmpfpez56uy.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = str_replace(\"\\r\\n\", \"\", $text);\n    $text = str_replace(\"\\n\", \"\", $text);\n    $text = str_replace(\"\\r\", \"\", $text);\n    $text = str_replace(\" \", \"\", $text);\n    $text = str_replace(\"\\t\", \"\", $text);\n    $text = str_replace(\"\\x0B\", \"\", $text);\n    $text = str_replace(\"\\x0C\", \"\", $text);\n    $text = str_replace(\"\\x0D\", \"\", $text);\n    $text = str_replace(\"\\x0E\", \"\", $text);\n    $text = str_replace(\"\\x0F\", \"\", $text);\n    $text = str_replace(\"\\x10\", \"\", $text);\n    $text = str_replace(\"\\x11\", \"\", $text);\n    $text = str_replace(\"\\x12\", \"\", $text);\n    $text = str_replace(\"\\x13\", \"\", $text);\n    $text = str_replace(\"\\x14\", \"\", $text);\n    $text = str_replace(\"\\x15\", \"\", $text);\n    $text = str_replace(\"\\x16\", \"\", $text);\n    $text = str_replace(\"\\x17\", \"\", $text);\n    $text = str_replace(\"\\x18\", \"\", $text);\n    $text = str_replace(\"\\x19\", \"\", $text);\n    $text = str_replace(\"\\x1A\", \"\", $text);\n    $text = str_replace(\"\\x1B\", \"\", $text);\n    $text = str_replace(\"\\x1C\", \"\", $text);\n    $text = str_replace(\"\\x1D\", \"\", $text);\n    $text = str_replace(\"\\x1E\", \"\", $text);\n    $text = str_replace(\"\\x1F\", \"\", $text);\n    $text = str_replace(\"\\x7F\", \"\", $text);\n    $text = str_replace(\"\\x80\", \"\", $text);\n    \nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmp8478fsbh.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n\n    // Split into an array\n    $text_arr = explode(\" \", $text);\n\n    // Reverse the array\n    $text_arr = array_reverse($text_arr);\n\n    // Check if the array is the same as the original\n    return (strcmp($text_arr, $text) == 0);\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught TypeError: strcmp(): Argument #1 ($string1) must be of type string, array given in /tmp/tmpi8tvzq7j.php:22\nStack trace:\n#0 /tmp/tmpi8tvzq7j.php(22): strcmp(Array, '')\n#1 /tmp/tmpi8tvzq7j.php(25): is_palindrome('')\n#2 /tmp/tmpi8tvzq7j.php(29): candidate('')\n#3 /tmp/tmpi8tvzq7j.php(38): test()\n#4 {main}\n  thrown in /tmp/tmpi8tvzq7j.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lowercase\n    $text = strtolower($text);\n\n    // Split string into an array\n    $text = explode(\" \", $text);\n\n    // Check if the length is odd\n    if (count($text) % 2 == 1) {\n        return false;\n    }\n\n    // Check if the first and last element are the same\n    if ($text[0] == $text[count($text) - 1]) {\n        return true;\n    }\n\n    // Check if the first and last element are the same\n    if ($text[0] == $text[count($text) - 1]) {\n        return true;\n    }\n\n    // Check if the first and last element are the same\n    if ($text[0] == $text[count($text) - 1]) {\n        return true;\n    }\n\n    return false;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8iz_qhx2.php:45\nStack trace:\n#0 /tmp/tmp8iz_qhx2.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp8iz_qhx2.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = $text.toLowerCase();\n    $text = $text.replace(/[^a-z]/g, '');\n    $text = $text.replace(/\\s/g, '');\n    $text = $text.split('');\n    $text.reverse();\n    $text = $text.join('');\n    return $text === $text.replace(/[^a-z]/g, '');\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmpml_b6_6r.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // $text = trim($text);\n    if (strlen($text) < 2) {\n        return true;\n    }\n    $text = str_replace(\"\\r\\n\", \"\", $text);\n    $text = str_replace(\"\\n\", \"\", $text);\n    $text = str_replace(\"\\r\", \"\", $text);\n    $text = str_replace(\" \", \"\", $text);\n    $text = str_replace(\"\\t\", \"\", $text);\n    $text = str_replace(\"\\x0b\", \"\", $text);\n    $text = str_replace(\"\\x0c\", \"\", $text);\n    $text = str_replace(\"\\x0d\", \"\", $text);\n    $text = str_replace(\"\\x0e\", \"\", $text);\n    $text = str_replace(\"\\x0f\", \"\", $text);\n    $text = str_replace(\"\\x10\", \"\", $text);\n    $text = str_replace(\"\\x11\", \"\", $text);\n    $text = str_replace(\"\\x12\", \"\", $text);\n    $text = str_replace(\"\\x13\", \"\", $text);\n    $text = str_replace(\"\\x14\", \"\", $text);\n    $text = str_replace(\"\\x15\", \"\", $text);\n    $text = str_replace(\"\\x16\", \"\", $text);\n    $text = str_replace(\"\\x17\", \"\", $text);\n    $text = str_replace(\"\\x18\", \"\", $text);\n    $text = str_replace(\"\\x19\", \"\", $text);\n    $text = str_replace(\"\\x1a\", \"\", $text);\n    $text = str_replace(\"\\x1b\", \"\", $text);\n    $text = str_replace(\"\\x1c\", \"\", $text);\n    $text = str_replace(\"\\x1d\", \"\", $text);\n    $text = str_replace(\"\\x1e\", \"\", $text);\n    $text = str_replace(\"\\x1f\", \"\", $text);\n    $text = str_replace\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpivzucdgg.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n\n    // Split string into an array\n    $text = explode(\" \", $text);\n\n    // Check if the length of the array is odd\n    if (count($text) % 2 == 1) {\n        return false;\n    }\n\n    // Check if the first and last element are equal\n    if ($text[0] == $text[count($text) - 1]) {\n        return true;\n    }\n\n    // Check if the first and last element are equal\n    if ($text[0] == $text[count($text) - 1]) {\n        return true;\n    }\n\n    return false;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbd9yvgf.php:40\nStack trace:\n#0 /tmp/tmpqbd9yvgf.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpqbd9yvgf.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    if ($text === '') {\n        return true;\n    }\n    if ($text === $text.split('').reverse().join('')) {\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmp54vfys2b.php:15\nStack trace:\n#0 /tmp/tmp54vfys2b.php(22): is_palindrome('aba')\n#1 /tmp/tmp54vfys2b.php(27): candidate('aba')\n#2 /tmp/tmp54vfys2b.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp54vfys2b.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n    // Split string into an array\n    $text = explode(\" \", $text);\n    // Reverse array\n    $text = array_reverse($text);\n    // Join array\n    $text = implode(\" \", $text);\n    // Check if string is palindrome\n    return ($text == $text);\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9hyl3mnj.php:31\nStack trace:\n#0 /tmp/tmp9hyl3mnj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9hyl3mnj.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = str_replace(\"\\r\\n\", \"\", $text);\n    $text = str_replace(\"\\n\", \"\", $text);\n    $text = str_replace(\"\\r\", \"\", $text);\n    $text = str_replace(\" \", \"\", $text);\n    $text = str_replace(\"\\t\", \"\", $text);\n    $text = str_replace(\"\\x0B\", \"\", $text);\n    $text = str_replace(\"\\x0C\", \"\", $text);\n    $text = str_replace(\"\\x0D\", \"\", $text);\n    $text = str_replace(\"\\x0E\", \"\", $text);\n    $text = str_replace(\"\\x0F\", \"\", $text);\n    $text = str_replace(\"\\x10\", \"\", $text);\n    $text = str_replace(\"\\x11\", \"\", $text);\n    $text = str_replace(\"\\x12\", \"\", $text);\n    $text = str_replace(\"\\x13\", \"\", $text);\n    $text = str_replace(\"\\x14\", \"\", $text);\n    $text = str_replace(\"\\x15\", \"\", $text);\n    $text = str_replace(\"\\x16\", \"\", $text);\n    $text = str_replace(\"\\x17\", \"\", $text);\n    $text = str_replace(\"\\x18\", \"\", $text);\n    $text = str_replace(\"\\x19\", \"\", $text);\n    $text = str_replace(\"\\x1A\", \"\", $text);\n    $text = str_replace(\"\\x1B\", \"\", $text);\n    $text = str_replace(\"\\x1C\", \"\", $text);\n    $text = str_replace(\"\\x1D\", \"\", $text);\n    $text = str_replace(\"\\x1E\", \"\", $text);\n    $text = str_replace(\"\\x1F\", \"\", $text);\n    $text = str_replace(\"\\x7F\", \"\", $text);\n    $text = str_replace(\"\\x80\", \"\", $text);\n    \nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmp8478fsbh.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n    // Split string into an array\n    $text = explode(\"\", $text);\n    // Reverse array\n    $text = array_reverse($text);\n    // Check if the array is the same as the original\n    return $text == $text;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught ValueError: explode(): Argument #1 ($separator) cannot be empty in /tmp/tmpyynj70pt.php:15\nStack trace:\n#0 /tmp/tmpyynj70pt.php(15): explode('', '')\n#1 /tmp/tmpyynj70pt.php(22): is_palindrome('')\n#2 /tmp/tmpyynj70pt.php(26): candidate('')\n#3 /tmp/tmpyynj70pt.php(35): test()\n#4 {main}\n  thrown in /tmp/tmpyynj70pt.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = str_replace(\"\\r\\n\", \"\", $text);\n    $text = str_replace(\"\\n\", \"\", $text);\n    $text = str_replace(\"\\r\", \"\", $text);\n    $text = str_replace(\" \", \"\", $text);\n    $text = str_replace(\"\\t\", \"\", $text);\n    $text = str_replace(\"\\x0B\", \"\", $text);\n    $text = str_replace(\"\\x0C\", \"\", $text);\n    $text = str_replace(\"\\x0D\", \"\", $text);\n    $text = str_replace(\"\\x0E\", \"\", $text);\n    $text = str_replace(\"\\x0F\", \"\", $text);\n    $text = str_replace(\"\\x10\", \"\", $text);\n    $text = str_replace(\"\\x11\", \"\", $text);\n    $text = str_replace(\"\\x12\", \"\", $text);\n    $text = str_replace(\"\\x13\", \"\", $text);\n    $text = str_replace(\"\\x14\", \"\", $text);\n    $text = str_replace(\"\\x15\", \"\", $text);\n    $text = str_replace(\"\\x16\", \"\", $text);\n    $text = str_replace(\"\\x17\", \"\", $text);\n    $text = str_replace(\"\\x18\", \"\", $text);\n    $text = str_replace(\"\\x19\", \"\", $text);\n    $text = str_replace(\"\\x1A\", \"\", $text);\n    $text = str_replace(\"\\x1B\", \"\", $text);\n    $text = str_replace(\"\\x1C\", \"\", $text);\n    $text = str_replace(\"\\x1D\", \"\", $text);\n    $text = str_replace(\"\\x1E\", \"\", $text);\n    $text = str_replace(\"\\x1F\", \"\", $text);\n    $text = str_replace(\"\\x7F\", \"\", $text);\n    $text = str_replace(\"\\x80\", \"\", $text);\n    \nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmp8478fsbh.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n\n    // Split string into an array\n    $text = explode(\"\", $text);\n\n    // Reverse array\n    $text = array_reverse($text);\n\n    // Check if array is palindrome\n    return ($text == $text[0]);\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught ValueError: explode(): Argument #1 ($separator) cannot be empty in /tmp/tmp8u5wfupq.php:16\nStack trace:\n#0 /tmp/tmp8u5wfupq.php(16): explode('', '')\n#1 /tmp/tmp8u5wfupq.php(26): is_palindrome('')\n#2 /tmp/tmp8u5wfupq.php(30): candidate('')\n#3 /tmp/tmp8u5wfupq.php(39): test()\n#4 {main}\n  thrown in /tmp/tmp8u5wfupq.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n    // Split string into an array\n    $text = explode(\" \", $text);\n    // Reverse array\n    $text = array_reverse($text);\n    // Join array\n    $text = implode(\" \", $text);\n    // Check if string is equal to itself\n    return $text == $text;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfi03fdrd.php:31\nStack trace:\n#0 /tmp/tmpfi03fdrd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfi03fdrd.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n    // Split string into an array\n    $text = explode(\" \", $text);\n    // Reverse array\n    $text = array_reverse($text);\n    // Join array\n    $text = implode(\" \", $text);\n    // Check if string is palindrome\n    return ($text == $text);\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9hyl3mnj.php:31\nStack trace:\n#0 /tmp/tmp9hyl3mnj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9hyl3mnj.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Empty string is a palindrome\n    if ($text === '') {\n        return true;\n    }\n\n    // Split string into an array of characters\n    $text = $text.split('');\n\n    // Reverse array\n    $text.reverse();\n\n    // Compare array\n    for (var i = 0; i < $text.length; i++) {\n        if ($text[i] !== $text[i + 1]) {\n            return false;\n        }\n    }\n\n    // Return true if the string is a palindrome\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpfls2x3ou.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = $text.toLowerCase();\n    $text = $text.replace(/[^a-z0-9]/g, '');\n    $text = $text.split('');\n    $text.reverse();\n    return $text.join('') === $text[0];\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmpw6dnjgld.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = str_replace(\"\\r\\n\", \"\", $text);\n    $text = str_replace(\"\\n\", \"\", $text);\n    $text = str_replace(\"\\r\", \"\", $text);\n    $text = str_replace(\" \", \"\", $text);\n    $text = str_replace(\"\\t\", \"\", $text);\n    $text = str_replace(\"\\x0B\", \"\", $text);\n    $text = str_replace(\"\\x0C\", \"\", $text);\n    $text = str_replace(\"\\x0D\", \"\", $text);\n    $text = str_replace(\"\\x0E\", \"\", $text);\n    $text = str_replace(\"\\x0F\", \"\", $text);\n    $text = str_replace(\"\\x10\", \"\", $text);\n    $text = str_replace(\"\\x11\", \"\", $text);\n    $text = str_replace(\"\\x12\", \"\", $text);\n    $text = str_replace(\"\\x13\", \"\", $text);\n    $text = str_replace(\"\\x14\", \"\", $text);\n    $text = str_replace(\"\\x15\", \"\", $text);\n    $text = str_replace(\"\\x16\", \"\", $text);\n    $text = str_replace(\"\\x17\", \"\", $text);\n    $text = str_replace(\"\\x18\", \"\", $text);\n    $text = str_replace(\"\\x19\", \"\", $text);\n    $text = str_replace(\"\\x1A\", \"\", $text);\n    $text = str_replace(\"\\x1B\", \"\", $text);\n    $text = str_replace(\"\\x1C\", \"\", $text);\n    $text = str_replace(\"\\x1D\", \"\", $text);\n    $text = str_replace(\"\\x1E\", \"\", $text);\n    $text = str_replace(\"\\x1F\", \"\", $text);\n    $text = str_replace(\"\\x7F\", \"\", $text);\n    $text = str_replace(\"\\x80\", \"\", $text);\n    \nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmp8478fsbh.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = str_replace(\"\\r\\n\", \"\", $text);\n    $text = str_replace(\"\\n\", \"\", $text);\n    $text = str_replace(\"\\r\", \"\", $text);\n    $text = str_replace(\" \", \"\", $text);\n    $text = str_replace(\"\\t\", \"\", $text);\n    $text = str_replace(\"\\x0B\", \"\", $text);\n    $text = str_replace(\"\\x0C\", \"\", $text);\n    $text = str_replace(\"\\x0D\", \"\", $text);\n    $text = str_replace(\"\\x0E\", \"\", $text);\n    $text = str_replace(\"\\x0F\", \"\", $text);\n    $text = str_replace(\"\\x10\", \"\", $text);\n    $text = str_replace(\"\\x11\", \"\", $text);\n    $text = str_replace(\"\\x12\", \"\", $text);\n    $text = str_replace(\"\\x13\", \"\", $text);\n    $text = str_replace(\"\\x14\", \"\", $text);\n    $text = str_replace(\"\\x15\", \"\", $text);\n    $text = str_replace(\"\\x16\", \"\", $text);\n    $text = str_replace(\"\\x17\", \"\", $text);\n    $text = str_replace(\"\\x18\", \"\", $text);\n    $text = str_replace(\"\\x19\", \"\", $text);\n    $text = str_replace(\"\\x1A\", \"\", $text);\n    $text = str_replace(\"\\x1B\", \"\", $text);\n    $text = str_replace(\"\\x1C\", \"\", $text);\n    $text = str_replace(\"\\x1D\", \"\", $text);\n    $text = str_replace(\"\\x1E\", \"\", $text);\n    $text = str_replace(\"\\x1F\", \"\", $text);\n    $text = str_replace(\"\\x7F\", \"\", $text);\n    $text = str_replace(\"\\x80\", \"\", $text);\n    \nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmp8478fsbh.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n    // Split string into an array\n    $text = explode(\"\", $text);\n    // Reverse array\n    $text = array_reverse($text);\n    // Compare array elements\n    for ( $i = 0; $i < $text.length; $i++ ) {\n        if ( $text[$i] != $text[$i] ) {\n            return false;\n        }\n    }\n    // Return true\n    return true;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught ValueError: explode(): Argument #1 ($separator) cannot be empty in /tmp/tmpkqge95of.php:15\nStack trace:\n#0 /tmp/tmpkqge95of.php(15): explode('', '')\n#1 /tmp/tmpkqge95of.php(28): is_palindrome('')\n#2 /tmp/tmpkqge95of.php(32): candidate('')\n#3 /tmp/tmpkqge95of.php(41): test()\n#4 {main}\n  thrown in /tmp/tmpkqge95of.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    if ($text === '') {\n        return true;\n    }\n    var $text_length = $text.length;\n    var $half_length = $text_length / 2;\n    var $half_text = $text.substr(0, $half_length);\n    var $half_text_reversed = $half_text.split('').reverse().join('');\n    return $half_text === $half_text_reversed;\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpt4mjormk.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // If string is empty, return true\n    if ($text === \"\") {\n        return true;\n    }\n\n    // Split string into an array\n    $text = $text.split(\"\");\n\n    // If string is odd length, return false\n    if ($text.length % 2 !== 0) {\n        return false;\n    }\n\n    // Start at the middle of the string\n    var i = $text.length / 2;\n\n    // While we're not at the beginning of the string\n    while (i > 0) {\n        // If the first and last characters are not the same, return false\n        if ($text[i] !== $text[i - 1]) {\n            return false;\n        }\n\n        // Decrement index\n        i--;\n    }\n\n    // If we got this far, the string is a palindrome\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmph83dyu9q.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n\n    // Split string into an array\n    $text = explode(\" \", $text);\n\n    // Reverse array\n    $text = array_reverse($text);\n\n    // Check if array is palindrome\n    return $text == $text[0];\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1h4ae8dm.php:29\nStack trace:\n#0 /tmp/tmp1h4ae8dm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1h4ae8dm.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n    // Split string into array\n    $text = explode(\"\", $text);\n    // Reverse array\n    $text = array_reverse($text);\n    // Join array\n    $text = implode(\"\", $text);\n    // Compare\n    return $text == $text;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught ValueError: explode(): Argument #1 ($separator) cannot be empty in /tmp/tmpoky5yppg.php:15\nStack trace:\n#0 /tmp/tmpoky5yppg.php(15): explode('', '')\n#1 /tmp/tmpoky5yppg.php(24): is_palindrome('')\n#2 /tmp/tmpoky5yppg.php(28): candidate('')\n#3 /tmp/tmpoky5yppg.php(37): test()\n#4 {main}\n  thrown in /tmp/tmpoky5yppg.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = str_replace(' ', '', $text);\n    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n    $text = str_replace('&', '', $text);\n    $text = str_replace('\\'', '', $text);\n    $text = str_replace('\"', '', $text);\n    $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\\', '', $text);\n    $text = str_replace('|', '', $text);\n    $text = str_replace('<', '', $text);\n    $text = str_replace('>', '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('+', '', $text);\n    $text = str_replace('-', '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('@', '', $text);\n    $text = str_replace('$', '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('%', '', $text);\n    \nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmpjri_ahm7.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = str_replace(\"\\r\\n\", \"\", $text);\n    $text = str_replace(\"\\n\", \"\", $text);\n    $text = str_replace(\"\\r\", \"\", $text);\n    $text = str_replace(\" \", \"\", $text);\n    $text = str_replace(\"\\t\", \"\", $text);\n    $text = str_replace(\"\\x0B\", \"\", $text);\n    $text = str_replace(\"\\x0C\", \"\", $text);\n    $text = str_replace(\"\\x0D\", \"\", $text);\n    $text = str_replace(\"\\x0E\", \"\", $text);\n    $text = str_replace(\"\\x0F\", \"\", $text);\n    $text = str_replace(\"\\x10\", \"\", $text);\n    $text = str_replace(\"\\x11\", \"\", $text);\n    $text = str_replace(\"\\x12\", \"\", $text);\n    $text = str_replace(\"\\x13\", \"\", $text);\n    $text = str_replace(\"\\x14\", \"\", $text);\n    $text = str_replace(\"\\x15\", \"\", $text);\n    $text = str_replace(\"\\x16\", \"\", $text);\n    $text = str_replace(\"\\x17\", \"\", $text);\n    $text = str_replace(\"\\x18\", \"\", $text);\n    $text = str_replace(\"\\x19\", \"\", $text);\n    $text = str_replace(\"\\x1A\", \"\", $text);\n    $text = str_replace(\"\\x1B\", \"\", $text);\n    $text = str_replace(\"\\x1C\", \"\", $text);\n    $text = str_replace(\"\\x1D\", \"\", $text);\n    $text = str_replace(\"\\x1E\", \"\", $text);\n    $text = str_replace(\"\\x1F\", \"\", $text);\n    $text = str_replace(\"\\x7F\", \"\", $text);\n    $text = str_replace(\"\\x80\", \"\", $text);\n    \nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmp8478fsbh.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    if ($text === '') {\n        return true;\n    }\n    if ($text.length <= 1) {\n        return true;\n    }\n    var $left = $text.substr(0, $text.length / 2);\n    var $right = $text.substr($text.length / 2, $text.length - $text.length / 2);\n    return $left === $right;\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4k5ui2ns.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lowercase\n    $text = strtolower($text);\n\n    // Split string into an array\n    $text = explode(\" \", $text);\n\n    // Check if the length of the array is odd\n    if (count($text) % 2 == 1) {\n        return false;\n    }\n\n    // Check if the first and last element are the same\n    if ($text[0] == $text[count($text) - 1]) {\n        return true;\n    }\n\n    // Check if the first and last element are the same\n    if ($text[0] == $text[count($text) - 1]) {\n        return true;\n    }\n\n    // Check if the first and last element are the same\n    if ($text[0] == $text[count($text) - 1]) {\n        return true;\n    }\n\n    return false;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbrithshf.php:45\nStack trace:\n#0 /tmp/tmpbrithshf.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpbrithshf.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n\n    // Check if string is empty\n    if (strlen($text) == 0) {\n        return true;\n    }\n\n    // Check if string is only one character\n    if (strlen($text) == 1) {\n        return true;\n    }\n\n    // Check if string is only one character\n    if (strlen($text) == 1) {\n        return true;\n    }\n\n    // Check if string is only one character\n    if (strlen($text) == 1) {\n        return true;\n    }\n\n    // Check if string is only one character\n    if (strlen($text) == 1) {\n        return true;\n    }\n\n    // Check if string is only one character\n    if (strlen($text) == 1) {\n        return true;\n    }\n\n    // Check if string is only one character\n    if (strlen($text) == 1) {\n        return true;\n    }\n\n    // Check if string is only one character\n    if (strlen($text) == 1) {\n        return true;\n    }\n\n    // Check if string is only one character\n    if (strlen($text) == 1) {\n        return true;\n    }\n\n    // Check if string is only one character\n    if (strlen($text) == 1) {\n        return true;\n    }\n\n    // Check if string is only one character\n    if (strlen($text) == 1) {\n        return true;\n    }\n\n    // Check if string is only one character\n    if (strlen($text) == 1) {\n        return true;\n    }\n\n    // Check if string is only one character\n    if (strlen($text) == 1) {\n        return true;\n    }\n\n    // Check if string is only one character\n    if (strlen($text) == 1) {\n        return true;\n    }\n\n    // Check if string is only one character\n    if (strlen($text) == 1) {\n        return true;\n    }\n\n    // Check if string is only one character\n    if (strlen($text) == 1) {\n        return true;\n    }\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmpyn6kj7rj.php on line 108\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = $text.toLowerCase();\n    $text = $text.replace(/[^a-z]/g, '');\n    $text = $text.replace(/\\s/g, '');\n    $text = $text.split('');\n    $text.reverse();\n    $text = $text.join('');\n    return $text === $text.split('').reverse().join('');\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmp36kkako6.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n\n    // Split string into an array\n    $text = explode(' ', $text);\n\n    // Reverse array\n    $text = array_reverse($text);\n\n    // Compare array elements\n    for ( $i = 0; $i < $text.length; $i++ ) {\n        if ( $text[$i] != $text[$i] ) {\n            return false;\n        }\n    }\n\n    // Return true if all elements are equal\n    return true;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp3u5zby08.php:22\nStack trace:\n#0 /tmp/tmp3u5zby08.php(32): is_palindrome(Array)\n#1 /tmp/tmp3u5zby08.php(36): candidate('')\n#2 /tmp/tmp3u5zby08.php(45): test()\n#3 {main}\n  thrown in /tmp/tmp3u5zby08.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n\n    // Split string into an array\n    $text = explode(\" \", $text);\n\n    // Check if the length is even\n    if (count($text) % 2 == 0) {\n        // Loop through each character\n        foreach($text as $character) {\n            // Check if the character is the same as the next character\n            if ($character == $text[count($text) - 1]) {\n                // Return true\n                return true;\n            }\n        }\n    }\n\n    // Return false\n    return false;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdekwcqrh.php:38\nStack trace:\n#0 /tmp/tmpdekwcqrh.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpdekwcqrh.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // trim text\n    $text = $text.trim();\n    // check if empty\n    if ($text == \"\") {\n        return true;\n    }\n    // check if odd length\n    if ($text.length % 2 == 1) {\n        return false;\n    }\n    // split text into array\n    $text = $text.split(\"\");\n    // check if odd length\n    if ($text.length % 2 == 1) {\n        return false;\n    }\n    // check if even length\n    if ($text.length % 2 == 0) {\n        // check if first and last are equal\n        if ($text[0] == $text[$text.length - 1]) {\n            return true;\n        }\n        // check if first and second are equal\n        if ($text[0] == $text[1]) {\n            return true;\n        }\n        // check if last and second are equal\n        if ($text[$text.length - 1] == $text[1]) {\n            return true;\n        }\n        // check if first and last are equal\n        if ($text[0] == $text[$text.length - 1]) {\n            return true;\n        }\n        // check if first and second are equal\n        if ($text[0] == $text[1]) {\n            return true;\n        }\n        // check if last and second are equal\n        if ($text[$text.length - 1] == $text[1]) {\n            return true;\n        }\n        // check if first and last are equal\n        if ($text[0] == $text[$text.length - 1]) {\n            return true;\n        }\n        // check if first and second are equal\n        if ($text[0] == $text[1]) {\n            return true;\n        }\n        // check if last and second are equal\n        if ($text[$text.length - 1] == $text[1]) {\n            return true;\n        }\n        // check if first and last are equal\n        if ($text[0] == $text[$text.length - 1]) {\n            return true;\n        }\n        // check if first and second are equal\n        if ($text\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpzidnt_f_.php on line 72\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = str_replace(\"\\r\\n\", \"\", $text);\n    $text = str_replace(\"\\n\", \"\", $text);\n    $text = str_replace(\"\\r\", \"\", $text);\n    $text = str_replace(\" \", \"\", $text);\n    $text = str_replace(\"\\t\", \"\", $text);\n    $text = str_replace(\"\\x0B\", \"\", $text);\n    $text = str_replace(\"\\x0C\", \"\", $text);\n    $text = str_replace(\"\\x0D\", \"\", $text);\n    $text = str_replace(\"\\x0E\", \"\", $text);\n    $text = str_replace(\"\\x0F\", \"\", $text);\n    $text = str_replace(\"\\x10\", \"\", $text);\n    $text = str_replace(\"\\x11\", \"\", $text);\n    $text = str_replace(\"\\x12\", \"\", $text);\n    $text = str_replace(\"\\x13\", \"\", $text);\n    $text = str_replace(\"\\x14\", \"\", $text);\n    $text = str_replace(\"\\x15\", \"\", $text);\n    $text = str_replace(\"\\x16\", \"\", $text);\n    $text = str_replace(\"\\x17\", \"\", $text);\n    $text = str_replace(\"\\x18\", \"\", $text);\n    $text = str_replace(\"\\x19\", \"\", $text);\n    $text = str_replace(\"\\x1A\", \"\", $text);\n    $text = str_replace(\"\\x1B\", \"\", $text);\n    $text = str_replace(\"\\x1C\", \"\", $text);\n    $text = str_replace(\"\\x1D\", \"\", $text);\n    $text = str_replace(\"\\x1E\", \"\", $text);\n    $text = str_replace(\"\\x1F\", \"\", $text);\n    $text = str_replace(\"\\x7F\", \"\", $text);\n    $text = str_replace(\"\\x80\", \"\", $text);\n    \nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmp8478fsbh.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = str_replace(\"\\r\\n\", \"\", $text);\n    $text = str_replace(\"\\n\", \"\", $text);\n    $text = str_replace(\"\\r\", \"\", $text);\n    $text = str_replace(\" \", \"\", $text);\n    $text = str_replace(\"\\t\", \"\", $text);\n    $text = str_replace(\"\\x0B\", \"\", $text);\n    $text = str_replace(\"\\x0C\", \"\", $text);\n    $text = str_replace(\"\\x0D\", \"\", $text);\n    $text = str_replace(\"\\x0E\", \"\", $text);\n    $text = str_replace(\"\\x0F\", \"\", $text);\n    $text = str_replace(\"\\x10\", \"\", $text);\n    $text = str_replace(\"\\x11\", \"\", $text);\n    $text = str_replace(\"\\x12\", \"\", $text);\n    $text = str_replace(\"\\x13\", \"\", $text);\n    $text = str_replace(\"\\x14\", \"\", $text);\n    $text = str_replace(\"\\x15\", \"\", $text);\n    $text = str_replace(\"\\x16\", \"\", $text);\n    $text = str_replace(\"\\x17\", \"\", $text);\n    $text = str_replace(\"\\x18\", \"\", $text);\n    $text = str_replace(\"\\x19\", \"\", $text);\n    $text = str_replace(\"\\x1A\", \"\", $text);\n    $text = str_replace(\"\\x1B\", \"\", $text);\n    $text = str_replace(\"\\x1C\", \"\", $text);\n    $text = str_replace(\"\\x1D\", \"\", $text);\n    $text = str_replace(\"\\x1E\", \"\", $text);\n    $text = str_replace(\"\\x1F\", \"\", $text);\n    $text = str_replace(\"\\x7F\", \"\", $text);\n    $text = str_replace(\"\\x80\", \"\", $text);\n    \nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmp8478fsbh.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n\n    // Split string into an array\n    $text = explode(\"\", $text);\n\n    // Reverse array\n    $text = array_reverse($text);\n\n    // Check if the array is the same as the original\n    return $text == $text;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught ValueError: explode(): Argument #1 ($separator) cannot be empty in /tmp/tmps6pu42ug.php:16\nStack trace:\n#0 /tmp/tmps6pu42ug.php(16): explode('', '')\n#1 /tmp/tmps6pu42ug.php(25): is_palindrome('')\n#2 /tmp/tmps6pu42ug.php(29): candidate('')\n#3 /tmp/tmps6pu42ug.php(38): test()\n#4 {main}\n  thrown in /tmp/tmps6pu42ug.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n\n    // Split string into an array\n    $arr = explode(\"\", $text);\n\n    // Reverse array\n    $arr = array_reverse($arr);\n\n    // Check if array is the same as original\n    return $arr === $text;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught ValueError: explode(): Argument #1 ($separator) cannot be empty in /tmp/tmp4wf1c1kf.php:16\nStack trace:\n#0 /tmp/tmp4wf1c1kf.php(16): explode('', '')\n#1 /tmp/tmp4wf1c1kf.php(25): is_palindrome('')\n#2 /tmp/tmp4wf1c1kf.php(29): candidate('')\n#3 /tmp/tmp4wf1c1kf.php(38): test()\n#4 {main}\n  thrown in /tmp/tmp4wf1c1kf.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    if ($text === '') {\n        return true;\n    }\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmplw22apok.php:15\nStack trace:\n#0 /tmp/tmplw22apok.php(19): is_palindrome('aba')\n#1 /tmp/tmplw22apok.php(24): candidate('aba')\n#2 /tmp/tmplw22apok.php(32): test()\n#3 {main}\n  thrown in /tmp/tmplw22apok.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n\n    // Split string into an array\n    $text_arr = explode(\" \", $text);\n\n    // Reverse array\n    $text_arr = array_reverse($text_arr);\n\n    // Check if array is palindrome\n    return ($text_arr == $text);\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps24mm8vd.php:29\nStack trace:\n#0 /tmp/tmps24mm8vd.php(38): test()\n#1 {main}\n  thrown in /tmp/tmps24mm8vd.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = str_replace(\"\\r\\n\", \"\", $text);\n    $text = str_replace(\"\\n\", \"\", $text);\n    $text = str_replace(\"\\r\", \"\", $text);\n    $text = str_replace(\" \", \"\", $text);\n    $text = str_replace(\"\\t\", \"\", $text);\n    $text = str_replace(\"\\x0B\", \"\", $text);\n    $text = str_replace(\"\\x0C\", \"\", $text);\n    $text = str_replace(\"\\x0D\", \"\", $text);\n    $text = str_replace(\"\\x0E\", \"\", $text);\n    $text = str_replace(\"\\x0F\", \"\", $text);\n    $text = str_replace(\"\\x10\", \"\", $text);\n    $text = str_replace(\"\\x11\", \"\", $text);\n    $text = str_replace(\"\\x12\", \"\", $text);\n    $text = str_replace(\"\\x13\", \"\", $text);\n    $text = str_replace(\"\\x14\", \"\", $text);\n    $text = str_replace(\"\\x15\", \"\", $text);\n    $text = str_replace(\"\\x16\", \"\", $text);\n    $text = str_replace(\"\\x17\", \"\", $text);\n    $text = str_replace(\"\\x18\", \"\", $text);\n    $text = str_replace(\"\\x19\", \"\", $text);\n    $text = str_replace(\"\\x1A\", \"\", $text);\n    $text = str_replace(\"\\x1B\", \"\", $text);\n    $text = str_replace(\"\\x1C\", \"\", $text);\n    $text = str_replace(\"\\x1D\", \"\", $text);\n    $text = str_replace(\"\\x1E\", \"\", $text);\n    $text = str_replace(\"\\x1F\", \"\", $text);\n    $text = str_replace(\"\\x7F\", \"\", $text);\n    $text = str_replace(\"\\x80\", \"\", $text);\n    \nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmp8478fsbh.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = str_replace(\"\\r\\n\", \"\", $text);\n    $text = str_replace(\"\\n\", \"\", $text);\n    $text = str_replace(\"\\r\", \"\", $text);\n    $text = str_replace(\" \", \"\", $text);\n    $text = str_replace(\"\\t\", \"\", $text);\n    $text = str_replace(\"\\x0B\", \"\", $text);\n    $text = str_replace(\"\\x0C\", \"\", $text);\n    $text = str_replace(\"\\x0D\", \"\", $text);\n    $text = str_replace(\"\\x0E\", \"\", $text);\n    $text = str_replace(\"\\x0F\", \"\", $text);\n    $text = str_replace(\"\\x10\", \"\", $text);\n    $text = str_replace(\"\\x11\", \"\", $text);\n    $text = str_replace(\"\\x12\", \"\", $text);\n    $text = str_replace(\"\\x13\", \"\", $text);\n    $text = str_replace(\"\\x14\", \"\", $text);\n    $text = str_replace(\"\\x15\", \"\", $text);\n    $text = str_replace(\"\\x16\", \"\", $text);\n    $text = str_replace(\"\\x17\", \"\", $text);\n    $text = str_replace(\"\\x18\", \"\", $text);\n    $text = str_replace(\"\\x19\", \"\", $text);\n    $text = str_replace(\"\\x1A\", \"\", $text);\n    $text = str_replace(\"\\x1B\", \"\", $text);\n    $text = str_replace(\"\\x1C\", \"\", $text);\n    $text = str_replace(\"\\x1D\", \"\", $text);\n    $text = str_replace(\"\\x1E\", \"\", $text);\n    $text = str_replace(\"\\x1F\", \"\", $text);\n    $text = str_replace(\"\\x7F\", \"\", $text);\n    $text = str_replace(\"\\x80\", \"\", $text);\n    \nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmp8478fsbh.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n    // Split string into array\n    $text = explode(\" \", $text);\n    // Check if length is odd\n    if (count($text) % 2 == 0) {\n        return false;\n    }\n    // Check if first and last element are equal\n    return $text[0] == $text[count($text) - 1];\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpei09wv1_.php:31\nStack trace:\n#0 /tmp/tmpei09wv1_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpei09wv1_.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n\n    // Check if string is empty\n    if (strlen($text) == 0) {\n        return true;\n    }\n\n    // Check if string is only one character\n    if (strlen($text) == 1) {\n        return true;\n    }\n\n    // Check if string is a palindrome\n    if ($text == strrev($text)) {\n        return true;\n    }\n\n    // Return false\n    return false;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n\n    // Split into words\n    $words = explode(' ', $text);\n\n    // Check if any words are odd\n    for ($i = 0; $i < $words.length; $i++) {\n        if ($words[$i].length % 2 != 0) {\n            return false;\n        }\n    }\n\n    // Check if any words are even\n    for ($i = 0; $i < $words.length; $i++) {\n        if ($words[$i].length % 2 == 0) {\n            return false;\n        }\n    }\n\n    // Check if any words are odd\n    for ($i = 0; $i < $words.length; $i++) {\n        if ($words[$i].length % 2 != 0) {\n            return false;\n        }\n    }\n\n    // Check if any words are even\n    for ($i = 0; $i < $words.length; $i++) {\n        if ($words[$i].length % 2 == 0) {\n            return false;\n        }\n    }\n\n    // Check if any words are odd\n    for ($i = 0; $i < $words.length; $i++) {\n        if ($words[$i].length % 2 != 0) {\n            return false;\n        }\n    }\n\n    // Check if any words are even\n    for ($i = 0; $i < $words.length; $i++) {\n        if ($words[$i].length % 2 == 0) {\n            return false;\n        }\n    }\n\n    // Check if any words are odd\n    for ($i = 0; $i < $words.length; $i++) {\n        if ($words[$i].length % 2 != 0) {\n            return false;\n        }\n    }\n\n    // Check if any words are even\n    for ($i = 0; $i < $words.length; $i++) {\n        if ($words[$i].length % 2 == 0) {\n            return false;\n        }\n    }\n\n    // Check if any words are odd\n    for ($i = 0; $i < $words.length; $i++) {\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 75 in /tmp/tmpgebo_l5f.php on line 90\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfcf03t1d.php:12\nStack trace:\n#0 /tmp/tmpfcf03t1d.php(16): is_palindrome('')\n#1 /tmp/tmpfcf03t1d.php(20): candidate('')\n#2 /tmp/tmpfcf03t1d.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpfcf03t1d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // trim text\n    $text = $text.trim();\n    // if empty string\n    if ($text == \"\") {\n        return true;\n    }\n    // split string into array\n    $text = $text.split(\"\");\n    // reverse array\n    $text.reverse();\n    // compare array\n    for (var i = 0; i < $text.length; i++) {\n        if ($text[i] != $text[i]) {\n            return false;\n        }\n    }\n    // return true\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpbv7yrb5k.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = $text.toLowerCase();\n    $text = $text.replace(/[^a-z]/g, '');\n    $text = $text.replace(/\\s+/g, '');\n    $text = $text.replace(/^\\s+|\\s+$/g, '');\n    $text = $text.replace(/\\b.{1,}\\b/g, '');\n    $text = $text.replace(/\\b.{2,}\\b/g, '');\n    $text = $text.replace(/\\b.{3,}\\b/g, '');\n    $text = $text.replace(/\\b.{4,}\\b/g, '');\n    $text = $text.replace(/\\b.{5,}\\b/g, '');\n    $text = $text.replace(/\\b.{6,}\\b/g, '');\n    $text = $text.replace(/\\b.{7,}\\b/g, '');\n    $text = $text.replace(/\\b.{8,}\\b/g, '');\n    $text = $text.replace(/\\b.{9,}\\b/g, '');\n    $text = $text.replace(/\\b.{10,}\\b/g, '');\n    $text = $text.replace(/\\b.{11,}\\b/g, '');\n    $text = $text.replace(/\\b.{12,}\\b/g, '');\n    $text = $text.replace(/\\b.{13,}\\b/g, '');\n    $text = $text.replace(/\\b.{14,}\\b/g, '');\n    $text = $text.replace(/\\b.{15,}\\b/g, '');\n    $text = $text.replace(/\\b.{16,}\\b/g, '');\n    $text = $text.replace(/\\b.{17,}\\b/g, '');\n    $text = $text.replace(/\\b.{18,}\\b/g, '');\n    $\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmpz2mn0s50.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // trim text\n    $text = $text.trim();\n\n    // check if empty\n    if ($text === \"\") {\n        return true;\n    }\n\n    // check if odd length\n    if ($text.length % 2 === 1) {\n        return false;\n    }\n\n    // check if first and last characters are the same\n    if ($text[0] === $text[$text.length - 1]) {\n        return true;\n    }\n\n    // check if first and last characters are the same\n    if ($text[0] === $text[$text.length - 1]) {\n        return true;\n    }\n\n    // check if first and last characters are the same\n    if ($text[0] === $text[$text.length - 1]) {\n        return true;\n    }\n\n    // check if first and last characters are the same\n    if ($text[0] === $text[$text.length - 1]) {\n        return true;\n    }\n\n    // check if first and last characters are the same\n    if ($text[0] === $text[$text.length - 1]) {\n        return true;\n    }\n\n    // check if first and last characters are the same\n    if ($text[0] === $text[$text.length - 1]) {\n        return true;\n    }\n\n    // check if first and last characters are the same\n    if ($text[0] === $text[$text.length - 1]) {\n        return true;\n    }\n\n    // check if first and last characters are the same\n    if ($text[0] === $text[$text.length - 1]) {\n        return true;\n    }\n\n    // check if first and last characters are the same\n    if ($text[0] === $text[$text.length - 1]) {\n        return true;\n    }\n\n    // check if first and last characters are the same\n    if ($text[0] === $text[$text.length - 1]) {\n        return true;\n    }\n\n    // check if first and last characters are the same\n    if ($text[0] === $text[$text.length - 1]) {\n        return true;\n    }\n\n    // check if first\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmpkx28f1lf.php on line 95\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // trim\n    $text = $text.trim();\n    // check if empty\n    if ($text == \"\") {\n        return true;\n    }\n    // check if odd length\n    if ($text.length % 2 == 1) {\n        return false;\n    }\n    // check if even length\n    if ($text.length % 2 == 0) {\n        // reverse string\n        $text = $text.split(\"\").reverse().join(\"\");\n        // check if reversed string is equal to original\n        return $text == $text.split(\"\").reverse().join(\"\");\n    }\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught ArgumentCountError: trim() expects at least 1 argument, 0 given in /tmp/tmp9gnvmh0o.php:13\nStack trace:\n#0 /tmp/tmp9gnvmh0o.php(13): trim()\n#1 /tmp/tmp9gnvmh0o.php(31): is_palindrome('')\n#2 /tmp/tmp9gnvmh0o.php(35): candidate('')\n#3 /tmp/tmp9gnvmh0o.php(44): test()\n#4 {main}\n  thrown in /tmp/tmp9gnvmh0o.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n    // Split into words\n    $words = explode(' ', $text);\n    // Check if length is odd\n    if (count_chars($words) % 2 == 1) {\n        return false;\n    }\n    // Check if each word is a palindrome\n    for ($i = 0; $i < count_chars($words); $i++) {\n        if (!is_palindrome($words[$i])) {\n            return false;\n        }\n    }\n    // All words are palindrome\n    return true;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught TypeError: count_chars(): Argument #1 ($string) must be of type string, array given in /tmp/tmpumg8oysd.php:17\nStack trace:\n#0 /tmp/tmpumg8oysd.php(17): count_chars(Array)\n#1 /tmp/tmpumg8oysd.php(30): is_palindrome('')\n#2 /tmp/tmpumg8oysd.php(34): candidate('')\n#3 /tmp/tmpumg8oysd.php(43): test()\n#4 {main}\n  thrown in /tmp/tmpumg8oysd.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // trim text\n    $text = $text.trim();\n\n    // if empty string\n    if ($text === \"\") {\n        return true;\n    }\n\n    // if odd length\n    if ($text.length % 2 === 1) {\n        return false;\n    }\n\n    // reverse text\n    $text = $text.split(\"\").reverse().join(\"\");\n\n    // compare text\n    return $text === $text.split(\"\").reverse().join(\"\");\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught ArgumentCountError: trim() expects at least 1 argument, 0 given in /tmp/tmp_y6xezr1.php:13\nStack trace:\n#0 /tmp/tmp_y6xezr1.php(13): trim()\n#1 /tmp/tmp_y6xezr1.php(33): is_palindrome('')\n#2 /tmp/tmp_y6xezr1.php(37): candidate('')\n#3 /tmp/tmp_y6xezr1.php(46): test()\n#4 {main}\n  thrown in /tmp/tmp_y6xezr1.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    // Convert to lower case\n    $text = strtolower($text);\n    // Split string into an array\n    $text = explode(\" \", $text);\n    // Reverse array\n    $text = array_reverse($text);\n    // Check if array is palindrome\n    return ($text == $text[0]);\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgaf5dbha.php:26\nStack trace:\n#0 /tmp/tmpgaf5dbha.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpgaf5dbha.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = $text.replace(/[^a-zA-Z0-9]/g, '');\n    $text = $text.toLowerCase();\n    $text = $text.split(\"\");\n    for (var i = 0; i < $text.length / 2; i++) {\n        if ($text[i] != $text[$text.length - 1 - i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmpvwpskgiv.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    return $text === $text.split('').reverse().join('');\n}\n\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpkrw9wqd7.php:12\nStack trace:\n#0 /tmp/tmpkrw9wqd7.php(16): is_palindrome('')\n#1 /tmp/tmpkrw9wqd7.php(20): candidate('')\n#2 /tmp/tmpkrw9wqd7.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpkrw9wqd7.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\")\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text) {\n    $text = str_replace(\"\\r\\n\", \"\", $text);\n    $text = str_replace(\"\\n\", \"\", $text);\n    $text = str_replace(\"\\r\", \"\", $text);\n    $text = str_replace(\" \", \"\", $text);\n    $text = str_replace(\"\\t\", \"\", $text);\n    $text = str_replace(\"\\x0B\", \"\", $text);\n    $text = str_replace(\"\\x0C\", \"\", $text);\n    $text = str_replace(\"\\x0D\", \"\", $text);\n    $text = str_replace(\"\\x0E\", \"\", $text);\n    $text = str_replace(\"\\x0F\", \"\", $text);\n    $text = str_replace(\"\\x10\", \"\", $text);\n    $text = str_replace(\"\\x11\", \"\", $text);\n    $text = str_replace(\"\\x12\", \"\", $text);\n    $text = str_replace(\"\\x13\", \"\", $text);\n    $text = str_replace(\"\\x14\", \"\", $text);\n    $text = str_replace(\"\\x15\", \"\", $text);\n    $text = str_replace(\"\\x16\", \"\", $text);\n    $text = str_replace(\"\\x17\", \"\", $text);\n    $text = str_replace(\"\\x18\", \"\", $text);\n    $text = str_replace(\"\\x19\", \"\", $text);\n    $text = str_replace(\"\\x1A\", \"\", $text);\n    $text = str_replace(\"\\x1B\", \"\", $text);\n    $text = str_replace(\"\\x1C\", \"\", $text);\n    $text = str_replace(\"\\x1D\", \"\", $text);\n    $text = str_replace(\"\\x1E\", \"\", $text);\n    $text = str_replace(\"\\x1F\", \"\", $text);\n    $text = str_replace(\"\\x7F\", \"\", $text);\n    $text = str_replace(\"\\x80\", \"\", $text);\n    \nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293299,
      "stdout": "\nParse error: Unclosed '{' on line 11 in /tmp/tmp8478fsbh.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
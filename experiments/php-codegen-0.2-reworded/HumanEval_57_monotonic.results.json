{
  "name": "HumanEval_57_monotonic",
  "language": "php",
  "prompt": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n",
  "tests": "function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l.length == 0) {\n            return true;\n        }\n        if ($l.length == 1) {\n            return true;\n        }\n        if ($l.length == 2) {\n            return $l[0] <= $l[1];\n        }\n        var i = 0;\n        var j = $l.length - 1;\n        while (i < j) {\n            if ($l[i] > $l[j]) {\n                return false;\n            }\n            if ($l[i] < $l[j]) {\n                return true;\n            }\n            i++;\n            j--;\n        }\n        return true;\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpvlafb_g3.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_sort($l);\n            for (int $i = 1; $i < count($l); $i++) {\n                if ($l[$i - 1] > $l[$i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected variable \"$i\", expecting \";\" in /tmp/tmplfpenapk.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l.length == 0) {\n            return true;\n        }\n        if ($l.length == 1) {\n            return true;\n        }\n        if ($l.length == 2) {\n            return $l[0] <= $l[1];\n        }\n        if ($l[0] <= $l[1]) {\n            return true;\n        }\n        if ($l[1] <= $l[2]) {\n            return true;\n        }\n        if ($l[2] <= $l[3]) {\n            return true;\n        }\n        if ($l[3] <= $l[4]) {\n            return true;\n        }\n        if ($l[4] <= $l[5]) {\n            return true;\n        }\n        if ($l[5] <= $l[6]) {\n            return true;\n        }\n        if ($l[6] <= $l[7]) {\n            return true;\n        }\n        if ($l[7] <= $l[8]) {\n            return true;\n        }\n        if ($l[8] <= $l[9]) {\n            return true;\n        }\n        if ($l[9] <= $l[10]) {\n            return true;\n        }\n        if ($l[10] <= $l[11]) {\n            return true;\n        }\n        if ($l[11] <= $l[12]) {\n            return true;\n        }\n        if ($l[12] <= $l[13]) {\n            return true;\n        }\n        if ($l[13] <= $l[14]) {\n            return true;\n        }\n        if ($l[14] <= $l[15]) {\n            return true;\n        }\n        if ($l[15] <= $l[16]) {\n            return true;\n        }\n        if ($l[16] <= $l[17]) {\n            return true;\n        }\n        if ($l[17] <= $l[18]) {\n            return true;\n        }\n        if ($l[18] <= $l[19]) {\n            return true;\n        \nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: Unclosed '{' on line 74 in /tmp/tmpneyh8yfg.php on line 92\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        $a = array_flip($l);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp7_jr4_o_.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = $l.length;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var a = 0;\n    var b = 0;\n    var c = 0;\n    var d = 0;\n    var e = 0;\n    var f = 0;\n    var g = 0;\n    var h = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = $l.length;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var a = 0;\n    var b = 0;\n    var c = 0;\n    var d = 0;\n    var e = 0;\n    var f = 0;\n    var g = 0;\n    var h = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = $l.length;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var a = 0;\n    var b = 0;\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpzdu7d1ba.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, $m = [], $n = [], $p = [], $q = [], $r = [], $s = [], $t = [], $u = [], $v = [], $w = [], $x = [], $y = [], $z = [], $a = [], $b = [], $c = [], $d = [], $e = [], $f = [], $g = [], $h = [], $i = [], $j = [], $k = [], $l = [], $m = [], $n = [], $p = [], $q = [], $r = [], $s = [], $t = [], $u = [], $v = [], $w = [], $x = [], $y = [], $z = [], $a = [], $b = [], $c = [], $d = [], $e = [], $f = [], $g = [], $h = [], $i = [], $j = [], $k = [], $l = [], $m = [], $n = [], $p = [], $q = [], $r = [], $s = [], $t = [], $u = [], $v = [], $w = [], $x = [], $y = [], $z = [], $a = [], $b = [], $c = [], $d = [], $e = [], $f = [], $g = [], $h = [], $i = [], $j = [], $k = [], $l = [], $m = [], $n = [], $p = [], $q = [], $r = [], $s = [], $t = [], $u = [], $v = [], $w = [], $x = [], $y = [], $z = [], $a = [], $b = [], $c = [], $d = [], $e = [], $f = [], $g = [], $h = [], $i = [], $j = [], $k = [], $l = [], $m = [], $\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp5kinwa5i.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var a = 0;\n    var b = 0;\n    var c = 0;\n    var d = 0;\n    var e = 0;\n    var f = 0;\n    var g = 0;\n    var h = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var a = 0;\n    var b = 0;\n    var c = 0;\n    var d = 0;\n    var e = 0;\n    var f = 0;\n    var g = 0;\n    var h = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = 0;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var a = 0;\n    var b = 0;\n    var c = 0;\n    \nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmptubvyebl.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i = 0,\n        l = $l.length,\n        last = $l[0],\n        last_val = last,\n        last_direction = 1;\n\n    for (i = 1; i < l; i++) {\n        if (last_val > $l[i]) {\n            if (last_direction > 0) {\n                return false;\n            }\n            last_direction = 1;\n        } else if (last_val < $l[i]) {\n            if (last_direction < 0) {\n                return false;\n            }\n            last_direction = -1;\n        }\n        last = $l[i];\n        last_val = last;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpzteuqth2.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l[0] === $l[$l.length - 1]) {\n            return true;\n        }\n        if ($l[0] < $l[$l.length - 1]) {\n            return true;\n        }\n        if ($l[0] > $l[$l.length - 1]) {\n            return false;\n        }\n        for (var i = 1; i < $l.length - 1; i++) {\n            if ($l[i] < $l[i - 1] && $l[i] < $l[i + 1]) {\n                return true;\n            }\n            if ($l[i] > $l[i - 1] && $l[i] > $l[i + 1]) {\n                return false;\n            }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp3bz7tnid.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m,\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4oekjtmp.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n\tvar i, j, l = $l.length,\n\t\tm = l - 1,\n\t\ts = 0;\n\n\tfor (i = 0; i < l; i++) {\n\t\tif (s === 0) {\n\t\t\ts = $l[i];\n\t\t} else {\n\t\t\tif ($l[i] < s) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ($l[i] > s) {\n\t\t\t\ts = $l[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp3pq2j1y5.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l[0] > $l[1]) {\n            return false;\n        }\n        if ($l[0] < $l[1]) {\n            return true;\n        }\n        for (var i = 2; i < $l.length; i++) {\n            if ($l[i] < $l[i - 1]) {\n                return false;\n            }\n            if ($l[i] > $l[i - 1]) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpf2wzmst8.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        $a = array_flip($l);\n        $a = array_sort($a, function($x, $y) {\n            return $x - $y;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function($x, $y) {\n            return $x - $y;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function($x, $y) {\n            return $x - $y;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function($x, $y) {\n            return $x - $y;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function($x, $y) {\n            return $x - $y;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function($x, $y) {\n            return $x - $y;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function($x, $y) {\n            return $x - $y;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function($x, $y) {\n            return $x - $y;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function($x, $y) {\n            return $x - $y;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function($x, $y) {\n            return $x - $y;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function($x, $y) {\n            return $x - $y;\n        });\n        $a = array_flip\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp_36x5aaz.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l[0] > $l[1]) {\n            return false;\n        }\n        if ($l[0] < $l[1]) {\n            return true;\n        }\n        for (var i = 2; i < $l.length; i++) {\n            if ($l[i] > $l[i - 1]) {\n                return false;\n            }\n            if ($l[i] < $l[i - 1]) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpim5ud2go.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l[0] > $l[1]) {\n            return false;\n        }\n        if ($l[0] < $l[1]) {\n            return true;\n        }\n        for (var i = 2; i < $l.length; i++) {\n            if ($l[i] < $l[i - 1]) {\n                return false;\n            }\n            if ($l[i] > $l[i - 1]) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpf2wzmst8.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_slice($l, 0, 4);\n        }\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7m_zg4v.php:42\nStack trace:\n#0 /tmp/tmpz7m_zg4v.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpz7m_zg4v.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i = 0,\n        n = $l.length,\n        m = 0,\n        d = 0,\n        a = [],\n        b = [],\n        c = [],\n        d1 = [],\n        d2 = [],\n        d3 = [],\n        d4 = [],\n        d5 = [],\n        d6 = [],\n        d7 = [],\n        d8 = [],\n        d9 = [],\n        d10 = [],\n        d11 = [],\n        d12 = [],\n        d13 = [],\n        d14 = [],\n        d15 = [],\n        d16 = [],\n        d17 = [],\n        d18 = [],\n        d19 = [],\n        d20 = [],\n        d21 = [],\n        d22 = [],\n        d23 = [],\n        d24 = [],\n        d25 = [],\n        d26 = [],\n        d27 = [],\n        d28 = [],\n        d29 = [],\n        d30 = [],\n        d31 = [],\n        d32 = [],\n        d33 = [],\n        d34 = [],\n        d35 = [],\n        d36 = [],\n        d37 = [],\n        d38 = [],\n        d39 = [],\n        d40 = [],\n        d41 = [],\n        d42 = [],\n        d43 = [],\n        d44 = [],\n        d45 = [],\n        d46 = [],\n        d47 = [],\n        d48 = [],\n        d49 = [],\n        d50 = [],\n        d51 = [],\n        d52 = [],\n        d53 = [],\n        d54 = [],\n        d55 = [],\n        d56 = [],\n        d57 = [],\n        d58 = [],\n        d59 = [],\n        d60 = [],\n        d61 = [],\n        d62 = [],\n        d63 = [],\n        d64 = [],\n        d65 = [],\n        d66 = [],\n        d67 =\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpzyb41xru.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] < $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] < $l[1] && $l[1] < $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5] && $l[5] < $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5] && $l[5] < $l[6] && $l[6] < $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] < $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpxf9jtmrg.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 0) {\n            return true;\n        }\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c,\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp0llcpia1.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        $l = array_sort($l);\n        $l[0] = $l[0];\n        $l[count($l) - 1] = $l[count($l) - 1];\n        $l[0] = $l[0];\n        $l[count($l) - 1] = $l[count($l) - 1];\n        $l[0] = $l[0];\n        $l[count($l) - 1] = $l[count($l) - 1];\n        $l[0] = $l[0];\n        $l[count($l) - 1] = $l[count($l) - 1];\n        $l[0] = $l[0];\n        $l[count($l) - 1] = $l[count($l) - 1];\n        $l[0] = $l[0];\n        $l[count($l) - 1] = $l[count($l) - 1];\n        $l[0] = $l[0];\n        $l[count($l) - 1] = $l[count($l) - 1];\n        $l[0] = $l[0];\n        $l[count($l) - 1] = $l[count($l) - 1];\n        $l[0] = $l[0];\n        $l[count($l) - 1] = $l[count($l) - 1];\n        $l[0] = $l[0];\n        $l[count($l) - 1] = $l[count($l) - 1];\n        $l[0] = $l[0];\n        $l[count($l) - 1] = $l[count($l) - 1];\n        $l[0] = $l[0];\n        $l[count($l) - 1] = $l[count($l) - 1];\n        $l[0] = $l[0];\n        $l[count($l) - 1] = $l[count($l) - 1];\n        $\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpv0cw1f_4.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_slice($l, 0, 4);\n        }\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmprmqs9fl5.php on line 52\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 0) {\n            return false;\n        }\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            for (var i = 0; i < count($l) - 1; i++) {\n                if ($l[i] > $l[i + 1]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpznk32p63.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] <= $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0uomniub.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        $l = array_sort($l);\n        if (count($l) == 2) {\n            return $l[0] == $l[1];\n        }\n        if ($l[0] == $l[1]) {\n            return true;\n        }\n        if ($l[0] < $l[1]) {\n            return true;\n        }\n        return false;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp_wiby3rv.php:14\nStack trace:\n#0 /tmp/tmp_wiby3rv.php(30): monotonic(Array)\n#1 /tmp/tmp_wiby3rv.php(34): candidate(Array)\n#2 /tmp/tmp_wiby3rv.php(44): test()\n#3 {main}\n  thrown in /tmp/tmp_wiby3rv.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i = 1,\n        j = 2,\n        k = 3,\n        l = 4,\n        m = 5,\n        n = 6,\n        o = 7,\n        p = 8,\n        q = 9,\n        r = 10,\n        s = 11,\n        t = 12,\n        u = 13,\n        v = 14,\n        w = 15,\n        x = 16,\n        y = 17,\n        z = 18,\n        a = 19,\n        b = 20,\n        c = 21,\n        d = 22,\n        e = 23,\n        f = 24,\n        g = 25,\n        h = 26,\n        i = 27,\n        j = 28,\n        k = 29,\n        l = 30,\n        m = 31,\n        n = 32,\n        o = 33,\n        p = 34,\n        q = 35,\n        r = 36,\n        s = 37,\n        t = 38,\n        u = 39,\n        v = 40,\n        w = 41,\n        x = 42,\n        y = 43,\n        z = 44,\n        a = 45,\n        b = 46,\n        c = 47,\n        d = 48,\n        e = 49,\n        f = 50,\n        g = 51,\n        h = 52,\n        i = 53,\n        j = 54,\n        k = 55,\n        l = 56,\n        m = 57,\n        n = 58,\n        o = 59,\n        p = 60,\n        q = 61,\n        r = 62,\n        s = 63,\n        t = 64,\n        u = 65,\n        v = 66,\n        w = 67,\n        x = 68,\n        y = 69,\n        z = 70,\n        a = 71,\n        b = 72,\n        c = 73,\n        d = 74,\n        e = 75,\n        f = 76,\n        g = 77,\n        h = 78,\n        i = 79,\n        j = 80,\n        k = 81,\n        l = 82,\n        m = 83,\n        n = 84,\n        o = 85,\n        \nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpsu5bbo9a.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $n = $l.length;\n    var $m = 0;\n    var $s = 0;\n    var $t = 0;\n    var $r = true;\n    while ($i < $n) {\n        $m = $l[$i];\n        $s = $m;\n        $t = $i;\n        $i++;\n        while ($i < $n && $l[$i] < $m) {\n            $m = $l[$i];\n            $i++;\n        }\n        if ($i == $t) {\n            $r = true;\n        } else {\n            $r = false;\n            break;\n        }\n    }\n    return $r;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpjss2_c4_.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $m = false;\n    var $n = $l.length;\n    while ($i < $n) {\n        if ($l[$i] < $l[$i + 1]) {\n            $m = true;\n        } else if ($l[$i] > $l[$i + 1]) {\n            $m = false;\n        }\n        $i++;\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpjcwpaki5.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_sort($l);\n            $l = array_slice($l, 0, 4);\n            $l = array_sort($l);\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdziww6r4.php:41\nStack trace:\n#0 /tmp/tmpdziww6r4.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpdziww6r4.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $n = $l.length;\n    while ($i < $n) {\n        if ($l[$i] < $l[$i + 1]) {\n            return true;\n        }\n        if ($l[$i] > $l[$i + 1]) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1rhjfwpy.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] <= $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0uomniub.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m,\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4oekjtmp.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_slice($l, 0, 4);\n        }\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7m_zg4v.php:42\nStack trace:\n#0 /tmp/tmpz7m_zg4v.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpz7m_zg4v.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] <= $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0uomniub.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a - $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b - $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a * $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b * $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a + $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b + $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a - $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b - $a;\n        });\n        return $l[0] == $l[$l.length - 1];\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp13yd6vdv.php:12\nStack trace:\n#0 /tmp/tmp13yd6vdv.php(48): monotonic(Array)\n#1 /tmp/tmp13yd6vdv.php(52): candidate(Array)\n#2 /tmp/tmp13yd6vdv.php(62): test()\n#3 {main}\n  thrown in /tmp/tmp13yd6vdv.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_sort($l);\n            for (int $i = 0; $i < count($l) - 1; $i++) {\n                if ($l[$i] > $l[$i + 1]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected variable \"$i\", expecting \";\" in /tmp/tmpgddokdng.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 0) {\n            return false;\n        }\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] < $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] < $l[1] && $l[1] < $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5] && $l[5] < $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5] && $l[5] < $l[6] && $l[6] < $l[7];\n        }\n        if (count($l\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp7w_o_zn7.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i = 1;\n    var $m = 0;\n    var $n = 0;\n    var $p = 0;\n    var $q = 0;\n    var $r = 0;\n    var $s = 0;\n    var $t = 0;\n    var $u = 0;\n    var $v = 0;\n    var $w = 0;\n    var $x = 0;\n    var $y = 0;\n    var $z = 0;\n    var $a = 0;\n    var $b = 0;\n    var $c = 0;\n    var $d = 0;\n    var $e = 0;\n    var $f = 0;\n    var $g = 0;\n    var $h = 0;\n    var $i = 0;\n    var $j = 0;\n    var $k = 0;\n    var $l = 0;\n    var $m = 0;\n    var $n = 0;\n    var $p = 0;\n    var $q = 0;\n    var $r = 0;\n    var $s = 0;\n    var $t = 0;\n    var $u = 0;\n    var $v = 0;\n    var $w = 0;\n    var $x = 0;\n    var $y = 0;\n    var $z = 0;\n    var $a = 0;\n    var $b = 0;\n    var $c = 0;\n    var $d = 0;\n    var $e = 0;\n    var $f = 0;\n    var $g = 0;\n    var $h = 0;\n    var $i = 0;\n    var $j = 0;\n    var $k = 0;\n    var $l = 0;\n    var $m = 0;\n    var $n = 0;\n    var $p = 0;\n    var $q = 0;\n    var $r = 0;\n    var $s = 0;\n    var $t = 0;\n    var $u = 0;\n    var $v = 0;\n    var $w = 0;\n    var $x = 0;\n    var $y = 0;\n    var $z = 0;\n    \nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpj63xzsjf.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        $l = array_values($l);\n        if (count($l) < 2) {\n            return true;\n        }\n        $l = array_sort($l);\n        if ($l[0] == $l[count($l) - 1]) {\n            return true;\n        }\n        return false;\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp8tjuhspv.php:15\nStack trace:\n#0 /tmp/tmp8tjuhspv.php(24): monotonic(Array)\n#1 /tmp/tmp8tjuhspv.php(28): candidate(Array)\n#2 /tmp/tmp8tjuhspv.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp8tjuhspv.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] <= $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0uomniub.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l.length == 0) {\n            return true;\n        }\n        if ($l.length == 1) {\n            return true;\n        }\n        if ($l.length == 2) {\n            return $l[0] <= $l[1];\n        }\n        if ($l[0] <= $l[1]) {\n            return true;\n        }\n        if ($l[1] <= $l[2]) {\n            return true;\n        }\n        if ($l[2] <= $l[3]) {\n            return true;\n        }\n        if ($l[3] <= $l[4]) {\n            return true;\n        }\n        if ($l[4] <= $l[5]) {\n            return true;\n        }\n        if ($l[5] <= $l[6]) {\n            return true;\n        }\n        if ($l[6] <= $l[7]) {\n            return true;\n        }\n        if ($l[7] <= $l[8]) {\n            return true;\n        }\n        if ($l[8] <= $l[9]) {\n            return true;\n        }\n        if ($l[9] <= $l[10]) {\n            return true;\n        }\n        if ($l[10] <= $l[11]) {\n            return true;\n        }\n        if ($l[11] <= $l[12]) {\n            return true;\n        }\n        if ($l[12] <= $l[13]) {\n            return true;\n        }\n        if ($l[13] <= $l[14]) {\n            return true;\n        }\n        if ($l[14] <= $l[15]) {\n            return true;\n        }\n        if ($l[15] <= $l[16]) {\n            return true;\n        }\n        if ($l[16] <= $l[17]) {\n            return true;\n        }\n        if ($l[17] <= $l[18]) {\n            return true;\n        }\n        if ($l[18] <= $l[19]) {\n            return true;\n        \nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: Unclosed '{' on line 74 in /tmp/tmpneyh8yfg.php on line 92\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i = 1;\n    var $m = $l.length;\n    var $a = $l[0];\n    var $b = $l[1];\n    while (i < $m) {\n        if ($a < $b) {\n            $a = $b;\n            $b = $l[i];\n            i++;\n        } else if ($a > $b) {\n            return false;\n        } else {\n            $a = $b;\n            $b = $l[i];\n            i++;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp9n08hka6.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_sort($l);\n            for (int $i = 1; $i < count($l); $i++) {\n                if ($l[$i] < $l[$i - 1]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected variable \"$i\", expecting \";\" in /tmp/tmpsjolg67e.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m,\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4oekjtmp.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        $l = array_sort($l);\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        $l = array_sort($l, function($a, $b) {\n            return $a - $b;\n        });\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        return false;\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpqzoaglv7.php:14\nStack trace:\n#0 /tmp/tmpqzoaglv7.php(29): monotonic(Array)\n#1 /tmp/tmpqzoaglv7.php(33): candidate(Array)\n#2 /tmp/tmpqzoaglv7.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpqzoaglv7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 0) {\n            return false;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) > 3) {\n            $l = array_sort($l);\n            for (int $i = 1; $i < count($l); $i++) {\n                if ($l[$i - 1] > $l[$i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected variable \"$i\", expecting \";\" in /tmp/tmpy8udeq8n.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        $l = array_sort($l);\n        $prev = $l[0];\n        $i = 1;\n        while ($i < count($l)) {\n            if ($l[$i] < $prev) {\n                return false;\n            }\n            $prev = $l[$i];\n            $i++;\n        }\n        return true;\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpal5kdapo.php:14\nStack trace:\n#0 /tmp/tmpal5kdapo.php(29): monotonic(Array)\n#1 /tmp/tmpal5kdapo.php(33): candidate(Array)\n#2 /tmp/tmpal5kdapo.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpal5kdapo.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_sort($l);\n            for (int $i = 1; $i < count($l); $i++) {\n                if ($l[$i] < $l[$i - 1]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected variable \"$i\", expecting \";\" in /tmp/tmpsjolg67e.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l[0] > $l[1]) {\n            return false;\n        }\n        if ($l[0] < $l[1]) {\n            return true;\n        }\n        return monotonic($l[2:]);\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \":\", expecting \"]\" in /tmp/tmp4o5uqo3k.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] <= $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0uomniub.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, $m = [], $n = [];\n    for (i = 0; i < $l.length; i++) {\n        $m.push($l[i]);\n    }\n    for (i = 0; i < $l.length; i++) {\n        $n.push($l[i]);\n    }\n    for (i = 0; i < $l.length; i++) {\n        for (j = 0; j < $l.length - 1; j++) {\n            if ($m[j] > $m[j + 1]) {\n                $m[j] = $m[j + 1];\n            }\n            if ($n[j] > $n[j + 1]) {\n                $n[j] = $n[j + 1];\n            }\n        }\n    }\n    for (i = 0; i < $l.length; i++) {\n        if ($m[i] < $n[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpf1vg0ubs.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $n = $l.length;\n    var $m = $n - 1;\n    var $a = $l[0];\n    var $b = $l[$m];\n    var $c = $l[$i];\n    var $d = $l[$i + 1];\n    var $e = $l[$i + 2];\n    var $f = $l[$i + 3];\n    var $g = $l[$i + 4];\n    var $h = $l[$i + 5];\n    var $i = $i + 1;\n    var $j = $i + 1;\n    var $k = $i + 1;\n    var $l = $i + 1;\n    var $m = $i + 1;\n    var $n = $i + 1;\n    var $o = $i + 1;\n    var $p = $i + 1;\n    var $q = $i + 1;\n    var $r = $i + 1;\n    var $s = $i + 1;\n    var $t = $i + 1;\n    var $u = $i + 1;\n    var $v = $i + 1;\n    var $w = $i + 1;\n    var $x = $i + 1;\n    var $y = $i + 1;\n    var $z = $i + 1;\n    var $A = $i + 1;\n    var $B = $i + 1;\n    var $C = $i + 1;\n    var $D = $i + 1;\n    var $E = $i + 1;\n    var $F = $i + 1;\n    var $G = $i + 1;\n    var $H = $i + 1;\n    var $I = $i + 1;\n    var $J = $i + 1;\n    var $K = $i + 1;\n    var $L = $i + 1;\n    var $M = $i + 1;\n    var $N = $i + 1;\n    var $O = $i + 1;\n    var $P = $i + 1;\n    var $\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpnlviipox.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m,\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4oekjtmp.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $n = $l.length;\n    var $m = 0;\n    var $c = 0;\n    var $d = 0;\n    var $r = true;\n    while ($i < $n) {\n        if ($l[$i] < $l[$i + 1]) {\n            $m++;\n        } else if ($l[$i] > $l[$i + 1]) {\n            $m--;\n        } else {\n            $m = 0;\n        }\n        if ($m < 0) {\n            $c++;\n        } else if ($m > 0) {\n            $c--;\n        } else {\n            $c = 0;\n        }\n        if ($c < 0) {\n            $d++;\n        } else if ($c > 0) {\n            $d--;\n        } else {\n            $d = 0;\n        }\n        if ($d < 0) {\n            $r = false;\n            break;\n        }\n        $i++;\n    }\n    return $r;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkta8bgzs.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $j = 0;\n    var $m = false;\n    var $n = 0;\n    var $p = 0;\n    var $q = 0;\n    var $r = 0;\n    var $s = 0;\n    var $t = 0;\n    var $u = 0;\n    var $v = 0;\n    var $w = 0;\n    var $x = 0;\n    var $y = 0;\n    var $z = 0;\n    var $a = 0;\n    var $b = 0;\n    var $c = 0;\n    var $d = 0;\n    var $e = 0;\n    var $f = 0;\n    var $g = 0;\n    var $h = 0;\n    var $i = 0;\n    var $j = 0;\n    var $k = 0;\n    var $l = 0;\n    var $m = 0;\n    var $n = 0;\n    var $p = 0;\n    var $q = 0;\n    var $r = 0;\n    var $s = 0;\n    var $t = 0;\n    var $u = 0;\n    var $v = 0;\n    var $w = 0;\n    var $x = 0;\n    var $y = 0;\n    var $z = 0;\n    var $a = 0;\n    var $b = 0;\n    var $c = 0;\n    var $d = 0;\n    var $e = 0;\n    var $f = 0;\n    var $g = 0;\n    var $h = 0;\n    var $i = 0;\n    var $j = 0;\n    var $k = 0;\n    var $l = 0;\n    var $m = 0;\n    var $n = 0;\n    var $p = 0;\n    var $q = 0;\n    var $r = 0;\n    var $s = 0;\n    var $t = 0;\n    var $u = 0;\n    var $v = 0;\n    var $w = 0;\n    var $x = 0;\n    var $y = 0;\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpcvj5ouui.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] <= $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0uomniub.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        $a = array_flip($l);\n        $a = array_sort($a, function ($a, $b) {\n            return $a - $b;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function ($a, $b) {\n            return $a - $b;\n        });\n        return $a == $l;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmph0zd49jn.php:15\nStack trace:\n#0 /tmp/tmph0zd49jn.php(28): monotonic(Array)\n#1 /tmp/tmph0zd49jn.php(32): candidate(Array)\n#2 /tmp/tmph0zd49jn.php(42): test()\n#3 {main}\n  thrown in /tmp/tmph0zd49jn.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, $m = 0, $n = 0, $s = 0, $t = 0, $u = 0, $v = 0, $w = 0, $x = 0, $y = 0, $z = 0;\n    for (i = 0; i < $l.length; i++) {\n        if ($l[i] > $m) {\n            $m = $l[i];\n            $n = i;\n        }\n        if ($l[i] < $s) {\n            $s = $l[i];\n            $t = i;\n        }\n        if ($l[i] > $u) {\n            $u = $l[i];\n            $v = i;\n        }\n        if ($l[i] < $w) {\n            $w = $l[i];\n            $x = i;\n        }\n        if ($l[i] > $y) {\n            $y = $l[i];\n            $z = i;\n        }\n    }\n    if ($m === $s) {\n        return true;\n    }\n    if ($m === $u) {\n        return true;\n    }\n    if ($m === $w) {\n        return true;\n    }\n    if ($m === $y) {\n        return true;\n    }\n    if ($m === $z) {\n        return true;\n    }\n    if ($s === $u) {\n        return true;\n    }\n    if ($s === $w) {\n        return true;\n    }\n    if ($s === $y) {\n        return true;\n    }\n    if ($s === $z) {\n        return true;\n    }\n    if ($u === $w) {\n        return true;\n    }\n    if ($u === $y) {\n        return true;\n    }\n    if ($u === $z) {\n        return true;\n    }\n    if ($w === $y) {\n        return true;\n    }\n    if ($w === $z) {\n        return true;\n    }\n    if ($y === $z) {\n        return true;\n    }\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp1ig1vjy2.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $m = 0;\n    var $n = 0;\n    var $s = 0;\n    var $t = 0;\n    var $u = 0;\n    var $v = 0;\n    var $w = 0;\n    var $x = 0;\n    var $y = 0;\n    var $z = 0;\n    var $a = 0;\n    var $b = 0;\n    var $c = 0;\n    var $d = 0;\n    var $e = 0;\n    var $f = 0;\n    var $g = 0;\n    var $h = 0;\n    var $i = 0;\n    var $j = 0;\n    var $k = 0;\n    var $l = 0;\n    var $m = 0;\n    var $n = 0;\n    var $o = 0;\n    var $p = 0;\n    var $q = 0;\n    var $r = 0;\n    var $s = 0;\n    var $t = 0;\n    var $u = 0;\n    var $v = 0;\n    var $w = 0;\n    var $x = 0;\n    var $y = 0;\n    var $z = 0;\n    var $a = 0;\n    var $b = 0;\n    var $c = 0;\n    var $d = 0;\n    var $e = 0;\n    var $f = 0;\n    var $g = 0;\n    var $h = 0;\n    var $i = 0;\n    var $j = 0;\n    var $k = 0;\n    var $l = 0;\n    var $m = 0;\n    var $n = 0;\n    var $o = 0;\n    var $p = 0;\n    var $q = 0;\n    var $r = 0;\n    var $s = 0;\n    var $t = 0;\n    var $u = 0;\n    var $v = 0;\n    var $w = 0;\n    var $x = 0;\n    var $y = 0;\n    var $z = 0;\n    var $a = 0;\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp7zy3dqjh.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] <= $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0uomniub.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        $l = array_sort($l);\n        $l[0] = $l[0];\n        $l[count($l) - 1] = $l[count($l) - 1];\n        for (int $i = 1; $i < count($l); $i++) {\n            if ($l[$i - 1] > $l[$i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected variable \"$i\", expecting \";\" in /tmp/tmpzyyrecs4.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (!is_array($l)) {\n        return false;\n    }\n    if (count($l) < 2) {\n        return true;\n    }\n    $l = array_sort($l);\n    $l[0] = $l[0];\n    $l[count($l) - 1] = $l[count($l) - 1];\n    for (int $i = 1; $i < count($l) - 1; $i++) {\n        if ($l[$i] < $l[$i - 1] && $l[$i] < $l[$i + 1]) {\n            return false;\n        }\n        if ($l[$i] > $l[$i - 1] && $l[$i] > $l[$i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected variable \"$i\", expecting \";\" in /tmp/tmpw08biiy0.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a - $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b - $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a * $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b * $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a / $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b / $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a % $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b % $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a + $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b + $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a - $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpgnil17d9.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l[0] > $l[1]) {\n            return false;\n        }\n        if ($l[0] < $l[1]) {\n            return true;\n        }\n        for (var i = 2; i < $l.length; i++) {\n            if ($l[i] < $l[i - 1]) {\n                return false;\n            }\n            if ($l[i] > $l[i - 1]) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpf2wzmst8.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (!is_array($l)) {\n        return false;\n    }\n    if (count($l) < 2) {\n        return true;\n    }\n    $a = array_flip($l);\n    $a = array_sort($a, function ($x, $y) {\n        return $x - $y;\n    });\n    $a = array_flip($a);\n    $a = array_sort($a, function ($x, $y) {\n        return $y - $x;\n    });\n    return $a[0] < $a[count($a) - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7yhzeg0g.php:17\nStack trace:\n#0 /tmp/tmp7yhzeg0g.php(28): monotonic(Array)\n#1 /tmp/tmp7yhzeg0g.php(32): candidate(Array)\n#2 /tmp/tmp7yhzeg0g.php(42): test()\n#3 {main}\n  thrown in /tmp/tmp7yhzeg0g.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] <= $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0uomniub.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] < $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] < $l[1] && $l[1] < $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5] && $l[5] < $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5] && $l[5] < $l[6] && $l[6] < $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] < $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpxf9jtmrg.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a - $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b - $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a < $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b < $a;\n        });\n        $l = array_flip($l);\n        return $l[0] === $l[$l.length - 1];\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpf1x8djv_.php:12\nStack trace:\n#0 /tmp/tmpf1x8djv_.php(34): monotonic(Array)\n#1 /tmp/tmpf1x8djv_.php(38): candidate(Array)\n#2 /tmp/tmpf1x8djv_.php(48): test()\n#3 {main}\n  thrown in /tmp/tmpf1x8djv_.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpbq6b9ajj.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] <= $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0uomniub.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m,\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4oekjtmp.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $j = 0;\n    var $m = 0;\n    var $n = 0;\n    var $o = 0;\n    var $p = 0;\n    var $q = 0;\n    var $r = 0;\n    var $s = 0;\n    var $t = 0;\n    var $u = 0;\n    var $v = 0;\n    var $w = 0;\n    var $x = 0;\n    var $y = 0;\n    var $z = 0;\n    var $a = 0;\n    var $b = 0;\n    var $c = 0;\n    var $d = 0;\n    var $e = 0;\n    var $f = 0;\n    var $g = 0;\n    var $h = 0;\n    var $i = 0;\n    var $j = 0;\n    var $k = 0;\n    var $l = 0;\n    var $m = 0;\n    var $n = 0;\n    var $o = 0;\n    var $p = 0;\n    var $q = 0;\n    var $r = 0;\n    var $s = 0;\n    var $t = 0;\n    var $u = 0;\n    var $v = 0;\n    var $w = 0;\n    var $x = 0;\n    var $y = 0;\n    var $z = 0;\n    var $a = 0;\n    var $b = 0;\n    var $c = 0;\n    var $d = 0;\n    var $e = 0;\n    var $f = 0;\n    var $g = 0;\n    var $h = 0;\n    var $i = 0;\n    var $j = 0;\n    var $k = 0;\n    var $l = 0;\n    var $m = 0;\n    var $n = 0;\n    var $o = 0;\n    var $p = 0;\n    var $q = 0;\n    var $r = 0;\n    var $s = 0;\n    var $t = 0;\n    var $u = 0;\n    var $v = 0;\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpgn9z0qii.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l[0] > $l[1]) {\n            return false;\n        }\n        if ($l[0] < $l[1]) {\n            return true;\n        }\n        for (var i = 2; i < $l.length; i++) {\n            if ($l[i] < $l[i - 1]) {\n                return false;\n            }\n            if ($l[i] > $l[i - 1]) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpf2wzmst8.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l.length < 2) {\n            return true;\n        }\n        if ($l.length == 2) {\n            return $l[0] <= $l[1];\n        }\n        var i = 1;\n        while (i < $l.length) {\n            if ($l[i] <= $l[i - 1]) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpvzquwge9.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = $l.length;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var a = 0;\n    var b = 0;\n    var c = 0;\n    var d = 0;\n    var e = 0;\n    var f = 0;\n    var g = 0;\n    var h = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = $l.length;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var a = 0;\n    var b = 0;\n    var c = 0;\n    var d = 0;\n    var e = 0;\n    var f = 0;\n    var g = 0;\n    var h = 0;\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var l = $l.length;\n    var m = 0;\n    var n = 0;\n    var o = 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    var a = 0;\n    var b = 0;\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpzdu7d1ba.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l.length == 0) {\n            return true;\n        }\n        if ($l.length == 1) {\n            return true;\n        }\n        if ($l.length == 2) {\n            return $l[0] <= $l[1];\n        }\n        var i = 1;\n        while (i < $l.length) {\n            if ($l[i] < $l[i - 1]) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpxza7twac.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] <= $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0uomniub.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        $l = array_sort($l);\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        $l = array_sort($l, function($a, $b) {\n            return $a - $b;\n        });\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        return false;\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpqzoaglv7.php:14\nStack trace:\n#0 /tmp/tmpqzoaglv7.php(29): monotonic(Array)\n#1 /tmp/tmpqzoaglv7.php(33): candidate(Array)\n#2 /tmp/tmpqzoaglv7.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpqzoaglv7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $n = $l.length;\n    var $m = 0;\n    var $d = 0;\n    var $o = 0;\n    var $p = 0;\n    var $q = 0;\n    var $r = 0;\n    var $s = 0;\n    var $t = 0;\n    var $u = 0;\n    var $v = 0;\n    var $w = 0;\n    var $x = 0;\n    var $y = 0;\n    var $z = 0;\n    var $a = 0;\n    var $b = 0;\n    var $c = 0;\n    var $d = 0;\n    var $e = 0;\n    var $f = 0;\n    var $g = 0;\n    var $h = 0;\n    var $i = 0;\n    var $j = 0;\n    var $k = 0;\n    var $l = 0;\n    var $m = 0;\n    var $n = 0;\n    var $o = 0;\n    var $p = 0;\n    var $q = 0;\n    var $r = 0;\n    var $s = 0;\n    var $t = 0;\n    var $u = 0;\n    var $v = 0;\n    var $w = 0;\n    var $x = 0;\n    var $y = 0;\n    var $z = 0;\n    var $a = 0;\n    var $b = 0;\n    var $c = 0;\n    var $d = 0;\n    var $e = 0;\n    var $f = 0;\n    var $g = 0;\n    var $h = 0;\n    var $i = 0;\n    var $j = 0;\n    var $k = 0;\n    var $l = 0;\n    var $m = 0;\n    var $n = 0;\n    var $o = 0;\n    var $p = 0;\n    var $q = 0;\n    var $r = 0;\n    var $s = 0;\n    var $t = 0;\n    var $u = 0;\n    var $v =\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpluqzhksu.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a - $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b - $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a * $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b * $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a / $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b / $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a % $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b % $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a < $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b < $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a > $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpol6fjduq.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        $l = array_sort($l);\n        if (count($l) < 2) {\n            return true;\n        }\n        $l = array_slice($l, 0, count($l) - 1);\n        $l = array_sort($l);\n        if (count($l) < 2) {\n            return true;\n        }\n        $l = array_slice($l, 0, count($l) - 1);\n        $l = array_sort($l);\n        if (count($l) < 2) {\n            return true;\n        }\n        $l = array_slice($l, 0, count($l) - 1);\n        $l = array_sort($l);\n        if (count($l) < 2) {\n            return true;\n        }\n        $l = array_slice($l, 0, count($l) - 1);\n        $l = array_sort($l);\n        if (count($l) < 2) {\n            return true;\n        }\n        $l = array_slice($l, 0, count($l) - 1);\n        $l = array_sort($l);\n        if (count($l) < 2) {\n            return true;\n        }\n        $l = array_slice($l, 0, count($l) - 1);\n        $l = array_sort($l);\n        if (count($l) < 2) {\n            return true;\n        }\n        $l = array_slice($l, 0, count($l) - 1);\n        $l = array_sort($l);\n        if (count($l) < 2) {\n            return true;\n        }\n        $l = array_slice($l, 0, count($l) - 1);\n        $l = array_sort($l);\n        if (count($l) < 2) {\n            return true;\n        }\n        $l = array_slice($l, 0, count($l) - 1);\n        $l = array_sort($l);\n        if (count($l) < 2) {\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: Unclosed '{' on line 60 in /tmp/tmpagzwlfzr.php on line 76\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i = 0,\n        l = $l.length,\n        prev = $l[0];\n    for (; i < l; i++) {\n        if ($l[i] < prev) {\n            return false;\n        }\n        prev = $l[i];\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpfjbr5jyg.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (!is_array($l)) {\n        return false;\n    }\n    if (count($l) < 2) {\n        return true;\n    }\n    $prev = $l[0];\n    $prev_index = 0;\n    $prev_value = $l[0];\n    $prev_diff = $l[0] - $l[1];\n    for ($i = 1; $i < count($l); $i++) {\n        $curr = $l[$i];\n        $curr_index = $i;\n        $curr_value = $l[$i];\n        $curr_diff = $l[$i] - $l[$i - 1];\n        if ($prev_diff < 0 && $curr_diff > 0) {\n            return false;\n        }\n        if ($prev_diff > 0 && $curr_diff < 0) {\n            return false;\n        }\n        if ($prev_diff < 0 && $curr_diff < 0) {\n            return false;\n        }\n        if ($prev_diff > 0 && $curr_diff > 0) {\n            return false;\n        }\n        if ($prev_value < $curr_value) {\n            return false;\n        }\n        if ($prev_value > $curr_value) {\n            return false;\n        }\n        $prev_diff = $curr_diff;\n        $prev_value = $curr_value;\n        $prev_index = $curr_index;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptq_rukvm.php:55\nStack trace:\n#0 /tmp/tmptq_rukvm.php(65): test()\n#1 {main}\n  thrown in /tmp/tmptq_rukvm.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_sort($l);\n            for (int $i = 0; $i < count($l) - 1; $i++) {\n                if ($l[$i] > $l[$i + 1]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected variable \"$i\", expecting \";\" in /tmp/tmpgddokdng.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i = 1;\n    while (i < $l.length) {\n        if ($l[i] < $l[i - 1]) {\n            return false;\n        }\n        i++;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpfje9t55h.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l.length == 1) {\n            return true;\n        }\n        if ($l.length == 2) {\n            return $l[0] < $l[1];\n        }\n        if ($l.length == 3) {\n            return $l[0] < $l[1] && $l[1] < $l[2];\n        }\n        if ($l.length == 4) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3];\n        }\n        if ($l.length == 5) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4];\n        }\n        if ($l.length == 6) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5];\n        }\n        if ($l.length == 7) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5] && $l[5] < $l[6];\n        }\n        if ($l.length == 8) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5] && $l[5] < $l[6] && $l[6] < $l[7];\n        }\n        if ($l.length == 9) {\n            return $l[0] < $l[1] && $l[1] < $l[\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp_uhev2ss.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpbq6b9ajj.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 0) {\n            return true;\n        }\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 0) {\n            return false;\n        }\n        if (count($l) == 2) {\n            return $l[0] < $l[1];\n        }\n        if (count($l) > 2) {\n            $l = array_sort($l);\n            if ($l[0] < $l[count($l) - 1]) {\n                return true;\n            }\n            if ($l[count($l) - 1] < $l[count($l) - 2]) {\n                return false;\n            }\n            return monotonic($l);\n        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp8g0cbqlg.php:21\nStack trace:\n#0 /tmp/tmp8g0cbqlg.php(34): monotonic(Array)\n#1 /tmp/tmp8g0cbqlg.php(38): candidate(Array)\n#2 /tmp/tmp8g0cbqlg.php(48): test()\n#3 {main}\n  thrown in /tmp/tmp8g0cbqlg.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l.length == 0) {\n            return true;\n        }\n        if ($l.length == 1) {\n            return true;\n        }\n        if ($l[0] == $l[$l.length - 1]) {\n            return true;\n        }\n        if ($l[0] > $l[$l.length - 1]) {\n            return false;\n        }\n        return monotonic($l[1:]);\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \":\", expecting \"]\" in /tmp/tmp5exi9nsp.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l, function($a, $b) {\n            return $a - $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function($a, $b) {\n            return $b - $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function($a, $b) {\n            return $a * $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function($a, $b) {\n            return $b * $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function($a, $b) {\n            return $a + $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function($a, $b) {\n            return $b + $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function($a, $b) {\n            return $a / $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function($a, $b) {\n            return $b / $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function($a, $b) {\n            return $a % $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function($a, $b) {\n            return $b % $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function($a, $b) {\n            return $a < $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function($a, $b\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpdd9oq07b.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 0) {\n            return false;\n        }\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            for (var i = 0; i < count($l) - 1; i++) {\n                if ($l[i] > $l[i + 1]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp1otyna8l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l[0] === null) {\n            return false;\n        }\n        if ($l[0] === $l[$l.length - 1]) {\n            return true;\n        }\n        if ($l[0] < $l[$l.length - 1]) {\n            return true;\n        }\n        if ($l[0] > $l[$l.length - 1]) {\n            return false;\n        }\n        for (var i = 1; i < $l.length - 1; i++) {\n            if ($l[i] < $l[i - 1] && $l[i] < $l[i + 1]) {\n                return true;\n            }\n            if ($l[i] > $l[i - 1] && $l[i] > $l[i + 1]) {\n                return false;\n            }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp0u5ty5et.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $n = $l.length;\n    var $prev = $l[0];\n    var $prev_i = 0;\n    var $prev_n = 1;\n    while ($i < $n) {\n        $curr = $l[$i];\n        if ($prev_n > $n) {\n            $prev_n = $n;\n            $prev_i = $i;\n        }\n        if ($curr < $prev) {\n            return false;\n        }\n        if ($curr > $prev) {\n            $prev = $curr;\n            $prev_i = $i;\n            $prev_n = 1;\n        } else {\n            $prev_n++;\n        }\n        $i++;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpm_ritoj_.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l[0] > $l[1]) {\n            return false;\n        }\n        if ($l[0] < $l[1]) {\n            return true;\n        }\n        for (var i = 2; i < $l.length; i++) {\n            if ($l[i] < $l[i - 1]) {\n                return false;\n            }\n            if ($l[i] > $l[i - 1]) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpf2wzmst8.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $m = false;\n    var $n = $l.length;\n    while ($i < $n) {\n        if ($m) {\n            if ($l[$i] < $l[$i - 1]) {\n                return false;\n            }\n        } else {\n            if ($l[$i] > $l[$i - 1]) {\n                $m = true;\n            }\n        }\n        $i++;\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmptqmhy_09.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] < $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] < $l[1] && $l[1] < $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5] && $l[5] < $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5] && $l[5] < $l[6] && $l[6] < $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] < $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpxf9jtmrg.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (!is_array($l)) {\n        return false;\n    }\n    if (count($l) < 2) {\n        return true;\n    }\n    $prev = $l[0];\n    $prev_val = $l[0];\n    $prev_i = 0;\n    $i = 1;\n    while ($i < count($l)) {\n        $curr = $l[$i];\n        $curr_val = $l[$i];\n        if ($prev_val < $curr_val) {\n            return false;\n        }\n        if ($prev_val > $curr_val) {\n            return true;\n        }\n        $prev_val = $curr_val;\n        $prev_i = $i;\n        $i++;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptcsltmxj.php:41\nStack trace:\n#0 /tmp/tmptcsltmxj.php(51): test()\n#1 {main}\n  thrown in /tmp/tmptcsltmxj.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (!is_array($l)) {\n        return false;\n    }\n    if (count($l) < 2) {\n        return true;\n    }\n    if (count($l) == 2) {\n        return $l[0] <= $l[1];\n    }\n    if (count($l) == 3) {\n        return $l[0] <= $l[1] && $l[1] <= $l[2];\n    }\n    if (count($l) == 4) {\n        return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n    }\n    if (count($l) == 5) {\n        return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n    }\n    if (count($l) == 6) {\n        return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n    }\n    if (count($l) == 7) {\n        return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n    }\n    if (count($l) == 8) {\n        return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n    }\n    if (count($l) == 9) {\n        return $l[0\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmp63k_5heo.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        $l = array_sort($l);\n        $prev = $l[0];\n        $i = 1;\n        while ($i < count($l)) {\n            $curr = $l[$i];\n            if ($prev < $curr) {\n                return false;\n            }\n            $prev = $curr;\n            $i++;\n        }\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpj9tzwb86.php:14\nStack trace:\n#0 /tmp/tmpj9tzwb86.php(31): monotonic(Array)\n#1 /tmp/tmpj9tzwb86.php(35): candidate(Array)\n#2 /tmp/tmpj9tzwb86.php(45): test()\n#3 {main}\n  thrown in /tmp/tmpj9tzwb86.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            for (var i = 0; i < count($l) - 1; i++) {\n                if ($l[i] > $l[i + 1]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpddnbxky5.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $n = $l.length;\n    var $a = [];\n    while ($i < $n) {\n        $a.push($l[$i]);\n        $i++;\n    }\n    var $b = $a.sort();\n    var $c = $b[0];\n    var $d = $b[$b.length - 1];\n    var $e = $b.length;\n    var $f = $e - 1;\n    var $g = $e - 2;\n    var $h = $e - 3;\n    var $i = $e - 4;\n    var $j = $e - 5;\n    var $k = $e - 6;\n    var $l = $e - 7;\n    var $m = $e - 8;\n    var $n = $e - 9;\n    var $o = $e - 10;\n    var $p = $e - 11;\n    var $q = $e - 12;\n    var $r = $e - 13;\n    var $s = $e - 14;\n    var $t = $e - 15;\n    var $u = $e - 16;\n    var $v = $e - 17;\n    var $w = $e - 18;\n    var $x = $e - 19;\n    var $y = $e - 20;\n    var $z = $e - 21;\n    var $A = $e - 22;\n    var $B = $e - 23;\n    var $C = $e - 24;\n    var $D = $e - 25;\n    var $E = $e - 26;\n    var $F = $e - 27;\n    var $G = $e - 28;\n    var $H = $e - 29;\n    var $I = $e - 30;\n    var $J = $e - 31;\n    var $K = $e - 32;\n    var $L = $e - 33;\n    var $M = $e - 34;\n    var $N = $e - 35;\n    var $O = $e - 36;\n    var $P = $e - 37;\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpgf9pge6w.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        $l = array_values($l);\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if (count($l) == 1) {\n        return true;\n    }\n    if (count($l) == 2) {\n        return $l[0] <= $l[1];\n    }\n    if (count($l) == 3) {\n        return $l[0] <= $l[1] && $l[1] <= $l[2];\n    }\n    if (count($l) == 4) {\n        return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n    }\n    if (count($l) == 5) {\n        return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n    }\n    if (count($l) == 6) {\n        return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n    }\n    if (count($l) == 7) {\n        return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n    }\n    if (count($l) == 8) {\n        return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmph64brq_u.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, a, b, c,\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp0llcpia1.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        $prev = $l[0];\n        $i = 1;\n        while ($i < count($l)) {\n            $curr = $l[$i];\n            if ($prev > $curr) {\n                return false;\n            }\n            $prev = $curr;\n            $i++;\n        }\n        return true;\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfpeztcc7.php:36\nStack trace:\n#0 /tmp/tmpfpeztcc7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpfpeztcc7.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l.length == 0) {\n            return true;\n        }\n        if ($l.length == 1) {\n            return true;\n        }\n        if ($l.length == 2) {\n            return $l[0] < $l[1];\n        }\n        if ($l[0] < $l[1]) {\n            return true;\n        }\n        if ($l[1] < $l[2]) {\n            return true;\n        }\n        if ($l[2] < $l[3]) {\n            return true;\n        }\n        if ($l[3] < $l[4]) {\n            return true;\n        }\n        if ($l[4] < $l[5]) {\n            return true;\n        }\n        if ($l[5] < $l[6]) {\n            return true;\n        }\n        if ($l[6] < $l[7]) {\n            return true;\n        }\n        if ($l[7] < $l[8]) {\n            return true;\n        }\n        if ($l[8] < $l[9]) {\n            return true;\n        }\n        if ($l[9] < $l[10]) {\n            return true;\n        }\n        if ($l[10] < $l[11]) {\n            return true;\n        }\n        if ($l[11] < $l[12]) {\n            return true;\n        }\n        if ($l[12] < $l[13]) {\n            return true;\n        }\n        if ($l[13] < $l[14]) {\n            return true;\n        }\n        if ($l[14] < $l[15]) {\n            return true;\n        }\n        if ($l[15] < $l[16]) {\n            return true;\n        }\n        if ($l[16] < $l[17]) {\n            return true;\n        }\n        if ($l[17] < $l[18]) {\n            return true;\n        }\n        if ($l[18] < $l[19]) {\n            return true;\n        \nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: Unclosed '{' on line 74 in /tmp/tmp7r3vgac2.php on line 92\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $last = 0;\n    var $monotonic = true;\n    while ($i < $l.length) {\n        if ($l[$i] < $last) {\n            $monotonic = false;\n            break;\n        }\n        $last = $l[$i];\n        $i++;\n    }\n    return $monotonic;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpexc0tc6k.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, n = $l.length;\n    if (n < 2) {\n        return true;\n    }\n    for (i = 0; i < n - 1; i++) {\n        if ($l[i] > $l[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmppmoa_8tl.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 0) {\n            return true;\n        }\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            for (var i = 0; i < count($l) - 1; i++) {\n                if ($l[i] > $l[i + 1]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpn_nqki1h.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m,\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4oekjtmp.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            for (var i = 0; i < count($l) - 1; i++) {\n                if ($l[i] > $l[i + 1]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpddnbxky5.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a - $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b - $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a * $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b * $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a + $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b + $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a - $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b - $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a * $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b * $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a + $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmphzy4aq6g.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        $m = array_slice($l, 0, count($l) - 1);\n        $m = array_sort($m);\n        $m = array_slice($m, 0, count($m) - 1);\n        $m = array_sort($m);\n        $m = array_slice($m, 0, count($m) - 1);\n        $m = array_sort($m);\n        $m = array_slice($m, 0, count($m) - 1);\n        $m = array_sort($m);\n        $m = array_slice($m, 0, count($m) - 1);\n        $m = array_sort($m);\n        $m = array_slice($m, 0, count($m) - 1);\n        $m = array_sort($m);\n        $m = array_slice($m, 0, count($m) - 1);\n        $m = array_sort($m);\n        $m = array_slice($m, 0, count($m) - 1);\n        $m = array_sort($m);\n        $m = array_slice($m, 0, count($m) - 1);\n        $m = array_sort($m);\n        $m = array_slice($m, 0, count($m) - 1);\n        $m = array_sort($m);\n        $m = array_slice($m, 0, count($m) - 1);\n        $m = array_sort($m);\n        $m = array_slice($m, 0, count($m) - 1);\n        $m = array_sort($m);\n        $m = array_slice($m, 0, count($m) - 1);\n        $m = array_sort($m);\n        $m = array_slice($m, 0, count($m) - 1);\n        $m = array_sort($m);\n        $m = array_slice($m, 0, count($m) - 1);\n        $m = array_sort($m);\n        $m = array_slice($m, 0, count($m)\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp1ez_zdk8.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a - $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b - $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a * $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b * $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a + $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b + $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a - $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b - $a;\n        });\n        $l = array_flip($l);\n        return $l[0] == $l[$l.length - 1];\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpp2o5xrlt.php:12\nStack trace:\n#0 /tmp/tmpp2o5xrlt.php(49): monotonic(Array)\n#1 /tmp/tmpp2o5xrlt.php(53): candidate(Array)\n#2 /tmp/tmpp2o5xrlt.php(63): test()\n#3 {main}\n  thrown in /tmp/tmpp2o5xrlt.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (!is_array($l)) {\n        return false;\n    }\n    if (count($l) < 2) {\n        return true;\n    }\n    if (count($l) == 2) {\n        return $l[0] < $l[1];\n    }\n    if (count($l) == 3) {\n        return $l[0] < $l[1] && $l[1] < $l[2];\n    }\n    if (count($l) == 4) {\n        return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3];\n    }\n    if (count($l) == 5) {\n        return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4];\n    }\n    if (count($l) == 6) {\n        return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5];\n    }\n    if (count($l) == 7) {\n        return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5] && $l[5] < $l[6];\n    }\n    if (count($l) == 8) {\n        return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5] && $l[5] < $l[6] && $l[6] < $l[7];\n    }\n    if (count($l) == 9) {\n        return $l[0\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpzvfob9sx.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] <= $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0uomniub.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu8wgbdsj.php:37\nStack trace:\n#0 /tmp/tmpu8wgbdsj.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpu8wgbdsj.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i = 0,\n        l = $l.length,\n        prev = $l[0];\n    for (; i < l; i++) {\n        if ($l[i] < prev) {\n            return false;\n        }\n        prev = $l[i];\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpfjbr5jyg.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i = 0,\n        l = $l.length,\n        last = $l[0];\n    for (; i < l; i++) {\n        if ($l[i] < last) {\n            return false;\n        }\n        last = $l[i];\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpvlf8l9yy.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i = 0,\n        n = $l.length,\n        m = 0,\n        a = [],\n        b = [],\n        c = [],\n        d = [],\n        e = 0;\n    for (i = 0; i < n; i++) {\n        a[i] = $l[i];\n        b[i] = $l[i];\n        c[i] = $l[i];\n        d[i] = $l[i];\n    }\n    for (i = 0; i < n; i++) {\n        if (a[i] < b[i]) {\n            m = -1;\n            e = i;\n            break;\n        } else if (a[i] > b[i]) {\n            m = 1;\n            e = i;\n            break;\n        }\n    }\n    if (m === 0) {\n        return true;\n    }\n    for (i = 0; i < n; i++) {\n        if (a[i] < b[i]) {\n            c[i] = a[i];\n            d[i] = b[i];\n        } else if (a[i] > b[i]) {\n            c[i] = b[i];\n            d[i] = a[i];\n        }\n    }\n    for (i = 0; i < n; i++) {\n        if (c[i] !== d[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp_nhbpmqx.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (!is_array($l)) {\n        return false;\n    }\n    if (count($l) < 2) {\n        return true;\n    }\n    $l = array_sort($l);\n    $l[0] = $l[0];\n    $l[count($l) - 1] = $l[count($l) - 1];\n    for (int $i = 1; $i < count($l) - 1; $i++) {\n        if ($l[$i] < $l[$i - 1] && $l[$i] < $l[$i + 1]) {\n            return false;\n        }\n        if ($l[$i] > $l[$i - 1] && $l[$i] > $l[$i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected variable \"$i\", expecting \";\" in /tmp/tmps4n62xet.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_sort($l);\n            for (int $i = 1; $i < count($l); $i++) {\n                if ($l[$i] < $l[$i - 1]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected variable \"$i\", expecting \";\" in /tmp/tmpsjolg67e.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        $l = array_sort($l);\n        if ($l[0] <= $l[count($l) - 1]) {\n            return true;\n        }\n        return false;\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpasxcbtvx.php:17\nStack trace:\n#0 /tmp/tmpasxcbtvx.php(26): monotonic(Array)\n#1 /tmp/tmpasxcbtvx.php(30): candidate(Array)\n#2 /tmp/tmpasxcbtvx.php(40): test()\n#3 {main}\n  thrown in /tmp/tmpasxcbtvx.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_slice($l, 0, 4);\n        }\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmprmqs9fl5.php on line 52\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 0) {\n            return true;\n        }\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_sort($l);\n            for (int $i = 0; $i < count($l) - 1; $i++) {\n                if ($l[$i] > $l[$i + 1]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected variable \"$i\", expecting \";\" in /tmp/tmpwreid5la.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $last = null;\n    var $result = true;\n    while ($i < $l.length) {\n        if ($last === null) {\n            $last = $l[$i];\n            $i++;\n        } else {\n            if ($l[$i] < $last) {\n                $result = false;\n                break;\n            }\n            if ($l[$i] > $last) {\n                $last = $l[$i];\n            }\n            $i++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpiii25blh.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        $l = array_sort($l);\n        if ($l[0] == $l[count($l) - 1]) {\n            return true;\n        }\n        return $l[0] < $l[count($l) - 1];\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpl2ay0mwb.php:14\nStack trace:\n#0 /tmp/tmpl2ay0mwb.php(23): monotonic(Array)\n#1 /tmp/tmpl2ay0mwb.php(27): candidate(Array)\n#2 /tmp/tmpl2ay0mwb.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpl2ay0mwb.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 0) {\n            return false;\n        }\n        if (count($l) == 2) {\n            return $l[0] < $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] < $l[1] && $l[1] < $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_sort($l);\n            for (int $i = 0; $i < count($l) - 1; $i++) {\n                if ($l[$i] > $l[$i + 1]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected variable \"$i\", expecting \";\" in /tmp/tmpp674mhy8.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i = 0,\n        j = 0,\n        k = 0,\n        l = $l.length,\n        m = 0,\n        n = 0,\n        o = 0,\n        p = 0,\n        q = 0,\n        r = 0,\n        s = 0,\n        t = 0,\n        u = 0,\n        v = 0,\n        w = 0,\n        x = 0,\n        y = 0,\n        z = 0,\n        A = 0,\n        B = 0,\n        C = 0,\n        D = 0,\n        E = 0,\n        F = 0,\n        G = 0,\n        H = 0,\n        I = 0,\n        J = 0,\n        K = 0,\n        L = 0,\n        M = 0,\n        N = 0,\n        O = 0,\n        P = 0,\n        Q = 0,\n        R = 0,\n        S = 0,\n        T = 0,\n        U = 0,\n        V = 0,\n        W = 0,\n        X = 0,\n        Y = 0,\n        Z = 0,\n        $a = 0,\n        $b = 0,\n        $c = 0,\n        $d = 0,\n        $e = 0,\n        $f = 0,\n        $g = 0,\n        $h = 0,\n        $i = 0,\n        $j = 0,\n        $k = 0,\n        $l = 0,\n        $m = 0,\n        $n = 0,\n        $o = 0,\n        $p = 0,\n        $q = 0,\n        $r = 0,\n        $s = 0,\n        $t = 0,\n        $u = 0,\n        $v = 0,\n        $w = 0,\n        $x = 0,\n        $y = 0,\n        $z = 0,\n        $A = 0,\n        $B = 0,\n        $C = 0,\n        $D = 0,\n        $E = 0,\n        $F = 0,\n        $G = 0,\n        $H = 0,\n        $I = 0,\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpxa4gnge4.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 0) {\n            return false;\n        }\n        if (count($l) == 2) {\n            return $l[0] < $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] < $l[1] && $l[1] < $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_sort($l);\n            $l = array_slice($l, 0, 4);\n            $l = array_sort($l);\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4];\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3qa5s77.php:44\nStack trace:\n#0 /tmp/tmpv3qa5s77.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpv3qa5s77.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        $l = array_values($l);\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if (count($l) == 1) {\n        return true;\n    }\n    if (count($l) == 2) {\n        return $l[0] < $l[1];\n    }\n    $m = array_slice($l, 0, count($l) - 1);\n    $m = array_sort($m, function($a, $b) {\n        return $a - $b;\n    });\n    $m = array_slice($m, 0, count($m) - 1);\n    if (count($m) == 0) {\n        return true;\n    }\n    $m = array_slice($m, 0, count($m) - 1);\n    return $m[0] < $m[count($m) - 1];\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpsbbg3x9n.php:23\nStack trace:\n#0 /tmp/tmpsbbg3x9n.php(34): monotonic(Array)\n#1 /tmp/tmpsbbg3x9n.php(38): candidate(Array)\n#2 /tmp/tmpsbbg3x9n.php(48): test()\n#3 {main}\n  thrown in /tmp/tmpsbbg3x9n.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpbq6b9ajj.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m,\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4oekjtmp.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] <= $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0uomniub.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m,\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4oekjtmp.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu8wgbdsj.php:37\nStack trace:\n#0 /tmp/tmpu8wgbdsj.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpu8wgbdsj.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] < $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] < $l[1] && $l[1] < $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5] && $l[5] < $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5] && $l[5] < $l[6] && $l[6] < $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] < $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpxf9jtmrg.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i,\n        n = $l.length,\n        m = 0,\n        a = [],\n        b = [],\n        c = [],\n        d = [],\n        e = [],\n        f = [],\n        g = [],\n        h = [],\n        j = 0,\n        k = 0,\n        l = 0,\n        m = 0,\n        n = 0,\n        o = 0,\n        p = 0,\n        q = 0,\n        r = 0,\n        s = 0,\n        t = 0,\n        u = 0,\n        v = 0,\n        w = 0,\n        x = 0,\n        y = 0,\n        z = 0,\n        A = 0,\n        B = 0,\n        C = 0,\n        D = 0,\n        E = 0,\n        F = 0,\n        G = 0,\n        H = 0,\n        I = 0,\n        J = 0,\n        K = 0,\n        L = 0,\n        M = 0,\n        N = 0,\n        O = 0,\n        P = 0,\n        Q = 0,\n        R = 0,\n        S = 0,\n        T = 0,\n        U = 0,\n        V = 0,\n        W = 0,\n        X = 0,\n        Y = 0,\n        Z = 0,\n        $ = 0,\n        _ = 0,\n        $l = $l.slice(0);\n    for (i = 0; i < n; i++) {\n        a[i] = $l[i];\n        b[i] = $l[i];\n        c[i] = $l[i];\n        d[i] = $l[i];\n        e[i] = $l[i];\n        f[i] = $l[i];\n        g[i] = $l[i];\n        h[i] = $l[i];\n        j += $l[i];\n        k += $l[i];\n        l += $l[i];\n        m += $l[i];\n        n += $l[i];\n        o += $l[\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp2gbhwukk.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $m = true;\n    while ($i < $l.length) {\n        if ($m && $l[$i] < $l[$i + 1]) {\n            $m = false;\n        }\n        if (!$m && $l[$i] > $l[$i + 1]) {\n            $m = true;\n        }\n        $i++;\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpzijfqcqt.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l.length < 2) {\n            return true;\n        }\n        if ($l.length == 2) {\n            return $l[0] <= $l[1];\n        }\n        var i = 1;\n        while (i < $l.length) {\n            if ($l[i] < $l[i - 1]) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp2t60ea15.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] <= $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0uomniub.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $n = $l.length;\n    var $m = $n - 1;\n    var $a = $l[0];\n    var $b = $l[$m];\n    var $c = $l[$i];\n    var $d = $l[$i + 1];\n    var $e = $a - $b;\n    var $f = $c - $d;\n    var $g = $e > $f ? $e : $f;\n    var $h = $g > 0 ? true : false;\n    return $h;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp9pp5i0pc.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $m = true;\n    while ($i < $l.length) {\n        if ($l[$i] < $l[$i + 1]) {\n            $m = false;\n            break;\n        }\n        $i++;\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpd4r_nk5l.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (!is_array($l)) {\n        return false;\n    }\n    if (count($l) < 2) {\n        return true;\n    }\n    if (count($l) == 2) {\n        return $l[0] <= $l[1];\n    }\n    if (count($l) == 3) {\n        return $l[0] <= $l[1] && $l[1] <= $l[2];\n    }\n    if (count($l) == 4) {\n        return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n    }\n    if (count($l) == 5) {\n        return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n    }\n    if (count($l) == 6) {\n        return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n    }\n    if (count($l) == 7) {\n        return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n    }\n    if (count($l) == 8) {\n        return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n    }\n    if (count($l) == 9) {\n        return $l[0\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmp63k_5heo.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] < $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] < $l[1] && $l[1] < $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3];\n        }\n        if (count($l) > 4) {\n            for (var i = 0; i < count($l) - 1; i++) {\n                if ($l[i] > $l[i + 1]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpb3ji3y78.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] < $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] < $l[1] && $l[1] < $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5] && $l[5] < $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5] && $l[5] < $l[6] && $l[6] < $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] < $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpxf9jtmrg.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m,\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4oekjtmp.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l[0] === null) {\n            return false;\n        }\n        if ($l[0] < $l[1]) {\n            return true;\n        }\n        if ($l[1] === null) {\n            return true;\n        }\n        if ($l[1] < $l[0]) {\n            return false;\n        }\n        for (var i = 2; i < $l.length; i++) {\n            if ($l[i] === null) {\n                return true;\n            }\n            if ($l[i] < $l[i - 1]) {\n                return false;\n            }\n            if ($l[i] > $l[i - 1]) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpjmak9gp_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        $a = array_flip($l);\n        $a = array_sort($a, function ($x, $y) {\n            return $x - $y;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function ($x, $y) {\n            return $y - $x;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function ($x, $y) {\n            return $x - $y;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function ($x, $y) {\n            return $y - $x;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function ($x, $y) {\n            return $x - $y;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function ($x, $y) {\n            return $y - $x;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function ($x, $y) {\n            return $x - $y;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function ($x, $y) {\n            return $y - $x;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function ($x, $y) {\n            return $x - $y;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function ($x, $y) {\n            return $y - $x;\n        });\n        $a = array_flip($a);\n        $a = array_sort($a, function ($x, $y) {\n            return $x - $y;\n        });\n        $a = array_flip\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpo2h4e42w.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_sort($l);\n            for (int $i = 1; $i < count($l); $i++) {\n                if ($l[$i - 1] > $l[$i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected variable \"$i\", expecting \";\" in /tmp/tmplfpenapk.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] <= $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0uomniub.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l[0] > $l[1]) {\n            return false;\n        }\n        if ($l[0] < $l[1]) {\n            return true;\n        }\n        return monotonic($l[2:]);\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \":\", expecting \"]\" in /tmp/tmpjavi9lnr.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] <= $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0uomniub.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a - $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b - $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a * $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b * $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a / $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b / $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a % $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b % $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a + $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b + $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a - $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpgnil17d9.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l[0] > $l[1]) {\n            return false;\n        }\n        if ($l[0] < $l[1]) {\n            return true;\n        }\n        for (var i = 2; i < $l.length; i++) {\n            if ($l[i] < $l[i - 1]) {\n                return false;\n            }\n            if ($l[i] > $l[i - 1]) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpf2wzmst8.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            for (var i = 0; i < count($l) - 1; i++) {\n                if ($l[i] > $l[i + 1]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp1xtfu4ym.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $j = 0;\n    var $m = 0;\n    var $n = 0;\n    var $p = 0;\n    var $q = 0;\n    var $r = 0;\n    var $s = 0;\n    var $t = 0;\n    var $u = 0;\n    var $v = 0;\n    var $w = 0;\n    var $x = 0;\n    var $y = 0;\n    var $z = 0;\n    var $a = 0;\n    var $b = 0;\n    var $c = 0;\n    var $d = 0;\n    var $e = 0;\n    var $f = 0;\n    var $g = 0;\n    var $h = 0;\n    var $i = 0;\n    var $j = 0;\n    var $k = 0;\n    var $l = 0;\n    var $m = 0;\n    var $n = 0;\n    var $p = 0;\n    var $q = 0;\n    var $r = 0;\n    var $s = 0;\n    var $t = 0;\n    var $u = 0;\n    var $v = 0;\n    var $w = 0;\n    var $x = 0;\n    var $y = 0;\n    var $z = 0;\n    var $a = 0;\n    var $b = 0;\n    var $c = 0;\n    var $d = 0;\n    var $e = 0;\n    var $f = 0;\n    var $g = 0;\n    var $h = 0;\n    var $i = 0;\n    var $j = 0;\n    var $k = 0;\n    var $l = 0;\n    var $m = 0;\n    var $n = 0;\n    var $p = 0;\n    var $q = 0;\n    var $r = 0;\n    var $s = 0;\n    var $t = 0;\n    var $u = 0;\n    var $v = 0;\n    var $w = 0;\n    var $x = 0;\n    var $y = 0;\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpcoigrqep.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (!is_array($l)) {\n        return false;\n    }\n\n    if (count($l) < 2) {\n        return true;\n    }\n\n    $l = array_flip($l);\n    $l = array_sort($l, function ($a, $b) {\n        return $a - $b;\n    });\n\n    $l = array_flip($l);\n    $l = array_sort($l, function ($a, $b) {\n        return $b - $a;\n    });\n\n    return $l[0] < $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpa3ww6mq0.php:19\nStack trace:\n#0 /tmp/tmpa3ww6mq0.php(32): monotonic(Array)\n#1 /tmp/tmpa3ww6mq0.php(36): candidate(Array)\n#2 /tmp/tmpa3ww6mq0.php(46): test()\n#3 {main}\n  thrown in /tmp/tmpa3ww6mq0.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 0) {\n            return true;\n        }\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_sort($l);\n            $l = $l[0];\n            for (int $i = 1; $i < count($l); $i++) {\n                if ($l[$i] < $l[$i - 1]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected variable \"$i\", expecting \";\" in /tmp/tmpdv_eya7s.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i = 0,\n        j = 0,\n        k = 0,\n        l = $l.length,\n        m = 0,\n        n = 0,\n        o = 0,\n        p = 0,\n        q = 0,\n        r = 0,\n        s = 0,\n        t = 0,\n        u = 0,\n        v = 0,\n        w = 0,\n        x = 0,\n        y = 0,\n        z = 0,\n        A = 0,\n        B = 0,\n        C = 0,\n        D = 0,\n        E = 0,\n        F = 0,\n        G = 0,\n        H = 0,\n        I = 0,\n        J = 0,\n        K = 0,\n        L = 0,\n        M = 0,\n        N = 0,\n        O = 0,\n        P = 0,\n        Q = 0,\n        R = 0,\n        S = 0,\n        T = 0,\n        U = 0,\n        V = 0,\n        W = 0,\n        X = 0,\n        Y = 0,\n        Z = 0,\n        $a = 0,\n        $b = 0,\n        $c = 0,\n        $d = 0,\n        $e = 0,\n        $f = 0,\n        $g = 0,\n        $h = 0,\n        $i = 0,\n        $j = 0,\n        $k = 0,\n        $l = 0,\n        $m = 0,\n        $n = 0,\n        $o = 0,\n        $p = 0,\n        $q = 0,\n        $r = 0,\n        $s = 0,\n        $t = 0,\n        $u = 0,\n        $v = 0,\n        $w = 0,\n        $x = 0,\n        $y = 0,\n        $z = 0,\n        $A = 0,\n        $B = 0,\n        $C = 0,\n        $D = 0,\n        $E = 0,\n        $F = 0,\n        $G = 0,\n        $H = 0,\n        $I = 0,\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpxa4gnge4.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_slice($l, 0, 4);\n        }\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7m_zg4v.php:42\nStack trace:\n#0 /tmp/tmpz7m_zg4v.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpz7m_zg4v.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 0) {\n            return false;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_sort($l);\n            for (int $i = 1; $i < count($l); $i++) {\n                if ($l[$i - 1] > $l[$i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected variable \"$i\", expecting \";\" in /tmp/tmpkhi5gkcn.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 0) {\n            return false;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ubuycz4.php:40\nStack trace:\n#0 /tmp/tmp0ubuycz4.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp0ubuycz4.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] < $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] < $l[1] && $l[1] < $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5] && $l[5] < $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5] && $l[5] < $l[6] && $l[6] < $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] < $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpxf9jtmrg.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l[0] > $l[1]) {\n            return false;\n        }\n        if ($l[0] < $l[1]) {\n            return true;\n        }\n        for (var i = 2; i < $l.length; i++) {\n            if ($l[i] > $l[i - 1]) {\n                return false;\n            }\n            if ($l[i] < $l[i - 1]) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpk8al3x8v.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (!is_array($l)) {\n        return false;\n    }\n    if (count($l) < 2) {\n        return true;\n    }\n    if (count($l) == 2) {\n        return $l[0] <= $l[1];\n    }\n    if (count($l) == 3) {\n        return $l[0] <= $l[1] && $l[1] <= $l[2];\n    }\n    if (count($l) == 4) {\n        return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmezjw4t8.php:36\nStack trace:\n#0 /tmp/tmpmezjw4t8.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmezjw4t8.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, l = $l.length;\n    for (i = 0; i < l; i++) {\n        for (j = i + 1; j < l; j++) {\n            if ($l[i] > $l[j]) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp_prc0z_1.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i = 0,\n        j = 0,\n        n = $l.length,\n        m = n - 1;\n\n    while (i < n) {\n        if ($l[i] < $l[j]) {\n            return false;\n        } else if ($l[i] > $l[j]) {\n            return true;\n        }\n        i++;\n        j++;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmps3h83xht.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (!is_array($l)) {\n        return false;\n    }\n    if (count($l) < 2) {\n        return true;\n    }\n    $l = array_sort($l);\n    $l[0] = $l[0];\n    $l[count($l) - 1] = $l[count($l) - 1];\n    $l = array_sort($l);\n    return $l[0] <= $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp04u7miwl.php:16\nStack trace:\n#0 /tmp/tmp04u7miwl.php(24): monotonic(Array)\n#1 /tmp/tmp04u7miwl.php(28): candidate(Array)\n#2 /tmp/tmp04u7miwl.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp04u7miwl.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m,\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4oekjtmp.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, $l_len = $l.length;\n    for (i = 0; i < $l_len; i++) {\n        for (j = i + 1; j < $l_len; j++) {\n            if ($l[i] > $l[j]) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4d4xa6tt.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $n = $l.length;\n    var $m = 0;\n    var $a = 0;\n    var $b = 0;\n    var $c = 0;\n    var $d = 0;\n    var $e = 0;\n    var $f = 0;\n    var $g = 0;\n    var $h = 0;\n    var $j = 0;\n    var $k = 0;\n    var $l = 0;\n    var $m = 0;\n    var $n = $l.length;\n    var $o = 0;\n    var $p = 0;\n    var $q = 0;\n    var $r = 0;\n    var $s = 0;\n    var $t = 0;\n    var $u = 0;\n    var $v = 0;\n    var $w = 0;\n    var $x = 0;\n    var $y = 0;\n    var $z = 0;\n    var $A = 0;\n    var $B = 0;\n    var $C = 0;\n    var $D = 0;\n    var $E = 0;\n    var $F = 0;\n    var $G = 0;\n    var $H = 0;\n    var $I = 0;\n    var $J = 0;\n    var $K = 0;\n    var $L = 0;\n    var $M = 0;\n    var $N = 0;\n    var $O = 0;\n    var $P = 0;\n    var $Q = 0;\n    var $R = 0;\n    var $S = 0;\n    var $T = 0;\n    var $U = 0;\n    var $V = 0;\n    var $W = 0;\n    var $X = 0;\n    var $Y = 0;\n    var $Z = 0;\n    var $aa = 0;\n    var $ab = 0;\n    var $ac = 0;\n    var $ad = 0;\n    var $ae = 0;\n    var $af = 0;\n    var $ag = 0;\n    var $ah = 0;\n    var $ai = 0;\n    var\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpw_gjm0j3.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z;\n    for (i = 0; i < $l.length; i++) {\n        if (typeof $l[i] === 'object') {\n            for (j = 0; j < $l[i].length; j++) {\n                if (typeof $l[i][j] === 'object') {\n                    for (k = 0; k < $l[i][j].length; k++) {\n                        if (typeof $l[i][j][k] === 'object') {\n                            for (l = 0; l < $l[i][j][k].length; l++) {\n                                if (typeof $l[i][j][k][l] === 'object') {\n                                    for (m = 0; m < $l[i][j][k][l].length; m++) {\n                                        if (typeof $l[i][j][k][l][m] === 'object') {\n                                            for (n = 0; n < $l[i][j][k][l][m].length; n++) {\n                                                if (typeof $l[i][j][k][l][m][n] === 'object') {\n                                                    for (o = 0; o < $l[i][j][k][l][m][n].length; o++) {\n                                                        if (typeof $l[i][j][k][l][m][n][o] === 'object') {\n                                                            for (p = 0; p < $l[i][j][k][l][m][n][o].length; p++) {\n                                                                if (typeof $l[i][j][k][l][m][n][o][p] === 'object') {\n                                                                    for (q = 0; q < $l[i][j][k][l][m][n][o][p].length; q++) {\n                                                                        if (typeof $l[i][j][k][l][\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpi5kvljpk.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $last = $l[0];\n    var $last_i = 0;\n    var $last_d = 0;\n    var $d = 0;\n    for ($i = 1; $i < $l.length; $i++) {\n        $d = $l[$i] - $last;\n        if ($d < 0) {\n            return false;\n        }\n        if ($d > 0) {\n            return true;\n        }\n        $last = $l[$i];\n        $last_i = $i;\n        $last_d = $d;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpx2nuayr7.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var $i = 0;\n    var $n = $l.length;\n    var $m = $n - 1;\n    var $a = $l[0];\n    var $b = $l[$m];\n    var $c = $l[$i];\n    var $d = $l[$i + 1];\n    var $e = $a - $b;\n    var $f = $c - $d;\n    var $g = $e < $f ? -1 : 1;\n    var $h = $g < 0 ? -1 : 1;\n    var $i = $g < 0 ? $m : $i;\n    var $j = $g < 0 ? $i : $m;\n    var $k = $g < 0 ? $i + 1 : $m;\n    var $l = $g < 0 ? $m : $i + 1;\n    var $m = $g < 0 ? $m : $i;\n    var $n = $g < 0 ? $i : $m;\n    var $o = $g < 0 ? $i + 1 : $m;\n    var $p = $g < 0 ? $m : $i;\n    var $q = $g < 0 ? $m : $i;\n    var $r = $g < 0 ? $i : $m;\n    var $s = $g < 0 ? $m : $i;\n    var $t = $g < 0 ? $i : $m;\n    var $u = $g < 0 ? $i : $m;\n    var $v = $g < 0 ? $i : $m;\n    var $w = $g < 0 ? $i : $m;\n    var $x = $g < 0 ? $i : $m;\n    var $y = $g < 0 ? $i : $m;\n    var $z = $g < 0 ? $i : $m;\n    var $A = $g < 0 ? $i : $m;\n    var $B = $g < 0 ? $i : $m;\n    var $C = $g < 0 ? $i : $m;\n    var $D = $g < 0 ? $i :\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpms30qjhz.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_sort($l);\n            for (int $i = 1; $i < count($l); $i++) {\n                if ($l[$i - 1] > $l[$i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected variable \"$i\", expecting \";\" in /tmp/tmp04mjnkcx.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] <= $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0uomniub.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_sort($l);\n            for (int $i = 1; $i < count($l); $i++) {\n                if ($l[$i - 1] > $l[$i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected variable \"$i\", expecting \";\" in /tmp/tmplfpenapk.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 0) {\n            return false;\n        }\n        if (count($l) == 2) {\n            return $l[0] < $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] < $l[1] && $l[1] < $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_sort($l);\n            for (int $i = 0; $i < count($l) - 1; $i++) {\n                if ($l[$i] > $l[$i + 1]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected variable \"$i\", expecting \";\" in /tmp/tmp4glvjnrx.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a - $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b - $a;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $a < $b;\n        });\n        $l = array_flip($l);\n        $l = array_sort($l, function ($a, $b) {\n            return $b < $a;\n        });\n        $l = array_flip($l);\n        return $l[0] == $l[$l.length - 1];\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp_y_hkmhb.php:12\nStack trace:\n#0 /tmp/tmp_y_hkmhb.php(34): monotonic(Array)\n#1 /tmp/tmp_y_hkmhb.php(38): candidate(Array)\n#2 /tmp/tmp_y_hkmhb.php(48): test()\n#3 {main}\n  thrown in /tmp/tmp_y_hkmhb.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] <= $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0uomniub.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 0) {\n            return false;\n        }\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_sort($l);\n            $l = array_slice($l, 0, 4);\n            return monotonic($l);\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps2r3h1gy.php:43\nStack trace:\n#0 /tmp/tmps2r3h1gy.php(50): test()\n#1 {main}\n  thrown in /tmp/tmps2r3h1gy.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_sort($l);\n            if (count($l) == 4) {\n                return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n            }\n            if (count($l) == 5) {\n                return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n            }\n            if (count($l) > 5) {\n                $l = array_sort($l);\n                if (count($l) == 5) {\n                    return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n                }\n                if (count($l) == 6) {\n                    return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n                }\n                if (count($l) > 6) {\n                    $l = array_sort($l);\n                    if (count($l) == 6) {\n                        return $l[0] <= $l[1] && $l[\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpozwl2e_h.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i = 1;\n    var $m = $l.length;\n    while (i < $m) {\n        if ($l[i] < $l[i - 1]) {\n            return false;\n        }\n        i++;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpppe3s21u.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m,\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4oekjtmp.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        $a = array_flip($l);\n        $a = array_sort($a, SORT_NUMERIC);\n        $a = array_flip($a);\n        $a = array_sort($a, SORT_NUMERIC);\n        $a = array_flip($a);\n        $a = array_sort($a, SORT_NUMERIC);\n        $a = array_flip($a);\n        $a = array_sort($a, SORT_NUMERIC);\n        $a = array_flip($a);\n        $a = array_sort($a, SORT_NUMERIC);\n        $a = array_flip($a);\n        $a = array_sort($a, SORT_NUMERIC);\n        $a = array_flip($a);\n        $a = array_sort($a, SORT_NUMERIC);\n        $a = array_flip($a);\n        $a = array_sort($a, SORT_NUMERIC);\n        $a = array_flip($a);\n        $a = array_sort($a, SORT_NUMERIC);\n        $a = array_flip($a);\n        $a = array_sort($a, SORT_NUMERIC);\n        $a = array_flip($a);\n        $a = array_sort($a, SORT_NUMERIC);\n        $a = array_flip($a);\n        $a = array_sort($a, SORT_NUMERIC);\n        $a = array_flip($a);\n        $a = array_sort($a, SORT_NUMERIC);\n        $a = array_flip($a);\n        $a = array_sort($a, SORT_NUMERIC);\n        $a = array_flip($a);\n        $a = array_sort($a, SORT_NUMERIC);\n        $a = array_flip($a);\n        $a = array_sort($a, SORT_NUMERIC);\n        \nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: Unclosed '{' on line 10 in /tmp/tmp7rr4vt51.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (!$l) {\n        return false;\n    }\n    if ($l.length < 2) {\n        return true;\n    }\n    var $i = 0;\n    var $last = $l[0];\n    var $last_val = $l[0];\n    while ($i < $l.length - 1) {\n        $i++;\n        if ($l[$i] < $last_val) {\n            return false;\n        }\n        $last_val = $l[$i];\n        $last = $l[$i];\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpsfseey2z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        $a = array_flip($l);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a);\n        $a = array_flip($a);\n        $a = array_sort($a\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp7_jr4_o_.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) == 0) {\n            return false;\n        }\n        if (count($l) == 1) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] < $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] < $l[1] && $l[1] < $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5] && $l[5] < $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3] && $l[3] < $l[4] && $l[4] < $l[5] && $l[5] < $l[6] && $l[6] < $l[7];\n        }\n        if (count($l\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp7w_o_zn7.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l[0] > $l[1]) {\n            return false;\n        }\n        if ($l[0] < $l[1]) {\n            return true;\n        }\n        for (var i = 2; i < $l.length; i++) {\n            if ($l[i] < $l[i - 1]) {\n                return false;\n            }\n            if ($l[i] > $l[i - 1]) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpf2wzmst8.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        $l = array_sort($l);\n        $prev = $l[0];\n        $prev_prev = $l[0];\n        for ($i = 1; $i < count($l); $i++) {\n            $curr = $l[$i];\n            if ($prev < $curr) {\n                return false;\n            }\n            if ($prev > $curr) {\n                return true;\n            }\n            $prev_prev = $prev;\n            $prev = $curr;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpof2a4mqv.php:14\nStack trace:\n#0 /tmp/tmpof2a4mqv.php(33): monotonic(Array)\n#1 /tmp/tmpof2a4mqv.php(37): candidate(Array)\n#2 /tmp/tmpof2a4mqv.php(47): test()\n#3 {main}\n  thrown in /tmp/tmpof2a4mqv.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            for (var i = 0; i < count($l) - 1; i++) {\n                if ($l[i] > $l[i + 1]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpddnbxky5.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i, j, k, l, m,\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4oekjtmp.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if ($l[0] === $l[$l.length - 1]) {\n            return true;\n        }\n        if ($l[0] > $l[$l.length - 1]) {\n            return false;\n        }\n        for (var i = 1; i < $l.length - 1; i++) {\n            if ($l[i] > $l[i - 1] && $l[i] > $l[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp5vmqbt6u.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] <= $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0uomniub.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] <= $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0uomniub.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    var i, j, l = $l.length,\n        m = l - 1,\n        a = [],\n        b = [],\n        c = [],\n        d = [],\n        e = [],\n        f = [],\n        g = [],\n        h = [],\n        k = [],\n        l = [],\n        n = [],\n        o = [],\n        p = [],\n        q = [],\n        r = [],\n        s = [],\n        t = [],\n        u = [],\n        v = [],\n        w = [],\n        x = [],\n        y = [],\n        z = [],\n        A = [],\n        B = [],\n        C = [],\n        D = [],\n        E = [],\n        F = [],\n        G = [],\n        H = [],\n        I = [],\n        J = [],\n        K = [],\n        L = [],\n        M = [],\n        N = [],\n        O = [],\n        P = [],\n        Q = [],\n        R = [],\n        S = [],\n        T = [],\n        U = [],\n        V = [],\n        W = [],\n        X = [],\n        Y = [],\n        Z = [],\n        $ = [],\n        _ = [],\n        aa = [],\n        ab = [],\n        ac = [],\n        ad = [],\n        ae = [],\n        af = [],\n        ag = [],\n        ah = [],\n        ai = [],\n        aj = [],\n        ak = [],\n        al = [],\n        am = [],\n        an = [],\n        ao = [],\n        ap = [],\n        aq = [],\n        ar = [],\n        as = [],\n        at = [],\n        au = [],\n        av = [],\n        aw = [],\n        ax = [],\n        ay = [],\n        az = [],\n        ba = [],\n        bb = [],\n        bc = [],\n        bd = [],\n        be = [\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp91fpx19u.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) == 5) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4];\n        }\n        if (count($l) == 6) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5];\n        }\n        if (count($l) == 7) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6];\n        }\n        if (count($l) == 8) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3] && $l[3] <= $l[4] && $l[4] <= $l[5] && $l[5] <= $l[6] && $l[6] <= $l[7];\n        }\n        if (count($l) == 9) {\n            return $l[0] <= $l[1] &&\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0uomniub.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (is_array($l)) {\n        if (count($l) < 2) {\n            return true;\n        }\n        if (count($l) == 2) {\n            return $l[0] <= $l[1];\n        }\n        if (count($l) == 3) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2];\n        }\n        if (count($l) == 4) {\n            return $l[0] <= $l[1] && $l[1] <= $l[2] && $l[2] <= $l[3];\n        }\n        if (count($l) > 4) {\n            $l = array_slice($l, 0, 4);\n        }\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array_slice($l, 0, 4);\n        $l = array_sort($l);\n        $l = array\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmprmqs9fl5.php on line 52\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l) {\n    if (!$l) {\n        return false;\n    }\n    var $i = 0;\n    var $j = $l.length - 1;\n    while ($i < $j) {\n        if ($l[$i] < $l[$j]) {\n            return false;\n        }\n        if ($l[$i] > $l[$j]) {\n            return true;\n        }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293485,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpppza8601.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
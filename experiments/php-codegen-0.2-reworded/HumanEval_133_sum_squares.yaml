name: HumanEval_133_sum_squares
language: php
prompt: "<?php\n// You are given an array of numbers.\n// You need to return the sum\
  \ of squared numbers in the given array,\n// round each element in the array to\
  \ the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
  // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
  \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
  \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n"
tests: "function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0)) !==\
  \ 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4, 4.2,\
  \ 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
  \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
  \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9)) !== 1086) {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== 0)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0)) !==\
  \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, 1.0,\
  \ 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n\
    \    }\n    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst as $n)\
    \ {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n\
    \    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return round($sum);\n\
    }\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum += $n * $n;\n  \
    \  }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n    \
    \    $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum\
    \ = 0;\n    foreach($lst as $i => $n) {\n        $sum += pow($n, 2);\n    }\n\
    \    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n  \
    \      $sum += round($n * $n);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n\
    \    foreach($lst as $i => $n) {\n        $sum += pow($n, 2);\n    }\n    return\
    \ round($sum);\n}\n", "    $sum = 0;\n    foreach($lst as $i => $n) {\n      \
    \  $sum += $n * $n;\n        $n = int($n);\n    }\n    return $sum;\n}\n", " \
    \   $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n\
    \    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum\
    \ += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum\
    \ = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return\
    \ $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n,\
    \ 2);\n    }\n    return round($sum, 0);\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        $sum += round($n * $n);\n    }\n    return $sum;\n}\n", " \
    \   $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n\
    \    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n  \
    \      $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    // your code goes\
    \ here\n    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n      \
    \  sum += Math.pow($lst[i], 2);\n    }\n    return sum;\n}\n", "    $sum = 0;\n\
    \    foreach($lst as $i => $n) {\n        $sum += pow($n, 2);\n        $n = round($n,\
    \ 0);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n)\
    \ {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n\
    \    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return round($sum);\n\
    }\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n\
    \    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n  \
    \      $sum += pow($n, 2);\n    }\n    return round($sum, 0);\n}\n", "    $sum\
    \ = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return\
    \ $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n,\
    \ 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $i =>\
    \ $n) {\n        $sum += pow($n, 2);\n    }\n    return round($sum);\n}\n", " \
    \   $sum = 0;\n    foreach($lst as $n) {\n        $sum += $n * $n;\n    }\n  \
    \  return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n    \
    \    $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    // your code goes\
    \ here\n    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n      \
    \  sum += Math.pow($lst[i], 2);\n    }\n    return Math.round(sum);\n}\n", " \
    \   $sum = 0;\n    foreach($lst as $i => $v) {\n        $sum += pow($v, 2);\n\
    \    }\n    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst as $n)\
    \ {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n\
    \    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n\
    }\n", "    $sum = 0;\n    foreach($lst as $i => $v) {\n        $sum += pow($v,\
    \ 2);\n    }\n    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum\
    \ = 0;\n    foreach($lst as $num) {\n        $sum += round($num * $num);\n   \
    \ }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n     \
    \   $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $i => $v) {\n        $sum += pow($v, 2);\n    }\n    return round($sum);\n\
    }\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum += round($n * $n);\n\
    \    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n  \
    \      $sum += pow($n, 2);\n    }\n    return round($sum);\n}\n", "    $sum =\
    \ 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return\
    \ $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $num) {\n        $sum += pow($num,\
    \ 2);\n    }\n    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        $sum += pow($n, 2);\n    }\n    return round($sum);\n}\n",
  "    $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n\
    \    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $i => $v) {\n   \
    \     $sum += pow($v, 2);\n    }\n    return round($sum);\n}\n", "    $sum = 0;\n\
    \    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n\
    }\n", "    $sum = 0;\n    foreach($lst as $i => $n) {\n        $sum += $n * $n;\n\
    \        $n = int($n);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        $sum += pow($n, 2);\n    }\n    return round($sum, 0);\n}\n",
  "    $sum = 0;\n    foreach($lst as $num) {\n        $sum += pow($num, 2);\n   \
    \ }\n    return round($sum);\n}\n", "    // your code goes here\n    var sum =\
    \ 0;\n    for (var i = 0; i < $lst.length; i++) {\n        sum += Math.pow($lst[i],\
    \ 2);\n    }\n    return Math.round(sum);\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        $sum += pow($n, 2);\n    }\n    return round($sum);\n}\n",
  "    $sum = 0;\n    foreach($lst as $i => $v) {\n        $sum += pow($v, 2);\n \
    \   }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n   \
    \     $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n   \
    \ foreach($lst as $n) {\n        $sum += round($n * $n);\n    }\n    return $sum;\n\
    }\n", "    $sum = 0;\n    foreach($lst as $i => $v) {\n        $sum += pow($v,\
    \ 2);\n    }\n    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        $sum += pow($n, 2);\n    }\n    return round($sum);\n}\n",
  "    $sum = 0;\n    foreach($lst as $i => $v) {\n        $sum += pow($v, 2);\n \
    \   }\n    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst as $n)\
    \ {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n\
    \    foreach($lst as $n) {\n        $sum += $n * $n;\n    }\n    return $sum;\n\
    }\n", "    $sum = 0;\n    foreach($lst as $i => $v) {\n        $sum += $v * $v;\n\
    \    }\n    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst as $n)\
    \ {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n\
    \    foreach($lst as $num) {\n        $sum += round($num * $num);\n    }\n   \
    \ return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum\
    \ += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        $sum += pow($n, 2);\n    }\n    return round($sum, 0);\n}\n",
  "    $sum = 0;\n    foreach($lst as $i => $v) {\n        $sum += pow($v, 2);\n \
    \   }\n    return round($sum, 0);\n}\n", "    $sum = 0;\n    foreach($lst as $num)\
    \ {\n        $sum += pow($num, 2);\n    }\n    return $sum;\n}\n", "    $sum =\
    \ 0;\n    foreach($lst as $i => $n) {\n        $sum += $n * $n;\n        $n =\
    \ round($n, 0);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum\
    \ = 0;\n    foreach($lst as $num) {\n        $sum += pow($num, 2);\n    }\n  \
    \  return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst as $num) {\n  \
    \      $sum += pow($num, 2);\n    }\n    return round($sum, 0);\n}\n", "    $sum\
    \ = 0;\n    foreach($lst as $num) {\n        $sum += round($num * $num);\n   \
    \ }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $i => $v) {\n\
    \        $sum += pow($v, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n\
    \    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n\
    }\n", "    $sum = 0;\n    foreach($lst as $i => $n) {\n        $n = int($n);\n\
    \        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n\
    \    foreach($lst as $n) {\n        $sum += round($n, 0);\n    }\n    return $sum;\n\
    }\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n\
    \    }\n    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst as $n)\
    \ {\n        $sum += pow($n, 2);\n    }\n    return round($sum);\n}\n", "    $sum\
    \ = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return\
    \ round($sum);\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum\
    \ += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $i => $j) {\n        $sum += pow($i, 2);\n    }\n    return round($sum);\n\
    }\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n\
    \    }\n    return round($sum);\n}\n", "    // your code goes here\n    $sum =\
    \ 0;\n    for($i = 0; $i < $lst.length; $i++) {\n        $sum += pow($lst[$i],\
    \ 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $num)\
    \ {\n        $sum += pow($num, 2);\n    }\n    return $sum;\n}\n", "    $sum =\
    \ 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return\
    \ round($sum, 0);\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum\
    \ += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum\
    \ = 0;\n    foreach($lst as $i => $n) {\n        $sum += pow($n, 2);\n    }\n\
    \    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n  \
    \      $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n  \
    \  foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n\
    }\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n\
    \    }\n    return round($sum, 0);\n}\n", "    $sum = 0;\n    foreach($lst as\
    \ $n) {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum\
    \ = 0;\n    foreach($lst as $i => $n) {\n        $sum += pow($n, 2);\n    }\n\
    \    return round($sum);\n}\n", "    // your code goes here\n    var sum = 0;\n\
    \    for (var i = 0; i < $lst.length; i++) {\n        sum += Math.pow($lst[i],\
    \ 2);\n    }\n    return sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n\
    \        $sum += pow($n, 2);\n    }\n    return round($sum, 0);\n}\n", "    $sum\
    \ = 0;\n    foreach($lst as $num) {\n        $sum += pow($num, 2);\n    }\n  \
    \  return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum\
    \ += $n * $n;\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        $sum += pow($n, 2);\n    }\n    return round($sum);\n}\n",
  "    $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n\
    \    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum\
    \ += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $i => $v) {\n        $sum += $v * $v;\n    }\n    return $sum;\n}\n", " \
    \   $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n\
    \    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n  \
    \      $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    // your code goes\
    \ here\n    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n      \
    \  sum += Math.pow($lst[i], 2);\n    }\n    return sum;\n}\n", "    $sum = 0;\n\
    \    foreach($lst as $n) {\n        $sum += round($n * $n);\n    }\n    return\
    \ $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum += round($n,\
    \ 0);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n)\
    \ {\n        $sum += pow($n, 2);\n    }\n    return round($sum, 0);\n}\n", " \
    \   $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n\
    \    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum\
    \ += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $i => $n) {\n        $sum += pow($n, 2);\n    }\n    return round($sum);\n\
    }\n", "    $sum = 0;\n    foreach($lst as $i => $v) {\n        $sum += pow($v,\
    \ 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $num)\
    \ {\n        $sum += pow($num, 2);\n    }\n    return round($sum);\n}\n", "  \
    \  $sum = 0;\n    foreach($lst as $num) {\n        $sum += pow($num, 2);\n   \
    \ }\n    return $sum;\n}\n", "    // your code goes here\n    var sum = 0;\n \
    \   for (var i = 0; i < $lst.length; i++) {\n        sum += Math.pow($lst[i],\
    \ 2);\n    }\n    return Math.round(sum);\n}\n", "    // your code goes here\n\
    \    var sum = 0;\n    for (var i = 0; i < $lst.length; i++) {\n        sum +=\
    \ Math.pow($lst[i], 2);\n    }\n    return Math.ceil(sum);\n}\n", "    $sum =\
    \ 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return\
    \ $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $i => $n) {\n        $sum +=\
    \ pow($n, 2);\n    }\n    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $i => $n) {\n        $sum += pow($n, 2);\n    }\n    return round($sum);\n\
    }\n", "    $sum = 0;\n    foreach($lst as $i => $j) {\n        $sum += pow($i,\
    \ 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $i =>\
    \ $v) {\n        $sum += pow($v, 2);\n    }\n    return round($sum);\n}\n", " \
    \   $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n\
    \    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum\
    \ += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $i => $v) {\n        $sum += pow($v, 2);\n    }\n    return round($sum);\n\
    }\n", "    $sum = 0;\n    foreach($lst as $i => $j) {\n        $sum += pow($j,\
    \ 2);\n    }\n    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $num) {\n        $sum += pow($num, 2);\n    }\n    return $sum;\n}\n", " \
    \   $sum = 0;\n    foreach($lst as $i => $n) {\n        $sum += pow($n, 2);\n\
    \    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $i => $n)\
    \ {\n        $sum += pow($n, 2);\n    }\n    return round($sum);\n}\n", "    $sum\
    \ = 0;\n    foreach($lst as $i => $v) {\n        $sum += pow($v, 2);\n    }\n\
    \    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n  \
    \      $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n  \
    \  foreach($lst as $n) {\n        $sum += $n * $n;\n    }\n    return round($sum,\
    \ 0);\n}\n", "    $sum = 0;\n    foreach($lst as $i => $v) {\n        $sum +=\
    \ $v * $v;\n    }\n    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        $sum += pow($n, 2);\n    }\n    return round($sum);\n}\n",
  "    $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n\
    \    return round($sum, 0);\n}\n", "    $sum = 0;\n    foreach($lst as $i => $j)\
    \ {\n        $sum += pow($i, 2);\n    }\n    return round($sum);\n}\n", "    $sum\
    \ = 0;\n    foreach($lst as $i => $v) {\n        $sum += pow($v, 2);\n    }\n\
    \    return round($sum, 0);\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n\
    \        $sum += round($n, 0);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n\
    \    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n\
    }\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n\
    \    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $i => $v)\
    \ {\n        $sum += pow($v, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n\
    \    foreach($lst as $i => $n) {\n        $sum += pow($n, 2);\n    }\n    return\
    \ round($sum);\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum\
    \ += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $i => $v) {\n        $sum += $v * $v;\n    }\n    return $sum;\n}\n", " \
    \   $sum = 0;\n    foreach($lst as $i => $n) {\n        $sum += pow($n, 2);\n\
    \    }\n    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst as $n)\
    \ {\n        $sum += pow($n, 2);\n    }\n    return round($sum);\n}\n", "    $sum\
    \ = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return\
    \ round($sum);\n}\n", "    $sum = 0;\n    foreach($lst as $num) {\n        $sum\
    \ += pow($num, 2);\n    }\n    return round($sum);\n}\n", "    $sum = 0;\n   \
    \ foreach($lst as $n) {\n        $sum += round($n * $n);\n    }\n    return $sum;\n\
    }\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n\
    \    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $num) {\n\
    \        $sum += pow($num, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n\
    \    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n\
    }\n", "    $sum = 0;\n    foreach($lst as $i => $j) {\n        $sum += pow($i,\
    \ 2);\n    }\n    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum\
    \ = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return\
    \ $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $i => $v) {\n        $sum +=\
    \ pow($v, 2);\n    }\n    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $i => $v) {\n        $sum += $v * $v;\n    }\n    return round($sum);\n}\n",
  "    $sum = 0;\n    foreach($lst as $num) {\n        $sum += pow($num, 2);\n   \
    \ }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n     \
    \   $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $i => $n) {\n        $sum += pow($n, 2);\n    }\n    return round($sum);\n\
    }\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n\
    \    }\n    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst as $n)\
    \ {\n        $sum += pow($n, 2);\n    }\n    return round($sum, 0);\n}\n", " \
    \   $sum = 0;\n    foreach($lst as $num) {\n        $sum += pow($num, 2);\n  \
    \  }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $i => $n) {\n\
    \        $sum += pow($n, 2);\n    }\n    return round($sum);\n}\n", "    $sum\
    \ = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return\
    \ $sum;\n}\n", "    // your code goes here\n    var sum = 0;\n    for (var i =\
    \ 0; i < $lst.length; i++) {\n        sum += Math.pow($lst[i], 2);\n    }\n  \
    \  return sum;\n}\n", "    $sum = 0;\n    foreach($lst as $i => $v) {\n      \
    \  $sum += round($v * $v);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n  \
    \  foreach($lst as $num) {\n        $sum += round($num * $num);\n    }\n    return\
    \ $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n,\
    \ 2);\n    }\n    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum\
    \ = 0;\n    foreach($lst as $num) {\n        $sum += pow($num, 2);\n    }\n  \
    \  return round($sum, 0);\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n \
    \       $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n \
    \   foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return round($sum);\n\
    }\n", "    $sum = 0;\n    foreach($lst as $i => $j) {\n        $sum += pow($i,\
    \ 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n)\
    \ {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n\
    \    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return round($sum,\
    \ 0);\n}\n", "    $sum = 0;\n    foreach($lst as $i => $v) {\n        $sum +=\
    \ pow($v, 2);\n    }\n    return round($sum);\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum\
    \ = 0;\n    foreach($lst as $i => $j) {\n        $sum += pow($i, 2);\n    }\n\
    \    return $sum;\n}\n", "    // your code goes here\n    var sum = 0;\n    for\
    \ (var i = 0; i < $lst.length; i++) {\n        sum += Math.pow($lst[i], 2);\n\
    \    }\n    return sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n   \
    \     $sum += round($n * $n);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n\
    \    foreach($lst as $n) {\n        $sum += $n * $n;\n    }\n    return $sum;\n\
    }\n", "    $sum = 0;\n    foreach($lst as $i => $v) {\n        $sum += pow($v,\
    \ 2);\n    }\n    return round($sum, 0);\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        $sum += pow($n, 2);\n    }\n    return round($sum, 0);\n}\n",
  "    $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n\
    \    return round($sum, 0);\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n\
    \        $sum += round($n * $n);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n\
    \    foreach($lst as $n) {\n        $sum += round($n * $n);\n    }\n    return\
    \ $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n,\
    \ 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n)\
    \ {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n\
    \    foreach($lst as $num) {\n        $sum += pow($num, 2);\n    }\n    return\
    \ round($sum);\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum\
    \ += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum\
    \ = 0;\n    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return\
    \ $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum += pow($n,\
    \ 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n)\
    \ {\n        $sum += pow($n, 2);\n    }\n    return round($sum, 0);\n}\n", " \
    \   $sum = 0;\n    foreach($lst as $n) {\n        $sum += round($n, 0);\n    }\n\
    \    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $i => $n) {\n   \
    \     $sum += pow($n, 2);\n    }\n    return round($sum, 0);\n}\n", "    $sum\
    \ = 0;\n    foreach($lst as $n) {\n        $sum += round($n * $n);\n    }\n  \
    \  return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n        $sum\
    \ += pow($n, 2);\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst\
    \ as $n) {\n        $sum += pow($n, 2);\n    }\n    return round($sum);\n}\n",
  "    $sum = 0;\n    foreach($lst as $n) {\n        $sum += round($n * $n);\n   \
    \ }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach($lst as $n) {\n     \
    \   $sum += pow($n, 2);\n    }\n    return round($sum);\n}\n", "    $sum = 0;\n\
    \    foreach($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n\
    }\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

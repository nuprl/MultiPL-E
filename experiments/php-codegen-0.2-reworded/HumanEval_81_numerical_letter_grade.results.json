{
  "name": "HumanEval_81_numerical_letter_grade",
  "language": "php",
  "prompt": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n",
  "tests": "function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grade_equation = array(\n        'A+' => 4.0,\n        'A' => 3.7,\n        'A-' => 3.3,\n        'B+' => 3.0,\n        'B' => 2.7,\n        'B-' => 2.3,\n        'C+' => 2.0,\n        'C' => 1.7,\n        'C-' => 1.3,\n        'D+' => 1.0,\n        'D' => 0.7,\n        'D-' => 0.0,\n        'E' => 0.0\n    );\n    $grades = array_flip($grades);\n    $grades = array_map($grades, function ($grade) {\n        return $grade_equation[$grade];\n    });\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp_jk47gfq.php on line 40\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp_jk47gfq.php on line 40\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp_jk47gfq.php on line 40\n\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, first array member is not a valid class name or object in /tmp/tmp_jk47gfq.php:43\nStack trace:\n#0 /tmp/tmp_jk47gfq.php(43): array_map(Array, Object(Closure))\n#1 /tmp/tmp_jk47gfq.php(48): numerical_letter_grade(Array)\n#2 /tmp/tmp_jk47gfq.php(52): candidate(Array)\n#3 /tmp/tmp_jk47gfq.php(60): test()\n#4 {main}\n  thrown in /tmp/tmp_jk47gfq.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grade_equation = array(\n        'A+' => 4.00,\n        'A' => 3.70,\n        'A-' => 3.30,\n        'B+' => 3.00,\n        'B' => 2.70,\n        'B-' => 2.30,\n        'C+' => 2.00,\n        'C' => 1.70,\n        'C-' => 1.30,\n        'D+' => 1.00,\n        'D' => 0.70,\n        'D-' => 0.30,\n        'E' => 0.00\n    );\n    $grades = array_map($grades, function ($gpa) {\n        return round($gpa, 2);\n    });\n    $grades = array_map($grades, function ($gpa) {\n        return $gpa > 0 ? $grade_equation[$gpa] : 'E';\n    });\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmpwceu7arw.php:42\nStack trace:\n#0 /tmp/tmpwceu7arw.php(42): array_map(Array, Object(Closure))\n#1 /tmp/tmpwceu7arw.php(50): numerical_letter_grade(Array)\n#2 /tmp/tmpwceu7arw.php(54): candidate(Array)\n#3 /tmp/tmpwceu7arw.php(62): test()\n#4 {main}\n  thrown in /tmp/tmpwceu7arw.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grade_equation = array(\n        'A+' => 4.00,\n        'A' => 3.70,\n        'A-' => 3.30,\n        'B+' => 3.00,\n        'B' => 2.70,\n        'B-' => 2.30,\n        'C+' => 2.00,\n        'C' => 1.70,\n        'C-' => 1.30,\n        'D+' => 1.00,\n        'D' => 0.70,\n        'D-' => 0.30,\n        'E' => 0.00\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g)\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"{\" in /tmp/tmpdbzth5_w.php on line 108\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_points = array();\n    for ($i = 0; $i < $grades.length; $i++) {\n        $grade_points[$grades[$i]] = $grades[$i];\n    }\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n    $grade_points = array_flip($grade_points);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpq0e2_7bz.php on line 72\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_count = count_values($grades);\n    $grade_sum = array_sum($grades);\n    $grade_average = $grade_sum / $grade_count;\n    $grade_threshold = $grade_average - 0.3;\n    $grade_threshold = round($grade_threshold, 2);\n    $grade_threshold = $grade_threshold * 100;\n    $grade_threshold = round($grade_threshold, 2);\n    $grade_threshold = $grade_threshold / 100;\n    $grade_threshold = round($grade_threshold, 2);\n    $grade_threshold = $grade_threshold * 100;\n    $grade_threshold = round($grade_threshold, 2);\n    $grade_threshold = $grade_threshold / 100;\n    $grade_threshold = round($grade_threshold, 2);\n    $grade_threshold = $grade_threshold * 100;\n    $grade_threshold = round($grade_threshold, 2);\n    $grade_threshold = $grade_threshold / 100;\n    $grade_threshold = round($grade_threshold, 2);\n    $grade_threshold = $grade_threshold * 100;\n    $grade_threshold = round($grade_threshold, 2);\n    $grade_threshold = $grade_threshold / 100;\n    $grade_threshold = round($grade_threshold, 2);\n    $grade_threshold = $grade_threshold * 100;\n    $grade_threshold = round($grade_threshold, 2);\n    $grade_threshold = $grade_threshold / 100;\n    $grade_threshold = round($grade_threshold, 2);\n    $grade_threshold = $grade_threshold * 100;\n    $grade_threshold = round($grade_threshold, 2);\n    $grade_threshold = $grade_threshold / 100;\n    $grade_threshold = round($grade_threshold, 2);\n    $grade_threshold = $grade_threshold * 100;\n    $grade_threshold = round($grade_\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp23wkzdzx.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_points = array();\n    $grade_points['A'] = 4.0;\n    $grade_points['B'] = 3.7;\n    $grade_points['C'] = 3.3;\n    $grade_points['D'] = 2.7;\n    $grade_points['E'] = 0.0;\n    $grade_points['F'] = 0.0;\n    $grade_points['G'] = 0.0;\n    $grade_points['H'] = 0.0;\n    $grade_points['I'] = 0.0;\n    $grade_points['J'] = 0.0;\n    $grade_points['K'] = 0.0;\n    $grade_points['L'] = 0.0;\n    $grade_points['M'] = 0.0;\n    $grade_points['N'] = 0.0;\n    $grade_points['O'] = 0.0;\n    $grade_points['P'] = 0.0;\n    $grade_points['Q'] = 0.0;\n    $grade_points['R'] = 0.0;\n    $grade_points['S'] = 0.0;\n    $grade_points['T'] = 0.0;\n    $grade_points['U'] = 0.0;\n    $grade_points['V'] = 0.0;\n    $grade_points['W'] = 0.0;\n    $grade_points['X'] = 0.0;\n    $grade_points['Y'] = 0.0;\n    $grade_points['Z'] = 0.0;\n    $grade_points['0'] = 0.0;\n    $grade_points['1'] = 0.0;\n    $grade_points['2'] = 0.0;\n    $grade_points['3'] = 0.0;\n    $grade_points['4'] = 0.0;\n    $grade_points['5'] = 0.0;\n    $grade_points['6'] = 0.0;\n    $grade_points['7'] = 0.0;\n    $grade_points['8'] = 0.0;\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmp4mm_dysu.php on line 76\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grade_table = array(\n        '4.0' => 'A+',\n        '3.7' => 'A',\n        '3.3' => 'A-',\n        '3.0' => 'B+',\n        '2.7' => 'B',\n        '2.3' => 'B-',\n        '2.0' => 'C+',\n        '1.7' => 'C',\n        '1.3' => 'C-',\n        '1.0' => 'D+',\n        '0.7' => 'D',\n        '0.0' => 'D-'\n    );\n    $grade_table_keys = array(\n        '4.0' => 'A+',\n        '3.7' => 'A',\n        '3.3' => 'A-',\n        '3.0' => 'B+',\n        '2.7' => 'B',\n        '2.3' => 'B-',\n        '2.0' => 'C+',\n        '1.7' => 'C',\n        '1.3' => 'C-',\n        '1.0' => 'D+',\n        '0.7' => 'D',\n        '0.0' => 'D-'\n    );\n    $grade_table_values = array(\n        'A+' => 4.0,\n        'A' => 3.7,\n        'A-' => 3.3,\n        'B+' => 3.0,\n        'B' => 2.7,\n        'B-' => 2.3,\n        'C+' => 2.0,\n        'C' => 1.7,\n        'C-' => 1.3,\n        'D+' => 1.0,\n        'D' => 0.7,\n        'D-' => 0.0\n    );\n    $grade_table_keys_length = count($grade_table_keys);\n    $grade_table_values_length = count($grade_table_values);\n    $grade_table_keys_index = 0;\n    $grade_table_values_index = 0;\n    $grade_table_keys\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmppt9oa319.php on line 72\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grade_equation = array(\n        \"4.0\" => \"A+\",\n        \"3.7\" => \"A\",\n        \"3.3\" => \"A-\",\n        \"3.0\" => \"B+\",\n        \"2.7\" => \"B\",\n        \"2.3\" => \"B-\",\n        \"2.0\" => \"C+\",\n        \"1.7\" => \"C\",\n        \"1.3\" => \"C-\",\n        \"1.0\" => \"D+\",\n        \"0.7\" => \"D\",\n        \"0.0\" => \"D-\"\n    );\n    $grades = array_flip($grades);\n    $grades = array_map($grades, function($gpa) {\n        return $grade_equation[$gpa];\n    });\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmpn5a3tgy7.php on line 39\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmpn5a3tgy7.php on line 39\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmpn5a3tgy7.php on line 39\n\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, first array member is not a valid class name or object in /tmp/tmpn5a3tgy7.php:42\nStack trace:\n#0 /tmp/tmpn5a3tgy7.php(42): array_map(Array, Object(Closure))\n#1 /tmp/tmpn5a3tgy7.php(47): numerical_letter_grade(Array)\n#2 /tmp/tmpn5a3tgy7.php(51): candidate(Array)\n#3 /tmp/tmpn5a3tgy7.php(59): test()\n#4 {main}\n  thrown in /tmp/tmpn5a3tgy7.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grade_equation = array(\n        'A+' => 4.0,\n        'A' => 3.7,\n        'A-' => 3.3,\n        'B+' => 3.0,\n        'B' => 2.7,\n        'B-' => 2.3,\n        'C+' => 2.0,\n        'C' => 1.7,\n        'C-' => 1.3,\n        'D+' => 1.0,\n        'D' => 0.7,\n        'D-' => 0.0,\n        'E' => 0.0\n    );\n    $grades = array_map(\n        function ($grade) {\n            return $grade_equation[$grade];\n        },\n        $grades\n    );\n    $grades = array_map(\n        function ($grade) {\n            return $grade < 0.7 ? 'E' : $grade;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function ($grade) {\n            return $grade < 0.7 ? 'E' : $grade;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function ($grade) {\n            return $grade < 0.7 ? 'E' : $grade;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function ($grade) {\n            return $grade < 0.7 ? 'E' : $grade;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function ($grade) {\n            return $grade < 0.7 ? 'E' : $grade;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function ($grade) {\n            return $grade < 0.7 ? 'E' : $grade;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function ($grade) {\n            return $grade < 0.7 ? 'E' : $grade;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function ($grade) {\n            return $grade < 0.7 ? 'E\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected string content \"E\" in /tmp/tmpiu9jkprw.php on line 90\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grade_equation = array(\n        'A+' => 4.0,\n        'A' => 3.7,\n        'A-' => 3.3,\n        'B+' => 3.0,\n        'B' => 2.7,\n        'B-' => 2.3,\n        'C+' => 2.0,\n        'C' => 1.7,\n        'C-' => 1.3,\n        'D+' => 1.0,\n        'D' => 0.7,\n        'D-' => 0.0,\n        'E' => 0.0\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g) {\n            return round($g, 2);\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function($g) {\n            return $g;\n        },\n        $grades\n    );\n    $grades = array_map(\n        function\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmp53pbcs46.php on line 108\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_sort($grades);\n    $grades = array_reverse($grades);\n    $grades = array_flip($grades);\n    $grades = array_sort($grades);\n    $grades = array_reverse($grades);\n    $grades = array_flip($grades);\n    $grades = array_sort($grades);\n    $grades = array_reverse($grades);\n    $grades = array_flip($grades);\n    $grades = array_sort($grades);\n    $grades = array_reverse($grades);\n    $grades = array_flip($grades);\n    $grades = array_sort($grades);\n    $grades = array_reverse($grades);\n    $grades = array_flip($grades);\n    $grades = array_sort($grades);\n    $grades = array_reverse($grades);\n    $grades = array_flip($grades);\n    $grades = array_sort($grades);\n    $grades = array_reverse($grades);\n    $grades = array_flip($grades);\n    $grades = array_sort($grades);\n    $grades = array_reverse($grades);\n    $grades = array_flip($grades);\n    $grades = array_sort($grades);\n    $grades = array_reverse($grades);\n    $grades = array_flip($grades);\n    $grades = array_sort($grades);\n    $grades = array_reverse($grades);\n    $grades = array_flip($grades);\n    $grades = array_sort($grades);\n    $grades = array_reverse($grades);\n    $grades = array_flip($grades);\n    $grades = array_sort($grades);\n    $grades = array_reverse($grades);\n    $grades = array_flip($grades);\n    $grades = array_sort($grades);\n    $grades = array_reverse($grades);\n    $grades = array_flip($grades);\n    $grades = array_sort($grades);\n    $grades = array_reverse($grades);\n    $grades = array_flip($grades);\n    $grades = array_sort($grades);\n    $grades = array_reverse($grades);\n    $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp4q5rt9r3.php on line 71\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grade_equation = array(\n        'A+' => 4.00,\n        'A' => 3.70,\n        'A-' => 3.30,\n        'B+' => 3.00,\n        'B' => 2.70,\n        'B-' => 2.30,\n        'C+' => 2.00,\n        'C' => 1.70,\n        'C-' => 1.30,\n        'D+' => 1.00,\n        'D' => 0.70,\n        'D-' => 0.30,\n        'E' => 0.00\n    );\n    $grade_equation_keys = array_keys($grade_equation);\n    $grade_equation_values = array_values($grade_equation);\n    $grade_equation_keys_length = count($grade_equation_keys);\n    $grade_equation_values_length = count($grade_equation_values);\n    $grades_length = count($grades);\n    $grades_array = array();\n    for ($i = 0; $i < $grades_length; $i++) {\n        $grades_array[$i] = 0;\n    }\n    for ($i = 0; $i < $grades_length; $i++) {\n        $grade = $grades[$i];\n        $grade_equation_index = $grade_equation_keys_length - 1;\n        $grade_equation_value = $grade_equation_values[$grade_equation_index];\n        $grade_equation_value_length = count($grade_equation_values);\n        $grade_equation_value_index = $grade_equation_values_length - 1;\n        $grade_equation_value_index_minus_1 = $grade_equation_value_index - 1;\n        $grade_equation_value_index_plus_1 = $grade_equation_value_index + 1;\n        $grade_equation_value_index_minus_2 = $grade_equation_value_index - 2;\n        $grade_equation_value_index_plus_2 = $grade_equation_value\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp5iwub8u7.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpy7fbxtjp.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_points = array();\n    $grade_points['A'] = 4.0;\n    $grade_points['B'] = 3.7;\n    $grade_points['C'] = 3.3;\n    $grade_points['D'] = 2.7;\n    $grade_points['E'] = 0.0;\n    $grade_points['F'] = 0.0;\n    $grade_points['G'] = 0.0;\n    $grade_points['H'] = 0.0;\n    $grade_points['I'] = 0.0;\n    $grade_points['J'] = 0.0;\n    $grade_points['K'] = 0.0;\n    $grade_points['L'] = 0.0;\n    $grade_points['M'] = 0.0;\n    $grade_points['N'] = 0.0;\n    $grade_points['O'] = 0.0;\n    $grade_points['P'] = 0.0;\n    $grade_points['Q'] = 0.0;\n    $grade_points['R'] = 0.0;\n    $grade_points['S'] = 0.0;\n    $grade_points['T'] = 0.0;\n    $grade_points['U'] = 0.0;\n    $grade_points['V'] = 0.0;\n    $grade_points['W'] = 0.0;\n    $grade_points['X'] = 0.0;\n    $grade_points['Y'] = 0.0;\n    $grade_points['Z'] = 0.0;\n    $grade_points['0'] = 0.0;\n    $grade_points['1'] = 0.0;\n    $grade_points['2'] = 0.0;\n    $grade_points['3'] = 0.0;\n    $grade_points['4'] = 0.0;\n    $grade_points['5'] = 0.0;\n    $grade_points['6'] = 0.0;\n    $grade_points['7'] = 0.0;\n    $grade_points['8'] = 0.0;\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmp4mm_dysu.php on line 76\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_count = count_values($grades);\n    $grade_count = max($grade_count, 1);\n    $grade_count = min($grade_count, 5);\n    $grade_count = array_fill(0, $grade_count, 0);\n    $grade_count[0] = 1;\n    $grade_count[1] = 2;\n    $grade_count[2] = 3;\n    $grade_count[3] = 4;\n    $grade_count[4] = 5;\n    $grade_count[5] = 6;\n    $grade_count[6] = 7;\n    $grade_count[7] = 8;\n    $grade_count[8] = 9;\n    $grade_count[9] = 10;\n    $grade_count[10] = 11;\n    $grade_count[11] = 12;\n    $grade_count[12] = 13;\n    $grade_count[13] = 14;\n    $grade_count[14] = 15;\n    $grade_count[15] = 16;\n    $grade_count[16] = 17;\n    $grade_count[17] = 18;\n    $grade_count[18] = 19;\n    $grade_count[19] = 20;\n    $grade_count[20] = 21;\n    $grade_count[21] = 22;\n    $grade_count[22] = 23;\n    $grade_count[23] = 24;\n    $grade_count[24] = 25;\n    $grade_count[25] = 26;\n    $grade_count[26] = 27;\n    $grade_count[27] = 28;\n    $grade_count[28] = 29;\n    $grade_count[29] = 30;\n    $grade_count[30] = 31;\n    $grade_count[31] = 32;\n    $grade_count[32] = 33;\n    $grade_count[33] = 34;\n    $grade_count[34] = 35;\n    $grade_count[35] = 36;\n    $grade_count\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpn2xdhprk.php on line 67\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_count = count_values($grades);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmpkd2y9cyu.php on line 58\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmp2vy35awq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_count = count_values($grades);\n    $grade_sum = array_sum($grades);\n    $grade_average = $grade_sum / $grade_count;\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round($grade_average, 2);\n    $grade_average = round\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpd9ep68mf.php on line 60\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grade_table = array(\n        4.0 => \"A+\",\n        3.7 => \"A\",\n        3.3 => \"A-\",\n        3.0 => \"B+\",\n        2.7 => \"B\",\n        2.3 => \"B-\",\n        2.0 => \"C+\",\n        1.7 => \"C\",\n        1.3 => \"C-\",\n        1.0 => \"D+\",\n        0.7 => \"D\",\n        0.0 => \"D-\"\n    );\n    $grade_table_keys = array(\n        \"A+\",\n        \"A\",\n        \"A-\",\n        \"B+\",\n        \"B\",\n        \"B-\",\n        \"C+\",\n        \"C\",\n        \"C-\",\n        \"D+\",\n        \"D\",\n        \"D-\"\n    );\n    $grade_table_values = array(\n        \"A+\",\n        \"A\",\n        \"A-\",\n        \"B+\",\n        \"B\",\n        \"B-\",\n        \"C+\",\n        \"C\",\n        \"C-\",\n        \"D+\",\n        \"D\",\n        \"D-\"\n    );\n    $grade_table_keys_length = sizeof($grade_table_keys);\n    $grade_table_values_length = sizeof($grade_table_values);\n    $grade_table_keys_index = 0;\n    $grade_table_values_index = 0;\n    $grade_table_keys_index_max = $grade_table_keys_length - 1;\n    $grade_table_values_index_max = $grade_table_values_length - 1;\n    $grade_table_keys_index_min = 0;\n    $grade_table_values_index_min = 0;\n    $grade_table_keys_index_min_max = $grade_table_keys_length - 1;\n    $grade_table_values_index_min_max = $grade_table_values_length - 1;\n    $grade_table_keys_index_min_min = 0;\n    $grade_table_values_index_min_\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpsn5smsfu.php on line 79\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, 'A+'),\n        array(3.7, 'A'),\n        array(3.3, 'A-'),\n        array(3.0, 'B+'),\n        array(2.7, 'B'),\n        array(2.3, 'B-'),\n        array(2.0, 'C+'),\n        array(1.7, 'C'),\n        array(1.3, 'C-'),\n        array(1.0, 'D+'),\n        array(0.7, 'D'),\n        array(0.0, 'D-')\n    );\n    $grade_table = array_flip($grade_table);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpvi34i7e3.php on line 69\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_count = count_values($grades);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array_flip($grade_count);\n    $grade_count = array\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmpkd2y9cyu.php on line 58\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpy7fbxtjp.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grade_equation = array(\n        'A+' => 4.00,\n        'A' => 3.70,\n        'A-' => 3.30,\n        'B+' => 3.00,\n        'B' => 2.70,\n        'B-' => 2.30,\n        'C+' => 2.00,\n        'C' => 1.70,\n        'C-' => 1.30,\n        'D+' => 1.00,\n        'D' => 0.70,\n        'D-' => 0.30,\n        'E' => 0.00\n    );\n    $grades = array_flip($grades);\n    $grades = array_map($grades, function ($grade) {\n        return $grade_equation[$grade];\n    });\n    $grades = array_flip($grades);\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmpqnz7d2nz.php on line 40\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmpqnz7d2nz.php on line 40\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmpqnz7d2nz.php on line 40\n\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, first array member is not a valid class name or object in /tmp/tmpqnz7d2nz.php:43\nStack trace:\n#0 /tmp/tmpqnz7d2nz.php(43): array_map(Array, Object(Closure))\n#1 /tmp/tmpqnz7d2nz.php(49): numerical_letter_grade(Array)\n#2 /tmp/tmpqnz7d2nz.php(53): candidate(Array)\n#3 /tmp/tmpqnz7d2nz.php(61): test()\n#4 {main}\n  thrown in /tmp/tmpqnz7d2nz.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, 'A+'),\n        array(3.7, 'A'),\n        array(3.3, 'A-'),\n        array(3.0, 'B+'),\n        array(2.7, 'B'),\n        array(2.3, 'B-'),\n        array(2.0, 'C+'),\n        array(1.7, 'C'),\n        array(1.3, 'C-'),\n        array(1.0, 'D+'),\n        array(0.7, 'D'),\n        array(0.0, 'D-')\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmp287m7ng6.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpy7fbxtjp.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_count = count_values($grades);\n    $grade_count = max($grade_count, 1);\n    $grade_count = min($grade_count, 5);\n    $grade_count = round($grade_count);\n    $grade_count = floor($grade_count);\n    $grade_count = ceil($grade_count);\n    $grade_count = round($grade_count, 1);\n    $grade_count = floor($grade_count, 1);\n    $grade_count = ceil($grade_count, 1);\n    $grade_count = round($grade_count, 1);\n    $grade_count = floor($grade_count, 1);\n    $grade_count = ceil($grade_count, 1);\n    $grade_count = round($grade_count, 1);\n    $grade_count = floor($grade_count, 1);\n    $grade_count = ceil($grade_count, 1);\n    $grade_count = round($grade_count, 1);\n    $grade_count = floor($grade_count, 1);\n    $grade_count = ceil($grade_count, 1);\n    $grade_count = round($grade_count, 1);\n    $grade_count = floor($grade_count, 1);\n    $grade_count = ceil($grade_count, 1);\n    $grade_count = round($grade_count, 1);\n    $grade_count = floor($grade_count, 1);\n    $grade_count = ceil($grade_count, 1);\n    $grade_count = round($grade_count, 1);\n    $grade_count = floor($grade_count, 1);\n    $grade_count = ceil($grade_count, 1);\n    $grade_count = round($grade_count, 1);\n    $grade_count = floor($grade_count, 1);\n    $grade_count = ceil($grade_count, 1);\n    $grade_count = round($grade_count, 1);\n    $grade_count = floor($grade_count, 1);\n    $grade_count = ceil($grade_count, 1);\n    $grade\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpl9ygmprn.php on line 60\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, 'A+'),\n        array(3.7, 'A'),\n        array(3.3, 'A-'),\n        array(3.0, 'B+'),\n        array(2.7, 'B'),\n        array(2.3, 'B-'),\n        array(2.0, 'C+'),\n        array(1.7, 'C'),\n        array(1.3, 'C-'),\n        array(1.0, 'D+'),\n        array(0.7, 'D'),\n        array(0.0, 'D-')\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmp287m7ng6.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grade_equation = array(\n        'A+' => 4.0,\n        'A' => 3.7,\n        'A-' => 3.3,\n        'B+' => 3.0,\n        'B' => 2.7,\n        'B-' => 2.3,\n        'C+' => 2.0,\n        'C' => 1.7,\n        'C-' => 1.3,\n        'D+' => 1.0,\n        'D' => 0.7,\n        'D-' => 0.0,\n        'E' => 0.0\n    );\n    $grades = array_map($grades, function ($grade) {\n        return round($grade, 2);\n    });\n    $grades = array_map($grades, function ($grade) {\n        return $grade_equation[$grade];\n    });\n    $grades = array_map($grades, function ($grade) {\n        return round($grade, 1);\n    });\n    $grades = array_map($grades, function ($grade) {\n        return $grade;\n    });\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp_nv7gp45.php:42\nStack trace:\n#0 /tmp/tmp_nv7gp45.php(42): array_map(Array, Object(Closure))\n#1 /tmp/tmp_nv7gp45.php(56): numerical_letter_grade(Array)\n#2 /tmp/tmp_nv7gp45.php(60): candidate(Array)\n#3 /tmp/tmp_nv7gp45.php(68): test()\n#4 {main}\n  thrown in /tmp/tmp_nv7gp45.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_count = count_values($grades);\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count -\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpms4m7x8s.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_array = array();\n    for ($i = 0; $i < $grades.length; $i++) {\n        $grade_array[$grades[$i]] = \"\";\n    }\n    $grade_array[\"E\"] = \"E\";\n    $grade_array[\"D-\"] = \"D-\";\n    $grade_array[\"D\"] = \"D\";\n    $grade_array[\"C-\"] = \"C-\";\n    $grade_array[\"C\"] = \"C\";\n    $grade_array[\"B-\"] = \"B-\";\n    $grade_array[\"B\"] = \"B\";\n    $grade_array[\"A-\"] = \"A-\";\n    $grade_array[\"A\"] = \"A\";\n    $grade_array[\"E\"] = \"E\";\n    $grade_array[\"D-\"] = \"D-\";\n    $grade_array[\"D\"] = \"D\";\n    $grade_array[\"C-\"] = \"C-\";\n    $grade_array[\"C\"] = \"C\";\n    $grade_array[\"B-\"] = \"B-\";\n    $grade_array[\"B\"] = \"B\";\n    $grade_array[\"A-\"] = \"A-\";\n    $grade_array[\"A\"] = \"A\";\n    $grade_array[\"E\"] = \"E\";\n    $grade_array[\"D-\"] = \"D-\";\n    $grade_array[\"D\"] = \"D\";\n    $grade_array[\"C-\"] = \"C-\";\n    $grade_array[\"C\"] = \"C\";\n    $grade_array[\"B-\"] = \"B-\";\n    $grade_array[\"B\"] = \"B\";\n    $grade_array[\"A-\"] = \"A-\";\n    $grade_array[\"A\"] = \"A\";\n    $grade_array[\"E\"] = \"E\";\n    $grade_array[\"D-\"] = \"D-\";\n    $grade_array[\"D\"] = \"D\";\n    $grade_array[\"C-\"] = \"C-\";\n    $grade_array[\"C\"] = \"C\";\n    $grade_array[\"B-\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected identifier \"A\", expecting \"]\" in /tmp/tmpeq472wyt.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grade_table = array(\n        '4.0' => 'A+',\n        '3.7' => 'A',\n        '3.3' => 'A-',\n        '3.0' => 'B+',\n        '2.7' => 'B',\n        '2.3' => 'B-',\n        '2.0' => 'C+',\n        '1.7' => 'C',\n        '1.3' => 'C-',\n        '1.0' => 'D+',\n        '0.7' => 'D',\n        '0.0' => 'D-'\n    );\n    $grade_table_keys = array(\n        '4.0' => 'A+',\n        '3.7' => 'A',\n        '3.3' => 'A-',\n        '3.0' => 'B+',\n        '2.7' => 'B',\n        '2.3' => 'B-',\n        '2.0' => 'C+',\n        '1.7' => 'C',\n        '1.3' => 'C-',\n        '1.0' => 'D+',\n        '0.7' => 'D',\n        '0.0' => 'D-'\n    );\n    $grade_table_values = array(\n        '4.0' => 'A+',\n        '3.7' => 'A',\n        '3.3' => 'A-',\n        '3.0' => 'B+',\n        '2.7' => 'B',\n        '2.3' => 'B-',\n        '2.0' => 'C+',\n        '1.7' => 'C',\n        '1.3' => 'C-',\n        '1.0' => 'D+',\n        '0.7' => 'D',\n        '0.0' => 'D-'\n    );\n    $grade_table_keys_length = count($grade_table_keys);\n    $grade_table_values_length = count($grade_table_values);\n    $grade_table_keys_index = 0;\n    $grade_\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpzv9j_d6b.php on line 71\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpy7fbxtjp.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpy7fbxtjp.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_sort($grades, function($a, $b) {\n        return $a - $b;\n    });\n    $grades = array_flip($grades);\n    $grades = array_sort($grades, function($a, $b) {\n        return $b - $a;\n    });\n    $grades = array_flip($grades);\n    $grades = array_sort($grades, function($a, $b) {\n        return $b - $a;\n    });\n    $grades = array_flip($grades);\n    $grades = array_sort($grades, function($a, $b) {\n        return $b - $a;\n    });\n    $grades = array_flip($grades);\n    $grades = array_sort($grades, function($a, $b) {\n        return $b - $a;\n    });\n    $grades = array_flip($grades);\n    $grades = array_sort($grades, function($a, $b) {\n        return $b - $a;\n    });\n    $grades = array_flip($grades);\n    $grades = array_sort($grades, function($a, $b) {\n        return $b - $a;\n    });\n    $grades = array_flip($grades);\n    $grades = array_sort($grades, function($a, $b) {\n        return $b - $a;\n    });\n    $grades = array_flip($grades);\n    $grades = array_sort($grades, function($a, $b) {\n        return $b - $a;\n    });\n    $grades = array_flip($grades);\n    $grades = array_sort($grades, function($a, $b) {\n        return $b - $a;\n    });\n    $grades = array_flip($grades);\n    $grades = array_sort($grades, function($a, $b) {\n        return $b - $a;\n    });\n    $grades = array_flip($grades);\n    $grades = array_sort($grades, function($a, $b) {\n        return $b - $a;\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 70 in /tmp/tmp5z_bjs3x.php on line 85\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grade_equation = array(\n        4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0\n    );\n    $grades_array = array();\n    for($i = 0; $i < $grades.length; $i++) {\n        $grades_array[$i] = $grade_equation[$grades[$i]];\n    }\n    return $grades_array;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp7pyvpana.php:29\nStack trace:\n#0 /tmp/tmp7pyvpana.php(36): numerical_letter_grade(Array)\n#1 /tmp/tmp7pyvpana.php(40): candidate(Array)\n#2 /tmp/tmp7pyvpana.php(48): test()\n#3 {main}\n  thrown in /tmp/tmp7pyvpana.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpy7fbxtjp.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grade_equation = array(\n        'A+' => 4.00,\n        'A' => 3.70,\n        'A-' => 3.30,\n        'B+' => 3.00,\n        'B' => 2.70,\n        'B-' => 2.30,\n        'C+' => 2.00,\n        'C' => 1.70,\n        'C-' => 1.30,\n        'D+' => 1.00,\n        'D' => 0.70,\n        'D-' => 0.30,\n        'E' => 0.00\n    );\n    $grade_equation_keys = array_keys($grade_equation);\n    $grade_equation_values = array_values($grade_equation);\n    $grade_equation_keys_count = count($grade_equation_keys);\n    $grade_equation_values_count = count($grade_equation_values);\n    $grade_equation_keys_index = 0;\n    $grade_equation_values_index = 0;\n    $grade_equation_keys_index_max = $grade_equation_keys_count - 1;\n    $grade_equation_values_index_max = $grade_equation_values_count - 1;\n    $grade_equation_keys_index_min = 0;\n    $grade_equation_values_index_min = 0;\n    $grade_equation_keys_index_min_max = $grade_equation_keys_index_min + 1;\n    $grade_equation_values_index_min_max = $grade_equation_values_index_min + 1;\n    $grade_equation_keys_index_max_min = $grade_equation_keys_index_max - 1;\n    $grade_equation_values_index_max_min = $grade_equation_values_index_max - 1;\n    $grade_equation_keys_index_min_max_min = $grade_equation_keys_index_min_max - 1;\n    $grade_equation_values_index_min_max_min = $grade_\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpaerxdpuv.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grade_equation = array(\n        'A+' => 4.0,\n        'A' => 3.7,\n        'A-' => 3.3,\n        'B+' => 3.0,\n        'B' => 2.7,\n        'B-' => 2.3,\n        'C+' => 2.0,\n        'C' => 1.7,\n        'C-' => 1.3,\n        'D+' => 1.0,\n        'D' => 0.7,\n        'D-' => 0.0\n    );\n    $grades = array_map($grades, function($gpa) {\n        return $grade_equation[$gpa];\n    });\n    $grades = array_filter($grades, function($gpa) {\n        return $gpa > 0;\n    });\n    $grades = array_sort($grades, function($gpa_a, $gpa_b) {\n        return $gpa_a - $gpa_b;\n    });\n    $grades = array_map($grades, function($gpa) {\n        return 'A' + $gpa;\n    });\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, array must have exactly two members in /tmp/tmp9jflla8e.php:41\nStack trace:\n#0 /tmp/tmp9jflla8e.php(41): array_map(Array, Object(Closure))\n#1 /tmp/tmp9jflla8e.php(55): numerical_letter_grade(Array)\n#2 /tmp/tmp9jflla8e.php(59): candidate(Array)\n#3 /tmp/tmp9jflla8e.php(67): test()\n#4 {main}\n  thrown in /tmp/tmp9jflla8e.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_count = count_values($grades);\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count / 2;\n    $grade_count = $grade_count + 1;\n    $grade_count = $grade_count * 2;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count / 2;\n    $grade_count = $grade_count + 1;\n    $grade_count = $grade_count * 2;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count / 2;\n    $grade_count = $grade_count + 1;\n    $grade_count = $grade_count * 2;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count / 2;\n    $grade_count = $grade_count + 1;\n    $grade_count = $grade_count * 2;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count / 2;\n    $grade_count = $grade_count + 1;\n    $grade_count = $grade_count * 2;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count / 2;\n    $grade_count = $grade_count + 1;\n    $grade_count = $grade_count * 2;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count / 2;\n    $grade_count = $grade_count + 1;\n    $grade_count = $grade_count * 2;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count / 2;\n    $grade_count = $grade_count + 1;\n    $grade_count = $grade_count * 2;\n    $grade_count = $grade_count - 1;\n    $grade_count = $grade_count / 2;\n    $grade_count = $grade_count +\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmptj9of8j2.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpy7fbxtjp.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmp2vy35awq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grade_equation = array(\n        'A+' => 4.0,\n        'A' => 3.7,\n        'A-' => 3.3,\n        'B+' => 3.0,\n        'B' => 2.7,\n        'B-' => 2.3,\n        'C+' => 2.0,\n        'C' => 1.7,\n        'C-' => 1.3,\n        'D+' => 1.0,\n        'D' => 0.7,\n        'D-' => 0.0\n    );\n    $grades = array_flip($grades);\n    $grades = array_map($grades, function ($grade) {\n        return $grade * $grade_equation[$grade];\n    });\n    $grades = array_flip($grades);\n    $grades = array_map($grades, function ($grade) {\n        return $grade / 10;\n    });\n    $grades = array_flip($grades);\n    $grades = array_map($grades, function ($grade) {\n        return $grade + '%';\n    });\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp84iqrnc5.php on line 39\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp84iqrnc5.php on line 39\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp84iqrnc5.php on line 39\n\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, first array member is not a valid class name or object in /tmp/tmp84iqrnc5.php:42\nStack trace:\n#0 /tmp/tmp84iqrnc5.php(42): array_map(Array, Object(Closure))\n#1 /tmp/tmp84iqrnc5.php(55): numerical_letter_grade(Array)\n#2 /tmp/tmp84iqrnc5.php(59): candidate(Array)\n#3 /tmp/tmp84iqrnc5.php(67): test()\n#4 {main}\n  thrown in /tmp/tmp84iqrnc5.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_table = array(\n        array(4.0, \"A+\"),\n        array(3.7, \"A\"),\n        array(3.3, \"A-\"),\n        array(3.0, \"B+\"),\n        array(2.7, \"B\"),\n        array(2.3, \"B-\"),\n        array(2.0, \"C+\"),\n        array(1.7, \"C\"),\n        array(1.3, \"C-\"),\n        array(1.0, \"D+\"),\n        array(0.7, \"D\"),\n        array(0.0, \"D-\"),\n        array(0.0, \"E\")\n    );\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: Unclosed '{' on line 24 in /tmp/tmpv247ooto.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grade_equation = array(\n        'A+' => 4.0,\n        'A' => 3.7,\n        'A-' => 3.3,\n        'B+' => 3.0,\n        'B' => 2.7,\n        'B-' => 2.3,\n        'C+' => 2.0,\n        'C' => 1.7,\n        'C-' => 1.3,\n        'D+' => 1.0,\n        'D' => 0.7,\n        'D-' => 0.0\n    );\n    $grades = array_flip($grades);\n    $grades = array_map($grades, function($gpa) {\n        return $grade_equation[$gpa];\n    });\n    $grades = array_flip($grades);\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmpi214woll.php on line 39\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmpi214woll.php on line 39\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmpi214woll.php on line 39\n\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, first array member is not a valid class name or object in /tmp/tmpi214woll.php:42\nStack trace:\n#0 /tmp/tmpi214woll.php(42): array_map(Array, Object(Closure))\n#1 /tmp/tmpi214woll.php(48): numerical_letter_grade(Array)\n#2 /tmp/tmpi214woll.php(52): candidate(Array)\n#3 /tmp/tmpi214woll.php(60): test()\n#4 {main}\n  thrown in /tmp/tmpi214woll.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grade_array = array();\n    $grade_array['A+'] = 4.0;\n    $grade_array['A'] = 3.7;\n    $grade_array['A-'] = 3.3;\n    $grade_array['B+'] = 3.0;\n    $grade_array['B'] = 2.7;\n    $grade_array['B-'] = 2.3;\n    $grade_array['C+'] = 2.0;\n    $grade_array['C'] = 1.7;\n    $grade_array['C-'] = 1.3;\n    $grade_array['D+'] = 1.0;\n    $grade_array['D'] = 0.7;\n    $grade_array['D-'] = 0.0;\n    $grade_array['E'] = 0.0;\n    $grade_array = array_flip($grade_array);\n    $grade_array = array_flip($grade_array);\n    $grade_array = array_flip($grade_array);\n    $grade_array = array_flip($grade_array);\n    $grade_array = array_flip($grade_array);\n    $grade_array = array_flip($grade_array);\n    $grade_array = array_flip($grade_array);\n    $grade_array = array_flip($grade_array);\n    $grade_array = array_flip($grade_array);\n    $grade_array = array_flip($grade_array);\n    $grade_array = array_flip($grade_array);\n    $grade_array = array_flip($grade_array);\n    $grade_array = array_flip($grade_array);\n    $grade_array = array_flip($grade_array);\n    $grade_array = array_flip($grade_array);\n    $grade_array = array_flip($grade_array);\n    $grade_array = array_flip($grade_array);\n    $grade_array = array_flip($grade_array);\n    $grade_array = array_flip($grade_\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpydbcjg7x.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// It is the last week of the semester and the teacher has to give the grades\n// to students. The teacher has been making her own algorithm for grading.\n// The only problem is, she has lost the code she used for grading.\n// She has given you an array of GPAs for some students and you have to write \n// a function that can output an array of letter grades using the following table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7                B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n// array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades) {\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292933,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp71_pfvxn.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
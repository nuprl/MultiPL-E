{
  "name": "HumanEval_15_string_sequence",
  "language": "php",
  "prompt": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n",
  "tests": "function candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for($i=0; $i<$n; $i++) {\n        $s .= $i;\n        if($i < $n-1) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe9qwbk4_.php:23\nStack trace:\n#0 /tmp/tmpe9qwbk4_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpe9qwbk4_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for($i=0; $i<$n; $i++) {\n        $s .= $i;\n        if($i < $n-1) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe9qwbk4_.php:23\nStack trace:\n#0 /tmp/tmpe9qwbk4_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpe9qwbk4_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $s .= $i;\n        if ($i < $n) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_khnz0ee.php:20\nStack trace:\n#0 /tmp/tmp_khnz0ee.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_khnz0ee.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for($i=0; $i<$n; $i++) {\n        $s .= $i . \" \";\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrjkszsu.php:20\nStack trace:\n#0 /tmp/tmpwrjkszsu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpwrjkszsu.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxbx_13k9.php:20\nStack trace:\n#0 /tmp/tmpxbx_13k9.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpxbx_13k9.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph6wu7l1h.php:20\nStack trace:\n#0 /tmp/tmph6wu7l1h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph6wu7l1h.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for ( $i = 0; $i <= $n; $i++ ) {\n        $s .= $i;\n        if ( $i < $n ) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqbzepyc.php:20\nStack trace:\n#0 /tmp/tmplqbzepyc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplqbzepyc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i;\n        if($i < $n-1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mgo3gjc.php:23\nStack trace:\n#0 /tmp/tmp3mgo3gjc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3mgo3gjc.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ( $i = 0; $i < $n; $i++ ) {\n        $result .= $i;\n        if ( $i < $n - 1 ) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4c5sso59.php:23\nStack trace:\n#0 /tmp/tmp4c5sso59.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4c5sso59.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_khnz0ee.php:20\nStack trace:\n#0 /tmp/tmp_khnz0ee.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_khnz0ee.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i;\n        if($i < $n-1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mgo3gjc.php:23\nStack trace:\n#0 /tmp/tmp3mgo3gjc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3mgo3gjc.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnobsmfa7.php:19\nStack trace:\n#0 /tmp/tmpnobsmfa7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpnobsmfa7.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lwhqes_.php:20\nStack trace:\n#0 /tmp/tmp8lwhqes_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp8lwhqes_.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i;\n        if($i < $n-1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mgo3gjc.php:23\nStack trace:\n#0 /tmp/tmp3mgo3gjc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3mgo3gjc.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_khnz0ee.php:20\nStack trace:\n#0 /tmp/tmp_khnz0ee.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_khnz0ee.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo5j88y1z.php:23\nStack trace:\n#0 /tmp/tmpo5j88y1z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpo5j88y1z.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i;\n        if($i < $n-1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mgo3gjc.php:23\nStack trace:\n#0 /tmp/tmp3mgo3gjc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3mgo3gjc.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for ( $i = 0; $i <= $n; $i++ ) {\n        $s .= $i;\n        if ( $i < $n ) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i;\n        if($i < $n-1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mgo3gjc.php:23\nStack trace:\n#0 /tmp/tmp3mgo3gjc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3mgo3gjc.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqbzepyc.php:20\nStack trace:\n#0 /tmp/tmplqbzepyc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplqbzepyc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i;\n        if($i < $n-1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mgo3gjc.php:23\nStack trace:\n#0 /tmp/tmp3mgo3gjc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3mgo3gjc.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_khnz0ee.php:20\nStack trace:\n#0 /tmp/tmp_khnz0ee.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_khnz0ee.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8r96cifj.php:19\nStack trace:\n#0 /tmp/tmp8r96cifj.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp8r96cifj.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for($i=0; $i<$n; $i++) {\n        $s .= $i;\n        if($i < $n-1) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe9qwbk4_.php:23\nStack trace:\n#0 /tmp/tmpe9qwbk4_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpe9qwbk4_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph6wu7l1h.php:20\nStack trace:\n#0 /tmp/tmph6wu7l1h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph6wu7l1h.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $s .= $i;\n        if ($i < $n) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph1ozmte9.php:19\nStack trace:\n#0 /tmp/tmph1ozmte9.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph1ozmte9.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for($i=0; $i<$n; $i++) {\n        $s .= $i . \" \";\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrjkszsu.php:20\nStack trace:\n#0 /tmp/tmpwrjkszsu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpwrjkszsu.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i;\n        if($i<$n-1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpddszytpm.php:23\nStack trace:\n#0 /tmp/tmpddszytpm.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpddszytpm.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqbzepyc.php:20\nStack trace:\n#0 /tmp/tmplqbzepyc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplqbzepyc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $s .= $i;\n        if ($i < $n - 1) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp90o2j1s6.php:23\nStack trace:\n#0 /tmp/tmp90o2j1s6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp90o2j1s6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i;\n        if($i<$n-1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpddszytpm.php:23\nStack trace:\n#0 /tmp/tmpddszytpm.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpddszytpm.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for($i=0; $i<$n; $i++) {\n        $s .= $i;\n        if($i < $n-1) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe9qwbk4_.php:23\nStack trace:\n#0 /tmp/tmpe9qwbk4_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpe9qwbk4_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lwhqes_.php:20\nStack trace:\n#0 /tmp/tmp8lwhqes_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp8lwhqes_.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_khnz0ee.php:20\nStack trace:\n#0 /tmp/tmp_khnz0ee.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_khnz0ee.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ( $i = 0; $i <= $n; $i++ ) {\n        $result .= $i;\n        if ( $i < $n ) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $s .= $i;\n        if ($i < $n) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ze70tf7.php:19\nStack trace:\n#0 /tmp/tmp_ze70tf7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp_ze70tf7.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_khnz0ee.php:20\nStack trace:\n#0 /tmp/tmp_khnz0ee.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_khnz0ee.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i;\n        if($i < $n-1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw7nq9g3x.php:22\nStack trace:\n#0 /tmp/tmpw7nq9g3x.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpw7nq9g3x.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqbzepyc.php:20\nStack trace:\n#0 /tmp/tmplqbzepyc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplqbzepyc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8r96cifj.php:19\nStack trace:\n#0 /tmp/tmp8r96cifj.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp8r96cifj.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lwhqes_.php:20\nStack trace:\n#0 /tmp/tmp8lwhqes_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp8lwhqes_.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxbx_13k9.php:20\nStack trace:\n#0 /tmp/tmpxbx_13k9.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpxbx_13k9.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i;\n        if($i < $n-1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mgo3gjc.php:23\nStack trace:\n#0 /tmp/tmp3mgo3gjc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3mgo3gjc.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph6wu7l1h.php:20\nStack trace:\n#0 /tmp/tmph6wu7l1h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph6wu7l1h.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for($i=0; $i<$n; $i++) {\n        $s .= $i . \" \";\n    }\n    return $s;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6pq49r3c.php:19\nStack trace:\n#0 /tmp/tmp6pq49r3c.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp6pq49r3c.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph6wu7l1h.php:20\nStack trace:\n#0 /tmp/tmph6wu7l1h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph6wu7l1h.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lwhqes_.php:20\nStack trace:\n#0 /tmp/tmp8lwhqes_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp8lwhqes_.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxbx_13k9.php:20\nStack trace:\n#0 /tmp/tmpxbx_13k9.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpxbx_13k9.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph1ozmte9.php:19\nStack trace:\n#0 /tmp/tmph1ozmte9.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph1ozmte9.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $s .= $i;\n        if ($i < $n) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $s .= $i;\n        if($i < $n) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqbzepyc.php:20\nStack trace:\n#0 /tmp/tmplqbzepyc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplqbzepyc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $s .= $i;\n        if ($i < $n - 1) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp90o2j1s6.php:23\nStack trace:\n#0 /tmp/tmp90o2j1s6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp90o2j1s6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph6wu7l1h.php:20\nStack trace:\n#0 /tmp/tmph6wu7l1h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph6wu7l1h.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_khnz0ee.php:20\nStack trace:\n#0 /tmp/tmp_khnz0ee.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_khnz0ee.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_khnz0ee.php:20\nStack trace:\n#0 /tmp/tmp_khnz0ee.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_khnz0ee.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqbzepyc.php:20\nStack trace:\n#0 /tmp/tmplqbzepyc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplqbzepyc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for($i=0; $i<$n; $i++) {\n        $s .= $i;\n        if($i<$n-1) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7q19jp0.php:23\nStack trace:\n#0 /tmp/tmpp7q19jp0.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpp7q19jp0.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for($i=0; $i<$n; $i++) {\n        $s .= $i . \" \";\n    }\n    return $s;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6pq49r3c.php:19\nStack trace:\n#0 /tmp/tmp6pq49r3c.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp6pq49r3c.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_khnz0ee.php:20\nStack trace:\n#0 /tmp/tmp_khnz0ee.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_khnz0ee.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_khnz0ee.php:20\nStack trace:\n#0 /tmp/tmp_khnz0ee.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_khnz0ee.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i;\n        if($i < $n-1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mgo3gjc.php:23\nStack trace:\n#0 /tmp/tmp3mgo3gjc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3mgo3gjc.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl60r7y0c.php:22\nStack trace:\n#0 /tmp/tmpl60r7y0c.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpl60r7y0c.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxbx_13k9.php:20\nStack trace:\n#0 /tmp/tmpxbx_13k9.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpxbx_13k9.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_khnz0ee.php:20\nStack trace:\n#0 /tmp/tmp_khnz0ee.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_khnz0ee.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqbzepyc.php:20\nStack trace:\n#0 /tmp/tmplqbzepyc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplqbzepyc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $s .= $i;\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy0j5bu8j.php:20\nStack trace:\n#0 /tmp/tmpy0j5bu8j.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpy0j5bu8j.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqbzepyc.php:20\nStack trace:\n#0 /tmp/tmplqbzepyc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplqbzepyc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnobsmfa7.php:19\nStack trace:\n#0 /tmp/tmpnobsmfa7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpnobsmfa7.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lwhqes_.php:20\nStack trace:\n#0 /tmp/tmp8lwhqes_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp8lwhqes_.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for($i=0; $i<$n; $i++) {\n        $s .= $i;\n        if($i < $n-1) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe9qwbk4_.php:23\nStack trace:\n#0 /tmp/tmpe9qwbk4_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpe9qwbk4_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for($i=0; $i<$n; $i++) {\n        $s .= $i . \" \";\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrjkszsu.php:20\nStack trace:\n#0 /tmp/tmpwrjkszsu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpwrjkszsu.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lwhqes_.php:20\nStack trace:\n#0 /tmp/tmp8lwhqes_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp8lwhqes_.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnobsmfa7.php:19\nStack trace:\n#0 /tmp/tmpnobsmfa7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpnobsmfa7.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqbzepyc.php:20\nStack trace:\n#0 /tmp/tmplqbzepyc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplqbzepyc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqbzepyc.php:20\nStack trace:\n#0 /tmp/tmplqbzepyc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplqbzepyc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lwhqes_.php:20\nStack trace:\n#0 /tmp/tmp8lwhqes_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp8lwhqes_.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for($i=0; $i<$n; $i++) {\n        $s .= $i . \" \";\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrjkszsu.php:20\nStack trace:\n#0 /tmp/tmpwrjkszsu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpwrjkszsu.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for($i=0; $i<$n; $i++) {\n        $s .= $i . \" \";\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrjkszsu.php:20\nStack trace:\n#0 /tmp/tmpwrjkszsu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpwrjkszsu.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for($i=0; $i<$n; $i++) {\n        $s .= $i . \" \";\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrjkszsu.php:20\nStack trace:\n#0 /tmp/tmpwrjkszsu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpwrjkszsu.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lwhqes_.php:20\nStack trace:\n#0 /tmp/tmp8lwhqes_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp8lwhqes_.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_khnz0ee.php:20\nStack trace:\n#0 /tmp/tmp_khnz0ee.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_khnz0ee.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for($i=0; $i<$n; $i++) {\n        $s .= $i . \" \";\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrjkszsu.php:20\nStack trace:\n#0 /tmp/tmpwrjkszsu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpwrjkszsu.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $s .= $i;\n        if ($i < $n) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i;\n        if($i < $n-1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mgo3gjc.php:23\nStack trace:\n#0 /tmp/tmp3mgo3gjc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3mgo3gjc.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i;\n        if($i < $n-1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mgo3gjc.php:23\nStack trace:\n#0 /tmp/tmp3mgo3gjc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3mgo3gjc.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_khnz0ee.php:20\nStack trace:\n#0 /tmp/tmp_khnz0ee.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_khnz0ee.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for($i=0; $i<$n; $i++) {\n        $s .= $i;\n        if($i < $n-1) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe9qwbk4_.php:23\nStack trace:\n#0 /tmp/tmpe9qwbk4_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpe9qwbk4_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for($i=0; $i<$n; $i++) {\n        $s .= $i;\n        if($i < $n-1) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe9qwbk4_.php:23\nStack trace:\n#0 /tmp/tmpe9qwbk4_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpe9qwbk4_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lwhqes_.php:20\nStack trace:\n#0 /tmp/tmp8lwhqes_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp8lwhqes_.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqbzepyc.php:20\nStack trace:\n#0 /tmp/tmplqbzepyc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplqbzepyc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for ( $i = 0; $i <= $n; $i++ ) {\n        $s .= $i;\n        if ( $i < $n ) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ze70tf7.php:19\nStack trace:\n#0 /tmp/tmp_ze70tf7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp_ze70tf7.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqbzepyc.php:20\nStack trace:\n#0 /tmp/tmplqbzepyc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplqbzepyc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqbzepyc.php:20\nStack trace:\n#0 /tmp/tmplqbzepyc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplqbzepyc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $s .= $i;\n        if ($i < $n) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_khnz0ee.php:20\nStack trace:\n#0 /tmp/tmp_khnz0ee.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_khnz0ee.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxbx_13k9.php:20\nStack trace:\n#0 /tmp/tmpxbx_13k9.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpxbx_13k9.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_khnz0ee.php:20\nStack trace:\n#0 /tmp/tmp_khnz0ee.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_khnz0ee.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i;\n        if($i < $n-1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mgo3gjc.php:23\nStack trace:\n#0 /tmp/tmp3mgo3gjc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3mgo3gjc.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_khnz0ee.php:20\nStack trace:\n#0 /tmp/tmp_khnz0ee.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_khnz0ee.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lwhqes_.php:20\nStack trace:\n#0 /tmp/tmp8lwhqes_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp8lwhqes_.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for($i=0; $i<$n; $i++) {\n        $s .= $i;\n        if($i < $n-1) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe9qwbk4_.php:23\nStack trace:\n#0 /tmp/tmpe9qwbk4_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpe9qwbk4_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqbzepyc.php:20\nStack trace:\n#0 /tmp/tmplqbzepyc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplqbzepyc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $result .= $i;\n        if ($i < $n - 1) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjq99lo6.php:23\nStack trace:\n#0 /tmp/tmpxjq99lo6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxjq99lo6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqbzepyc.php:20\nStack trace:\n#0 /tmp/tmplqbzepyc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplqbzepyc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i=0; $i<$n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lwhqes_.php:20\nStack trace:\n#0 /tmp/tmp8lwhqes_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp8lwhqes_.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ze70tf7.php:19\nStack trace:\n#0 /tmp/tmp_ze70tf7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp_ze70tf7.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if($i < $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n// \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $s .= $i;\n        if ($i < $n) {\n            $s .= \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
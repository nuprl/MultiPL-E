{
  "name": "HumanEval_86_anti_shuffle",
  "language": "php",
  "prompt": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n",
  "tests": "function candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(\" \", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\".\", \"\", $s);\n    $s = str_replace(\"-\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"/\", \"\", $s);\n    $s = str_replace(\"\\\\\", \"\", $s);\n    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"<\", \"\", $s);\n    $s = str_replace(\">\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\"$\", \"\", $s);\n    $s = str_replace(\"%\", \"\", $s);\n    $s = str_replace(\"@\", \"\", $s);\n    $s = str_replace(\"#\", \"\", $s);\n    $s = str_replace(\"^\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"~\", \"\", $s);\n    $s = str_replace(\"`\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpgmcdr95v.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(' ', $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpqt15aa3u.php:16\nStack trace:\n#0 /tmp/tmpqt15aa3u.php(23): anti_shuffle('Hi')\n#1 /tmp/tmpqt15aa3u.php(27): candidate('Hi')\n#2 /tmp/tmpqt15aa3u.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpqt15aa3u.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $arr.join(\" \");\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpu4jog8wg.php:15\nStack trace:\n#0 /tmp/tmpu4jog8wg.php(22): anti_shuffle('Hi')\n#1 /tmp/tmpu4jog8wg.php(26): candidate('Hi')\n#2 /tmp/tmpu4jog8wg.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpu4jog8wg.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $arr = implode(\" \", $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp1zao66w1.php:16\nStack trace:\n#0 /tmp/tmp1zao66w1.php(24): anti_shuffle('Hi')\n#1 /tmp/tmp1zao66w1.php(28): candidate('Hi')\n#2 /tmp/tmp1zao66w1.php(37): test()\n#3 {main}\n  thrown in /tmp/tmp1zao66w1.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpemj94az6.php:15\nStack trace:\n#0 /tmp/tmpemj94az6.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpemj94az6.php(32): candidate('Hi')\n#2 /tmp/tmpemj94az6.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpemj94az6.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(' ', $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpqt15aa3u.php:16\nStack trace:\n#0 /tmp/tmpqt15aa3u.php(23): anti_shuffle('Hi')\n#1 /tmp/tmpqt15aa3u.php(27): candidate('Hi')\n#2 /tmp/tmpqt15aa3u.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpqt15aa3u.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpt74h37yi.php:16\nStack trace:\n#0 /tmp/tmpt74h37yi.php(23): anti_shuffle('Hi')\n#1 /tmp/tmpt74h37yi.php(27): candidate('Hi')\n#2 /tmp/tmpt74h37yi.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpt74h37yi.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(' ', $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpqt15aa3u.php:16\nStack trace:\n#0 /tmp/tmpqt15aa3u.php(23): anti_shuffle('Hi')\n#1 /tmp/tmpqt15aa3u.php(27): candidate('Hi')\n#2 /tmp/tmpqt15aa3u.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpqt15aa3u.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, 'strcmp');\n    $s = implode(' ', $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpevapb3lk.php:16\nStack trace:\n#0 /tmp/tmpevapb3lk.php(22): anti_shuffle('Hi')\n#1 /tmp/tmpevapb3lk.php(26): candidate('Hi')\n#2 /tmp/tmpevapb3lk.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpevapb3lk.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    return implode(' ', $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp34wokt28.php:16\nStack trace:\n#0 /tmp/tmp34wokt28.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp34wokt28.php(27): candidate('Hi')\n#2 /tmp/tmp34wokt28.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp34wokt28.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    return implode(' ', $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp34wokt28.php:16\nStack trace:\n#0 /tmp/tmp34wokt28.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp34wokt28.php(27): candidate('Hi')\n#2 /tmp/tmp34wokt28.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp34wokt28.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr = $arr.sort();\n    $arr = $arr.join(\" \");\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmp8rro2m_p.php:15\nStack trace:\n#0 /tmp/tmp8rro2m_p.php(22): anti_shuffle('Hi')\n#1 /tmp/tmp8rro2m_p.php(26): candidate('Hi')\n#2 /tmp/tmp8rro2m_p.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp8rro2m_p.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(\" \", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\".\", \"\", $s);\n    $s = str_replace(\"-\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"/\", \"\", $s);\n    $s = str_replace(\"\\\\\", \"\", $s);\n    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"<\", \"\", $s);\n    $s = str_replace(\">\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"@\", \"\", $s);\n    $s = str_replace(\"#\", \"\", $s);\n    $s = str_replace(\"$\", \"\", $s);\n    $s = str_replace(\"%\", \"\", $s);\n    $s = str_replace(\"^\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s =\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp9ylnnow5.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \",$s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \",$arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmptkryt7f0.php:16\nStack trace:\n#0 /tmp/tmptkryt7f0.php(23): anti_shuffle('Hi')\n#1 /tmp/tmptkryt7f0.php(27): candidate('Hi')\n#2 /tmp/tmptkryt7f0.php(36): test()\n#3 {main}\n  thrown in /tmp/tmptkryt7f0.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpt74h37yi.php:16\nStack trace:\n#0 /tmp/tmpt74h37yi.php(23): anti_shuffle('Hi')\n#1 /tmp/tmpt74h37yi.php(27): candidate('Hi')\n#2 /tmp/tmpt74h37yi.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpt74h37yi.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpj5_z3fu6.php:16\nStack trace:\n#0 /tmp/tmpj5_z3fu6.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpj5_z3fu6.php(28): candidate('Hi')\n#2 /tmp/tmpj5_z3fu6.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpj5_z3fu6.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, 'strcmp');\n    $arr = implode(' ', $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp_c6agrl1.php:16\nStack trace:\n#0 /tmp/tmp_c6agrl1.php(22): anti_shuffle('Hi')\n#1 /tmp/tmp_c6agrl1.php(26): candidate('Hi')\n#2 /tmp/tmp_c6agrl1.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp_c6agrl1.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(\" \", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\".\", \"\", $s);\n    $s = str_replace(\"-\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"/\", \"\", $s);\n    $s = str_replace(\"\\\\\", \"\", $s);\n    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"<\", \"\", $s);\n    $s = str_replace(\">\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"@\", \"\", $s);\n    $s = str_replace(\"#\", \"\", $s);\n    $s = str_replace(\"$\", \"\", $s);\n    $s = str_replace(\"%\", \"\", $s);\n    $s = str_replace(\"^\", \"\", $s);\n    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\"-\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s =\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpeeuzj_wy.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = $s.split(\" \");\n    $s = $s.sort();\n    $s = $s.join(\" \");\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpo2lblfjw.php:15\nStack trace:\n#0 /tmp/tmpo2lblfjw.php(22): anti_shuffle('Hi')\n#1 /tmp/tmpo2lblfjw.php(26): candidate('Hi')\n#2 /tmp/tmpo2lblfjw.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpo2lblfjw.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(\" \", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\".\", \"\", $s);\n    $s = str_replace(\"-\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"<\", \"\", $s);\n    $s = str_replace(\">\", \"\", $s);\n    $s = str_replace(\"/\", \"\", $s);\n    $s = str_replace(\"\\\\\", \"\", $s);\n    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\" \", \"\", $s);\n    $s = str_replace(\"\\n\", \"\", $s);\n    $s = str_replace(\"\\r\", \"\", $s);\n    $s = str_replace(\"\\t\", \"\", $s);\n    $s = str_replace(\"\\v\", \"\", $s);\n    $s = str_replace(\"\\f\", \"\", $s);\n    $s = str_replace(\"\\b\", \"\", $s);\n    $s = str_replace(\"\\a\", \"\", $s);\n    $s = str_replace(\"\\c\", \"\", $s);\n    $s = str_replace(\"\\d\", \"\", $s);\n    $s = str_replace(\"\\e\", \"\", $s);\n    $s = str_replace(\"\\f\",\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmppxri1p6a.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $arr.join(\" \");\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpu4jog8wg.php:15\nStack trace:\n#0 /tmp/tmpu4jog8wg.php(22): anti_shuffle('Hi')\n#1 /tmp/tmpu4jog8wg.php(26): candidate('Hi')\n#2 /tmp/tmpu4jog8wg.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpu4jog8wg.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for (var i = 0; i < $arr.length; i++) {\n        $s += $arr[i];\n        if (i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp0iwu31s8.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpj5_z3fu6.php:16\nStack trace:\n#0 /tmp/tmpj5_z3fu6.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpj5_z3fu6.php(28): candidate('Hi')\n#2 /tmp/tmpj5_z3fu6.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpj5_z3fu6.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \",$s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $arr = implode(\" \",$arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp6g6vz6n_.php:16\nStack trace:\n#0 /tmp/tmp6g6vz6n_.php(24): anti_shuffle('Hi')\n#1 /tmp/tmp6g6vz6n_.php(28): candidate('Hi')\n#2 /tmp/tmp6g6vz6n_.php(37): test()\n#3 {main}\n  thrown in /tmp/tmp6g6vz6n_.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(' ', $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpqt15aa3u.php:16\nStack trace:\n#0 /tmp/tmpqt15aa3u.php(23): anti_shuffle('Hi')\n#1 /tmp/tmpqt15aa3u.php(27): candidate('Hi')\n#2 /tmp/tmpqt15aa3u.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpqt15aa3u.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    $arr = implode(\" \", $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp5g638_kx.php:16\nStack trace:\n#0 /tmp/tmp5g638_kx.php(24): anti_shuffle('Hi')\n#1 /tmp/tmp5g638_kx.php(28): candidate('Hi')\n#2 /tmp/tmp5g638_kx.php(37): test()\n#3 {main}\n  thrown in /tmp/tmp5g638_kx.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpt74h37yi.php:16\nStack trace:\n#0 /tmp/tmpt74h37yi.php(23): anti_shuffle('Hi')\n#1 /tmp/tmpt74h37yi.php(27): candidate('Hi')\n#2 /tmp/tmpt74h37yi.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpt74h37yi.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i = 0; $i < $arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmp46rgkdfy.php:15\nStack trace:\n#0 /tmp/tmp46rgkdfy.php(28): anti_shuffle('Hi')\n#1 /tmp/tmp46rgkdfy.php(32): candidate('Hi')\n#2 /tmp/tmp46rgkdfy.php(41): test()\n#3 {main}\n  thrown in /tmp/tmp46rgkdfy.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(' ', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('(', '', $s);\n    $s = str_replace(')', '', $s);\n    $s = str_replace('-', '', $s);\n    $s = str_replace('_', '', $s);\n    $s = str_replace('/', '', $s);\n    $s = str_replace('\\\\', '', $s);\n    $s = str_replace('\\'', '', $s);\n    $s = str_replace('\"', '', $s);\n    $s = str_replace('&', '', $s);\n    $s = str_replace('$', '', $s);\n    $s = str_replace('%', '', $s);\n    $s = str_replace('#', '', $s);\n    $s = str_replace('@', '', $s);\n    $s = str_replace('=', '', $s);\n    $s = str_replace('+', '', $s);\n    $s = str_replace('<', '', $s);\n    $s = str_replace('>', '', $s);\n    $s = str_replace('*', '', $s);\n    $s = str_replace('^', '', $s);\n    $s = str_replace('|', '', $s);\n    $s = str_replace('{', '', $s);\n    $s = str_replace('}', '', $s);\n    $s = str_replace('[', '', $s);\n    $s = str_replace(']', '', $s);\n    $s = str_replace('\\\\', '', $s);\n    $s = str_replace('~', '', $s);\n    $s = str_replace('`', '', $s);\n    \nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: Unclosed '{' on line 14 in /tmp/tmp3k03n8t8.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(\" \", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\".\", \"\", $s);\n    $s = str_replace(\"-\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"/\", \"\", $s);\n    $s = str_replace(\"\\\\\", \"\", $s);\n    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\"@\", \"\", $s);\n    $s = str_replace(\"#\", \"\", $s);\n    $s = str_replace(\"$\", \"\", $s);\n    $s = str_replace(\"%\", \"\", $s);\n    $s = str_replace(\"^\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\"<\", \"\", $s);\n    $s = str_replace(\">\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpw5z7d_jo.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(' ', $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpqt15aa3u.php:16\nStack trace:\n#0 /tmp/tmpqt15aa3u.php(23): anti_shuffle('Hi')\n#1 /tmp/tmpqt15aa3u.php(27): candidate('Hi')\n#2 /tmp/tmpqt15aa3u.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpqt15aa3u.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpj5_z3fu6.php:16\nStack trace:\n#0 /tmp/tmpj5_z3fu6.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpj5_z3fu6.php(28): candidate('Hi')\n#2 /tmp/tmpj5_z3fu6.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpj5_z3fu6.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(' ', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('-', '', $s);\n    $s = str_replace('_', '', $s);\n    $s = str_replace('/', '', $s);\n    $s = str_replace('(', '', $s);\n    $s = str_replace(')', '', $s);\n    $s = str_replace('\"', '', $s);\n    $s = str_replace('\\'', '', $s);\n    $s = str_replace('&', '', $s);\n    $s = str_replace('<', '', $s);\n    $s = str_replace('>', '', $s);\n    $s = str_replace('=', '', $s);\n    $s = str_replace('+', '', $s);\n    $s = str_replace('$', '', $s);\n    $s = str_replace('%', '', $s);\n    $s = str_replace('@', '', $s);\n    $s = str_replace('#', '', $s);\n    $s = str_replace('^', '', $s);\n    $s = str_replace('*', '', $s);\n    $s = str_replace('|', '', $s);\n    $s = str_replace('\\\\', '', $s);\n    $s = str_replace('{', '', $s);\n    $s = str_replace('}', '', $s);\n    $s = str_replace('[', '', $s);\n    $s = str_replace(']', '', $s);\n    $s = str_replace('~', '', $s);\n    $s = str_replace('`', '', $s);\n    $s = str_replace(' ', '', $s);\n    $\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpk2m5cfad.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(' ', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('-', '', $s);\n    $s = str_replace('_', '', $s);\n    $s = str_replace('/', '', $s);\n    $s = str_replace('\\\\', '', $s);\n    $s = str_replace('(', '', $s);\n    $s = str_replace(')', '', $s);\n    $s = str_replace('{', '', $s);\n    $s = str_replace('}', '', $s);\n    $s = str_replace('[', '', $s);\n    $s = str_replace(']', '', $s);\n    $s = str_replace('\"', '', $s);\n    $s = str_replace('\\'', '', $s);\n    $s = str_replace('<', '', $s);\n    $s = str_replace('>', '', $s);\n    $s = str_replace('|', '', $s);\n    $s = str_replace('&', '', $s);\n    $s = str_replace('=', '', $s);\n    $s = str_replace('+', '', $s);\n    $s = str_replace('*', '', $s);\n    $s = str_replace('%', '', $s);\n    $s = str_replace('#', '', $s);\n    $s = str_replace('$', '', $s);\n    $s = str_replace('@', '', $s);\n    $s = str_replace('^', '', $s);\n    $s = str_replace('~', '', $s);\n    $s = str_replace('`', '', $s);\n    $s = str_replace(' ', '', $s);\n    $\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp7_lzpnc4.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(' ', $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpqt15aa3u.php:16\nStack trace:\n#0 /tmp/tmpqt15aa3u.php(23): anti_shuffle('Hi')\n#1 /tmp/tmpqt15aa3u.php(27): candidate('Hi')\n#2 /tmp/tmpqt15aa3u.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpqt15aa3u.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \",$s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \",$arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmptkryt7f0.php:16\nStack trace:\n#0 /tmp/tmptkryt7f0.php(23): anti_shuffle('Hi')\n#1 /tmp/tmptkryt7f0.php(27): candidate('Hi')\n#2 /tmp/tmptkryt7f0.php(36): test()\n#3 {main}\n  thrown in /tmp/tmptkryt7f0.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmp9s0_42l6.php:15\nStack trace:\n#0 /tmp/tmp9s0_42l6.php(28): anti_shuffle('Hi')\n#1 /tmp/tmp9s0_42l6.php(32): candidate('Hi')\n#2 /tmp/tmp9s0_42l6.php(41): test()\n#3 {main}\n  thrown in /tmp/tmp9s0_42l6.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $arr = implode(\" \", $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp1zao66w1.php:16\nStack trace:\n#0 /tmp/tmp1zao66w1.php(24): anti_shuffle('Hi')\n#1 /tmp/tmp1zao66w1.php(28): candidate('Hi')\n#2 /tmp/tmp1zao66w1.php(37): test()\n#3 {main}\n  thrown in /tmp/tmp1zao66w1.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpemj94az6.php:15\nStack trace:\n#0 /tmp/tmpemj94az6.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpemj94az6.php(32): candidate('Hi')\n#2 /tmp/tmpemj94az6.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpemj94az6.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpl5pv2_tj.php:16\nStack trace:\n#0 /tmp/tmpl5pv2_tj.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpl5pv2_tj.php(28): candidate('Hi')\n#2 /tmp/tmpl5pv2_tj.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpl5pv2_tj.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpj5_z3fu6.php:16\nStack trace:\n#0 /tmp/tmpj5_z3fu6.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpj5_z3fu6.php(28): candidate('Hi')\n#2 /tmp/tmpj5_z3fu6.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpj5_z3fu6.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i = 0; $i < $arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmp46rgkdfy.php:15\nStack trace:\n#0 /tmp/tmp46rgkdfy.php(28): anti_shuffle('Hi')\n#1 /tmp/tmp46rgkdfy.php(32): candidate('Hi')\n#2 /tmp/tmp46rgkdfy.php(41): test()\n#3 {main}\n  thrown in /tmp/tmp46rgkdfy.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(' ', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('-', '', $s);\n    $s = str_replace('/', '', $s);\n    $s = str_replace('\\\\', '', $s);\n    $s = str_replace('(', '', $s);\n    $s = str_replace(')', '', $s);\n    $s = str_replace('{', '', $s);\n    $s = str_replace('}', '', $s);\n    $s = str_replace('[', '', $s);\n    $s = str_replace(']', '', $s);\n    $s = str_replace('<', '', $s);\n    $s = str_replace('>', '', $s);\n    $s = str_replace('\\'', '', $s);\n    $s = str_replace('\"', '', $s);\n    $s = str_replace('`', '', $s);\n    $s = str_replace(' ', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('-', '', $s);\n    $s = str_replace('/', '', $s);\n    $s = str_replace('\\\\', '', $s);\n    $s = str_replace('(', '', $s);\n    $s = str_replace(')', '', $s);\n    $s = str_replace('{', '', $s);\n    $s = str_replace('}', '', $s);\n    $s = str_replace('[', '', $s);\n    $\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpixpwr66o.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i<$arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpyqr48fdh.php:15\nStack trace:\n#0 /tmp/tmpyqr48fdh.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpyqr48fdh.php(32): candidate('Hi')\n#2 /tmp/tmpyqr48fdh.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpyqr48fdh.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(' ', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('-', '', $s);\n    $s = str_replace('_', '', $s);\n    $s = str_replace('/', '', $s);\n    $s = str_replace('(', '', $s);\n    $s = str_replace(')', '', $s);\n    $s = str_replace('&', '', $s);\n    $s = str_replace('\\'', '', $s);\n    $s = str_replace('\"', '', $s);\n    $s = str_replace('<', '', $s);\n    $s = str_replace('>', '', $s);\n    $s = str_replace('=', '', $s);\n    $s = str_replace('+', '', $s);\n    $s = str_replace('#', '', $s);\n    $s = str_replace('@', '', $s);\n    $s = str_replace('$', '', $s);\n    $s = str_replace('%', '', $s);\n    $s = str_replace('^', '', $s);\n    $s = str_replace('*', '', $s);\n    $s = str_replace('|', '', $s);\n    $s = str_replace('\\\\', '', $s);\n    $s = str_replace('{', '', $s);\n    $s = str_replace('}', '', $s);\n    $s = str_replace('[', '', $s);\n    $s = str_replace(']', '', $s);\n    $s = str_replace('`', '', $s);\n    $s = str_replace('~', '', $s);\n    $s = str_replace(' ', '', $s);\n    $\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpbw4jf2bo.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort(function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return $arr.join(\" \");\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm5drfr9k.php:15\nStack trace:\n#0 /tmp/tmpm5drfr9k.php(23): anti_shuffle('Hi')\n#1 /tmp/tmpm5drfr9k.php(27): candidate('Hi')\n#2 /tmp/tmpm5drfr9k.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpm5drfr9k.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    return implode(' ', $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp34wokt28.php:16\nStack trace:\n#0 /tmp/tmp34wokt28.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp34wokt28.php(27): candidate('Hi')\n#2 /tmp/tmp34wokt28.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp34wokt28.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpj5_z3fu6.php:16\nStack trace:\n#0 /tmp/tmpj5_z3fu6.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpj5_z3fu6.php(28): candidate('Hi')\n#2 /tmp/tmpj5_z3fu6.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpj5_z3fu6.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpemj94az6.php:15\nStack trace:\n#0 /tmp/tmpemj94az6.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpemj94az6.php(32): candidate('Hi')\n#2 /tmp/tmpemj94az6.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpemj94az6.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \",$s);\n    $arr = array_sort($arr);\n    $arr = implode(\" \",$arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp1slcq5ck.php:16\nStack trace:\n#0 /tmp/tmp1slcq5ck.php(22): anti_shuffle('Hi')\n#1 /tmp/tmp1slcq5ck.php(26): candidate('Hi')\n#2 /tmp/tmp1slcq5ck.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp1slcq5ck.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \",$s);\n    $arr = array_sort($arr);\n    $arr = implode(\" \",$arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp1slcq5ck.php:16\nStack trace:\n#0 /tmp/tmp1slcq5ck.php(22): anti_shuffle('Hi')\n#1 /tmp/tmp1slcq5ck.php(26): candidate('Hi')\n#2 /tmp/tmp1slcq5ck.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp1slcq5ck.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfbthfgdz.php:15\nStack trace:\n#0 /tmp/tmpfbthfgdz.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpfbthfgdz.php(32): candidate('Hi')\n#2 /tmp/tmpfbthfgdz.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpfbthfgdz.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $arr.join(\" \");\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpu4jog8wg.php:15\nStack trace:\n#0 /tmp/tmpu4jog8wg.php(22): anti_shuffle('Hi')\n#1 /tmp/tmpu4jog8wg.php(26): candidate('Hi')\n#2 /tmp/tmpu4jog8wg.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpu4jog8wg.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpj5_z3fu6.php:16\nStack trace:\n#0 /tmp/tmpj5_z3fu6.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpj5_z3fu6.php(28): candidate('Hi')\n#2 /tmp/tmpj5_z3fu6.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpj5_z3fu6.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfbthfgdz.php:15\nStack trace:\n#0 /tmp/tmpfbthfgdz.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpfbthfgdz.php(32): candidate('Hi')\n#2 /tmp/tmpfbthfgdz.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpfbthfgdz.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, 'strcmp');\n    $arr = implode(\" \", $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpgctzs6gk.php:16\nStack trace:\n#0 /tmp/tmpgctzs6gk.php(22): anti_shuffle('Hi')\n#1 /tmp/tmpgctzs6gk.php(26): candidate('Hi')\n#2 /tmp/tmpgctzs6gk.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpgctzs6gk.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(' ', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace('-', '', $s);\n    $s = str_replace('_', '', $s);\n    $s = str_replace(' ', '', $s);\n    $s = str_replace('\\'', '', $s);\n    $s = str_replace('\"', '', $s);\n    $s = str_replace('(', '', $s);\n    $s = str_replace(')', '', $s);\n    $s = str_replace('{', '', $s);\n    $s = str_replace('}', '', $s);\n    $s = str_replace('[', '', $s);\n    $s = str_replace(']', '', $s);\n    $s = str_replace('+', '', $s);\n    $s = str_replace('=', '', $s);\n    $s = str_replace('@', '', $s);\n    $s = str_replace('#', '', $s);\n    $s = str_replace('$', '', $s);\n    $s = str_replace('%', '', $s);\n    $s = str_replace('&', '', $s);\n    $s = str_replace('/', '', $s);\n    $s = str_replace('\\\\', '', $s);\n    $s = str_replace('|', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('<', '', $s);\n    $s = str_replace('>', '', $s);\n    $s = str_replace('*', '', $s);\n    $s = str_replace('^', '', $s);\n    $s = str_replace('~', '', $s);\n    $s = str_replace('`', '', $s);\n    $\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp0yngnz60.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, 'strcmp');\n    $arr = implode(' ', $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp_c6agrl1.php:16\nStack trace:\n#0 /tmp/tmp_c6agrl1.php(22): anti_shuffle('Hi')\n#1 /tmp/tmp_c6agrl1.php(26): candidate('Hi')\n#2 /tmp/tmp_c6agrl1.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp_c6agrl1.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $arr.join(\" \");\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpu4jog8wg.php:15\nStack trace:\n#0 /tmp/tmpu4jog8wg.php(22): anti_shuffle('Hi')\n#1 /tmp/tmpu4jog8wg.php(26): candidate('Hi')\n#2 /tmp/tmpu4jog8wg.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpu4jog8wg.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpemj94az6.php:15\nStack trace:\n#0 /tmp/tmpemj94az6.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpemj94az6.php(32): candidate('Hi')\n#2 /tmp/tmpemj94az6.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpemj94az6.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpt74h37yi.php:16\nStack trace:\n#0 /tmp/tmpt74h37yi.php(23): anti_shuffle('Hi')\n#1 /tmp/tmpt74h37yi.php(27): candidate('Hi')\n#2 /tmp/tmpt74h37yi.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpt74h37yi.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpj5_z3fu6.php:16\nStack trace:\n#0 /tmp/tmpj5_z3fu6.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpj5_z3fu6.php(28): candidate('Hi')\n#2 /tmp/tmpj5_z3fu6.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpj5_z3fu6.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr = $arr.sort();\n    $arr = $arr.join(\" \");\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmp8rro2m_p.php:15\nStack trace:\n#0 /tmp/tmp8rro2m_p.php(22): anti_shuffle('Hi')\n#1 /tmp/tmp8rro2m_p.php(26): candidate('Hi')\n#2 /tmp/tmp8rro2m_p.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp8rro2m_p.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpt74h37yi.php:16\nStack trace:\n#0 /tmp/tmpt74h37yi.php(23): anti_shuffle('Hi')\n#1 /tmp/tmpt74h37yi.php(27): candidate('Hi')\n#2 /tmp/tmpt74h37yi.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpt74h37yi.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpt74h37yi.php:16\nStack trace:\n#0 /tmp/tmpt74h37yi.php(23): anti_shuffle('Hi')\n#1 /tmp/tmpt74h37yi.php(27): candidate('Hi')\n#2 /tmp/tmpt74h37yi.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpt74h37yi.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for (var i = 0; i < $arr.length; i++) {\n        $s += $arr[i];\n        if (i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp0iwu31s8.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    return implode(' ', $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp34wokt28.php:16\nStack trace:\n#0 /tmp/tmp34wokt28.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp34wokt28.php(27): candidate('Hi')\n#2 /tmp/tmp34wokt28.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp34wokt28.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(' ', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('-', '', $s);\n    $s = str_replace('_', '', $s);\n    $s = str_replace('/', '', $s);\n    $s = str_replace('\\\\', '', $s);\n    $s = str_replace('(', '', $s);\n    $s = str_replace(')', '', $s);\n    $s = str_replace('{', '', $s);\n    $s = str_replace('}', '', $s);\n    $s = str_replace('[', '', $s);\n    $s = str_replace(']', '', $s);\n    $s = str_replace('<', '', $s);\n    $s = str_replace('>', '', $s);\n    $s = str_replace('\"', '', $s);\n    $s = str_replace('\\'', '', $s);\n    $s = str_replace('&', '', $s);\n    $s = str_replace('|', '', $s);\n    $s = str_replace('=', '', $s);\n    $s = str_replace('+', '', $s);\n    $s = str_replace('%', '', $s);\n    $s = str_replace('#', '', $s);\n    $s = str_replace('@', '', $s);\n    $s = str_replace('$', '', $s);\n    $s = str_replace('^', '', $s);\n    $s = str_replace('*', '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('?', '', $s);\n    \nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: Unclosed '{' on line 14 in /tmp/tmpka7zwml6.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpemj94az6.php:15\nStack trace:\n#0 /tmp/tmpemj94az6.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpemj94az6.php(32): candidate('Hi')\n#2 /tmp/tmpemj94az6.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpemj94az6.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(' ', $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpbj4c1bh0.php:16\nStack trace:\n#0 /tmp/tmpbj4c1bh0.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpbj4c1bh0.php(28): candidate('Hi')\n#2 /tmp/tmpbj4c1bh0.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpbj4c1bh0.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfbthfgdz.php:15\nStack trace:\n#0 /tmp/tmpfbthfgdz.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpfbthfgdz.php(32): candidate('Hi')\n#2 /tmp/tmpfbthfgdz.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpfbthfgdz.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfbthfgdz.php:15\nStack trace:\n#0 /tmp/tmpfbthfgdz.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpfbthfgdz.php(32): candidate('Hi')\n#2 /tmp/tmpfbthfgdz.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpfbthfgdz.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \",$s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s = $s . $arr[$i];\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpgpvunw_k.php:16\nStack trace:\n#0 /tmp/tmpgpvunw_k.php(27): anti_shuffle('Hi')\n#1 /tmp/tmpgpvunw_k.php(31): candidate('Hi')\n#2 /tmp/tmpgpvunw_k.php(40): test()\n#3 {main}\n  thrown in /tmp/tmpgpvunw_k.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfbthfgdz.php:15\nStack trace:\n#0 /tmp/tmpfbthfgdz.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpfbthfgdz.php(32): candidate('Hi')\n#2 /tmp/tmpfbthfgdz.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpfbthfgdz.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ',$s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(' ',$arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp8wy3ua1u.php:16\nStack trace:\n#0 /tmp/tmp8wy3ua1u.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp8wy3ua1u.php(27): candidate('Hi')\n#2 /tmp/tmp8wy3ua1u.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp8wy3ua1u.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfbthfgdz.php:15\nStack trace:\n#0 /tmp/tmpfbthfgdz.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpfbthfgdz.php(32): candidate('Hi')\n#2 /tmp/tmpfbthfgdz.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpfbthfgdz.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfbthfgdz.php:15\nStack trace:\n#0 /tmp/tmpfbthfgdz.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpfbthfgdz.php(32): candidate('Hi')\n#2 /tmp/tmpfbthfgdz.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpfbthfgdz.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $arr.join(\" \");\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpu4jog8wg.php:15\nStack trace:\n#0 /tmp/tmpu4jog8wg.php(22): anti_shuffle('Hi')\n#1 /tmp/tmpu4jog8wg.php(26): candidate('Hi')\n#2 /tmp/tmpu4jog8wg.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpu4jog8wg.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpemj94az6.php:15\nStack trace:\n#0 /tmp/tmpemj94az6.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpemj94az6.php(32): candidate('Hi')\n#2 /tmp/tmpemj94az6.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpemj94az6.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(' ', $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpqt15aa3u.php:16\nStack trace:\n#0 /tmp/tmpqt15aa3u.php(23): anti_shuffle('Hi')\n#1 /tmp/tmpqt15aa3u.php(27): candidate('Hi')\n#2 /tmp/tmpqt15aa3u.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpqt15aa3u.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(' ', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('-', '', $s);\n    $s = str_replace('_', '', $s);\n    $s = str_replace('/', '', $s);\n    $s = str_replace('(', '', $s);\n    $s = str_replace(')', '', $s);\n    $s = str_replace('\"', '', $s);\n    $s = str_replace('\\'', '', $s);\n    $s = str_replace('\\\\', '', $s);\n    $s = str_replace('[', '', $s);\n    $s = str_replace(']', '', $s);\n    $s = str_replace('{', '', $s);\n    $s = str_replace('}', '', $s);\n    $s = str_replace('|', '', $s);\n    $s = str_replace('<', '', $s);\n    $s = str_replace('>', '', $s);\n    $s = str_replace('=', '', $s);\n    $s = str_replace('+', '', $s);\n    $s = str_replace('&', '', $s);\n    $s = str_replace('@', '', $s);\n    $s = str_replace('#', '', $s);\n    $s = str_replace('$', '', $s);\n    $s = str_replace('%', '', $s);\n    $s = str_replace('^', '', $s);\n    $s = str_replace('*', '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('?', '', $s);\n    \nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: Unclosed '{' on line 14 in /tmp/tmpp6wtbokt.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfbthfgdz.php:15\nStack trace:\n#0 /tmp/tmpfbthfgdz.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpfbthfgdz.php(32): candidate('Hi')\n#2 /tmp/tmpfbthfgdz.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpfbthfgdz.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, 'strcmp');\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s = $s . $arr[$i];\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpnpke7wtb.php:16\nStack trace:\n#0 /tmp/tmpnpke7wtb.php(25): anti_shuffle('Hi')\n#1 /tmp/tmpnpke7wtb.php(29): candidate('Hi')\n#2 /tmp/tmpnpke7wtb.php(38): test()\n#3 {main}\n  thrown in /tmp/tmpnpke7wtb.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s = $s + $arr[$i];\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpznv6ym3_.php:15\nStack trace:\n#0 /tmp/tmpznv6ym3_.php(25): anti_shuffle('Hi')\n#1 /tmp/tmpznv6ym3_.php(29): candidate('Hi')\n#2 /tmp/tmpznv6ym3_.php(38): test()\n#3 {main}\n  thrown in /tmp/tmpznv6ym3_.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(' ', $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpqt15aa3u.php:16\nStack trace:\n#0 /tmp/tmpqt15aa3u.php(23): anti_shuffle('Hi')\n#1 /tmp/tmpqt15aa3u.php(27): candidate('Hi')\n#2 /tmp/tmpqt15aa3u.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpqt15aa3u.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpl5pv2_tj.php:16\nStack trace:\n#0 /tmp/tmpl5pv2_tj.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpl5pv2_tj.php(28): candidate('Hi')\n#2 /tmp/tmpl5pv2_tj.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpl5pv2_tj.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    $s = implode(' ', $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpxefamhb_.php:16\nStack trace:\n#0 /tmp/tmpxefamhb_.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpxefamhb_.php(28): candidate('Hi')\n#2 /tmp/tmpxefamhb_.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpxefamhb_.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpl5pv2_tj.php:16\nStack trace:\n#0 /tmp/tmpl5pv2_tj.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpl5pv2_tj.php(28): candidate('Hi')\n#2 /tmp/tmpl5pv2_tj.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpl5pv2_tj.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfbthfgdz.php:15\nStack trace:\n#0 /tmp/tmpfbthfgdz.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpfbthfgdz.php(32): candidate('Hi')\n#2 /tmp/tmpfbthfgdz.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpfbthfgdz.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ',$s);\n    $arr = array_sort($arr);\n    $arr = implode(' ',$arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpsx2epyd8.php:16\nStack trace:\n#0 /tmp/tmpsx2epyd8.php(22): anti_shuffle('Hi')\n#1 /tmp/tmpsx2epyd8.php(26): candidate('Hi')\n#2 /tmp/tmpsx2epyd8.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpsx2epyd8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr = $arr.sort();\n    $arr = $arr.join(\" \");\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmp8rro2m_p.php:15\nStack trace:\n#0 /tmp/tmp8rro2m_p.php(22): anti_shuffle('Hi')\n#1 /tmp/tmp8rro2m_p.php(26): candidate('Hi')\n#2 /tmp/tmp8rro2m_p.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp8rro2m_p.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpl5pv2_tj.php:16\nStack trace:\n#0 /tmp/tmpl5pv2_tj.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpl5pv2_tj.php(28): candidate('Hi')\n#2 /tmp/tmpl5pv2_tj.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpl5pv2_tj.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for (var i = 0; i < $arr.length; i++) {\n        $s += $arr[i];\n        if (i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp0iwu31s8.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, 'strcmp');\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp6xa1j8tn.php:16\nStack trace:\n#0 /tmp/tmp6xa1j8tn.php(22): anti_shuffle('Hi')\n#1 /tmp/tmp6xa1j8tn.php(26): candidate('Hi')\n#2 /tmp/tmp6xa1j8tn.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp6xa1j8tn.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(' ', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('-', '', $s);\n    $s = str_replace('/', '', $s);\n    $s = str_replace('\\\\', '', $s);\n    $s = str_replace('(', '', $s);\n    $s = str_replace(')', '', $s);\n    $s = str_replace('\"', '', $s);\n    $s = str_replace('\\'', '', $s);\n    $s = str_replace('&', '', $s);\n    $s = str_replace('<', '', $s);\n    $s = str_replace('>', '', $s);\n    $s = str_replace('=', '', $s);\n    $s = str_replace('+', '', $s);\n    $s = str_replace('#', '', $s);\n    $s = str_replace('$', '', $s);\n    $s = str_replace('%', '', $s);\n    $s = str_replace('@', '', $s);\n    $s = str_replace('^', '', $s);\n    $s = str_replace('*', '', $s);\n    $s = str_replace('|', '', $s);\n    $s = str_replace('{', '', $s);\n    $s = str_replace('}', '', $s);\n    $s = str_replace('[', '', $s);\n    $s = str_replace(']', '', $s);\n    $s = str_replace('_', '', $s);\n    $s = str_replace('`', '', $s);\n    $s = str_replace('~', '', $s);\n    $s = str_replace('\\\\', '', $s);\n    \nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: Unclosed '{' on line 14 in /tmp/tmp57m9szz8.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(' ', $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpbj4c1bh0.php:16\nStack trace:\n#0 /tmp/tmpbj4c1bh0.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpbj4c1bh0.php(28): candidate('Hi')\n#2 /tmp/tmpbj4c1bh0.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpbj4c1bh0.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for (var i = 0; i < $arr.length; i++) {\n        $s += $arr[i];\n        if (i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp0iwu31s8.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpemj94az6.php:15\nStack trace:\n#0 /tmp/tmpemj94az6.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpemj94az6.php(32): candidate('Hi')\n#2 /tmp/tmpemj94az6.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpemj94az6.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmp9s0_42l6.php:15\nStack trace:\n#0 /tmp/tmp9s0_42l6.php(28): anti_shuffle('Hi')\n#1 /tmp/tmp9s0_42l6.php(32): candidate('Hi')\n#2 /tmp/tmp9s0_42l6.php(41): test()\n#3 {main}\n  thrown in /tmp/tmp9s0_42l6.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, 'strcmp');\n    $arr = implode(' ', $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp_c6agrl1.php:16\nStack trace:\n#0 /tmp/tmp_c6agrl1.php(22): anti_shuffle('Hi')\n#1 /tmp/tmp_c6agrl1.php(26): candidate('Hi')\n#2 /tmp/tmp_c6agrl1.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp_c6agrl1.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmp9s0_42l6.php:15\nStack trace:\n#0 /tmp/tmp9s0_42l6.php(28): anti_shuffle('Hi')\n#1 /tmp/tmp9s0_42l6.php(32): candidate('Hi')\n#2 /tmp/tmp9s0_42l6.php(41): test()\n#3 {main}\n  thrown in /tmp/tmp9s0_42l6.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpj5_z3fu6.php:16\nStack trace:\n#0 /tmp/tmpj5_z3fu6.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpj5_z3fu6.php(28): candidate('Hi')\n#2 /tmp/tmpj5_z3fu6.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpj5_z3fu6.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(' ', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('-', '', $s);\n    $s = str_replace('/', '', $s);\n    $s = str_replace('\\\\', '', $s);\n    $s = str_replace('(', '', $s);\n    $s = str_replace(')', '', $s);\n    $s = str_replace('[', '', $s);\n    $s = str_replace(']', '', $s);\n    $s = str_replace('{', '', $s);\n    $s = str_replace('}', '', $s);\n    $s = str_replace('\\'', '', $s);\n    $s = str_replace('\"', '', $s);\n    $s = str_replace('<', '', $s);\n    $s = str_replace('>', '', $s);\n    $s = str_replace('=', '', $s);\n    $s = str_replace('+', '', $s);\n    $s = str_replace('_', '', $s);\n    $s = str_replace('$', '', $s);\n    $s = str_replace('@', '', $s);\n    $s = str_replace('#', '', $s);\n    $s = str_replace('%', '', $s);\n    $s = str_replace('^', '', $s);\n    $s = str_replace('&', '', $s);\n    $s = str_replace('*', '', $s);\n    $s = str_replace('|', '', $s);\n    $s = str_replace('~', '', $s);\n    $s = str_replace('`', '', $s);\n    $s = str_replace(' ', '', $s);\n    $\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpk31v97cy.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpl5pv2_tj.php:16\nStack trace:\n#0 /tmp/tmpl5pv2_tj.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpl5pv2_tj.php(28): candidate('Hi')\n#2 /tmp/tmpl5pv2_tj.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpl5pv2_tj.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ',$s);\n    $arr = array_sort($arr);\n    $arr = implode(' ',$arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpsx2epyd8.php:16\nStack trace:\n#0 /tmp/tmpsx2epyd8.php(22): anti_shuffle('Hi')\n#1 /tmp/tmpsx2epyd8.php(26): candidate('Hi')\n#2 /tmp/tmpsx2epyd8.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpsx2epyd8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = $s.split(\" \");\n    $s = $s.sort();\n    $s = $s.join(\" \");\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpo2lblfjw.php:15\nStack trace:\n#0 /tmp/tmpo2lblfjw.php(22): anti_shuffle('Hi')\n#1 /tmp/tmpo2lblfjw.php(26): candidate('Hi')\n#2 /tmp/tmpo2lblfjw.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpo2lblfjw.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(\" \", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\".\", \"\", $s);\n    $s = str_replace(\"-\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\"/\", \"\", $s);\n    $s = str_replace(\"\\\\\", \"\", $s);\n    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"<\", \"\", $s);\n    $s = str_replace(\">\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\"%\", \"\", $s);\n    $s = str_replace(\"#\", \"\", $s);\n    $s = str_replace(\"@\", \"\", $s);\n    $s = str_replace(\"$\", \"\", $s);\n    $s = str_replace(\"^\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n    $s =\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmppyfgdjn8.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpj5_z3fu6.php:16\nStack trace:\n#0 /tmp/tmpj5_z3fu6.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpj5_z3fu6.php(28): candidate('Hi')\n#2 /tmp/tmpj5_z3fu6.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpj5_z3fu6.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpj5_z3fu6.php:16\nStack trace:\n#0 /tmp/tmpj5_z3fu6.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpj5_z3fu6.php(28): candidate('Hi')\n#2 /tmp/tmpj5_z3fu6.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpj5_z3fu6.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ',$s);\n    $arr = array_sort($arr);\n    $arr = implode(' ',$arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpsx2epyd8.php:16\nStack trace:\n#0 /tmp/tmpsx2epyd8.php(22): anti_shuffle('Hi')\n#1 /tmp/tmpsx2epyd8.php(26): candidate('Hi')\n#2 /tmp/tmpsx2epyd8.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpsx2epyd8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i = 0; $i < $arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmp46rgkdfy.php:15\nStack trace:\n#0 /tmp/tmp46rgkdfy.php(28): anti_shuffle('Hi')\n#1 /tmp/tmp46rgkdfy.php(32): candidate('Hi')\n#2 /tmp/tmp46rgkdfy.php(41): test()\n#3 {main}\n  thrown in /tmp/tmp46rgkdfy.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpj5_z3fu6.php:16\nStack trace:\n#0 /tmp/tmpj5_z3fu6.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpj5_z3fu6.php(28): candidate('Hi')\n#2 /tmp/tmpj5_z3fu6.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpj5_z3fu6.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(' ', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('-', '', $s);\n    $s = str_replace('_', '', $s);\n    $s = str_replace('(', '', $s);\n    $s = str_replace(')', '', $s);\n    $s = str_replace('{', '', $s);\n    $s = str_replace('}', '', $s);\n    $s = str_replace('[', '', $s);\n    $s = str_replace(']', '', $s);\n    $s = str_replace('/', '', $s);\n    $s = str_replace('\\\\', '', $s);\n    $s = str_replace('|', '', $s);\n    $s = str_replace('\"', '', $s);\n    $s = str_replace('\\'', '', $s);\n    $s = str_replace('<', '', $s);\n    $s = str_replace('>', '', $s);\n    $s = str_replace('=', '', $s);\n    $s = str_replace('+', '', $s);\n    $s = str_replace('-', '', $s);\n    $s = str_replace('*', '', $s);\n    $s = str_replace('%', '', $s);\n    $s = str_replace('#', '', $s);\n    $s = str_replace('@', '', $s);\n    $s = str_replace('$', '', $s);\n    $s = str_replace('&', '', $s);\n    $s = str_replace('^', '', $s);\n    $s = str_replace('%', '', $s);\n    $s = str_replace('&', '', $s);\n    \nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: Unclosed '{' on line 14 in /tmp/tmp4515x2iq.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \",$s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpirwx5oip.php:16\nStack trace:\n#0 /tmp/tmpirwx5oip.php(30): anti_shuffle('Hi')\n#1 /tmp/tmpirwx5oip.php(34): candidate('Hi')\n#2 /tmp/tmpirwx5oip.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpirwx5oip.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(' ', $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpqt15aa3u.php:16\nStack trace:\n#0 /tmp/tmpqt15aa3u.php(23): anti_shuffle('Hi')\n#1 /tmp/tmpqt15aa3u.php(27): candidate('Hi')\n#2 /tmp/tmpqt15aa3u.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpqt15aa3u.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, 'strcmp');\n    $arr = implode(\" \", $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpgctzs6gk.php:16\nStack trace:\n#0 /tmp/tmpgctzs6gk.php(22): anti_shuffle('Hi')\n#1 /tmp/tmpgctzs6gk.php(26): candidate('Hi')\n#2 /tmp/tmpgctzs6gk.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpgctzs6gk.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    $arr = implode(\" \", $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp5g638_kx.php:16\nStack trace:\n#0 /tmp/tmp5g638_kx.php(24): anti_shuffle('Hi')\n#1 /tmp/tmp5g638_kx.php(28): candidate('Hi')\n#2 /tmp/tmp5g638_kx.php(37): test()\n#3 {main}\n  thrown in /tmp/tmp5g638_kx.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpemj94az6.php:15\nStack trace:\n#0 /tmp/tmpemj94az6.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpemj94az6.php(32): candidate('Hi')\n#2 /tmp/tmpemj94az6.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpemj94az6.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpj5_z3fu6.php:16\nStack trace:\n#0 /tmp/tmpj5_z3fu6.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpj5_z3fu6.php(28): candidate('Hi')\n#2 /tmp/tmpj5_z3fu6.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpj5_z3fu6.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(' ', $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpbj4c1bh0.php:16\nStack trace:\n#0 /tmp/tmpbj4c1bh0.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpbj4c1bh0.php(28): candidate('Hi')\n#2 /tmp/tmpbj4c1bh0.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpbj4c1bh0.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpj5_z3fu6.php:16\nStack trace:\n#0 /tmp/tmpj5_z3fu6.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpj5_z3fu6.php(28): candidate('Hi')\n#2 /tmp/tmpj5_z3fu6.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpj5_z3fu6.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(\" \", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\".\", \"\", $s);\n    $s = str_replace(\"-\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"@\", \"\", $s);\n    $s = str_replace(\"#\", \"\", $s);\n    $s = str_replace(\"$\", \"\", $s);\n    $s = str_replace(\"%\", \"\", $s);\n    $s = str_replace(\"^\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"<\", \"\", $s);\n    $s = str_replace(\">\", \"\", $s);\n    $s = str_replace(\"/\", \"\", $s);\n    $s = str_replace(\"\\\\\", \"\", $s);\n    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpehbzn5me.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, 'strcmp');\n    $arr = implode(' ', $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp_c6agrl1.php:16\nStack trace:\n#0 /tmp/tmp_c6agrl1.php(22): anti_shuffle('Hi')\n#1 /tmp/tmp_c6agrl1.php(26): candidate('Hi')\n#2 /tmp/tmp_c6agrl1.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp_c6agrl1.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(\" \", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\".\", \"\", $s);\n    $s = str_replace(\"-\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"/\", \"\", $s);\n    $s = str_replace(\"\\\\\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\"$\", \"\", $s);\n    $s = str_replace(\"@\", \"\", $s);\n    $s = str_replace(\"#\", \"\", $s);\n    $s = str_replace(\"%\", \"\", $s);\n    $s = str_replace(\"^\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\"<\", \"\", $s);\n    $s = str_replace(\">\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpeii2m7qg.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(' ', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('-', '', $s);\n    $s = str_replace('_', '', $s);\n    $s = str_replace('/', '', $s);\n    $s = str_replace('\\\\', '', $s);\n    $s = str_replace('(', '', $s);\n    $s = str_replace(')', '', $s);\n    $s = str_replace('{', '', $s);\n    $s = str_replace('}', '', $s);\n    $s = str_replace('[', '', $s);\n    $s = str_replace(']', '', $s);\n    $s = str_replace('<', '', $s);\n    $s = str_replace('>', '', $s);\n    $s = str_replace('\\'', '', $s);\n    $s = str_replace('\"', '', $s);\n    $s = str_replace('+', '', $s);\n    $s = str_replace('=', '', $s);\n    $s = str_replace('@', '', $s);\n    $s = str_replace('#', '', $s);\n    $s = str_replace('$', '', $s);\n    $s = str_replace('%', '', $s);\n    $s = str_replace('&', '', $s);\n    $s = str_replace('^', '', $s);\n    $s = str_replace('*', '', $s);\n    $s = str_replace('|', '', $s);\n    $s = str_replace('~', '', $s);\n    $s = str_replace('`', '', $s);\n    $s = str_replace(' ', '', $s);\n    $\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpwrogmuhm.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmp9s0_42l6.php:15\nStack trace:\n#0 /tmp/tmp9s0_42l6.php(28): anti_shuffle('Hi')\n#1 /tmp/tmp9s0_42l6.php(32): candidate('Hi')\n#2 /tmp/tmp9s0_42l6.php(41): test()\n#3 {main}\n  thrown in /tmp/tmp9s0_42l6.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \",$s);\n    $arr = array_sort($arr);\n    $arr = implode(\" \",$arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp1slcq5ck.php:16\nStack trace:\n#0 /tmp/tmp1slcq5ck.php(22): anti_shuffle('Hi')\n#1 /tmp/tmp1slcq5ck.php(26): candidate('Hi')\n#2 /tmp/tmp1slcq5ck.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp1slcq5ck.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpemj94az6.php:15\nStack trace:\n#0 /tmp/tmpemj94az6.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpemj94az6.php(32): candidate('Hi')\n#2 /tmp/tmpemj94az6.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpemj94az6.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr);\n    $arr = implode(\" \", $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmplizagh4x.php:16\nStack trace:\n#0 /tmp/tmplizagh4x.php(22): anti_shuffle('Hi')\n#1 /tmp/tmplizagh4x.php(26): candidate('Hi')\n#2 /tmp/tmplizagh4x.php(35): test()\n#3 {main}\n  thrown in /tmp/tmplizagh4x.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpj5_z3fu6.php:16\nStack trace:\n#0 /tmp/tmpj5_z3fu6.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpj5_z3fu6.php(28): candidate('Hi')\n#2 /tmp/tmpj5_z3fu6.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpj5_z3fu6.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for (i = 0; i < $arr.length; i++) {\n        $s += $arr[i];\n        if (i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected token \"=\", expecting \";\" in /tmp/tmpwfzxnicv.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(' ', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('-', '', $s);\n    $s = str_replace('_', '', $s);\n    $s = str_replace('(', '', $s);\n    $s = str_replace(')', '', $s);\n    $s = str_replace('[', '', $s);\n    $s = str_replace(']', '', $s);\n    $s = str_replace('{', '', $s);\n    $s = str_replace('}', '', $s);\n    $s = str_replace('\"', '', $s);\n    $s = str_replace('\\'', '', $s);\n    $s = str_replace('/', '', $s);\n    $s = str_replace('\\\\', '', $s);\n    $s = str_replace('|', '', $s);\n    $s = str_replace('<', '', $s);\n    $s = str_replace('>', '', $s);\n    $s = str_replace('&', '', $s);\n    $s = str_replace('~', '', $s);\n    $s = str_replace('=', '', $s);\n    $s = str_replace('+', '', $s);\n    $s = str_replace('$', '', $s);\n    $s = str_replace('%', '', $s);\n    $s = str_replace('@', '', $s);\n    $s = str_replace('#', '', $s);\n    $s = str_replace('^', '', $s);\n    $s = str_replace('*', '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n    \nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: Unclosed '{' on line 14 in /tmp/tmpqez_tydq.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    return implode(' ', $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp34wokt28.php:16\nStack trace:\n#0 /tmp/tmp34wokt28.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp34wokt28.php(27): candidate('Hi')\n#2 /tmp/tmp34wokt28.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp34wokt28.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpj5_z3fu6.php:16\nStack trace:\n#0 /tmp/tmpj5_z3fu6.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpj5_z3fu6.php(28): candidate('Hi')\n#2 /tmp/tmpj5_z3fu6.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpj5_z3fu6.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpemj94az6.php:15\nStack trace:\n#0 /tmp/tmpemj94az6.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpemj94az6.php(32): candidate('Hi')\n#2 /tmp/tmpemj94az6.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpemj94az6.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, 'strcmp');\n    $arr = implode(' ', $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp_c6agrl1.php:16\nStack trace:\n#0 /tmp/tmp_c6agrl1.php(22): anti_shuffle('Hi')\n#1 /tmp/tmp_c6agrl1.php(26): candidate('Hi')\n#2 /tmp/tmp_c6agrl1.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp_c6agrl1.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpj5_z3fu6.php:16\nStack trace:\n#0 /tmp/tmpj5_z3fu6.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpj5_z3fu6.php(28): candidate('Hi')\n#2 /tmp/tmpj5_z3fu6.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpj5_z3fu6.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ',$s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(' ',$arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp8wy3ua1u.php:16\nStack trace:\n#0 /tmp/tmp8wy3ua1u.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp8wy3ua1u.php(27): candidate('Hi')\n#2 /tmp/tmp8wy3ua1u.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp8wy3ua1u.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, 'strcmp');\n    $arr = implode(' ', $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp_c6agrl1.php:16\nStack trace:\n#0 /tmp/tmp_c6agrl1.php(22): anti_shuffle('Hi')\n#1 /tmp/tmp_c6agrl1.php(26): candidate('Hi')\n#2 /tmp/tmp_c6agrl1.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp_c6agrl1.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    return implode(' ', $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp34wokt28.php:16\nStack trace:\n#0 /tmp/tmp34wokt28.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp34wokt28.php(27): candidate('Hi')\n#2 /tmp/tmp34wokt28.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp34wokt28.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $s = str_replace(\" \", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\".\", \"\", $s);\n    $s = str_replace(\"-\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\"/\", \"\", $s);\n    $s = str_replace(\"\\\\\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"<\", \"\", $s);\n    $s = str_replace(\">\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\"%\", \"\", $s);\n    $s = str_replace(\"#\", \"\", $s);\n    $s = str_replace(\"@\", \"\", $s);\n    $s = str_replace(\"$\", \"\", $s);\n    $s = str_replace(\"^\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"~\", \"\", $s);\n    $s = str\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp1a237a_l.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpl5pv2_tj.php:16\nStack trace:\n#0 /tmp/tmpl5pv2_tj.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpl5pv2_tj.php(28): candidate('Hi')\n#2 /tmp/tmpl5pv2_tj.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpl5pv2_tj.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpl5pv2_tj.php:16\nStack trace:\n#0 /tmp/tmpl5pv2_tj.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpl5pv2_tj.php(28): candidate('Hi')\n#2 /tmp/tmpl5pv2_tj.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpl5pv2_tj.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpl5pv2_tj.php:16\nStack trace:\n#0 /tmp/tmpl5pv2_tj.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpl5pv2_tj.php(28): candidate('Hi')\n#2 /tmp/tmpl5pv2_tj.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpl5pv2_tj.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpemj94az6.php:15\nStack trace:\n#0 /tmp/tmpemj94az6.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpemj94az6.php(32): candidate('Hi')\n#2 /tmp/tmpemj94az6.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpemj94az6.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length - 1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpfbthfgdz.php:15\nStack trace:\n#0 /tmp/tmpfbthfgdz.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpfbthfgdz.php(32): candidate('Hi')\n#2 /tmp/tmpfbthfgdz.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpfbthfgdz.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return ord($a) - ord($b);\n    });\n    return implode(\" \", $arr);\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp7a7wv6_z.php:16\nStack trace:\n#0 /tmp/tmp7a7wv6_z.php(23): anti_shuffle('Hi')\n#1 /tmp/tmp7a7wv6_z.php(27): candidate('Hi')\n#2 /tmp/tmp7a7wv6_z.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp7a7wv6_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0;$i<$arr.length;$i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpm_0m1yd0.php:15\nStack trace:\n#0 /tmp/tmpm_0m1yd0.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpm_0m1yd0.php(32): candidate('Hi')\n#2 /tmp/tmpm_0m1yd0.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpm_0m1yd0.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(\" \", $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(\" \", $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpj5_z3fu6.php:16\nStack trace:\n#0 /tmp/tmpj5_z3fu6.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpj5_z3fu6.php(28): candidate('Hi')\n#2 /tmp/tmpj5_z3fu6.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpj5_z3fu6.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = $s.split(\" \");\n    $arr.sort();\n    $s = \"\";\n    for($i=0; $i<$arr.length; $i++) {\n        $s += $arr[$i];\n        if($i < $arr.length-1) {\n            $s += \" \";\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpemj94az6.php:15\nStack trace:\n#0 /tmp/tmpemj94az6.php(28): anti_shuffle('Hi')\n#1 /tmp/tmpemj94az6.php(32): candidate('Hi')\n#2 /tmp/tmpemj94az6.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpemj94az6.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes a string and returns an ordered version of it.\n// Ordered version of string, is a string where all words (separated by space)\n// are replaced by a new word where all the characters arranged in\n// ascending order based on ascii value.\n// Note: You should keep the order of words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle($s) {\n    $arr = explode(' ', $s);\n    $arr = array_sort($arr, function($a, $b) {\n        return strcmp($a, $b);\n    });\n    $s = implode(' ', $arr);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return anti_shuffle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hi\") !== \"Hi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"hello\") !== \"ehllo\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"number\") !== \"bemnru\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== \"abcd\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello World!!!\") !== \"Hello !!!Wdlor\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hi. My name is Mister Robot. How are you?\") !== \".Hi My aemn is Meirst .Rboot How aer ?ouy\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292969,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpbj4c1bh0.php:16\nStack trace:\n#0 /tmp/tmpbj4c1bh0.php(24): anti_shuffle('Hi')\n#1 /tmp/tmpbj4c1bh0.php(28): candidate('Hi')\n#2 /tmp/tmpbj4c1bh0.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpbj4c1bh0.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
{
  "name": "HumanEval_136_largest_smallest_integers",
  "language": "php",
  "prompt": "<?php\n// Create a function that returns an array (a, b), where 'a' is\n// the largest of negative integers, and 'b' is the smallest\n// of positive integers in an array.\n// If there is no negative or positive integers, return them as null.\n// Examples:\n// >>> largest_smallest_integers(array(2, 4, 1, 3, 5, 7))\n// array(null, 1)\n// >>> largest_smallest_integers(array())\n// array(null, null)\n// >>> largest_smallest_integers(array(0))\n// array(null, null)\nfunction largest_smallest_integers($lst) {\n",
  "tests": "function candidate(...$args) {\n    return largest_smallest_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 1, 3, 5, 7)) !== array(null, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1, 3, 5, 7, 0)) !== array(null, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2, 4, 5, 6, -2)) !== array(-2, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 3, 6, 2, 7, -7)) !== array(-7, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 3, 8, 4, 9, 2, 5, -9)) !== array(-9, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array(null, null)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0)) !== array(null, null)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -3, -5, -6)) !== array(-1, null)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -3, -5, -6, 0)) !== array(-1, null)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-6, -4, -4, -3, 1)) !== array(-3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-6, -4, -4, -3, -100, 1)) !== array(-3, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "completions": [
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_flip($lst);\n    $max = null;\n    $min = null;\n    foreach($lst as $i => $v) {\n        if ($max === null || $v > $max) {\n            $max = $v;\n        }\n        if ($min === null || $v < $min) {\n            $min = $v;\n        }\n    }\n    return array($max, $min);\n}\n",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($x) {\n        return $x > 0;\n    });\n    $lst = array_filter($lst, function($x) {\n        return $x < 0;\n    });\n    if ($lst) {\n        return array(null, min($lst));\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($a === null || $i < $a) {\n            $a = $i;\n        }\n        if ($b === null || $i > $b) {\n            $b = $i;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else {\n                $a = $i < $a ? $i : $a;\n            }\n        } else {\n            if ($b === null) {\n                $b = $i;\n            } else {\n                $b = $i > $b ? $i : $b;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else {\n                $a = min($a, $i);\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else {\n                $b = max($b, $i);\n            }\n        }\n    }\n    if ($a === null) {\n        return array(null, $b);\n    } else if ($b === null) {\n        return array($a, null);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $lst = array_filter($lst, function($n) { return $n > 0; });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) { return $a - $b; });\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    return $lst;\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if (is_int($i)) {\n            if (is_negative($i)) {\n                if (null === $a) {\n                    $a = $i;\n                } else {\n                    $a = max($a, $i);\n                }\n            } else {\n                if (null === $b) {\n                    $b = $i;\n                } else {\n                    $b = min($b, $i);\n                }\n            }\n        }\n    }\n    if (null === $a) {\n        return array(null, null);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else {\n                $a = min($a, $i);\n            }\n        } else {\n            if ($b === null) {\n                $b = $i;\n            } else {\n                $b = max($b, $i);\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n > 0 || $n < 0;\n    });\n    if ($lst) {\n        $max = $lst[0];\n        $min = $lst[0];\n        for ($i = 1; $i < $lst.length; $i++) {\n            if ($lst[$i] > $max) {\n                $max = $lst[$i];\n            }\n            if ($lst[$i] < $min) {\n                $min = $lst[$i];\n            }\n        }\n        return array($max, $min);\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a == null) {\n                $a = $i;\n            } else {\n                $a = min($a, $i);\n            }\n        } else {\n            if ($b == null) {\n                $b = $i;\n            } else {\n                $b = max($b, $i);\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($i) {\n        return $i >= 0;\n    });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $max = 0;\n    $min
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if (is_int($i) && $i < 0) {\n            $a = $i;\n        } else if (is_int($i) && $i > 0) {\n            $b = $i;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if (is_int($v) && $v < 0) {\n            $a = $v;\n        }\n        if (is_int($v) && $v > 0) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($n) {\n        return $n > 0 || $n < 0;\n    });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) {\n        return $a - $b;\n    });\n    return array($lst[0], $lst[$lst.length - 1]);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n >= 0;\n    });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) {\n        return $a - $b;\n    });\n    return array($lst[0], $lst[$lst.length - 1]);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return is_int($n);\n    });\n    if ($lst) {\n        $lst = array_sort($lst, function($a, $b) {\n            return $a - $b;\n        });\n        if ($lst[0] < 0) {\n            return array(null, $lst[0]);\n        }\n        if ($lst[$lst.length - 1] > 0) {\n            return array(null, $lst[$lst.length - 1]);\n        }\n    }\n    return array(null, null);\n}\n",
    "    $lst = array_filter($lst, function($i) { return $i > 0; });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst",
    "    $lst = array_filter($lst, function($n) {\n        return $n > 0 || $n < 0;\n    });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) {\n        return $a - $b;\n    });\n    return array($lst[0], $lst[$lst.length - 1]);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else {\n                if ($i > $a) {\n                    $a = $i;\n                }\n            }\n        } else {\n            if ($b === null) {\n                $b = $i;\n            } else {\n                if ($i < $b) {\n                    $b = $i;\n                }\n            }\n        }\n    }\n    if ($a === null) {\n        return array(null, $b);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return is_int($n);\n    });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) {\n        return $a - $b;\n    });\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($l",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else {\n                $a = max($a, $i);\n            }\n        } else {\n            if ($b === null) {\n                $b = $i;\n            } else {\n                $b = min($b, $i);\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else {\n                $a = min($a, $i);\n            }\n        } else {\n            if ($b === null) {\n                $b = $i;\n            } else {\n                $b = max($b, $i);\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($i) {\n        return $i >= 0;\n    });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $max = max($lst);\n    $min = min($lst);\n    return array($max, $min);\n}\n",
    "    $lst = array_filter($lst, function($n) { return $n > 0; });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) { return $a - $b; });\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    return $lst;\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) { return $n > 0; });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) { return $a - $b; });\n    return array($lst[0], $lst[$lst.length - 1]);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if (is_int($v) && $v < 0) {\n            if (!$a || $v > $a) {\n                $a = $v;\n            }\n        } else if (is_int($v) && $v > 0) {\n            if (!$b || $v < $b) {\n                $b = $v;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    if ($a === null) {\n        return array(null, null);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if (is_int($v) && $v < 0) {\n            $a = $i;\n            $b = $v;\n        }\n        if (is_int($v) && $v > 0) {\n            $a = $i;\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    if ($a === null && $b === null) {\n        return array(null, null);\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n >= 0;\n    });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $max = $lst[0];\n    $min = $lst[0];\n    $lst = array_filter($lst, function($n) {\n        return $n > $max;\n    });\n    if (empty($lst)) {\n        return array(null, $min);\n    }\n    $max = $lst[0];\n    $lst = array_filter($lst, function($n) {\n        return $n < $min;\n    });\n    if (empty($lst)) {\n        return array(null, $max);\n    }\n    $min = $lst[0];\n    return array($max, $min);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n > 0 || $n < 0;\n    });\n    if ($lst) {\n        $max = max($lst);\n        $min = min($lst);\n        return array($max, $min);\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a == null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b == null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    if ($a == null) {\n        return array(null, null);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return is_numeric($n);\n    });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) {\n        return $a - $b;\n    });\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($num) {\n        return $num > 0 || $num < 0;\n    });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) {\n        return $a - $b;\n    });\n    return array($lst[0], $lst[$lst.length - 1]);\n}\n",
    "    $lst = array_filter($lst, function($n) { return $n > 0; });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) { return $a - $b; });\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    return $lst;\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            $a = $i;\n        } else if ($i > 0) {\n            $b = $i;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($v < 0) {\n            if (!$a || $v > $a) {\n                $a = $v;\n            }\n        } else if ($v > 0) {\n            if (!$b || $v < $b) {\n                $b = $v;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else {\n                $a = min($a, $i);\n            }\n        } else {\n            if ($b === null) {\n                $b = $i;\n            } else {\n                $b = max($b, $i);\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n >= 0;\n    });\n    if ($lst.length == 0) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) {\n        return $a - $b;\n    });\n    return array($lst[0], $lst[$lst.length - 1]);\n}\n",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($n) {\n        return $n > 0;\n    });\n    if ($lst) {\n        $lst = array_sort($lst, function($a, $b) {\n            return $a - $b;\n        });\n        return array($lst[0], $lst[$lst - 1]);\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if (is_int($v) && $v < 0) {\n            if (null === $a || $v > $a) {\n                $a = $v;\n            }\n        } else if (is_int($v) && $v > 0) {\n            if (null === $b || $v < $b) {\n                $b = $v;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n > 0 || $n < 0;\n    });\n    if ($lst.length == 0) {\n        return array(null, null);\n    }\n    $lst.sort(function($a, $b) {\n        return $a - $b;\n    });\n    return array($lst[0], $lst[$lst.length - 1]);\n}\n",
    "    $lst = array_filter($lst, function($i) { return $i > 0; });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) { return $a - $b; });\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst",
    "    $lst = array_filter($lst, function($n) {\n        return $n > 0;\n    });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) {\n        return $a - $b;\n    });\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    return $lst;\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    if ($a === null) {\n        return null;\n    }\n    if ($b === null) {\n        return null;\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($n) {\n        return $n < 0 || $n > 0;\n    });\n    if ($lst) {\n        return array(null, min($lst));\n    } else {\n        return array(null, null);\n    }\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n >= 0 || $n < 0;\n    });\n    if ($lst) {\n        $max = $lst[0];\n        $min = $lst[0];\n        for ($i = 1; $i < $lst.length; $i++) {\n            if ($lst[$i] > $max) {\n                $max = $lst[$i];\n            }\n            if ($lst[$i] < $min) {\n                $min = $lst[$i];\n            }\n        }\n        return array($max, $min);\n    } else {\n        return array(null, null);\n    }\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            $a = $i;\n        } else if ($i > 0) {\n            $b = $i;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($i) {\n        return $i > 0 || $i < 0;\n    });\n    if ($lst) {\n        return array(null, min($lst));\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if (is_int($i)) {\n            if (is_negative($i)) {\n                if (null === $a) {\n                    $a = $i;\n                } else {\n                    $a = max($a, $i);\n                }\n            } else {\n                if (null === $b) {\n                    $b = $i;\n                } else {\n                    $b = min($b, $i);\n                }\n            }\n        }\n    }\n    if (null === $a) {\n        return array(null, null);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $result = array();\n    $result['a'] = null;\n    $result['b'] = null;\n    $result['c'] = null;\n    $result['d'] = null;\n    $result['e'] = null;\n    $result['f'] = null;\n    $result['g'] = null;\n    $result['h'] = null;\n    $result['i'] = null;\n    $result['j'] = null;\n    $result['k'] = null;\n    $result['l'] = null;\n    $result['m'] = null;\n    $result['n'] = null;\n    $result['o'] = null;\n    $result['p'] = null;\n    $result['q'] = null;\n    $result['r'] = null;\n    $result['s'] = null;\n    $result['t'] = null;\n    $result['u'] = null;\n    $result['v'] = null;\n    $result['w'] = null;\n    $result['x'] = null;\n    $result['y'] = null;\n    $result['z'] = null;\n    $result['aa'] = null;\n    $result['ab'] = null;\n    $result['ac'] = null;\n    $result['ad'] = null;\n    $result['ae'] = null;\n    $result['af'] = null;\n    $result['ag'] = null;\n    $result['ah'] = null;\n    $result['ai'] = null;\n    $result['aj'] = null;\n    $result['ak'] = null;\n    $result['al'] = null;\n    $result['am'] = null;\n    $result['an'] = null;\n    $result['ao'] = null;\n    $result['ap'] = null;\n    $result['aq'] = null;\n    $result['ar'] = null;\n    $result['as'] = null;\n    $result['at'] = null;\n    $result['au'] = null;\n    $result['av'] = null;\n    $result['aw'] = null;\n    $result['ax'] = null;\n    $result['ay",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            $a = $i;\n        } else if ($i > 0) {\n            $b = $i;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i < $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i > $b) {\n                $b = $i;\n            }\n        }\n    }\n    if ($a === null) {\n        return array(null, null);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($v < 0) {\n            if (!$a || $v > $a) {\n                $a = $v;\n            }\n        } else {\n            if (!$b || $v < $b) {\n                $b = $v;\n            }\n        }\n    }\n    if (!$a) {\n        return array(null, null);\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n > 0;\n    });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) {\n        return $a - $b;\n    });\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    return $lst;\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else {\n                $a = max($a, $i);\n            }\n        } else {\n            if ($b === null) {\n                $b = $i;\n            } else {\n                $b = min($b, $i);\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($num) {\n        return is_int($num);\n    });\n    if ($lst) {\n        $min = min($lst);\n        $max = max($lst);\n        if ($min < 0 && $max > 0) {\n            return array(null, $max);\n        } else if ($min < 0) {\n            return array(null, $max);\n        } else if ($max > 0) {\n            return array(null, $min);\n        }\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            $a = $i;\n        } else if ($i > 0) {\n            $b = $i;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n > 0 || $n < 0;\n    });\n    if ($lst) {\n        return array(max($lst), min($lst));\n    }\n    return array(null, null);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n > 0 || $n < 0;\n    });\n    if ($lst) {\n        return array(max($lst), min($lst));\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else {\n                $a = $i < $a ? $i : $a;\n            }\n        } else {\n            if ($b === null) {\n                $b = $i;\n            } else {\n                $b = $i > $b ? $i : $b;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($i) {\n        return $i > 0 || $i < 0;\n    });\n    if ($lst) {\n        $max = $lst[0];\n        $min = $lst[0];\n        for ($i = 1; $i < $lst.length; $i++) {\n            if ($lst[$i] > $max) {\n                $max = $lst[$i];\n            }\n            if ($lst[$i] < $min) {\n                $min = $lst[$i];\n            }\n        }\n        return array($max, $min);\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    if ($a === null && $b === null) {\n        return array(null, null);\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($n) {\n        return $n < 0 || $n > 0;\n    });\n    if ($lst) {\n        return array(null, min($lst));\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else {\n                $a = max($a, $i);\n            }\n        } else {\n            if ($b === null) {\n                $b = $i;\n            } else {\n                $b = min($b, $i);\n            }\n        }\n    }\n    if ($a === null) {\n        return array(null, $b);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $lst = array_flip($lst);\n    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            $a = $i;\n        } else if ($i > 0) {\n            $b = $i;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            $a = $i;\n        } else if ($i > 0) {\n            $b = $i;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_flip($lst);\n    $max = null;\n    $min = null;\n    foreach($lst as $i => $v) {\n        if ($v < 0) {\n            if ($max === null) {\n                $max = $i;\n            } else {\n                $max = max($max, $i);\n            }\n        } else if ($v > 0) {\n            if ($min === null) {\n                $min = $i;\n            } else {\n                $min = min($min, $i);\n            }\n        }\n    }\n    return array($max === null ? null : $max, $min === null ? null : $min);\n}\n",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($n) {\n        return $n > 0;\n    });\n    $lst = array_filter($lst, function($n) {\n        return $n < 0;\n    });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) {\n        return $a - $b;\n    });\n    return array($lst[0], $lst[$lst.length - 1]);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return is_numeric($n);\n    });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $min = min($lst);\n    $max = max($lst);\n    if ($min < 0) {\n        $min = null;\n    }\n    if ($max > 0) {\n        $max = null;\n    }\n    return array($min, $max);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if (is_int($v) && $v < 0) {\n            if (!$a || $v > $a) {\n                $a = $v;\n            }\n        } else if (is_int($v) && $v > 0) {\n            if (!$b || $v < $b) {\n                $b = $v;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if (is_int($i) && $i < 0) {\n            $a = $i;\n        } else if (is_int($i) && $i > 0) {\n            $b = $i;\n        }\n    }\n    if ($a === null && $b === null) {\n        return array(null, null);\n    } else if ($a === null) {\n        return array(null, $b);\n    } else if ($b === null) {\n        return array($a, null);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $lst = array_filter($lst, function($n) { return $n > 0; });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) { return $a - $b; });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    return $lst;\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return is_int($n);\n    });\n    if ($lst === false) {\n        return null;\n    }\n    $lst = array_sort($lst, function($a, $b) {\n        return $a - $b;\n    });\n    if ($lst[0] === 0) {\n        return null;\n    }\n    return $lst;\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if (is_int($v) && $v < 0) {\n            $a = $v;\n        } else if (is_int($v) && $v > 0) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return is_int($n);\n    });\n    if ($lst === false) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) {\n        return $a - $b;\n    });\n    if ($lst[0] < 0) {\n        return array(null, $lst[0]);\n    }\n    if ($lst[$lst.length - 1] > 0) {\n        return array($lst[$lst.length - 1], null);\n    }\n    return array(null, null);\n}\n",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($n) {\n        return $n > 0;\n    });\n    $lst = array_filter($lst, function($n) {\n        return $n < 0;\n    });\n    if ($lst.length == 0) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) {\n        return $a - $b;\n    });\n    return array($lst[0], $lst[$lst.length - 1]);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    if ($a === null || $b === null) {\n        return array(null, null);\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    if ($a === null) {\n        return array(null, null);\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n >= 0 || $n < 0;\n    });\n    if ($lst) {\n        $max = $lst[0];\n        $min = $lst[0];\n        $lst = array_filter($lst, function($n) {\n            return $n > $max || $n < $min;\n        });\n        if ($lst) {\n            $max = $lst[0];\n            $min = $lst[0];\n        }\n    }\n    return array($max, $min);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if (is_int($i) && $i < 0) {\n            if (!$a || $i > $a) {\n                $a = $i;\n            }\n        } else if (is_int($i) && $i > 0) {\n            if (!$b || $i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    if (!$a) {\n        return array(null, null);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($a === null || $i < $a) {\n            $a = $i;\n        }\n        if ($b === null || $i > $b) {\n            $b = $i;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($a === null || $i < $a) {\n            $a = $i;\n        }\n        if ($b === null || $i > $b) {\n            $b = $i;\n        }\n    }\n    if ($a === null && $b === null) {\n        return array(null, null);\n    } else if ($a === null) {\n        return array(null, $b);\n    } else if ($b === null) {\n        return array($a, null);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $lst = array_filter($lst, function($n) { return $n > 0; });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) { return $a - $b; });\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    return $lst;\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n > 0 || $n < 0;\n    });\n    if ($lst) {\n        return array(max($lst), min($lst));\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else {\n                $a = min($a, $i);\n            }\n        } else {\n            if ($b === null) {\n                $b = $i;\n            } else {\n                $b = max($b, $i);\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($n) {\n        return $n > 0 || $n < 0;\n    });\n    if ($lst) {\n        return array(null, min($lst));\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else {\n                $a = min($a, $i);\n            }\n        } else {\n            if ($b === null) {\n                $b = $i;\n            } else {\n                $b = max($b, $i);\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n >= 0;\n    });\n    if ($lst.length == 0) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) {\n        return $a - $b;\n    });\n    return array($lst[0], $lst[$lst.length - 1]);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else {\n                if ($i > $a) {\n                    $a = $i;\n                }\n            }\n        } else {\n            if ($b === null) {\n                $b = $i;\n            } else {\n                if ($i < $b) {\n                    $b = $i;\n                }\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            $a = $i;\n        } else if ($i > 0) {\n            $b = $i;\n        }\n    }\n    if ($a === null && $b === null) {\n        return array(null, null);\n    } else if ($a === null) {\n        return array(null, $b);\n    } else if ($b === null) {\n        return array($a, null);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if (is_int($i) && $i < 0) {\n            if ($a === null || $i > $a) {\n                $a = $i;\n            }\n        } else if (is_int($i) && $i > 0) {\n            if ($b === null || $i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    if ($a === null) {\n        return array(null, null);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($num) {\n        return $num > 0 || $num < 0;\n    });\n    if ($lst) {\n        return array(null, min($lst));\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if (!$a) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if (!$b) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    if ($a === null) {\n        return array(null, null);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    if ($a === null) {\n        return array(null, null);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n > 0 || $n < 0;\n    });\n    if ($lst) {\n        $max = max($lst);\n        $min = min($lst);\n        return array($max, $min);\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($n) {\n        return $n > 0 || $n < 0;\n    });\n    if ($lst) {\n        $lst = array_sort($lst, function($a, $b) {\n            return $a - $b;\n        });\n        return array($lst[0], $lst[$lst - 1]);\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    if ($a === null) {\n        return null;\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($n) {\n        return $n > 0;\n    });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) {\n        return $a - $b;\n    });\n    $lst = array_flip($lst);\n    return $lst;\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n > 0 || $n < 0;\n    });\n    if ($lst) {\n        return array(max($lst), min($lst));\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if (is_int($i) && $i < 0) {\n            if (!$a || $i > $a) {\n                $a = $i;\n            }\n        } else if (is_int($i) && $i > 0) {\n            if (!$b || $i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $result = array();\n    $result['a'] = null;\n    $result['b'] = null;\n    $result['c'] = null;\n    $result['d'] = null;\n    $result['e'] = null;\n    $result['f'] = null;\n    $result['g'] = null;\n    $result['h'] = null;\n    $result['i'] = null;\n    $result['j'] = null;\n    $result['k'] = null;\n    $result['l'] = null;\n    $result['m'] = null;\n    $result['n'] = null;\n    $result['o'] = null;\n    $result['p'] = null;\n    $result['q'] = null;\n    $result['r'] = null;\n    $result['s'] = null;\n    $result['t'] = null;\n    $result['u'] = null;\n    $result['v'] = null;\n    $result['w'] = null;\n    $result['x'] = null;\n    $result['y'] = null;\n    $result['z'] = null;\n    $result['A'] = null;\n    $result['B'] = null;\n    $result['C'] = null;\n    $result['D'] = null;\n    $result['E'] = null;\n    $result['F'] = null;\n    $result['G'] = null;\n    $result['H'] = null;\n    $result['I'] = null;\n    $result['J'] = null;\n    $result['K'] = null;\n    $result['L'] = null;\n    $result['M'] = null;\n    $result['N'] = null;\n    $result['O'] = null;\n    $result['P'] = null;\n    $result['Q'] = null;\n    $result['R'] = null;\n    $result['S'] = null;\n    $result['T'] = null;\n    $result['U'] = null;\n    $result['V'] = null;\n    $result['W'] = null;\n    $result['X'] = null;\n    $result['Y",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if (is_int($i) && $i < 0) {\n            if ($a === null || $i > $a) {\n                $a = $i;\n            }\n        } else if (is_int($i) && $i > 0) {\n            if ($b === null || $i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return is_int($n);\n    });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) {\n        return $a - $b;\n    });\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, -1);\n    $lst = array_unshift($lst, 1);\n    $lst = array_unshift($lst, -1);\n    $lst = array_unshift($lst, 1);\n    $lst = array_unshift($lst, -1);\n    $lst = array_unshift($lst, 1);\n    $lst = array_unshift($lst, -1);\n    $lst = array_unshift($lst, 1);\n    $lst = array_unshift($lst, -1);\n    $lst = array_unshift($lst, 1);\n    $lst = array_unshift($lst, -1);\n    $lst = array_unshift($lst, 1);\n    $lst = array_unshift($lst, -1);\n    $lst = array_unshift($lst, 1);\n    $lst = array_unshift($lst, -1);\n    $lst = array_unshift($lst, 1);\n    $lst = array_unshift($lst, -1);\n    $lst = array_unshift($lst, 1);\n    $lst = array_unshift($lst, -1);\n    $lst = array_unshift($lst, 1);\n    $lst = array_unshift($lst, -1);\n    $lst = array_unshift($lst, 1);\n    $lst = array_unshift($lst, -1);\n    $lst = array_unshift($lst, 1);\n    $lst = array_unshift($lst, -1",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($i) {\n        return $i > 0 || $i < 0;\n    });\n    if ($lst) {\n        return array(null, min($lst));\n    }\n    return array(null, null);\n}\n",
    "    $lst = array_filter($lst, function($n) { return $n > 0; });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) { return $a - $b; });\n    return array($lst[0], $lst[$lst.length - 1]);\n}\n",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($n) {\n        return $n > 0 || $n < 0;\n    });\n    if ($lst) {\n        $lst = array_sort($lst, function($a, $b) {\n            return $a - $b;\n        });\n        return array($lst[0], $lst[$lst - 1]);\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else {\n                $a = min($a, $i);\n            }\n        } else {\n            if ($b === null) {\n                $b = $i;\n            } else {\n                $b = max($b, $i);\n            }\n        }\n    }\n    if ($a === null) {\n        return array(null, $b);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($n) { return $n > 0; });\n    $lst = array_filter($lst, function($n) { return $n < 0; });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    return array(max($lst), min($lst));\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n >= 0;\n    });\n    if ($lst) {\n        $lst = array_sort($lst, function($a, $b) {\n            return $a - $b;\n        });\n        return array($lst[0], $lst[$lst.length - 1]);\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    if ($a === null && $b === null) {\n        return array(null, null);\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($a === null || $i < $a) {\n            $a = $i;\n        }\n        if ($b === null || $i > $b) {\n            $b = $i;\n        }\n    }\n    if ($a === null && $b === null) {\n        return array(null, null);\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $result = array();\n    $result['a'] = null;\n    $result['b'] = null;\n    foreach($lst as $i => $v) {\n        if ($v < 0) {\n            if ($result['a'] == null) {\n                $result['a'] = $i;\n            } else if ($result['a'] < $i) {\n                $result['a'] = $i;\n            }\n        } else if ($v > 0) {\n            if ($result['b'] == null) {\n                $result['b'] = $i;\n            } else if ($result['b'] > $i) {\n                $result['b'] = $i;\n            }\n        }\n    }\n    return $result;\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($a === null || $i < $a) {\n            $a = $i;\n        }\n        if ($b === null || $i > $b) {\n            $b = $i;\n        }\n    }\n    if ($a === null && $b === null) {\n        return array(null, null);\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if (is_int($i) && $i < 0) {\n            if (!$a) {\n                $a = $i;\n            } else {\n                $a = max($a, $i);\n            }\n        } else if (is_int($i) && $i > 0) {\n            if (!$b) {\n                $b = $i;\n            } else {\n                $b = min($b, $i);\n            }\n        }\n    }\n    if (!$a) {\n        return array(null, $b);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($n) {\n        return $n < 0 || $n > 0;\n    });\n    if ($lst) {\n        return array(null, min($lst));\n    }\n    return array(null, null);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n > 0 || $n < 0;\n    });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $max = 0;\n    $min = 999999999;\n    foreach($lst as $n) {\n        if ($n > $max) {\n            $max = $n;\n        }\n        if ($n < $min) {\n            $min = $n;\n        }\n    }\n    return array($max, $min);\n}\n",
    "    $result = array();\n    $result['a'] = null;\n    $result['b'] = null;\n    $result['c'] = null;\n    $result['d'] = null;\n    $result['e'] = null;\n    $result['f'] = null;\n    $result['g'] = null;\n    $result['h'] = null;\n    $result['i'] = null;\n    $result['j'] = null;\n    $result['k'] = null;\n    $result['l'] = null;\n    $result['m'] = null;\n    $result['n'] = null;\n    $result['o'] = null;\n    $result['p'] = null;\n    $result['q'] = null;\n    $result['r'] = null;\n    $result['s'] = null;\n    $result['t'] = null;\n    $result['u'] = null;\n    $result['v'] = null;\n    $result['w'] = null;\n    $result['x'] = null;\n    $result['y'] = null;\n    $result['z'] = null;\n    $result['aa'] = null;\n    $result['ab'] = null;\n    $result['ac'] = null;\n    $result['ad'] = null;\n    $result['ae'] = null;\n    $result['af'] = null;\n    $result['ag'] = null;\n    $result['ah'] = null;\n    $result['ai'] = null;\n    $result['aj'] = null;\n    $result['ak'] = null;\n    $result['al'] = null;\n    $result['am'] = null;\n    $result['an'] = null;\n    $result['ao'] = null;\n    $result['ap'] = null;\n    $result['aq'] = null;\n    $result['ar'] = null;\n    $result['as'] = null;\n    $result['at'] = null;\n    $result['au'] = null;\n    $result['av'] = null;\n    $result['aw'] = null;\n    $result['ax'] = null;\n    $result['ay",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($a === null || $i < $a) {\n            $a = $i;\n        }\n        if ($b === null || $i > $b) {\n            $b = $i;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($i) {\n        return $i > 0 || $i < 0;\n    });\n    if ($lst) {\n        return array(null, min($lst));\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a == null) {\n                $a = $i;\n            } else {\n                if ($i > $a) {\n                    $a = $i;\n                }\n            }\n        } else {\n            if ($b == null) {\n                $b = $i;\n            } else {\n                if ($i < $b) {\n                    $b = $i;\n                }\n            }\n        }\n    }\n    if ($a == null) {\n        return array(null, null);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    if ($a === null && $b === null) {\n        return array(null, null);\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n > 0 || $n < 0;\n    });\n    if ($lst) {\n        return array(null, min($lst));\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if (is_int($v) && $v < 0) {\n            if (!$a || $v > $a) {\n                $a = $v;\n            }\n        } else if (is_int($v) && $v > 0) {\n            if (!$b || $v < $b) {\n                $b = $v;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($n) {\n        return $n > 0;\n    });\n    $lst = array_filter($lst, function($n) {\n        return $n < 0;\n    });\n    if ($lst.length == 0) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) {\n        return $a - $b;\n    });\n    return array($lst[0], $lst[$lst.length - 1]);\n}\n",
    "    $lst = array_flip($lst);\n    $max = null;\n    $min = null;\n    foreach($lst as $i => $v) {\n        if (is_int($v)) {\n            if (is_negative($v)) {\n                if (null === $max) {\n                    $max = $v;\n                } else {\n                    $max = max($max, $v);\n                }\n            } else {\n                if (null === $min) {\n                    $min = $v;\n                } else {\n                    $min = min($min, $v);\n                }\n            }\n        }\n    }\n    if (null === $max) {\n        return array(null, null);\n    } else {\n        return array($max, $min);\n    }\n}\n",
    "    $lst = array_flip($lst);\n    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($i < 0) {\n            $a = $i;\n        } else if ($i > 0) {\n            $b = $i;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            $a = $i;\n        } else if ($i > 0) {\n            $b = $i;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if (is_int($i) && $i < 0) {\n            if (!$a || $i > $a) {\n                $a = $i;\n            }\n        } else if (is_int($i) && $i > 0) {\n            if (!$b || $i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    if (!$a) {\n        return array(null, null);\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if (is_int($i) && $i < 0) {\n            $a = $i;\n        } else if (is_int($i) && $i > 0) {\n            $b = $i;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n > 0 || $n < 0;\n    });\n    if ($lst) {\n        $max = max($lst);\n        $min = min($lst);\n        return array($max, $min);\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if (is_int($v) && $v < 0) {\n            $a = $v;\n        } else if (is_int($v) && $v > 0) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n > 0 || $n < 0;\n    });\n    if ($lst) {\n        return array(null, min($lst));\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    if ($a === null && $b === null) {\n        return array(null, null);\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    if ($a === null || $b === null) {\n        return array(null, null);\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $result = array();\n    $result['a'] = null;\n    $result['b'] = null;\n    if (empty($lst)) {\n        return $result;\n    }\n    $result['a'] = $lst[0];\n    $result['b'] = $lst[0];\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $result['a']) {\n            $result['a'] = $lst[$i];\n        }\n        if ($lst[$i] > $result['b']) {\n            $result['b'] = $lst[$i];\n        }\n    }\n    return $result;\n}\n",
    "    $lst = array_flip($lst);\n    $max = null;\n    $min = null;\n    foreach($lst as $i => $v) {\n        if ($v < 0) {\n            $max = $i;\n        } else if ($v > 0) {\n            $min = $i;\n        }\n    }\n    return array($max, $min);\n}\n",
    "    $lst = array_flip($lst);\n    $max = null;\n    $min = null;\n    foreach($lst as $i => $v) {\n        if ($max === null || $v > $max) {\n            $max = $v;\n        }\n        if ($min === null || $v < $min) {\n            $min = $v;\n        }\n    }\n    if ($max === null) {\n        return array(null, null);\n    }\n    return array($max, $min);\n}\n",
    "    $lst = array_filter($lst, function($n) { return $n > 0; });\n    if (empty($lst)) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) { return $a - $b; });\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst = array_unshift($lst, 0);\n    $lst",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if (is_int($i) && $i < 0) {\n            $a = $i;\n        } else if (is_int($i) && $i > 0) {\n            $b = $i;\n        }\n    }\n    if ($a === null && $b === null) {\n        return array(null, null);\n    } else if ($a === null) {\n        return array(null, $b);\n    } else if ($b === null) {\n        return array($a, null);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if (is_int($i) && $i < 0) {\n            $a = $i;\n        } else if (is_int($i) && $i > 0) {\n            $b = $i;\n        }\n    }\n    if ($a === null) {\n        return array(null, null);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($n) {\n        return $n > 0;\n    });\n    $lst = array_filter($lst, function($n) {\n        return $n < 0;\n    });\n    if ($lst) {\n        return array(null, min($lst));\n    }\n    return array(null, null);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n >= 0 || $n < 0;\n    });\n    if ($lst) {\n        $lst = array_sort($lst, function($a, $b) {\n            return $a - $b;\n        });\n        return array($lst[0], $lst[$lst.length - 1]);\n    } else {\n        return array(null, null);\n    }\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            $a = $i;\n        } else if ($i > 0) {\n            $b = $i;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($n) {\n        return $n > 0;\n    });\n    $lst = array_filter($lst, function($n) {\n        return $n < 0;\n    });\n    if ($lst.length == 0) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) {\n        return $a - $b;\n    });\n    return array($lst[0], $lst[$lst.length - 1]);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return is_numeric($n);\n    });\n    if ($lst === false) {\n        return array(null, null);\n    }\n    $lst = array_sort($lst, function($a, $b) {\n        return $a - $b;\n    });\n    if ($lst[0] < 0) {\n        return array(null, $lst[0]);\n    }\n    if ($lst[$lst.length - 1] > 0) {\n        return array($lst[$lst.length - 1], null);\n    }\n    return array(null, null);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else {\n                $a = min($a, $i);\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else {\n                $b = max($b, $i);\n            }\n        }\n    }\n    if ($a === null) {\n        return array(null, $b);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            $a = $i;\n        } else if ($i > 0) {\n            $b = $i;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if (is_int($v) && $v < 0) {\n            if (!$a || $v > $a) {\n                $a = $v;\n            }\n        } else if (is_int($v) && $v > 0) {\n            if (!$b || $v < $b) {\n                $b = $v;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            $a = $i;\n        } else if ($i > 0) {\n            $b = $i;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i => $v) {\n        if ($a === null || $v < $a) {\n            $a = $v;\n        }\n        if ($b === null || $v > $b) {\n            $b = $v;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $lst = array_filter($lst, function($n) {\n        return $n > 0 || $n < 0;\n    });\n    if ($lst) {\n        $max = max($lst);\n        $min = min($lst);\n        return array($max, $min);\n    }\n    return array(null, null);\n}\n",
    "    $lst = array_filter($lst, function($i) {\n        return $i > 0 || $i < 0;\n    });\n    if ($lst === false) {\n        return null;\n    }\n    if ($lst === true) {\n        return array(null, null);\n    }\n    return array(max($lst), min($lst));\n}\n",
    "    $lst = array_flip($lst);\n    $lst = array_filter($lst, function($n) {\n        return $n > 0 || $n < 0;\n    });\n    if ($lst) {\n        $lst = array_sort($lst, function($a, $b) {\n            return $a - $b;\n        });\n        return array($lst[0], $lst[$lst.length - 1]);\n    }\n    return array(null, null);\n}\n",
    "    $lst = array_flip($lst);\n    $max = null;\n    $min = null;\n    foreach($lst as $i => $v) {\n        if ($max === null) {\n            $max = $v;\n        } else if ($v > $max) {\n            $max = $v;\n        }\n        if ($min === null) {\n            $min = $v;\n        } else if ($v < $min) {\n            $min = $v;\n        }\n    }\n    return array($max, $min);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            $a = $i;\n        } else if ($i > 0) {\n            $b = $i;\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b === null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    if ($a === null) {\n        return array(null, null);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a == null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b == null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a == null) {\n                $a = $i;\n            } else if ($i > $a) {\n                $a = $i;\n            }\n        } else if ($i > 0) {\n            if ($b == null) {\n                $b = $i;\n            } else if ($i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else {\n                $a = min($a, $i);\n            }\n        } else {\n            if ($b === null) {\n                $b = $i;\n            } else {\n                $b = max($b, $i);\n            }\n        }\n    }\n    if ($a === null) {\n        return array(null, $b);\n    } else {\n        return array($a, $b);\n    }\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if ($i < 0) {\n            if ($a === null) {\n                $a = $i;\n            } else {\n                $a = min($a, $i);\n            }\n        } else {\n            if ($b === null) {\n                $b = $i;\n            } else {\n                $b = max($b, $i);\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if (is_int($i) && $i < 0) {\n            if (!$a || $i > $a) {\n                $a = $i;\n            }\n        } else if (is_int($i) && $i > 0) {\n            if (!$b || $i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    return array($a, $b);\n}\n",
    "    $a = null;\n    $b = null;\n    foreach($lst as $i) {\n        if (is_int($i) && $i < 0) {\n            if (!$a || $i > $a) {\n                $a = $i;\n            }\n        } else if (is_int($i) && $i > 0) {\n            if (!$b || $i < $b) {\n                $b = $i;\n            }\n        }\n    }\n    if (!$a) {\n        return array(null, null);\n    }\n    return array($a, $b);\n}\n"
  ],
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ]
}
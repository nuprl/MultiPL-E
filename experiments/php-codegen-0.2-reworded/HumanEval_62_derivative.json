{
  "name": "HumanEval_62_derivative",
  "language": "php",
  "prompt": "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>> derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n",
  "tests": "function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "completions": [
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 0) {\n            return array();\n        }\n        $d = $xs[0];\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d + $xs[$i] * pow($xs[$i], $i);\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    $n = $xs.length;\n    if ($n < 2) {\n        return $xs;\n    }\n    $d = [];\n    for (var i = 1; i < $n; i++) {\n        $d[i] = $xs[i] * i;\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 1) {\n            return [];\n        }\n        $d = $xs[0];\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d + $xs[$i] * pow($xs[$i], $i);\n        }\n        return $d;\n    }\n    return [];\n}\n",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 2) {\n            return $xs;\n        }\n        $d = $n - 1;\n        $d2 = $d * 2;\n        $d3 = $d2 * 3;\n        $d4 = $d3 * 4;\n        $d5 = $d4 * 5;\n        $d6 = $d5 * 6;\n        $d7 = $d6 * 7;\n        $d8 = $d7 * 8;\n        $d9 = $d8 * 9;\n        $d10 = $d9 * 10;\n        $d11 = $d10 * 11;\n        $d12 = $d11 * 12;\n        $d13 = $d12 * 13;\n        $d14 = $d13 * 14;\n        $d15 = $d14 * 15;\n        $d16 = $d15 * 16;\n        $d17 = $d16 * 17;\n        $d18 = $d17 * 18;\n        $d19 = $d18 * 19;\n        $d20 = $d19 * 20;\n        $d21 = $d20 * 21;\n        $d22 = $d21 * 22;\n        $d23 = $d22 * 23;\n        $d24 = $d23 * 24;\n        $d25 = $d24 * 25;\n        $d26 = $d25 * 26;\n        $d27 = $d26 * 27;\n        $d28 = $d27 * 28;\n        $d29 = $d28 * 29;\n        $d30 = $d29 * 30;\n        $d31 = $d30 * 31;\n        $d32 = $d31 * 32;\n        $d33 = $d32 * 33;\n        $d34 = $d33 * 34;\n        $d35 = $d34 * 35;\n        $d36 = $d35 * 36;\n        $d37 = $d36 * 37;\n        $d38 = $d37 * 38;\n        $d39 = $d38 * 39;\n        $d40 = $d39",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 0) {\n            return array();\n        }\n        $d = $xs[0];\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d + $xs[$i] * pow($xs[$i], $i);\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $i * $xs[$i + 1];\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 1) {\n            return [];\n        }\n        $d = $xs[0];\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d + $xs[$i] * pow($xs[$i], $i);\n        }\n        return $d;\n    }\n    return [];\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $n * $xs[$i + 1] - $i * $xs[$i];\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        if (count($xs) == 0) {\n            return array();\n        }\n        if (count($xs) == 1) {\n            return array(0);\n        }\n        if (count($xs) == 2) {\n            return array(0, 0);\n        }\n        if (count($xs) == 3) {\n            return array(0, 0, 0);\n        }\n        if (count($xs) == 4) {\n            return array(0, 0, 0, 0);\n        }\n        if (count($xs) == 5) {\n            return array(0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 6) {\n            return array(0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 7) {\n            return array(0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 8) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 9) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 10) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 11) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 12) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 13) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 14) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
    "    $n = $xs.length - 1;\n    $d = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = $n - 1; $i >= 0; $i--) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 1) {\n            return $xs;\n        }\n        $d = $n - 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 1",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length;\n    var $d = new Array($n - 1);\n    for (var $i = $n - 1; $i >= 0; $i--) {\n        $d[$i] = $n * $xs[$i] + $i * $xs[$i + 1];\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 1) {\n            return array(0);\n        }\n        $d = array(0);\n        for (int $i = $n - 1; $i >= 0; $i--) {\n            $d[$i] = $xs[$i] * $n;\n        }\n        return $d;\n    }\n    return array(0);\n}\n",
    "    $n = $xs.length - 1;\n    $d = [];\n    for (var i = 0; i <= $n; i++) {\n        $d[i] = $xs[i + 1] * (i + 1);\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 0) {\n            return array();\n        }\n        $d = $xs[0];\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d + $xs[$i] * pow($xs[$i], $i);\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        if (count($xs) == 0) {\n            return array();\n        }\n        if (count($xs) == 1) {\n            return array(0);\n        }\n        if (count($xs) == 2) {\n            return array(0, 0);\n        }\n        if (count($xs) == 3) {\n            return array(0, 0, 0);\n        }\n        if (count($xs) == 4) {\n            return array(0, 0, 0, 0);\n        }\n        if (count($xs) == 5) {\n            return array(0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 6) {\n            return array(0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 7) {\n            return array(0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 8) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 9) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 10) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 11) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 12) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 13) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 14) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 1) {\n            return $xs;\n        }\n        $d = $n - 1;\n        $d2 = $d * 2;\n        $d3 = $d * 3;\n        $d4 = $d * 4;\n        $d5 = $d * 5;\n        $d6 = $d * 6;\n        $d7 = $d * 7;\n        $d8 = $d * 8;\n        $d9 = $d * 9;\n        $d10 = $d * 10;\n        $d11 = $d * 11;\n        $d12 = $d * 12;\n        $d13 = $d * 13;\n        $d14 = $d * 14;\n        $d15 = $d * 15;\n        $d16 = $d * 16;\n        $d17 = $d * 17;\n        $d18 = $d * 18;\n        $d19 = $d * 19;\n        $d20 = $d * 20;\n        $d21 = $d * 21;\n        $d22 = $d * 22;\n        $d23 = $d * 23;\n        $d24 = $d * 24;\n        $d25 = $d * 25;\n        $d26 = $d * 26;\n        $d27 = $d * 27;\n        $d28 = $d * 28;\n        $d29 = $d * 29;\n        $d30 = $d * 30;\n        $d31 = $d * 31;\n        $d32 = $d * 32;\n        $d33 = $d * 33;\n        $d34 = $d * 34;\n        $d35 = $d * 35;\n        $d36 = $d * 36;\n        $d37 = $d * 37;\n        $d38 = $d * 38;\n        $d39 = $d * 39;\n        $d40 = $d * 40;\n        $d41 = $d * 41;\n        $d42 = $d * 42;\n        $d43 = $d * 43;\n        ",
    "    var $n = $xs.length - 1;\n    var $d = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $n * $xs[$i + 1] + ($i - 1) * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 2) {\n            return $xs;\n        }\n        $d = $n - 1;\n        $d2 = $d * 2;\n        $d3 = $d2 * 3;\n        $d4 = $d2 * 4;\n        $d5 = $d2 * 5;\n        $d6 = $d2 * 6;\n        $d7 = $d2 * 7;\n        $d8 = $d2 * 8;\n        $d9 = $d2 * 9;\n        $d10 = $d2 * 10;\n        $d11 = $d2 * 11;\n        $d12 = $d2 * 12;\n        $d13 = $d2 * 13;\n        $d14 = $d2 * 14;\n        $d15 = $d2 * 15;\n        $d16 = $d2 * 16;\n        $d17 = $d2 * 17;\n        $d18 = $d2 * 18;\n        $d19 = $d2 * 19;\n        $d20 = $d2 * 20;\n        $d21 = $d2 * 21;\n        $d22 = $d2 * 22;\n        $d23 = $d2 * 23;\n        $d24 = $d2 * 24;\n        $d25 = $d2 * 25;\n        $d26 = $d2 * 26;\n        $d27 = $d2 * 27;\n        $d28 = $d2 * 28;\n        $d29 = $d2 * 29;\n        $d30 = $d2 * 30;\n        $d31 = $d2 * 31;\n        $d32 = $d2 * 32;\n        $d33 = $d2 * 33;\n        $d34 = $d2 * 34;\n        $d35 = $d2 * 35;\n        $d36 = $d2 * 36;\n        $d37 = $d2 * 37;\n        $d38 = $d2 * 38;\n        $d39 = $d2 * 39;\n        $d40 = $d2",
    "    var $n = $xs.length;\n    var $d = [];\n    for (var $i = $n - 1; $i >= 0; $i--) {\n        $d[$i] = $n * $xs[$i] + $i * $xs[$i + 1];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 1) {\n            return $xs;\n        }\n        $d = $xs[0];\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d * $xs[$i] + $xs[$i - 1];\n        }\n        return $d;\n    }\n    return $xs;\n}\n",
    "    var $n = $xs.length;\n    var $d = [];\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    if (is_array($xs) && $xs.length > 0) {\n        $n = $xs.length - 1;\n        $d = array();\n        for ($i = 0; $i <= $n; $i++) {\n            $d[$i] = $xs[$i + 1] * $n - $xs[$i];\n        }\n        return $d;\n    }\n    return false;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    $n = $xs.length - 1;\n    $d = [];\n    for (var i = 0; i <= $n; i++) {\n        $d[i] = $xs[i + 1] * (i + 1);\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length;\n    var $d = [];\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 0) {\n            return array();\n        }\n        if ($n == 1) {\n            return array(0);\n        }\n        $d = $xs[0];\n        for (i = 1; i < $n; i++) {\n            $d = $d + $xs[i] * pow($xs[i], i);\n        }\n        return $d;\n    }\n    return 0;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 1) {\n            return [];\n        }\n        $d = $n - 1;\n        $d = $d < 0 ? 0 : $d;\n        $d = $d > $n - 1 ? $n - 1 : $d;\n        $d = $d == 0 ? 1 : $d;\n        $d = $d == $n - 1 ? 1 : $d;\n        $d = $d == 1 ? 2 : $d;\n        $d = $d == 2 ? 6 : $d;\n        $d = $d == 6 ? 12 : $d;\n        $d = $d == 12 ? 20 : $d;\n        $d = $d == 20 ? 0 : $d;\n        $d = $d == 0 ? 1 : $d;\n        $d = $d == 1 ? 2 : $d;\n        $d = $d == 2 ? 6 : $d;\n        $d = $d == 6 ? 12 : $d;\n        $d = $d == 12 ? 20 : $d;\n        $d = $d == 20 ? 0 : $d;\n        $d = $d == 0 ? 1 : $d;\n        $d = $d == 1 ? 2 : $d;\n        $d = $d == 2 ? 6 : $d;\n        $d = $d == 6 ? 12 : $d;\n        $d = $d == 12 ? 20 : $d;\n        $d = $d == 20 ? 0 : $d;\n        $d = $d == 0 ? 1 : $d;\n        $d = $d == 1 ? 2 : $d;\n        $d = $d == 2 ? 6 : $d;\n        $d = $d == 6 ? 12 : $d;\n        $d = $d == 12 ? 20 : $d;\n        $d = $d == 20 ? 0 : $d;\n        $d = $d == 0 ? 1 : $d;\n        $d = $d == 1 ? 2 : $d;\n        $d = $d == 2 ? 6 : $d;\n        $d = $d",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 1) {\n            return array(0);\n        }\n        $d = $n - 1;\n        $d2 = $d * 2;\n        $d3 = $d * 3;\n        $d4 = $d * 4;\n        $d5 = $d * 5;\n        $d6 = $d * 6;\n        $d7 = $d * 7;\n        $d8 = $d * 8;\n        $d9 = $d * 9;\n        $d10 = $d * 10;\n        $d11 = $d * 11;\n        $d12 = $d * 12;\n        $d13 = $d * 13;\n        $d14 = $d * 14;\n        $d15 = $d * 15;\n        $d16 = $d * 16;\n        $d17 = $d * 17;\n        $d18 = $d * 18;\n        $d19 = $d * 19;\n        $d20 = $d * 20;\n        $d21 = $d * 21;\n        $d22 = $d * 22;\n        $d23 = $d * 23;\n        $d24 = $d * 24;\n        $d25 = $d * 25;\n        $d26 = $d * 26;\n        $d27 = $d * 27;\n        $d28 = $d * 28;\n        $d29 = $d * 29;\n        $d30 = $d * 30;\n        $d31 = $d * 31;\n        $d32 = $d * 32;\n        $d33 = $d * 33;\n        $d34 = $d * 34;\n        $d35 = $d * 35;\n        $d36 = $d * 36;\n        $d37 = $d * 37;\n        $d38 = $d * 38;\n        $d39 = $d * 39;\n        $d40 = $d * 40;\n        $d41 = $d * 41;\n        $d42 = $d * 42;\n        $d43 = $d * 43;\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 0) {\n            return array();\n        }\n        $d = $n - 1;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 2;\n        $d = $d > 0 ? $d : 3;\n        $d = $d > 0 ? $d : 4;\n        $d = $d > 0 ? $d : 5;\n        $d = $d > 0 ? $d : 6;\n        $d = $d > 0 ? $d : 7;\n        $d = $d > 0 ? $d : 8;\n        $d = $d > 0 ? $d : 9;\n        $d = $d > 0 ? $d : 10;\n        $d = $d > 0 ? $d : 11;\n        $d = $d > 0 ? $d : 12;\n        $d = $d > 0 ? $d : 13;\n        $d = $d > 0 ? $d : 14;\n        $d = $d > 0 ? $d : 15;\n        $d = $d > 0 ? $d : 16;\n        $d = $d > 0 ? $d : 17;\n        $d = $d > 0 ? $d : 18;\n        $d = $d > 0 ? $d : 19;\n        $d = $d > 0 ? $d : 20;\n        $d = $d > 0 ? $d : 21;\n        $d = $d > 0 ? $d : 22;\n        $d = $d > 0 ? $d : 23;\n        $d = $d > 0 ? $d : 24;\n        $d = $d > 0 ? $d : 25;\n        $d = $d > 0 ? $d : 26;\n        $d = $d > 0 ? $d : 27;\n        $d = $d > 0 ? $d : 28;\n        $d = $d > 0 ? $d : 29;\n        $d = $d > 0 ? $d : 30;",
    "    if (is_array($xs)) {\n        $n = count($xs);\n        if ($n < 2) {\n            return array();\n        }\n        $d = array();\n        for ($i = $n - 1; $i >= 0; $i--) {\n            $d[$i] = $n * $xs[$i];\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 0) {\n            return array();\n        }\n        $d = $xs[0];\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d * $xs[$i] + $xs[$i - 1];\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 2) {\n            return $xs;\n        }\n        $d = $n - 1;\n        $d2 = $d * 2;\n        $d3 = $d * 3;\n        $d4 = $d * 4;\n        $d5 = $d * 5;\n        $d6 = $d * 6;\n        $d7 = $d * 7;\n        $d8 = $d * 8;\n        $d9 = $d * 9;\n        $d10 = $d * 10;\n        $d11 = $d * 11;\n        $d12 = $d * 12;\n        $d13 = $d * 13;\n        $d14 = $d * 14;\n        $d15 = $d * 15;\n        $d16 = $d * 16;\n        $d17 = $d * 17;\n        $d18 = $d * 18;\n        $d19 = $d * 19;\n        $d20 = $d * 20;\n        $d21 = $d * 21;\n        $d22 = $d * 22;\n        $d23 = $d * 23;\n        $d24 = $d * 24;\n        $d25 = $d * 25;\n        $d26 = $d * 26;\n        $d27 = $d * 27;\n        $d28 = $d * 28;\n        $d29 = $d * 29;\n        $d30 = $d * 30;\n        $d31 = $d * 31;\n        $d32 = $d * 32;\n        $d33 = $d * 33;\n        $d34 = $d * 34;\n        $d35 = $d * 35;\n        $d36 = $d * 36;\n        $d37 = $d * 37;\n        $d38 = $d * 38;\n        $d39 = $d * 39;\n        $d40 = $d * 40;\n        $d41 = $d * 41;\n        $d42 = $d * 42;\n        $d43 = $d * 43;\n        ",
    "    var $n = $xs.length - 1;\n    var $derivative = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $i * $xs[$i + 1];\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 0) {\n            return array();\n        }\n        $d = $xs[0];\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d * $xs[$i] + $xs[$i - 1];\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    if (is_array($xs) && $xs.length > 1) {\n        $n = $xs.length - 1;\n        $d = $n * $n;\n        $d = $d * $d;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $n;\n        $d = $d * $",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 0) {\n            return array();\n        }\n        if ($n == 1) {\n            return array(0);\n        }\n        $d = $xs[0];\n        $d = $d * $n;\n        for ($i = 1; $i < $n; $i++) {\n            $d = $d + $xs[$i];\n            $d = $d * $i;\n        }\n        return $d;\n    }\n    return 0;\n}\n",
    "    if (is_array($xs)) {\n        if (count($xs) == 0) {\n            return array();\n        }\n        if (count($xs) == 1) {\n            return array(0);\n        }\n        if (count($xs) == 2) {\n            return array(0, 0);\n        }\n        if (count($xs) == 3) {\n            return array(0, 0, 0);\n        }\n        if (count($xs) == 4) {\n            return array(0, 0, 0, 0);\n        }\n        if (count($xs) == 5) {\n            return array(0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 6) {\n            return array(0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 7) {\n            return array(0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 8) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 9) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 10) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 11) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 12) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 13) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 14) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
    "    var $n = $xs.length;\n    var $d = [];\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length;\n    var $d = [];\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $d = [];\n    for (var $i = 0; $i < $xs.length; $i++) {\n        $d[$i] = $xs[$i] * ($i + 1);\n    }\n    return $d;\n}\n",
    "    $n = $xs.length - 1;\n    $d = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 1) {\n            return array(0);\n        }\n        $d = array(0);\n        for ($i = $n - 1; $i >= 0; $i--) {\n            $d[$i] = $xs[$i] * $i;\n        }\n        return $d;\n    }\n    return array(0);\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 0) {\n            return array();\n        }\n        $d = array();\n        $d[0] = $xs[1];\n        for (int $i = 2; $i < $n; $i++) {\n            $d[$i] = $d[$i - 1] * $xs[$i];\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    $n = $xs.length;\n    $d = [];\n    for (var i = 0; i < $n; i++) {\n        $d[i] = $n * $xs[i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 0) {\n            return $xs;\n        }\n        $d = $n - 1;\n        $d = $d < 0 ? 0 : $d;\n        $d = $d > $n - 1 ? $n - 1 : $d;\n        $d = $n - $d;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 1 ? 1 : $d;\n        $d = $d > 2 ? 2 : $d;\n        $d = $d > 3 ? 3 : $d;\n        $d = $d > 4 ? 4 : $d;\n        $d = $d > 5 ? 5 : $d;\n        $d = $d > 6 ? 6 : $d;\n        $d = $d > 7 ? 7 : $d;\n        $d = $d > 8 ? 8 : $d;\n        $d = $d > 9 ? 9 : $d;\n        $d = $d > 10 ? 10 : $d;\n        $d = $d > 11 ? 11 : $d;\n        $d = $d > 12 ? 12 : $d;\n        $d = $d > 13 ? 13 : $d;\n        $d = $d > 14 ? 14 : $d;\n        $d = $d > 15 ? 15 : $d;\n        $d = $d > 16 ? 16 : $d;\n        $d = $d > 17 ? 17 : $d;\n        $d = $d > 18 ? 18 : $d;\n        $d = $d > 19 ? 19 : $d;\n        $d = $d > 20 ? 20 : $d;\n        $d = $d > 21 ? 21 : $d;\n        $d = $d > 22 ? 22 : $d;\n        $d = $d > 23 ? 23 : $d;\n        $d = $d > 24 ? 24 : $d;\n        $d = $d > 25 ? 25 : $d;\n        $d = $d > 26 ? 26 : $d;\n        $d = $d > 27 ? 27 :",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        if (count($xs) == 0) {\n            return array();\n        }\n        if (count($xs) == 1) {\n            return array(0);\n        }\n        if (count($xs) == 2) {\n            return array(0, 0);\n        }\n        if (count($xs) == 3) {\n            return array(0, 0, 0);\n        }\n        if (count($xs) == 4) {\n            return array(0, 0, 0, 0);\n        }\n        if (count($xs) == 5) {\n            return array(0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 6) {\n            return array(0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 7) {\n            return array(0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 8) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 9) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 10) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 11) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 12) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 13) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 14) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
    "    $n = $xs.length - 1;\n    $d = [];\n    for (var i = 0; i <= $n; i++) {\n        $d[i] = 0;\n        for (var j = 0; j < $n - i; j++) {\n            $d[i] += $xs[j + 1] * Math.pow(i + 1, $n - j - 1);\n        }\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 2) {\n            return $xs;\n        }\n        $d = $n - 1;\n        $d2 = $d * 2;\n        $d3 = $d2 * 3;\n        $d4 = $d3 * 4;\n        $d5 = $d4 * 5;\n        $d6 = $d5 * 6;\n        $d7 = $d6 * 7;\n        $d8 = $d7 * 8;\n        $d9 = $d8 * 9;\n        $d10 = $d9 * 10;\n        $d11 = $d10 * 11;\n        $d12 = $d11 * 12;\n        $d13 = $d12 * 13;\n        $d14 = $d13 * 14;\n        $d15 = $d14 * 15;\n        $d16 = $d15 * 16;\n        $d17 = $d16 * 17;\n        $d18 = $d17 * 18;\n        $d19 = $d18 * 19;\n        $d20 = $d19 * 20;\n        $d21 = $d20 * 21;\n        $d22 = $d21 * 22;\n        $d23 = $d22 * 23;\n        $d24 = $d23 * 24;\n        $d25 = $d24 * 25;\n        $d26 = $d25 * 26;\n        $d27 = $d26 * 27;\n        $d28 = $d27 * 28;\n        $d29 = $d28 * 29;\n        $d30 = $d29 * 30;\n        $d31 = $d30 * 31;\n        $d32 = $d31 * 32;\n        $d33 = $d32 * 33;\n        $d34 = $d33 * 34;\n        $d35 = $d34 * 35;\n        $d36 = $d35 * 36;\n        $d37 = $d36 * 37;\n        $d38 = $d37 * 38;\n        $d39 = $d38 * 39;\n        $d40 = $d39",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 1) {\n            return array();\n        }\n        $d = $xs[0];\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d + $xs[$i] * pow($xs[$i], $i);\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    if (is_array($xs)) {\n        if (count($xs) == 0) {\n            return array();\n        }\n        if (count($xs) == 1) {\n            return array(0);\n        }\n        if (count($xs) == 2) {\n            return array(0, 0);\n        }\n        if (count($xs) == 3) {\n            return array(0, 0, 0);\n        }\n        if (count($xs) == 4) {\n            return array(0, 0, 0, 0);\n        }\n        if (count($xs) == 5) {\n            return array(0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 6) {\n            return array(0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 7) {\n            return array(0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 8) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 9) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 10) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 11) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 12) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 13) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 14) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
    "    var $n = $xs.length - 1;\n    var $derivative = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 0) {\n            return $xs;\n        }\n        $d = $n - 1;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0",
    "    var $n = $xs.length - 1;\n    var $derivative = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length;\n    var $d = new Array($n - 1);\n    for (var $i = 0; $i < $n - 1; $i++) {\n        $d[$i] = $xs[$i + 1] * $n - $xs[$i];\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = count($xs);\n        if ($n == 0) {\n            return array();\n        }\n        $d = $n - 1;\n        $d = array_fill(0, $d, 0);\n        $d[0] = 1;\n        $d = array_fill(0, $d, 1);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill(0, $d, 0);\n        $d = array_fill",
    "    if (is_array($xs) && $xs.length > 0) {\n        $n = $xs.length - 1;\n        $d = array();\n        for ($i = 0; $i <= $n; $i++) {\n            $d[$i] = $xs[$i + 1] * $i;\n        }\n        return $d;\n    }\n    return false;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 1) {\n            return [];\n        }\n        $result = [];\n        for ($i = 0; $i < $n; $i++) {\n            $result[$i] = $xs[$i] * $n - $i * $xs[$i - 1];\n        }\n        return $result;\n    }\n    return [];\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 0) {\n            return array();\n        }\n        $d = $xs[0];\n        $d = $d * ($n - 1);\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d + $xs[$i];\n            $d = $d * $i;\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    var $n = $xs.length;\n    var $d = [];\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        if (count($xs) == 0) {\n            return array();\n        }\n        if (count($xs) == 1) {\n            return array(0);\n        }\n        if (count($xs) == 2) {\n            return array(0, 0);\n        }\n        if (count($xs) == 3) {\n            return array(0, 0, 0);\n        }\n        if (count($xs) == 4) {\n            return array(0, 0, 0, 0);\n        }\n        if (count($xs) == 5) {\n            return array(0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 6) {\n            return array(0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 7) {\n            return array(0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 8) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 9) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 10) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 11) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 12) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 13) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 14) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 2) {\n            return $xs;\n        }\n        $d = array();\n        for ($i = $n - 1; $i >= 0; $i--) {\n            $d[$i] = $n * $xs[$i];\n        }\n        return $d;\n    }\n    return $xs;\n}\n",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    if (is_array($xs) && $xs.length > 0) {\n        $n = $xs.length - 1;\n        $d = new Array();\n        for (int $i = 0; $i <= $n; $i++) {\n            $d[$i] = $xs[$i + 1] * $n - $i * $xs[$i];\n        }\n        return $d;\n    }\n    return false;\n}\n",
    "    $n = $xs.length - 1;\n    $d = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 1) {\n            return array();\n        }\n        $d = $xs[0];\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d + $xs[$i] * pow($xs[$i], $i);\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 0) {\n            return array();\n        }\n        $d = $xs[0];\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d * $xs[$i] + $xs[$i - 1];\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    $n = $xs.length - 1;\n    $d = [];\n    for (var i = 0; i <= $n; i++) {\n        $d[i] = $xs[i + 1] * (i + 1);\n    }\n    return $d;\n}\n",
    "    $n = $xs.length - 1;\n    $d = [];\n    for (var i = 0; i <= $n; i++) {\n        $d[i] = $xs[i + 1] * (i + 1);\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 2) {\n            return $xs;\n        }\n        $d = $n - 1;\n        $d2 = $d * 2;\n        $d3 = $d2 * 3;\n        $d4 = $d3 * 4;\n        $d5 = $d4 * 5;\n        $d6 = $d5 * 6;\n        $d7 = $d6 * 7;\n        $d8 = $d7 * 8;\n        $d9 = $d8 * 9;\n        $d10 = $d9 * 10;\n        $d11 = $d10 * 11;\n        $d12 = $d11 * 12;\n        $d13 = $d12 * 13;\n        $d14 = $d13 * 14;\n        $d15 = $d14 * 15;\n        $d16 = $d15 * 16;\n        $d17 = $d16 * 17;\n        $d18 = $d17 * 18;\n        $d19 = $d18 * 19;\n        $d20 = $d19 * 20;\n        $d21 = $d20 * 21;\n        $d22 = $d21 * 22;\n        $d23 = $d22 * 23;\n        $d24 = $d23 * 24;\n        $d25 = $d24 * 25;\n        $d26 = $d25 * 26;\n        $d27 = $d26 * 27;\n        $d28 = $d27 * 28;\n        $d29 = $d28 * 29;\n        $d30 = $d29 * 30;\n        $d31 = $d30 * 31;\n        $d32 = $d31 * 32;\n        $d33 = $d32 * 33;\n        $d34 = $d33 * 34;\n        $d35 = $d34 * 35;\n        $d36 = $d35 * 36;\n        $d37 = $d36 * 37;\n        $d38 = $d37 * 38;\n        $d39 = $d38 * 39;\n        $d40 = $d39",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $n * $xs[$i + 1] - $i * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    var $n = $xs.length;\n    var $d = [];\n    for (var $i = $n - 1; $i >= 0; $i--) {\n        $d[$i] = $n * $xs[$i] + $i * $xs[$i + 1];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $n * $xs[$i + 1] - $i * $xs[$i];\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 0) {\n            return array();\n        }\n        if ($n == 1) {\n            return array(0);\n        }\n        $d = $xs[0];\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d + $xs[$i] * pow($xs[$i], $i);\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 0) {\n            return array();\n        }\n        $d = $xs[0];\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d + $xs[$i] * pow($xs[$i], $i);\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 1) {\n            return array();\n        }\n        $y = $xs[0];\n        $dy = $n > 1 ? $xs[1] : 0;\n        $d2y = $n > 2 ? $xs[2] : 0;\n        $d3y = $n > 3 ? $xs[3] : 0;\n        $d4y = $n > 4 ? $xs[4] : 0;\n        $d5y = $n > 5 ? $xs[5] : 0;\n        $d6y = $n > 6 ? $xs[6] : 0;\n        $d7y = $n > 7 ? $xs[7] : 0;\n        $d8y = $n > 8 ? $xs[8] : 0;\n        $d9y = $n > 9 ? $xs[9] : 0;\n        $d10y = $n > 10 ? $xs[10] : 0;\n        $d11y = $n > 11 ? $xs[11] : 0;\n        $d12y = $n > 12 ? $xs[12] : 0;\n        $d13y = $n > 13 ? $xs[13] : 0;\n        $d14y = $n > 14 ? $xs[14] : 0;\n        $d15y = $n > 15 ? $xs[15] : 0;\n        $d16y = $n > 16 ? $xs[16] : 0;\n        $d17y = $n > 17 ? $xs[17] : 0;\n        $d18y = $n > 18 ? $xs[18] : 0;\n        $d19y = $n > 19 ? $xs[19] : 0;\n        $d20y = $n > 20 ? $xs[20] : 0;\n        $d21y = $n > 21 ? $xs[21] : 0;\n        $d22y = $n > 22 ? $xs[22] : 0;\n        $d23y = $n > 23 ? $xs[23] : 0;\n        $d24y =",
    "    $n = $xs.length;\n    if ($n < 2) {\n        return $xs;\n    }\n    $d = $n - 1;\n    $d2 = $d * 2;\n    $d3 = $d2 * 3;\n    $d4 = $d3 * 4;\n    $d5 = $d4 * 5;\n    $d6 = $d5 * 6;\n    $d7 = $d6 * 7;\n    $d8 = $d7 * 8;\n    $d9 = $d8 * 9;\n    $d10 = $d9 * 10;\n    $d11 = $d10 * 11;\n    $d12 = $d11 * 12;\n    $d13 = $d12 * 13;\n    $d14 = $d13 * 14;\n    $d15 = $d14 * 15;\n    $d16 = $d15 * 16;\n    $d17 = $d16 * 17;\n    $d18 = $d17 * 18;\n    $d19 = $d18 * 19;\n    $d20 = $d19 * 20;\n    $d21 = $d20 * 21;\n    $d22 = $d21 * 22;\n    $d23 = $d22 * 23;\n    $d24 = $d23 * 24;\n    $d25 = $d24 * 25;\n    $d26 = $d25 * 26;\n    $d27 = $d26 * 27;\n    $d28 = $d27 * 28;\n    $d29 = $d28 * 29;\n    $d30 = $d29 * 30;\n    $d31 = $d30 * 31;\n    $d32 = $d31 * 32;\n    $d33 = $d32 * 33;\n    $d34 = $d33 * 34;\n    $d35 = $d34 * 35;\n    $d36 = $d35 * 36;\n    $d37 = $d36 * 37;\n    $d38 = $d37 * 38;\n    $d39 = $d38 * 39;\n    $d40 = $d39 * 40;\n    $d41 = $d",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 1) {\n            return array();\n        }\n        $d = array();\n        $d[0] = $xs[1];\n        for (int $i = 2; $i < $n; $i++) {\n            $d[$i] = $d[$i - 1] * $xs[$i];\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = 0;\n        for (var $j = $i - 1; $j >= 0; $j--) {\n            $d[$i] += $xs[$j] * $i;\n        }\n    }\n    return $d;\n}\n",
    "    if (is_array($xs) && $xs.length > 0) {\n        if (is_array($xs[0])) {\n            return $xs[0];\n        } else {\n            return array();\n        }\n    } else {\n        return array();\n    }\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    $n = $xs.length - 1;\n    $d = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    $n = $xs.length - 1;\n    $d = [];\n    for (var i = 0; i <= $n; i++) {\n        $d[i] = $n * $xs[i + 1] - $i * $xs[i];\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 1) {\n            return array();\n        }\n        $d = $n - 1;\n        $d2 = $d * 2;\n        $d3 = $d2 * 3;\n        $d4 = $d2 * 4;\n        $d5 = $d2 * 5;\n        $d6 = $d2 * 6;\n        $d7 = $d3 * 7;\n        $d8 = $d3 * 8;\n        $d9 = $d3 * 9;\n        $d10 = $d4 * 10;\n        $d11 = $d4 * 11;\n        $d12 = $d4 * 12;\n        $d13 = $d5 * 13;\n        $d14 = $d5 * 14;\n        $d15 = $d5 * 15;\n        $d16 = $d6 * 16;\n        $d17 = $d6 * 17;\n        $d18 = $d6 * 18;\n        $d19 = $d7 * 19;\n        $d20 = $d7 * 20;\n        $d21 = $d8 * 21;\n        $d22 = $d8 * 22;\n        $d23 = $d8 * 23;\n        $d24 = $d9 * 24;\n        $d25 = $d9 * 25;\n        $d26 = $d9 * 26;\n        $d27 = $d10 * 27;\n        $d28 = $d10 * 28;\n        $d29 = $d10 * 29;\n        $d30 = $d11 * 30;\n        $d31 = $d11 * 31;\n        $d32 = $d11 * 32;\n        $d33 = $d12 * 33;\n        $d34 = $d12 * 34;\n        $d35 = $d12 * 35;\n        $d36 = $d13 * 36;\n        $d37 = $d13 * 37;\n        $d38 = $d13 * 38;\n        $d39 = $d14 * 39;\n        $d40 = $d14 *",
    "    if (is_array($xs)) {\n        $n = count($xs);\n        if ($n < 1) {\n            return array();\n        }\n        $d = array();\n        $d[0] = $xs[1];\n        for (int $i = 1; $i < $n; $i++) {\n            $d[$i] = $d[$i - 1] * $xs[$i];\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    var $n = $xs.length;\n    var $d = [];\n    for (var $i = $n - 1; $i >= 0; $i--) {\n        $d[$i] = $n * $xs[$i] + $i * $xs[$i + 1];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $n * $xs[$i + 1] - $i * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length;\n    var $result = [];\n    for (var $i = 0; $i < $n; $i++) {\n        $result[$i] = $n * $xs[$i];\n    }\n    return $result;\n}\n",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $n * $xs[$i + 1] - $i * $xs[$i];\n    }\n    return $d;\n}\n",
    "    if (is_array($xs) && $xs.length > 0) {\n        $n = $xs.length - 1;\n        $d = array();\n        for ($i = 0; $i <= $n; $i++) {\n            $d[$i] = $xs[$i + 1] * $i;\n        }\n        return $d;\n    }\n    return false;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 0) {\n            return array();\n        }\n        $d = $xs[0];\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d + $xs[$i] * pow($xs[$i], $i);\n        }\n        return $d;\n    }\n    return 0;\n}\n",
    "    if (is_array($xs)) {\n        if (count($xs) == 0) {\n            return array();\n        }\n        if (count($xs) == 1) {\n            return array(0);\n        }\n        if (count($xs) == 2) {\n            return array(0, 0);\n        }\n        if (count($xs) == 3) {\n            return array(0, 0, 0);\n        }\n        if (count($xs) == 4) {\n            return array(0, 0, 0, 0);\n        }\n        if (count($xs) == 5) {\n            return array(0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 6) {\n            return array(0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 7) {\n            return array(0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 8) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 9) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 10) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 11) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 12) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 13) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 14) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
    "    var $n = $xs.length;\n    var $d = new Array($n - 1);\n    for (var $i = 0; $i < $n - 1; $i++) {\n        $d[$i] = $xs[$i + 1] * $n - $xs[$i];\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 0) {\n            return $xs;\n        }\n        $d = $n - 1;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 2;\n        $d = $d > 0 ? $d : 3;\n        $d = $d > 0 ? $d : 4;\n        $d = $d > 0 ? $d : 5;\n        $d = $d > 0 ? $d : 6;\n        $d = $d > 0 ? $d : 7;\n        $d = $d > 0 ? $d : 8;\n        $d = $d > 0 ? $d : 9;\n        $d = $d > 0 ? $d : 10;\n        $d = $d > 0 ? $d : 11;\n        $d = $d > 0 ? $d : 12;\n        $d = $d > 0 ? $d : 13;\n        $d = $d > 0 ? $d : 14;\n        $d = $d > 0 ? $d : 15;\n        $d = $d > 0 ? $d : 16;\n        $d = $d > 0 ? $d : 17;\n        $d = $d > 0 ? $d : 18;\n        $d = $d > 0 ? $d : 19;\n        $d = $d > 0 ? $d : 20;\n        $d = $d > 0 ? $d : 21;\n        $d = $d > 0 ? $d : 22;\n        $d = $d > 0 ? $d : 23;\n        $d = $d > 0 ? $d : 24;\n        $d = $d > 0 ? $d : 25;\n        $d = $d > 0 ? $d : 26;\n        $d = $d > 0 ? $d : 27;\n        $d = $d > 0 ? $d : 28;\n        $d = $d > 0 ? $d : 29;\n        $d = $d > 0 ? $d : 30",
    "    var $n = $xs.length;\n    var $derivative = [];\n    for (var $i = $n - 1; $i >= 0; $i--) {\n        $derivative[$i] = $n * $xs[$i];\n    }\n    return $derivative;\n}\n",
    "    $n = $xs.length - 1;\n    $d = [];\n    for ($i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        if (count($xs) == 0) {\n            return array();\n        }\n        if (count($xs) == 1) {\n            return array(0);\n        }\n        if (count($xs) == 2) {\n            return array(0, 0);\n        }\n        if (count($xs) == 3) {\n            return array(0, 0, 0);\n        }\n        if (count($xs) == 4) {\n            return array(0, 0, 0, 0);\n        }\n        if (count($xs) == 5) {\n            return array(0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 6) {\n            return array(0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 7) {\n            return array(0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 8) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 9) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 10) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 11) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 12) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 13) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 14) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
    "    var $n = $xs.length - 1;\n    var $der = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $der[$i] = $xs[$i + 1] * $i;\n    }\n    return $der;\n}\n",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        if (count($xs) == 0) {\n            return $xs;\n        }\n        if (count($xs) == 1) {\n            return array(0);\n        }\n        if (count($xs) == 2) {\n            return array(0, 0);\n        }\n        if (count($xs) == 3) {\n            return array(0, 0, 0);\n        }\n        if (count($xs) == 4) {\n            return array(0, 0, 0, 0);\n        }\n        if (count($xs) == 5) {\n            return array(0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 6) {\n            return array(0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 7) {\n            return array(0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 8) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 9) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 10) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 11) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 12) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 13) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 14) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,",
    "    $n = $xs.length - 1;\n    $d = [];\n    for (var i = 0; i <= $n; i++) {\n        $d[i] = 0;\n        for (var j = i; j < $n; j++) {\n            $d[i] += $xs[j + 1] * Math.pow(i, j);\n        }\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length;\n    var $d = [];\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    $n = $xs.length - 1;\n    $d = [];\n    for (var i = 0; i <= $n; i++) {\n        $d[i] = $xs[i + 1] * (i + 1);\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 2) {\n            return $xs;\n        }\n        $d = $n - 1;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 2;\n        $d = $d > 0 ? $d : 3;\n        $d = $d > 0 ? $d : 4;\n        $d = $d > 0 ? $d : 5;\n        $d = $d > 0 ? $d : 6;\n        $d = $d > 0 ? $d : 7;\n        $d = $d > 0 ? $d : 8;\n        $d = $d > 0 ? $d : 9;\n        $d = $d > 0 ? $d : 10;\n        $d = $d > 0 ? $d : 11;\n        $d = $d > 0 ? $d : 12;\n        $d = $d > 0 ? $d : 13;\n        $d = $d > 0 ? $d : 14;\n        $d = $d > 0 ? $d : 15;\n        $d = $d > 0 ? $d : 16;\n        $d = $d > 0 ? $d : 17;\n        $d = $d > 0 ? $d : 18;\n        $d = $d > 0 ? $d : 19;\n        $d = $d > 0 ? $d : 20;\n        $d = $d > 0 ? $d : 21;\n        $d = $d > 0 ? $d : 22;\n        $d = $d > 0 ? $d : 23;\n        $d = $d > 0 ? $d : 24;\n        $d = $d > 0 ? $d : 25;\n        $d = $d > 0 ? $d : 26;\n        $d = $d > 0 ? $d : 27;\n        $d = $d > 0 ? $d : 28;\n        $d = $d > 0 ? $d : 29;\n        $d = $d > 0 ? $d : 30",
    "    var $n = $xs.length - 1;\n    var $derivative = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 1) {\n            return array();\n        }\n        $d = $xs[0];\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d + $xs[$i] * pow($xs[$i], $i);\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 1) {\n            return $xs;\n        }\n        $d = $n - 1;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 0",
    "    if (is_array($xs)) {\n        if (count($xs) == 0) {\n            return array();\n        }\n        if (count($xs) == 1) {\n            return array(0);\n        }\n        if (count($xs) == 2) {\n            return array(0, 0);\n        }\n        if (count($xs) == 3) {\n            return array(0, 0, 0);\n        }\n        if (count($xs) == 4) {\n            return array(0, 0, 0, 0);\n        }\n        if (count($xs) == 5) {\n            return array(0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 6) {\n            return array(0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 7) {\n            return array(0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 8) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 9) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 10) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 11) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 12) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 13) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 14) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 1) {\n            return $xs;\n        }\n        $d = $n - 1;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 0 ? $d : 1;\n        $d = $d > 0 ? $d : 2;\n        $d = $d > 0 ? $d : 3;\n        $d = $d > 0 ? $d : 4;\n        $d = $d > 0 ? $d : 5;\n        $d = $d > 0 ? $d : 6;\n        $d = $d > 0 ? $d : 7;\n        $d = $d > 0 ? $d : 8;\n        $d = $d > 0 ? $d : 9;\n        $d = $d > 0 ? $d : 10;\n        $d = $d > 0 ? $d : 11;\n        $d = $d > 0 ? $d : 12;\n        $d = $d > 0 ? $d : 13;\n        $d = $d > 0 ? $d : 14;\n        $d = $d > 0 ? $d : 15;\n        $d = $d > 0 ? $d : 16;\n        $d = $d > 0 ? $d : 17;\n        $d = $d > 0 ? $d : 18;\n        $d = $d > 0 ? $d : 19;\n        $d = $d > 0 ? $d : 20;\n        $d = $d > 0 ? $d : 21;\n        $d = $d > 0 ? $d : 22;\n        $d = $d > 0 ? $d : 23;\n        $d = $d > 0 ? $d : 24;\n        $d = $d > 0 ? $d : 25;\n        $d = $d > 0 ? $d : 26;\n        $d = $d > 0 ? $d : 27;\n        $d = $d > 0 ? $d : 28;\n        $d = $d > 0 ? $d : 29;\n        $d = $d > 0 ? $d : 30",
    "    var $n = $xs.length;\n    var $derivative = [];\n    for (var $i = $n - 1; $i >= 0; $i--) {\n        $derivative[$i] = $n * $xs[$i];\n    }\n    return $derivative;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 1) {\n            return array();\n        }\n        $d = $xs[0];\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d + $xs[$i] * pow($xs[$i], $i);\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 2) {\n            return $xs;\n        }\n        $d = array();\n        for (int $i = $n - 1; $i >= 0; $i--) {\n            $d[$i] = $n * $xs[$i];\n        }\n        return $d;\n    }\n    return $xs;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 1) {\n            return array();\n        }\n        $d = $xs[0];\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d + $xs[$i] * pow($xs[$i], $i);\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 0) {\n            return [];\n        }\n        $d = $xs[0];\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d + $xs[$i] * pow($xs[$i], $i);\n        }\n        return $d;\n    }\n    return [];\n}\n",
    "    if (is_array($xs)) {\n        if (count($xs) == 0) {\n            return array();\n        }\n        if (count($xs) == 1) {\n            return array(0);\n        }\n        if (count($xs) == 2) {\n            return array(0, 0);\n        }\n        if (count($xs) == 3) {\n            return array(0, 0, 0);\n        }\n        if (count($xs) == 4) {\n            return array(0, 0, 0, 0);\n        }\n        if (count($xs) == 5) {\n            return array(0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 6) {\n            return array(0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 7) {\n            return array(0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 8) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 9) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 10) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 11) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 12) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 13) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        if (count($xs) == 14) {\n            return array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $n * $xs[$i + 1] - $i * $xs[$i];\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 1) {\n            return array();\n        }\n        $d = array();\n        for ($i = 0; $i < $n; $i++) {\n            $d[$i] = $xs[$i] * ($n - $i);\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    var $n = $xs.length;\n    var $result = [];\n    for (var $i = 0; $i < $n; $i++) {\n        $result[$i] = $n * $xs[$i];\n    }\n    return $result;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 2) {\n            return $xs;\n        }\n        $d = $n - 1;\n        $dxs = new Array();\n        for (i = 0; i < $d; i++) {\n            $dxs[i] = $xs[i + 1] * $d;\n        }\n        $dxs[$d] = $xs[0];\n        return $dxs;\n    }\n    return $xs;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $n * $xs[$i + 1] - $i * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $xs[$i + 1] * $i;\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $derivative = [];\n    for (var $i = 0; $i <= $n; $i++) {\n        $derivative[$i] = $xs[$i + 1] * $i;\n    }\n    return $derivative;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 0) {\n            return array();\n        }\n        $d = $xs[0];\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d + $xs[$i] * pow($xs[$i], $i);\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n == 0) {\n            return array();\n        }\n        if ($n == 1) {\n            return array(0);\n        }\n        $d = $xs[0];\n        $d2 = 0;\n        for ($i = 1; $i < $n; $i++) {\n            $d2 += $xs[$i] * pow($i, $i);\n        }\n        return array($d, $d2);\n    }\n    return array();\n}\n",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 1) {\n            return $xs;\n        }\n        $d = $xs[0];\n        $d = $d * ($n - 1);\n        for ($i = 1; $i < $n; $i++) {\n            $d = $d + $xs[$i] * $i;\n        }\n        return $d;\n    }\n    return $xs;\n}\n",
    "    if (is_array($xs) && $xs.length > 0) {\n        $n = $xs.length - 1;\n        $d = $n * $n;\n        $d = $d > 0 ? $d : 0;\n        $d = $d > 1 ? $d : 1;\n        $d = $d > 2 ? $d : 2;\n        $d = $d > 3 ? $d : 3;\n        $d = $d > 4 ? $d : 4;\n        $d = $d > 5 ? $d : 5;\n        $d = $d > 6 ? $d : 6;\n        $d = $d > 7 ? $d : 7;\n        $d = $d > 8 ? $d : 8;\n        $d = $d > 9 ? $d : 9;\n        $d = $d > 10 ? $d : 10;\n        $d = $d > 11 ? $d : 11;\n        $d = $d > 12 ? $d : 12;\n        $d = $d > 13 ? $d : 13;\n        $d = $d > 14 ? $d : 14;\n        $d = $d > 15 ? $d : 15;\n        $d = $d > 16 ? $d : 16;\n        $d = $d > 17 ? $d : 17;\n        $d = $d > 18 ? $d : 18;\n        $d = $d > 19 ? $d : 19;\n        $d = $d > 20 ? $d : 20;\n        $d = $d > 21 ? $d : 21;\n        $d = $d > 22 ? $d : 22;\n        $d = $d > 23 ? $d : 23;\n        $d = $d > 24 ? $d : 24;\n        $d = $d > 25 ? $d : 25;\n        $d = $d > 26 ? $d : 26;\n        $d = $d > 27 ? $d : 27;\n        $d = $d > 28 ? $d : 28;\n        $d = $d > 29 ? $d : 29;\n        $d = $d > 30 ? $d : 30;\n        $d = $",
    "    if (is_array($xs)) {\n        $n = $xs.length;\n        if ($n < 1) {\n            return array();\n        }\n        $d = $xs[0];\n        $d = $d * ($n - 1);\n        for (int $i = 1; $i < $n; $i++) {\n            $d = $d + $xs[$i];\n            $d = $d * $i;\n        }\n        return $d;\n    }\n    return array();\n}\n",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length - 1;\n    var $d = new Array($n + 1);\n    for (var $i = 0; $i <= $n; $i++) {\n        $d[$i] = $n * $xs[$i + 1] - $i * $xs[$i];\n    }\n    return $d;\n}\n",
    "    var $n = $xs.length;\n    var $d = new Array($n);\n    for (var $i = 0; $i < $n; $i++) {\n        $d[$i] = $n * $xs[$i];\n    }\n    return $d;\n}\n"
  ],
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ]
}
{
  "name": "HumanEval_125_split_words",
  "language": "php",
  "prompt": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n",
  "tests": "function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 68 in /tmp/tmpplkkqri3.php on line 84\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpmkm9m19b.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = $arr;\n    $arr = array_filter($arr, function($val) {\n        return $val !== \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_map($arr, function($val) {\n        return $val.toLowerCase();\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val % 2;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, class \"Hello\" not found in /tmp/tmpuse7pa58.php:21\nStack trace:\n#0 /tmp/tmpuse7pa58.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmpuse7pa58.php(29): split_words('Hello world!')\n#2 /tmp/tmpuse7pa58.php(33): candidate('Hello world!')\n#3 /tmp/tmpuse7pa58.php(43): test()\n#4 {main}\n  thrown in /tmp/tmpuse7pa58.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($s){ return $s != ''; });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp28gantb0.php:24\nStack trace:\n#0 /tmp/tmp28gantb0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp28gantb0.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihfa7w42.php:29\nStack trace:\n#0 /tmp/tmpihfa7w42.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpihfa7w42.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \" \";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \",\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \".\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"!\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"?\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \";\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \":\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\\\"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"'\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"(\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \")\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"{\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"}\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"[\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"]\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"|\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\\\\\";\n    });\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 12 in /tmp/tmpp_frlxr3.php on line 84\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = $arr;\n    $arr = array_filter($arr, function($val) {\n        return $val !== '';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn0ruwqef.php:27\nStack trace:\n#0 /tmp/tmpn0ruwqef.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpn0ruwqef.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = $arr;\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1r7ev1l.php:27\nStack trace:\n#0 /tmp/tmpl1r7ev1l.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpl1r7ev1l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1uo7abkr.php:32\nStack trace:\n#0 /tmp/tmp1uo7abkr.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1uo7abkr.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($s) { return $s != ''; });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaen83h2w.php:24\nStack trace:\n#0 /tmp/tmpaen83h2w.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpaen83h2w.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 68 in /tmp/tmpplkkqri3.php on line 84\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($s) { return $s != \"\"; });\n    $arr = array_filter($arr, function($s) { return $s != \" \"; });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp03_8aktk.php:25\nStack trace:\n#0 /tmp/tmp03_8aktk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp03_8aktk.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = $arr;\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1r7ev1l.php:27\nStack trace:\n#0 /tmp/tmpl1r7ev1l.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpl1r7ev1l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== ' ';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpif2dzhla.php:32\nStack trace:\n#0 /tmp/tmpif2dzhla.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpif2dzhla.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpusfiabol.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = $arr;\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_map($arr, function($word) {\n        return $word.toLowerCase();\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word.length % 2 == 1;\n    });\n    $arr = array_unique($arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, class \"Hello\" not found in /tmp/tmp8m9iekqp.php:21\nStack trace:\n#0 /tmp/tmp8m9iekqp.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmp8m9iekqp.php(30): split_words('Hello world!')\n#2 /tmp/tmp8m9iekqp.php(34): candidate('Hello world!')\n#3 /tmp/tmp8m9iekqp.php(44): test()\n#4 {main}\n  thrown in /tmp/tmp8m9iekqp.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 68 in /tmp/tmpplkkqri3.php on line 84\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\",\", $txt);\n    $arr = $arr ? $arr : explode(\";\", $txt);\n    $arr = $arr ? $arr : explode(\"-\", $txt);\n    $arr = $arr ? $arr : explode(\"/\", $txt);\n    $arr = $arr ? $arr : explode(\"\\\\\", $txt);\n    $arr = $arr ? $arr : explode(\"|\", $txt);\n    $arr = $arr ? $arr : explode(\"&\", $txt);\n    $arr = $arr ? $arr : explode(\"!\", $txt);\n    $arr = $arr ? $arr : explode(\"?\", $txt);\n    $arr = $arr ? $arr : explode(\"=\", $txt);\n    $arr = $arr ? $arr : explode(\"+\", $txt);\n    $arr = $arr ? $arr : explode(\"*\", $txt);\n    $arr = $arr ? $arr : explode(\"(\", $txt);\n    $arr = $arr ? $arr : explode(\")\", $txt);\n    $arr = $arr ? $arr : explode(\"^\", $txt);\n    $arr = $arr ? $arr : explode(\"%\", $txt);\n    $arr = $arr ? $arr : explode(\"$\", $txt);\n    $arr = $arr ? $arr : explode(\"#\", $txt);\n    $arr = $arr ? $arr : explode(\"@\", $txt);\n    $arr = $arr ? $arr : explode(\"~\", $txt);\n    $arr = $arr ? $arr : explode(\"`\", $txt);\n    $arr = $arr ? $arr : explode(\"{\", $txt);\n    $arr = $arr ? $arr : explode(\"}\", $txt);\n    $arr = $arr ? $arr : explode(\"[\", $txt);\n    $arr = $arr ? $arr : explode(\"]\", $txt);\n    $arr = $arr ? $arr : explode(\"\\\\\", $txt);\n    $arr = $arr ? $arr : explode(\"\\\\\", $txt);\n    $arr = $arr ? $arr : explode(\"\\\\\", $txt);\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 12 in /tmp/tmppe2wusy5.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmp9yvpuzyb.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = $arr ? $arr : explode(',', $txt);\n    $arr = $arr ? $arr : explode('.', $txt);\n    $arr = $arr ? $arr : explode('!', $txt);\n    $arr = $arr ? $arr : explode('?', $txt);\n    $arr = $arr ? $arr : explode(';', $txt);\n    $arr = $arr ? $arr : explode('-', $txt);\n    $arr = $arr ? $arr : explode('_', $txt);\n    $arr = $arr ? $arr : explode('/', $txt);\n    $arr = $arr ? $arr : explode('\\\\', $txt);\n    $arr = $arr ? $arr : explode('|', $txt);\n    $arr = $arr ? $arr : explode('&', $txt);\n    $arr = $arr ? $arr : explode('=', $txt);\n    $arr = $arr ? $arr : explode('+', $txt);\n    $arr = $arr ? $arr : explode('*', $txt);\n    $arr = $arr ? $arr : explode('(', $txt);\n    $arr = $arr ? $arr : explode(')', $txt);\n    $arr = $arr ? $arr : explode('{', $txt);\n    $arr = $arr ? $arr : explode('}', $txt);\n    $arr = $arr ? $arr : explode('[', $txt);\n    $arr = $arr ? $arr : explode(']', $txt);\n    $arr = $arr ? $arr : explode('^', $txt);\n    $arr = $arr ? $arr : explode('%', $txt);\n    $arr = $arr ? $arr : explode('$', $txt);\n    $arr = $arr ? $arr : explode('#', $txt);\n    $arr = $arr ? $arr : explode('@', $txt);\n    $arr = $arr ? $arr : explode('~', $txt);\n    $arr = $arr ? $arr : explode('`', $txt);\n    $arr = $arr ? $arr : explode('\\'', $\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpuferhd8n.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = $arr ? $arr : explode(',', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ?\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpd2p79ldw.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 68 in /tmp/tmpplkkqri3.php on line 84\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpmkm9m19b.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihfa7w42.php:29\nStack trace:\n#0 /tmp/tmpihfa7w42.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpihfa7w42.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpscabkhmr.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = array();\n    $arr = explode(\" \", $txt);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqqh6ri8v.php:24\nStack trace:\n#0 /tmp/tmpqqh6ri8v.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqqh6ri8v.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($s) {\n        return $s != \"\";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \" \";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvs5yacue.php:29\nStack trace:\n#0 /tmp/tmpvs5yacue.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvs5yacue.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \" \";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \",\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \".\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"!\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"?\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \";\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \":\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\\\"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"'\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"(\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \")\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"{\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"}\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"[\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"]\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"&\";\n    });\n    $arr = array_filter($arr, function\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmppne6b0yq.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = $arr;\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4dlh63pq.php:27\nStack trace:\n#0 /tmp/tmp4dlh63pq.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4dlh63pq.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($s){return $s != ''});\n    $arr = array_filter($arr, function($s){return $s != ' '});\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"}\", expecting \";\" in /tmp/tmpaaje2pxa.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr2 = explode(\",\", $txt);\n    $arr3 = explode(\";\", $txt);\n    $arr4 = explode(\"-\", $txt);\n    $arr5 = explode(\"/\", $txt);\n    $arr6 = explode(\"\\\\\", $txt);\n    $arr7 = explode(\"|\", $txt);\n    $arr8 = explode(\"&\", $txt);\n    $arr9 = explode(\"!\", $txt);\n    $arr10 = explode(\"?\", $txt);\n    $arr11 = explode(\"(\", $txt);\n    $arr12 = explode(\")\", $txt);\n    $arr13 = explode(\"{\", $txt);\n    $arr14 = explode(\"}\", $txt);\n    $arr15 = explode(\"[\", $txt);\n    $arr16 = explode(\"]\", $txt);\n    $arr17 = explode(\"%\", $txt);\n    $arr18 = explode(\"#\", $txt);\n    $arr19 = explode(\"$\", $txt);\n    $arr20 = explode(\"^\", $txt);\n    $arr21 = explode(\"*\", $txt);\n    $arr22 = explode(\"+\", $txt);\n    $arr23 = explode(\"=\", $txt);\n    $arr24 = explode(\"<\", $txt);\n    $arr25 = explode(\">\", $txt);\n    $arr26 = explode(\"?\", $txt);\n    $arr27 = explode(\"@\", $txt);\n    $arr28 = explode(\"#\", $txt);\n    $arr29 = explode(\"~\", $txt);\n    $arr30 = explode(\"`\", $txt);\n    $arr31 = explode(\"\\\\\", $txt);\n    $arr32 = explode(\"|\", $txt);\n    $arr33 = explode(\"&\", $txt);\n    $arr34 = explode(\"!\", $txt);\n    $arr35 = explode(\"?\", $txt);\n    $arr36 = explode(\"(\", $txt);\n    $arr37 = explode(\")\", $txt);\n    $arr38 = explode(\"{\", $txt);\n    $arr39 = explode(\"}\", $txt);\n    $arr40 = explode(\"[\", $txt);\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 12 in /tmp/tmpa5jfh20b.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 68 in /tmp/tmpplkkqri3.php on line 84\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 68 in /tmp/tmpplkkqri3.php on line 84\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpmkm9m19b.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \" \";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \",\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \".\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"!\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"?\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \";\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \":\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\\\"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"'\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"`\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"~\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"`\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"!\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"?\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \".\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \",\";\n    });\n    $arr = array_filter($arr,\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpwnxx5k5r.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvt2y8833.php:32\nStack trace:\n#0 /tmp/tmpvt2y8833.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvt2y8833.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpusfiabol.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = $arr;\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 66 in /tmp/tmp8rdy6n1r.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = $arr;\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_map($arr, function($word) {\n        return $word.toLowerCase();\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word.match(/[a-z]/i);\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word.match(/[a-z]/i);\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word.match(/[a-z]/i);\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word.match(/[a-z]/i);\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word.match(/[a-z]/i);\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word.match(/[a-z]/i);\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word.match(/[a-z]/i);\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word.match(/[a-z]/i);\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word.match(/[a-z]/i);\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word.match(/[a-z]/i);\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word.match(/[a-z]/i);\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word.match(/[a-z]\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"/\" in /tmp/tmp0b00livm.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = $arr ? $arr : explode(',', $txt);\n    $arr = $arr ? $arr : explode('.', $txt);\n    $arr = $arr ? $arr : explode('!', $txt);\n    $arr = $arr ? $arr : explode('?', $txt);\n    $arr = $arr ? $arr : explode(';', $txt);\n    $arr = $arr ? $arr : explode('-', $txt);\n    $arr = $arr ? $arr : explode('_', $txt);\n    $arr = $arr ? $arr : explode('/', $txt);\n    $arr = $arr ? $arr : explode('\\\\', $txt);\n    $arr = $arr ? $arr : explode('(', $txt);\n    $arr = $arr ? $arr : explode(')', $txt);\n    $arr = $arr ? $arr : explode('{', $txt);\n    $arr = $arr ? $arr : explode('}', $txt);\n    $arr = $arr ? $arr : explode('[', $txt);\n    $arr = $arr ? $arr : explode(']', $txt);\n    $arr = $arr ? $arr : explode('<', $txt);\n    $arr = $arr ? $arr : explode('>', $txt);\n    $arr = $arr ? $arr : explode('=', $txt);\n    $arr = $arr ? $arr : explode('+', $txt);\n    $arr = $arr ? $arr : explode('-', $txt);\n    $arr = $arr ? $arr : explode('*', $txt);\n    $arr = $arr ? $arr : explode('/', $txt);\n    $arr = $arr ? $arr : explode('%', $txt);\n    $arr = $arr ? $arr : explode('&', $txt);\n    $arr = $arr ? $arr : explode('|', $txt);\n    $arr = $arr ? $arr : explode('^', $txt);\n    $arr = $arr ? $arr : explode('~', $txt);\n    $arr = $arr ? $arr : explode('\\\\', $\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpe56aq2yn.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihfa7w42.php:29\nStack trace:\n#0 /tmp/tmpihfa7w42.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpihfa7w42.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \" \";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_arym1az.php:29\nStack trace:\n#0 /tmp/tmp_arym1az.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_arym1az.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpspmp3be0.php on line 67\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 68 in /tmp/tmpplkkqri3.php on line 84\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpusfiabol.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word){return $word != \"\";});\n    $arr = array_filter($arr, function($word){return $word != \" \";});\n    $arr = array_filter($arr, function($word){return $word != \",\";});\n    $arr = array_filter($arr, function($word){return $word != \".\";});\n    $arr = array_filter($arr, function($word){return $word != \"!\";});\n    $arr = array_filter($arr, function($word){return $word != \"?\";});\n    $arr = array_filter($arr, function($word){return $word != \";\";});\n    $arr = array_filter($arr, function($word){return $word != \":\";});\n    $arr = array_filter($arr, function($word){return $word != \"\\\"\";});\n    $arr = array_filter($arr, function($word){return $word != \"'\";});\n    $arr = array_filter($arr, function($word){return $word != \"(\";});\n    $arr = array_filter($arr, function($word){return $word != \")\";});\n    $arr = array_filter($arr, function($word){return $word != \"{\";});\n    $arr = array_filter($arr, function($word){return $word != \"}\";});\n    $arr = array_filter($arr, function($word){return $word != \"[\";});\n    $arr = array_filter($arr, function($word){return $word != \"]\";});\n    $arr = array_filter($arr, function($word){return $word != \"&\";});\n    $arr = array_filter($arr, function($word){return $word != \"|\";});\n    $arr = array_filter($arr, function($word){return $word != \";\";});\n    $arr = array_filter($arr, function($word){return $word != \".\";});\n    $arr = array_filter($arr, function($word){return $word != \",\";});\n    $arr = array_filter($arr, function($word){return $word != \"!\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 35 in /tmp/tmp1agcnodd.php on line 51\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvt2y8833.php:32\nStack trace:\n#0 /tmp/tmpvt2y8833.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvt2y8833.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptt42dxdh.php:26\nStack trace:\n#0 /tmp/tmptt42dxdh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptt42dxdh.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \" \";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \",\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \".\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"!\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"?\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \";\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \":\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\\\"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"'\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"(\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \")\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"{\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"}\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"[\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"]\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"&\";\n    });\n    $arr = array_filter($arr, function\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmppne6b0yq.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = $arr;\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuwi0k7p9.php:27\nStack trace:\n#0 /tmp/tmpuwi0k7p9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpuwi0k7p9.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvt2y8833.php:32\nStack trace:\n#0 /tmp/tmpvt2y8833.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvt2y8833.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpscabkhmr.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $txt;\n    $arr = $arr ? $arr : $\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpuja_raia.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($s) { return $s != ''; });\n    $arr = array_filter($arr, function($s) { return $s != ' '; });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp266ub4p3.php:25\nStack trace:\n#0 /tmp/tmp266ub4p3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp266ub4p3.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($s) { return $s != ''; });\n    $arr = array_filter($arr, function($s) { return $s != ' '; });\n    $arr = array_filter($arr, function($s) { return $s != ','; });\n    $arr = array_filter($arr, function($s) { return $s != ' '; });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp20p366t1.php:27\nStack trace:\n#0 /tmp/tmp20p366t1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp20p366t1.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8dwiuzzt.php:32\nStack trace:\n#0 /tmp/tmp8dwiuzzt.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8dwiuzzt.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 68 in /tmp/tmpplkkqri3.php on line 84\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = $arr;\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vhxfl8h.php:27\nStack trace:\n#0 /tmp/tmp1vhxfl8h.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1vhxfl8h.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \" \";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \",\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \".\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"!\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"?\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \";\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \":\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\\\"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"'\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"(\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \")\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"{\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"}\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"[\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"]\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"&\";\n    });\n    $arr = array_filter($arr, function\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmppne6b0yq.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 68 in /tmp/tmp783dctmh.php on line 84\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($s) {\n        return $s != \"\";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \" \";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \",\";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \" \";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \",\";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \" \";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \",\";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \" \";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \",\";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \" \";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \",\";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \" \";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \",\";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \" \";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \",\";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \" \";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \",\";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \" \";\n    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmplgjoyrkz.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \" \";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \",\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \".\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"!\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"?\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \";\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \":\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\\\"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"'\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"(\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \")\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"{\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"}\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"[\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"]\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"&\";\n    });\n    $arr = array_filter($arr, function\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmppne6b0yq.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \" \";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \",\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \".\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"!\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"?\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \";\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \":\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\\\"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"'\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"`\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"(\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \")\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"{\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"}\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"[\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"]\";\n    });\n    $arr = array_filter($arr, function\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmpqbq675dx.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \" \";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \",\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \".\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"!\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"?\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \";\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \":\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\\\"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"'\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"(\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \")\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"{\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"}\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"[\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"]\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"&\";\n    });\n    $arr = array_filter($arr, function\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmppne6b0yq.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpmkm9m19b.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihfa7w42.php:29\nStack trace:\n#0 /tmp/tmpihfa7w42.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpihfa7w42.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = $arr ? $arr : explode(',', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ?\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpd2p79ldw.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihfa7w42.php:29\nStack trace:\n#0 /tmp/tmpihfa7w42.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpihfa7w42.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($s) { return $s != ''; });\n    $arr = array_filter($arr, function($s) { return $s != ' '; });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp266ub4p3.php:25\nStack trace:\n#0 /tmp/tmp266ub4p3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp266ub4p3.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpscabkhmr.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpusfiabol.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($s) {\n        return $s != \"\";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \" \";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvs5yacue.php:29\nStack trace:\n#0 /tmp/tmpvs5yacue.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvs5yacue.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpmkm9m19b.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_unique($arr);\n    $arr = array\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmp9yvpuzyb.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($val) {\n        return $val != '';\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != ' ';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpncs11lg9.php:29\nStack trace:\n#0 /tmp/tmpncs11lg9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpncs11lg9.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \" \";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3j3a0o2.php:29\nStack trace:\n#0 /tmp/tmpm3j3a0o2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpm3j3a0o2.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmptw3qz_t6.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($s) {\n        return $s != '';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0i71a6u.php:26\nStack trace:\n#0 /tmp/tmpd0i71a6u.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpd0i71a6u.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != '.';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != '!';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != '?';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ';';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ':';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != '.';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != '!';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != '?';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ';';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ':';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != '.';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != '!';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != '?';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ';';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ':';\n    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpqtxx5pju.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($s) { return $s != \"\"; });\n    $arr = array_filter($arr, function($s) { return $s != \" \"; });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp03_8aktk.php:25\nStack trace:\n#0 /tmp/tmp03_8aktk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp03_8aktk.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\",\", $txt);\n    $arr = $arr ? $arr : explode(\";\", $txt);\n    $arr = $arr ? $arr : explode(\"-\", $txt);\n    $arr = $arr ? $arr : explode(\"/\", $txt);\n    $arr = $arr ? $arr : explode(\"\\\\\", $txt);\n    $arr = $arr ? $arr : explode(\"|\", $txt);\n    $arr = $arr ? $arr : explode(\"&\", $txt);\n    $arr = $arr ? $arr : explode(\"!\", $txt);\n    $arr = $arr ? $arr : explode(\"?\", $txt);\n    $arr = $arr ? $arr : explode(\"=\", $txt);\n    $arr = $arr ? $arr : explode(\"+\", $txt);\n    $arr = $arr ? $arr : explode(\"*\", $txt);\n    $arr = $arr ? $arr : explode(\"(\", $txt);\n    $arr = $arr ? $arr : explode(\")\", $txt);\n    $arr = $arr ? $arr : explode(\"^\", $txt);\n    $arr = $arr ? $arr : explode(\"%\", $txt);\n    $arr = $arr ? $arr : explode(\"$\", $txt);\n    $arr = $arr ? $arr : explode(\"#\", $txt);\n    $arr = $arr ? $arr : explode(\"@\", $txt);\n    $arr = $arr ? $arr : explode(\"~\", $txt);\n    $arr = $arr ? $arr : explode(\"`\", $txt);\n    $arr = $arr ? $arr : explode(\"{\", $txt);\n    $arr = $arr ? $arr : explode(\"}\", $txt);\n    $arr = $arr ? $arr : explode(\"[\", $txt);\n    $arr = $arr ? $arr : explode(\"]\", $txt);\n    $arr = $arr ? $arr : explode(\"\\\\\", $txt);\n    $arr = $arr ? $arr : explode(\"_\", $txt);\n    $arr = $arr ? $arr : explode(\";\", $txt);\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 12 in /tmp/tmpl9q50y2d.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($s) {\n        return $s != '';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0i71a6u.php:26\nStack trace:\n#0 /tmp/tmpd0i71a6u.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpd0i71a6u.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = array();\n    $arr = preg_split(\"/\\s+/\", $txt);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\s+/\", $arr);\n    $arr = preg_split(\"/\\\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Hello\", expecting \")\" in /tmp/tmpg_oy6v6w.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpmkm9m19b.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpmkm9m19b.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8dwiuzzt.php:32\nStack trace:\n#0 /tmp/tmp8dwiuzzt.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8dwiuzzt.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($s) { return $s != \"\"; });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpej8m4h09.php:24\nStack trace:\n#0 /tmp/tmpej8m4h09.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpej8m4h09.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($str) {\n        return $str != \"\";\n    });\n    $arr = array_filter($arr, function($str) {\n        return $str != \" \";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7h6vynhq.php:29\nStack trace:\n#0 /tmp/tmp7h6vynhq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7h6vynhq.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpmkm9m19b.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\",\", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ?\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpjj1edid3.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($s) { return $s != ''; });\n    $arr = array_filter($arr, function($s) { return $s != ' '; });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp266ub4p3.php:25\nStack trace:\n#0 /tmp/tmp266ub4p3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp266ub4p3.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \" \";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \",\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \".\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"!\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"?\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \";\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \":\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\\\"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"'\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"(\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \")\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"{\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"}\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"[\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"]\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"&\";\n    });\n    $arr = array_filter($arr, function\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmppne6b0yq.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 68 in /tmp/tmpplkkqri3.php on line 84\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \" \";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \",\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \".\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"!\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"?\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \";\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \":\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\\\"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"'\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"(\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \")\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"{\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"}\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"[\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"]\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"&\";\n    });\n    $arr = array_filter($arr, function\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmppne6b0yq.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== ' ';\n    });\n    $arr = array_filter($arr\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpbucd_vy5.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($s) {\n        return $s != \"\";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \" \";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvs5yacue.php:29\nStack trace:\n#0 /tmp/tmpvs5yacue.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvs5yacue.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \" \";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \",\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \".\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"!\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"?\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \";\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \":\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\\\"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"'\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"(\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \")\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"{\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"}\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"[\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"]\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"&\";\n    });\n    $arr = array_filter($arr, function\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmppne6b0yq.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($s) {\n        return $s != '';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0i71a6u.php:26\nStack trace:\n#0 /tmp/tmpd0i71a6u.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpd0i71a6u.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 68 in /tmp/tmp7g09g570.php on line 84\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($elem) {\n        return $elem !== '';\n    });\n    $arr = array_filter($arr, function($elem) {\n        return $elem !== '';\n    });\n    $arr = array_filter($arr, function($elem) {\n        return $elem !== '';\n    });\n    $arr = array_filter($arr, function($elem) {\n        return $elem !== '';\n    });\n    $arr = array_filter($arr, function($elem) {\n        return $elem !== '';\n    });\n    $arr = array_filter($arr, function($elem) {\n        return $elem !== '';\n    });\n    $arr = array_filter($arr, function($elem) {\n        return $elem !== '';\n    });\n    $arr = array_filter($arr, function($elem) {\n        return $elem !== '';\n    });\n    $arr = array_filter($arr, function($elem) {\n        return $elem !== '';\n    });\n    $arr = array_filter($arr, function($elem) {\n        return $elem !== '';\n    });\n    $arr = array_filter($arr, function($elem) {\n        return $elem !== '';\n    });\n    $arr = array_filter($arr, function($elem) {\n        return $elem !== '';\n    });\n    $arr = array_filter($arr, function($elem) {\n        return $elem !== '';\n    });\n    $arr = array_filter($arr, function($elem) {\n        return $elem !== '';\n    });\n    $arr = array_filter($arr, function($elem) {\n        return $elem !== '';\n    });\n    $arr = array_filter($arr, function($elem) {\n        return $elem !== '';\n    });\n    $arr = array_filter($arr, function($elem) {\n        return $e\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \";\" in /tmp/tmpr7_cu7jn.php on line 64\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($s) {\n        return $s != \"\";\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != \" \";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvs5yacue.php:29\nStack trace:\n#0 /tmp/tmpvs5yacue.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvs5yacue.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = $arr;\n    $arr = array_filter($arr, function ($word) {\n        return $word !== \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp60uug7gz.php:27\nStack trace:\n#0 /tmp/tmp60uug7gz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp60uug7gz.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp3g6c27fd.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($s) { return $s != \"\"; });\n    $arr = array_filter($arr, function($s) { return $s != \" \"; });\n    $arr = array_filter($arr, function($s) { return $s != \",\"; });\n    $arr = array_filter($arr, function($s) { return $s != \".\"; });\n    $arr = array_filter($arr, function($s) { return $s != \"!\"; });\n    $arr = array_filter($arr, function($s) { return $s != \"?\"; });\n    $arr = array_filter($arr, function($s) { return $s != \";\"; });\n    $arr = array_filter($arr, function($s) { return $s != \":\"; });\n    $arr = array_filter($arr, function($s) { return $s != \".\"; });\n    $arr = array_filter($arr, function($s) { return $s != \",\"; });\n    $arr = array_filter($arr, function($s) { return $s != \"!\"; });\n    $arr = array_filter($arr, function($s) { return $s != \"?\"; });\n    $arr = array_filter($arr, function($s) { return $s != \";\"; });\n    $arr = array_filter($arr, function($s) { return $s != \":\"; });\n    $arr = array_filter($arr, function($s) { return $s != \".\"; });\n    $arr = array_filter($arr, function($s) { return $s != \",\"; });\n    $arr = array_filter($arr, function($s) { return $s != \"!\"; });\n    $arr = array_filter($arr, function($s) { return $s != \"?\"; });\n    $arr = array_filter($arr, function($s) { return $s != \";\"; });\n    $arr = array_filter($arr, function($s) { return $s != \":\"; });\n    $arr = array_filter($arr, function($s) { return $s != \".\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 34 in /tmp/tmpyke3qd6o.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($s) { return $s != \"\"; });\n    $arr = array_filter($arr, function($s) { return $s != \" \"; });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp03_8aktk.php:25\nStack trace:\n#0 /tmp/tmp03_8aktk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp03_8aktk.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpmkm9m19b.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 68 in /tmp/tmpplkkqri3.php on line 84\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function ($word) {\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 68 in /tmp/tmp7g09g570.php on line 84\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($s) {\n        return $s != '';\n    });\n    $arr = array_filter($arr, function($s) {\n        return $s != ' ';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9p9xdxnb.php:29\nStack trace:\n#0 /tmp/tmp9p9xdxnb.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9p9xdxnb.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr2 = explode(\",\", $txt);\n    $arr3 = explode(\";\", $txt);\n    $arr4 = explode(\"-\", $txt);\n    $arr5 = explode(\"/\", $txt);\n    $arr6 = explode(\"\\\\\", $txt);\n    $arr7 = explode(\"\\n\", $txt);\n    $arr8 = explode(\"\\r\", $txt);\n    $arr9 = explode(\"\\t\", $txt);\n    $arr10 = explode(\"\\v\", $txt);\n    $arr11 = explode(\"\\f\", $txt);\n    $arr12 = explode(\"\\b\", $txt);\n    $arr13 = explode(\"\\a\", $txt);\n    $arr14 = explode(\"\\e\", $txt);\n    $arr15 = explode(\"\\c\", $txt);\n    $arr16 = explode(\"\\n\", $txt);\n    $arr17 = explode(\"\\r\", $txt);\n    $arr18 = explode(\"\\t\", $txt);\n    $arr19 = explode(\"\\v\", $txt);\n    $arr20 = explode(\"\\f\", $txt);\n    $arr21 = explode(\"\\b\", $txt);\n    $arr22 = explode(\"\\a\", $txt);\n    $arr23 = explode(\"\\e\", $txt);\n    $arr24 = explode(\"\\c\", $txt);\n    $arr25 = explode(\"\\n\", $txt);\n    $arr26 = explode(\"\\r\", $txt);\n    $arr27 = explode(\"\\t\", $txt);\n    $arr28 = explode(\"\\v\", $txt);\n    $arr29 = explode(\"\\f\", $txt);\n    $arr30 = explode(\"\\b\", $txt);\n    $arr31 = explode(\"\\a\", $txt);\n    $arr32 = explode(\"\\e\", $txt);\n    $arr33 = explode(\"\\c\", $txt);\n    $arr34 = explode(\"\\n\", $txt);\n    $arr35 = explode(\"\\r\", $txt);\n    $arr36 = explode(\"\\t\", $txt);\n    $arr37 = explode(\"\\v\", $txt);\n    $\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp1p7q08tp.php on line 51\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \" \";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \",\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \".\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"!\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"?\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \";\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \":\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\\\"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"'\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"`\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\\\\\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"|\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"&\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"*\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"(\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \")\";\n    });\n    $arr = array_filter($arr,\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpa4pjpuch.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function ($s) {\n        return $s !== '';\n    });\n    $arr = array_filter($arr, function ($s) {\n        return $s !== ' ';\n    });\n    $arr = array_filter($arr, function ($s) {\n        return $s !== ',';\n    });\n    $arr = array_filter($arr, function ($s) {\n        return ord($s) % 2;\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc2xt6l5f.php:34\nStack trace:\n#0 /tmp/tmpc2xt6l5f.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpc2xt6l5f.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\",\", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\"-\", $txt);\n    $arr = $arr ? $arr : explode(\"_\", $txt);\n    $arr = $arr ? $arr : explode(\".\", $txt);\n    $arr = $arr ? $arr : explode(\"!\", $txt);\n    $arr = $arr ? $arr : explode(\"?\", $txt);\n    $arr = $arr ? $arr : explode(\"/\", $txt);\n    $arr = $arr ? $arr : explode(\"\\\\\", $txt);\n    $arr = $arr ? $arr : explode(\";\", $txt);\n    $arr = $arr ? $arr : explode(\"(\", $txt);\n    $arr = $arr ? $arr : explode(\")\", $txt);\n    $arr = $arr ? $arr : explode(\"[\", $txt);\n    $arr = $arr ? $arr : explode(\"]\", $txt);\n    $arr = $arr ? $arr : explode(\"{\", $txt);\n    $arr = $arr ? $arr : explode(\"}\", $txt);\n    $arr = $arr ? $arr : explode(\"=\", $txt);\n    $arr = $arr ? $arr : explode(\"+\", $txt);\n    $arr = $arr ? $arr : explode(\"*\", $txt);\n    $arr = $arr ? $arr : explode(\"^\", $txt);\n    $arr = $arr ? $arr : explode(\"%\", $txt);\n    $arr = $arr ? $arr : explode(\"$\", $txt);\n    $arr = $arr ? $arr : explode(\"&\", $txt);\n    $arr = $arr ? $arr : explode(\"|\", $txt);\n    $arr = $arr ? $arr : explode(\"<\", $txt);\n    $arr = $arr ? $arr : explode(\">\", $txt);\n    $arr = $arr ? $arr : explode(\"?\", $txt);\n    $arr = $arr ? $arr : explode(\"@\", $txt);\n    $\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpynjnmyml.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = $arr;\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_flip($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_flip($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_flip($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_flip($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_flip($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_flip($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_flip($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_flip($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_flip($arr);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmph5g9dc0b.php on line 64\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihfa7w42.php:29\nStack trace:\n#0 /tmp/tmpihfa7w42.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpihfa7w42.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvt2y8833.php:32\nStack trace:\n#0 /tmp/tmpvt2y8833.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvt2y8833.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ',';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpmkm9m19b.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\",\", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ? $arr : explode(\" \", $txt);\n    $arr = $arr ?\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpjj1edid3.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \" \";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \",\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \".\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"!\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"?\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \";\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \":\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\\\"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"'\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"(\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \")\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"{\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"}\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"[\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"]\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"&\";\n    });\n    $arr = array_filter($arr, function\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmppne6b0yq.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptt42dxdh.php:26\nStack trace:\n#0 /tmp/tmptt42dxdh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptt42dxdh.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 68 in /tmp/tmpplkkqri3.php on line 84\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 68 in /tmp/tmpplkkqri3.php on line 84\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmp0v932dlq.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($s) { return $s != \"\"; });\n    $arr = array_filter($arr, function($s) { return $s != \" \"; });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp03_8aktk.php:25\nStack trace:\n#0 /tmp/tmp03_8aktk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp03_8aktk.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \" \";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \",\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \".\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"!\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"?\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \";\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \":\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\\\"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"'\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"(\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \")\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"{\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"}\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"[\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"]\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"|\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\\\\\";\n    });\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 12 in /tmp/tmpp_frlxr3.php on line 84\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8dwiuzzt.php:32\nStack trace:\n#0 /tmp/tmp8dwiuzzt.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8dwiuzzt.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihfa7w42.php:29\nStack trace:\n#0 /tmp/tmpihfa7w42.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpihfa7w42.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != \"\";\n    });\n    $arr = array_filter($arr, function($word) {\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 68 in /tmp/tmpplkkqri3.php on line 84\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \" \";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \",\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \".\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"!\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"?\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \";\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \":\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\\\"\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"'\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"(\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \")\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"{\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"}\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"[\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"]\";\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"&\";\n    });\n    $arr = array_filter($arr, function\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmppne6b0yq.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = $arr ? $arr : explode(',', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ? $arr : explode(' ', $txt);\n    $arr = $arr ?\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpd2p79ldw.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word != '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word != ' ';\n    });\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihfa7w42.php:29\nStack trace:\n#0 /tmp/tmpihfa7w42.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpihfa7w42.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\n        return $val != \"\";\n    });\n    $arr = array_filter($arr, function($val) {\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 68 in /tmp/tmp783dctmh.php on line 84\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = $arr ? $arr : explode(',', $txt);\n    $arr = $arr ? $arr : explode('.', $txt);\n    $arr = $arr ? $arr : explode('!', $txt);\n    $arr = $arr ? $arr : explode('?', $txt);\n    $arr = $arr ? $arr : explode(';', $txt);\n    $arr = $arr ? $arr : explode('-', $txt);\n    $arr = $arr ? $arr : explode('_', $txt);\n    $arr = $arr ? $arr : explode('/', $txt);\n    $arr = $arr ? $arr : explode('\\\\', $txt);\n    $arr = $arr ? $arr : explode('|', $txt);\n    $arr = $arr ? $arr : explode('&', $txt);\n    $arr = $arr ? $arr : explode('=', $txt);\n    $arr = $arr ? $arr : explode('+', $txt);\n    $arr = $arr ? $arr : explode('*', $txt);\n    $arr = $arr ? $arr : explode('(', $txt);\n    $arr = $arr ? $arr : explode(')', $txt);\n    $arr = $arr ? $arr : explode('{', $txt);\n    $arr = $arr ? $arr : explode('}', $txt);\n    $arr = $arr ? $arr : explode('[', $txt);\n    $arr = $arr ? $arr : explode(']', $txt);\n    $arr = $arr ? $arr : explode('^', $txt);\n    $arr = $arr ? $arr : explode('%', $txt);\n    $arr = $arr ? $arr : explode('$', $txt);\n    $arr = $arr ? $arr : explode('#', $txt);\n    $arr = $arr ? $arr : explode('@', $txt);\n    $arr = $arr ? $arr : explode('~', $txt);\n    $arr = $arr ? $arr : explode('`', $txt);\n    $arr = $arr ? $arr : explode('<', $\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpypun3u73.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(' ', $txt);\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n    });\n    $arr = array_filter($arr, function($word) {\n        return $word !== '';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nParse error: Unclosed '{' on line 65 in /tmp/tmpxsy0yq_y.php on line 83\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Given a string of words, return an array of words split on whitespace, if no whitespaces exists in the text you\n// should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n// >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    $arr = $arr;\n    $arr = array_filter($arr, function($word) {\n        return $word !== \"\";\n    });\n    $arr = array_unique($arr);\n    $arr = array_flip(array_map($arr, function($word) {\n        return count_chars($word, 'a');\n    }));\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293095,
      "stdout": "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback) must be a valid callback or null, class \"Hello\" not found in /tmp/tmp328hg95i.php:21\nStack trace:\n#0 /tmp/tmp328hg95i.php(21): array_map(Array, Object(Closure))\n#1 /tmp/tmp328hg95i.php(26): split_words('Hello world!')\n#2 /tmp/tmp328hg95i.php(30): candidate('Hello world!')\n#3 /tmp/tmp328hg95i.php(40): test()\n#4 {main}\n  thrown in /tmp/tmp328hg95i.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
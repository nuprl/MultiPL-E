{
  "name": "HumanEval_47_median",
  "language": "php",
  "prompt": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n",
  "tests": "function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $m1 = $m1 < 0 ? 0 : $m1;\n    $m2 = $m2 > $n - 1 ? $n - 1 : $m2;\n    $m1 = $l[$m1];\n    $m2 = $l[$m2];\n    if ($m1 > $m2) {\n        $t = $m1;\n        $m1 = $m2;\n        $m2 = $t;\n    }\n    $m = ($m1 + $m2) / 2.0;\n    if ($n % 2 == 0) {\n        return $m;\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplvo_194o.php:36\nStack trace:\n#0 /tmp/tmplvo_194o.php(43): test()\n#1 {main}\n  thrown in /tmp/tmplvo_194o.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_values($l);\n    }\n    if (count($l) == 0) {\n        return null;\n    }\n    $l = array_sort($l);\n    if (count($l) % 2 == 1) {\n        return $l[count($l) / 2];\n    } else {\n        return ($l[count($l) / 2 - 1] + $l[count($l) / 2]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp59m291h7.php:14\nStack trace:\n#0 /tmp/tmp59m291h7.php(23): median(Array)\n#1 /tmp/tmp59m291h7.php(27): candidate(Array)\n#2 /tmp/tmp59m291h7.php(34): test()\n#3 {main}\n  thrown in /tmp/tmp59m291h7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $a = array();\n    $a[0] = $l[0];\n    $a[$m1] = $l[$m1];\n    $a[$m2] = $l[$m2];\n    $a[$n] = $l[$n];\n    $n = count($a);\n    $n1 = floor($n / 2);\n    $n2 = $n - $n1;\n    $n3 = $n1 + 1;\n    $n4 = $n2 + 1;\n    $n5 = $n3 + 1;\n    $n6 = $n4 + 1;\n    $n7 = $n5 + 1;\n    $n8 = $n6 + 1;\n    $n9 = $n7 + 1;\n    $n10 = $n8 + 1;\n    $n11 = $n9 + 1;\n    $n12 = $n10 + 1;\n    $n13 = $n11 + 1;\n    $n14 = $n12 + 1;\n    $n15 = $n13 + 1;\n    $n16 = $n14 + 1;\n    $n17 = $n15 + 1;\n    $n18 = $n16 + 1;\n    $n19 = $n17 + 1;\n    $n20 = $n18 + 1;\n    $n21 = $n19 + 1;\n    $n22 = $n20 + 1;\n    $n23 = $n21 + 1;\n    $n24 = $n22 + 1;\n    $n25 = $n23 + 1;\n    $n26 = $n24 + 1;\n    $n27 = $n25 + 1;\n    $n28 = $n26 + 1;\n    $n29 = $n27 + 1;\n    $n30 = $n28 + 1;\n    $n31 = $n29 + 1;\n    $\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpforn8g0i.php on line 53\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if ($l.length == 0) {\n        return null;\n    }\n    var l = $l.sort(function(a, b) {\n        return a - b;\n    });\n    var half = Math.floor(l.length / 2);\n    if (l.length % 2 == 1) {\n        return l[half];\n    } else {\n        return (l[half-1] + l[half]) / 2.0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpq30k4e2v.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    $m = floor($m);\n    $m = $m + ($n % 2);\n    $m = $l[$m];\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo9wq8dkn.php:21\nStack trace:\n#0 /tmp/tmpo9wq8dkn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpo9wq8dkn.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $l1 = $l[$m1];\n    $l2 = $l[$m2];\n    if ($n % 2 == 0) {\n        return ($l1 + $l2) / 2.0;\n    }\n    return $l1;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp204o3vo6.php:29\nStack trace:\n#0 /tmp/tmp204o3vo6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp204o3vo6.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $m1 = $m1 < 0 ? 0 : $m1;\n    $m2 = $m2 > $n - 1 ? $n - 1 : $m2;\n    $a = array($l[$m1], $l[$m2]);\n    $b = array_sort($a);\n    $c = $b[floor($b.length / 2)];\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpt_r4jgs3.php:18\nStack trace:\n#0 /tmp/tmpt_r4jgs3.php(24): median(Array)\n#1 /tmp/tmpt_r4jgs3.php(28): candidate(Array)\n#2 /tmp/tmpt_r4jgs3.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpt_r4jgs3.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = $n / 2;\n    $m1 = floor($m);\n    $m2 = ceil($m);\n    $m1 = $l[$m1];\n    $m2 = $l[$m2];\n    if ($m1 == $m2) {\n        return $m1;\n    }\n    return (($m1 + $m2) / 2.0);\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr1mvth3l.php:28\nStack trace:\n#0 /tmp/tmpr1mvth3l.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpr1mvth3l.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = $l.length;\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    $m = floor($n / 2);\n    $l1 = $l[0:$m];\n    $l2 = $l[$m:$n];\n    $m1 = median($l1);\n    $m2 = median($l2);\n    if ($m1 > $m2) {\n        return $m1;\n    }\n    return $m2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \":\", expecting \"]\" in /tmp/tmpa6yhi6yp.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    if ($n % 2 == 0) {\n        return (round($l[$m - 1] + $l[$m]) / 2);\n    } else {\n        return $l[$m];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmpn_vln30_.php on line 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_vln30_.php:22\nStack trace:\n#0 /tmp/tmpn_vln30_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpn_vln30_.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp4z1apny8.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmprf_kdg2a.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $p = $n % 2;\n    $m1 = $m - 1;\n    $m2 = $m;\n    $l1 = $l[$m1];\n    $l2 = $l[$m2];\n    if ($p == 0) {\n        return $l1;\n    } else {\n        return ($l1 + $l2) / 2.0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphtfpmolv.php:30\nStack trace:\n#0 /tmp/tmphtfpmolv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphtfpmolv.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n    }\n    $l = array_flip($l);\n    $l = array_sort($l);\n    if (count($l) % 2 == 0) {\n        return (count($l) / 2) - 1;\n    } else {\n        return count($l) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp89u9b0_d.php:12\nStack trace:\n#0 /tmp/tmp89u9b0_d.php(21): median(Array)\n#1 /tmp/tmp89u9b0_d.php(25): candidate(Array)\n#2 /tmp/tmp89u9b0_d.php(32): test()\n#3 {main}\n  thrown in /tmp/tmp89u9b0_d.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (!is_array($l)) {\n        return null;\n    }\n    $l = array_flip($l);\n    $l = array_sort($l);\n    if (count($l) % 2 == 0) {\n        return (float) array_get_median($l);\n    } else {\n        return (float) array_get_median($l);\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpxel000vt.php:12\nStack trace:\n#0 /tmp/tmpxel000vt.php(21): median(Array)\n#1 /tmp/tmpxel000vt.php(25): candidate(Array)\n#2 /tmp/tmpxel000vt.php(32): test()\n#3 {main}\n  thrown in /tmp/tmpxel000vt.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = $n / 2;\n    $m = floor($m);\n    $m = $l[$m];\n    if ($n % 2 == 0) {\n        return $m;\n    }\n    return $m + ($m - $l[$m - 1]);\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyvqje9io.php:27\nStack trace:\n#0 /tmp/tmpyvqje9io.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyvqje9io.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = array_values($l);\n    $m = count($l);\n    $n = $m / 2;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = array_values($l);\n    $m = count($l);\n    $n = $m / 2;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 7 in /tmp/tmpxx_0_dan.php on line 90\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = $n / 2;\n    $m1 = floor($m);\n    $m2 = ceil($m);\n    $m1 = $l[$m1];\n    $m2 = $l[$m2];\n    if ($m1 == $m2) {\n        return $m1;\n    }\n    return (($m1 + $m2) / 2);\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptsmltp11.php:29\nStack trace:\n#0 /tmp/tmptsmltp11.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptsmltp11.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    if ($m1 < 0) {\n        return $l[0];\n    }\n    if ($m2 >= $n) {\n        return $l[$n - 1];\n    }\n    $a = array();\n    $a[0] = $l[0];\n    $a[1] = $l[$m1];\n    $a[2] = $l[$m2];\n    $a[3] = $l[$n - 1];\n    $s = 0;\n    for ($i = 0; $i < 4; $i++) {\n        $s += $a[$i];\n    }\n    $s /= 4;\n    $s = floor($s);\n    if ($s == 0) {\n        return $a[1];\n    }\n    if ($s == 1) {\n        return $a[2];\n    }\n    return $a[1] + ($a[2] - $a[1]) * (1 - $s);\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_lyarzgr.php:49\nStack trace:\n#0 /tmp/tmp_lyarzgr.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp_lyarzgr.php on line 49\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if ($l.length == 0) {\n        return null;\n    }\n    if ($l.length == 1) {\n        return $l[0];\n    }\n    var sorted = $l.sort();\n    var middle = Math.floor(sorted.length / 2);\n    if (sorted.length % 2 == 0) {\n        return (sorted[middle] + sorted[middle - 1]) / 2.0;\n    }\n    return sorted[middle];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpq8lukdmy.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $a = array();\n    $a[0] = $l[0];\n    $a[1] = $l[$m1];\n    $a[2] = $l[$m2];\n    $a[3] = $l[$n - 1];\n    $a[4] = $l[$n];\n    $a[5] = $l[$n + 1];\n    $a[6] = $l[$n + 2];\n    $a[7] = $l[$n + 3];\n    $a[8] = $l[$n + 4];\n    $a[9] = $l[$n + 5];\n    $a[10] = $l[$n + 6];\n    $a[11] = $l[$n + 7];\n    $a[12] = $l[$n + 8];\n    $a[13] = $l[$n + 9];\n    $a[14] = $l[$n + 10];\n    $a[15] = $l[$n + 11];\n    $a[16] = $l[$n + 12];\n    $a[17] = $l[$n + 13];\n    $a[18] = $l[$n + 14];\n    $a[19] = $l[$n + 15];\n    $a[20] = $l[$n + 16];\n    $a[21] = $l[$n + 17];\n    $a[22] = $l[$n + 18];\n    $a[23] = $l[$n + 19];\n    $a[24] = $l[$n + 20];\n    $a[25] = $l[$n + 21];\n    $a[26] = $l[$n + 22];\n    $a[27] = $l[$n + 23];\n    $a[28\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmp5e75j0qj.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 7 in /tmp/tmpd573xb3t.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n    }\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 7 in /tmp/tmp__qjxwiv.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n    }\n    $l = array_flip($l);\n    $l = array_sort($l);\n    if (count($l) % 2 == 1) {\n        return $l[count($l) / 2];\n    } else {\n        return ($l[count($l) / 2 - 1] + $l[count($l) / 2]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpngzmci93.php:12\nStack trace:\n#0 /tmp/tmpngzmci93.php(21): median(Array)\n#1 /tmp/tmpngzmci93.php(25): candidate(Array)\n#2 /tmp/tmpngzmci93.php(32): test()\n#3 {main}\n  thrown in /tmp/tmpngzmci93.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_values($l);\n    }\n    if (count($l) == 0) {\n        return null;\n    }\n    $l = array_sort($l);\n    if (count($l) % 2 == 1) {\n        return $l[count($l) / 2];\n    } else {\n        $m = $l[count($l) / 2 - 1];\n        $m += $l[count($l) / 2];\n        return $m / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmptci66n6u.php:14\nStack trace:\n#0 /tmp/tmptci66n6u.php(25): median(Array)\n#1 /tmp/tmptci66n6u.php(29): candidate(Array)\n#2 /tmp/tmptci66n6u.php(36): test()\n#3 {main}\n  thrown in /tmp/tmptci66n6u.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    if ($m1 < 0) {\n        return $l[0];\n    }\n    if ($m2 >= $n) {\n        return $l[$n - 1];\n    }\n    $a = array();\n    $a[0] = $l[0];\n    $a[1] = $l[$m1];\n    $a[2] = $l[$m2];\n    $a[3] = $l[$n - 1];\n    $s = 0;\n    for ($i = 0; $i < 4; $i++) {\n        $s += $a[$i];\n    }\n    $s /= 4;\n    $s = floor($s);\n    if ($s == $m1 || $s == $m2) {\n        return $s;\n    }\n    if ($s < $m1) {\n        return $a[0];\n    }\n    if ($s > $m2) {\n        return $a[3];\n    }\n    $s1 = $m1 - $s;\n    $s2 = $m2 - $s;\n    $s3 = $s - $m1;\n    $s4 = $s - $m2;\n    $s5 = $m1 - $m2;\n    $s6 = $m2 - $m1;\n    $s7 = $m1 - $m2;\n    $s8 = $m2 - $m1;\n    $s9 = $m1 - $m2;\n    $s10 = $m2 - $m1;\n    $s11 = $m1 - $m2;\n    $s12 = $m2 - $m1;\n    $s13 = $m1 - $m2;\n    $s14 = $m2 - $m1;\n    $s15 = $m1 - $m2;\n    $s16 = $m2 -\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp3xf73bn2.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = sizeof($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = $n / 2;\n    $m = floor($m);\n    $m = $l[$m];\n    if ($n % 2 == 1) {\n        return $m;\n    }\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $m1 = $m1 < 0 ? 0 : $m1;\n    $m2 = $m2 > $n - 1 ? $n - 1 : $m2;\n    $m1 = $l[$m1];\n    $m2 = $l[$m2];\n    $m = ($m1 + $m2) / 2.0;\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzm6g1ab9.php:33\nStack trace:\n#0 /tmp/tmpzm6g1ab9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzm6g1ab9.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $p = array_copy($l);\n    sort($p);\n    if ($n % 2 == 1) {\n        return $p[$m];\n    }\n    return (float)($p[$m] + $p[$m - 1]) / 2.0;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_copy() in /tmp/tmpdhbh_8l_.php:13\nStack trace:\n#0 /tmp/tmpdhbh_8l_.php(22): median(Array)\n#1 /tmp/tmpdhbh_8l_.php(26): candidate(Array)\n#2 /tmp/tmpdhbh_8l_.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpdhbh_8l_.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        if (count($l) % 2 == 1) {\n            return $l[count($l) / 2];\n        } else {\n            return (float)($l[count($l) / 2 - 1] + $l[count($l) / 2]) / 2;\n        }\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpl01yztxf.php:10\nStack trace:\n#0 /tmp/tmpl01yztxf.php(22): median(Array)\n#1 /tmp/tmpl01yztxf.php(26): candidate(Array)\n#2 /tmp/tmpl01yztxf.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpl01yztxf.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    $p = array_fill(0, $m, 0);\n    $q = array_fill(0, $m, 0);\n    $r = array_fill(0, $m, 0);\n    $s = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $s += $l[$i];\n        $p[$i] = $s / $m;\n    }\n    $s = 0;\n    for ($i = $n - 1; $i >= 0; $i--) {\n        $s += $l[$i];\n        $q[$i] = $s / $m;\n    }\n    $s = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $s += abs($p[$i] - $q[$i]);\n        $r[$i] = $s;\n    }\n    $m = array_fill(0, $m, 0);\n    $s = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $s += $r[$i];\n        $m[$i] = $s / $m;\n    }\n    return $m[$m - 1];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmpiojhfnyv.php on line 10\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmpiojhfnyv.php on line 11\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmpiojhfnyv.php on line 12\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmpiojhfnyv.php on line 28\n\nFatal error: Uncaught TypeError: Unsupported operand types: float / array in /tmp/tmpiojhfnyv.php:32\nStack trace:\n#0 /tmp/tmpiojhfnyv.php(38): median(Array)\n#1 /tmp/tmpiojhfnyv.php(42): candidate(Array)\n#2 /tmp/tmpiojhfnyv.php(49): test()\n#3 {main}\n  thrown in /tmp/tmpiojhfnyv.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmprf_kdg2a.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    $m = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 7 in /tmp/tmpqs6zlrxf.php on line 93\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    $m = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 7 in /tmp/tmpqs6zlrxf.php on line 93\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $l1 = $l[$m1];\n    $l2 = $l[$m2];\n    if ($n % 2 == 0) {\n        return ($l1 + $l2) / 2.0;\n    }\n    return $l1;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu42jtn1s.php:28\nStack trace:\n#0 /tmp/tmpu42jtn1s.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpu42jtn1s.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m;\n    $m3 = $m + 1;\n    $l1 = $l[$m1];\n    $l2 = $l[$m2];\n    $l3 = $l[$m3];\n    if ($l1 < $l2) {\n        if ($l2 < $l3) {\n            return $l2;\n        } else if ($l1 < $l3) {\n            return $l3;\n        } else {\n            return $l1;\n        }\n    } else if ($l1 > $l2) {\n        if ($l1 < $l3) {\n            return $l1;\n        } else if ($l2 < $l3) {\n            return $l3;\n        } else {\n            return $l2;\n        }\n    } else {\n        return $l1;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc4ct2av7.php:49\nStack trace:\n#0 /tmp/tmpc4ct2av7.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpc4ct2av7.php on line 49\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = floor($m / 2);\n    $m2 = $m - $m1;\n    if ($m % 2 == 0) {\n        return ($l[$m1] + $l[$m2]) / 2;\n    } else {\n        return $l[$m1];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd3knp4we.php:27\nStack trace:\n#0 /tmp/tmpd3knp4we.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpd3knp4we.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 7 in /tmp/tmpd573xb3t.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    $m = floor($n / 2);\n    $m1 = floor($m - 1);\n    $m2 = floor($m);\n    $m3 = floor($m + 1);\n    $a1 = $l[$m1];\n    $a2 = $l[$m2];\n    $a3 = $l[$m3];\n    if ($a1 > $a2) {\n        $t = $a1;\n        $a1 = $a2;\n        $a2 = $t;\n    }\n    if ($a2 > $a3) {\n        $t = $a2;\n        $a2 = $a3;\n        $a3 = $t;\n    }\n    if ($a1 > $a2) {\n        $t = $a1;\n        $a1 = $a2;\n        $a2 = $t;\n    }\n    $m = $a2;\n    if ($a3 > $a2) {\n        $m = $a3;\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx04t7msw.php:50\nStack trace:\n#0 /tmp/tmpx04t7msw.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpx04t7msw.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmprf_kdg2a.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $l1 = $l[$m1];\n    $l2 = $l[$m2];\n    if ($l1 > $l2) {\n        $l1 = $l2;\n        $l2 = $l1;\n        $m1 = $m2;\n        $m2 = $m1;\n    }\n    $m1 = $l1 + $m2;\n    $m2 = $l1 - $m2;\n    $m1 = round($m1);\n    $m2 = round($m2);\n    if ($m1 == $m2) {\n        return $m1;\n    }\n    $m = $m1 + $m2;\n    $m = round($m);\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1rq_ujau.php:43\nStack trace:\n#0 /tmp/tmp1rq_ujau.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp1rq_ujau.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 7 in /tmp/tmpd573xb3t.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    $m = floor($m);\n    $m = $m - 1;\n    $m = $l[$m];\n    if ($n % 2 == 0) {\n        return $m;\n    } else {\n        return $m + 0.5 * ($l[$m + 1] - $m);\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl2k5wth0.php:25\nStack trace:\n#0 /tmp/tmpl2k5wth0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpl2k5wth0.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_values($l);\n    }\n    $l = array_sort($l);\n    if (count($l) % 2 == 0) {\n        return (float)($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n    } else {\n        return $l[count($l) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpkagjsf19.php:11\nStack trace:\n#0 /tmp/tmpkagjsf19.php(20): median(Array)\n#1 /tmp/tmpkagjsf19.php(24): candidate(Array)\n#2 /tmp/tmpkagjsf19.php(31): test()\n#3 {main}\n  thrown in /tmp/tmpkagjsf19.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmprf_kdg2a.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        if (count($l) % 2 == 0) {\n            return (count($l) / 2) - 1;\n        } else {\n            return count($l) / 2;\n        }\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpqxej3tp1.php:10\nStack trace:\n#0 /tmp/tmpqxej3tp1.php(22): median(Array)\n#1 /tmp/tmpqxej3tp1.php(26): candidate(Array)\n#2 /tmp/tmpqxej3tp1.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpqxej3tp1.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = $n / 2;\n    $m = floor($m);\n    $m = $m * 2 - $n;\n    $m = $m / 2;\n    $m = $m + $n % 2;\n    return $l[$m];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nDeprecated: Implicit conversion from float 0.5 to int loses precision in /tmp/tmp53k6wbg8.php on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp53k6wbg8.php:26\nStack trace:\n#0 /tmp/tmp53k6wbg8.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp53k6wbg8.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    if ($m1 < 0) {\n        return $l[0];\n    }\n    if ($m2 >= $n) {\n        return $l[$n - 1];\n    }\n    $m1 = $l[$m1];\n    $m2 = $l[$m2];\n    if ($m1 > $m2) {\n        $tmp = $m1;\n        $m1 = $m2;\n        $m2 = $tmp;\n    }\n    $m = $m1 + ($m2 - $m1) / 2.0;\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr74op3xq.php:37\nStack trace:\n#0 /tmp/tmpr74op3xq.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpr74op3xq.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    if ($m1 < 0) {\n        $m1 = 0;\n    }\n    if ($m2 > $n - 1) {\n        $m2 = $n - 1;\n    }\n    $m1 = $l[$m1];\n    $m2 = $l[$m2];\n    if ($m1 > $m2) {\n        $t = $m1;\n        $m1 = $m2;\n        $m2 = $t;\n    }\n    $m = $m1 + $m2;\n    $m /= 2;\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqsl91uey.php:38\nStack trace:\n#0 /tmp/tmpqsl91uey.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpqsl91uey.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n    }\n    if (empty($l)) {\n        return null;\n    }\n    $m = array_flip(array_sort($l));\n    if (count($m) % 2) {\n        return $m[count($m) / 2];\n    } else {\n        return ($m[count($m) / 2] + $m[count($m) / 2 - 1]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpdr6p7k86.php:14\nStack trace:\n#0 /tmp/tmpdr6p7k86.php(23): median(Array)\n#1 /tmp/tmpdr6p7k86.php(27): candidate(Array)\n#2 /tmp/tmpdr6p7k86.php(34): test()\n#3 {main}\n  thrown in /tmp/tmpdr6p7k86.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n    }\n    if (empty($l)) {\n        return null;\n    }\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp1ivjtdr8.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = sizeof($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = $n / 2;\n    $m = floor($m);\n    $m = $l[$m];\n    if ($n % 2 == 0) {\n        return $m;\n    }\n    return $m + ($m - $l[$m - 1]);\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaehv4y3l.php:27\nStack trace:\n#0 /tmp/tmpaehv4y3l.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpaehv4y3l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $m1 = $m1 < 0 ? 0 : $m1;\n    $m2 = $m2 > $n - 1 ? $n - 1 : $m2;\n    $m1 = $l[$m1];\n    $m2 = $l[$m2];\n    if ($m1 > $m2) {\n        $t = $m1;\n        $m1 = $m2;\n        $m2 = $t;\n    }\n    $m = $m1 + ($m2 - $m1) / 2.0;\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2tbtihdq.php:33\nStack trace:\n#0 /tmp/tmp2tbtihdq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2tbtihdq.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = $l.length;\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m;\n    $m3 = $m + 1;\n    $m4 = $m + 2;\n    $l1 = $l[$m1];\n    $l2 = $l[$m2];\n    $l3 = $l[$m3];\n    $l4 = $l[$m4];\n    $l1 = $l1 == null ? 0 : $l1;\n    $l2 = $l2 == null ? 0 : $l2;\n    $l3 = $l3 == null ? 0 : $l3;\n    $l4 = $l4 == null ? 0 : $l4;\n    if ($l1 > $l2) {\n        $t = $l1;\n        $l1 = $l2;\n        $l2 = $t;\n    }\n    if ($l2 > $l3) {\n        $t = $l2;\n        $l2 = $l3;\n        $l3 = $t;\n    }\n    if ($l3 > $l4) {\n        $t = $l3;\n        $l3 = $l4;\n        $l4 = $t;\n    }\n    if ($l1 > $l2) {\n        $t = $l1;\n        $l1 = $l2;\n        $l2 = $t;\n    }\n    if ($l2 > $l3) {\n        $t = $l2;\n        $l2 = $l3;\n        $l3 = $t;\n    }\n    if ($l3 > $l4) {\n        $t = $l3;\n        $l3 = $l4;\n        $l4 = $t;\n    }\n    if ($l1 > $l2) {\n        $t = $l1;\n        $l1 = $l2;\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 58 in /tmp/tmp984cntrp.php on line 73\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $l1 = $l[$m1];\n    $l2 = $l[$m2];\n    if ($n % 2 == 0) {\n        return ($l1 + $l2) / 2.0;\n    }\n    return $l1;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu42jtn1s.php:28\nStack trace:\n#0 /tmp/tmpu42jtn1s.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpu42jtn1s.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $m1_val = $l[$m1];\n    $m2_val = $l[$m2];\n    if ($m1_val > $m2_val) {\n        $tmp = $m1_val;\n        $m1_val = $m2_val;\n        $m2_val = $tmp;\n    }\n    return (($m1_val + $m2_val) / 2.0);\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnu2pmul7.php:33\nStack trace:\n#0 /tmp/tmpnu2pmul7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpnu2pmul7.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $l1 = $l[$m1];\n    $l2 = $l[$m2];\n    if ($n % 2 == 0) {\n        return (($l1 + $l2) / 2);\n    }\n    return $l1;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp78q4imrf.php:28\nStack trace:\n#0 /tmp/tmp78q4imrf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp78q4imrf.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmprf_kdg2a.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n    }\n    if (count($l) == 0) {\n        return null;\n    }\n    $m = array_flip(sort($l));\n    if (count($m) % 2 == 1) {\n        return $m[count($m) / 2];\n    } else {\n        return ($m[count($m) / 2] + $m[count($m) / 2 - 1]) / 2.0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught TypeError: array_flip(): Argument #1 ($array) must be of type array, bool given in /tmp/tmpkcem3u59.php:14\nStack trace:\n#0 /tmp/tmpkcem3u59.php(14): array_flip(true)\n#1 /tmp/tmpkcem3u59.php(23): median(Array)\n#2 /tmp/tmpkcem3u59.php(27): candidate(Array)\n#3 /tmp/tmpkcem3u59.php(34): test()\n#4 {main}\n  thrown in /tmp/tmpkcem3u59.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = $l.length;\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    if ($n % 2 == 0) {\n        return (median($l[0:$n/2]) + median($l[$n/2:])) / 2.0;\n    }\n    return $l[$n/2];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \":\", expecting \"]\" in /tmp/tmpy7albtmh.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = $l.length;\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    $m = floor($n / 2);\n    $l1 = $l[0:$m];\n    $l2 = $l[$m:$n];\n    $m1 = median($l1);\n    $m2 = median($l2);\n    if ($m1 > $m2) {\n        return $m1;\n    } else {\n        return $m2;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \":\", expecting \"]\" in /tmp/tmp4zj6d0ww.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $m1 = $m1 < 0 ? 0 : $m1;\n    $m2 = $m2 > $n - 1 ? $n - 1 : $m2;\n    $m1 = $l[$m1];\n    $m2 = $l[$m2];\n    if ($m1 > $m2) {\n        $t = $m1;\n        $m1 = $m2;\n        $m2 = $t;\n    }\n    $m = $m1 + ($m2 - $m1) / 2.0;\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2tbtihdq.php:33\nStack trace:\n#0 /tmp/tmp2tbtihdq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2tbtihdq.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    $m = floor($m);\n    $m = $l[$m];\n    if ($n % 2 == 0) {\n        return $m;\n    } else {\n        return $m + ($m - $l[$m - 1]);\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp__77igub.php:25\nStack trace:\n#0 /tmp/tmp__77igub.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp__77igub.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        if (count($l) % 2 == 0) {\n            return (count($l) / 2) - 1;\n        } else {\n            return count($l) / 2;\n        }\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpqxej3tp1.php:10\nStack trace:\n#0 /tmp/tmpqxej3tp1.php(22): median(Array)\n#1 /tmp/tmpqxej3tp1.php(26): candidate(Array)\n#2 /tmp/tmpqxej3tp1.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpqxej3tp1.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (!$l) {\n        return null;\n    }\n    if ($l.length == 1) {\n        return $l[0];\n    }\n    var $l_sorted = $l.sort();\n    var $l_length = $l_sorted.length;\n    var $l_middle = $l_length / 2;\n    if ($l_length % 2 == 1) {\n        return $l_sorted[$l_middle];\n    } else {\n        return ($l_sorted[$l_middle - 1] + $l_sorted[$l_middle]) / 2.0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpwv3q5gi0.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $m1 = $m1 < 0 ? 0 : $m1;\n    $m2 = $m2 > $n - 1 ? $n - 1 : $m2;\n    $m1 = $l[$m1];\n    $m2 = $l[$m2];\n    if ($m1 > $m2) {\n        $t = $m1;\n        $m1 = $m2;\n        $m2 = $t;\n    }\n    $m = $m1 + ($m2 - $m1) / 2.0;\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30dy7vef.php:34\nStack trace:\n#0 /tmp/tmp30dy7vef.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp30dy7vef.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n    }\n    if (count($l) == 0) {\n        return null;\n    }\n    $l = array_sort($l);\n    if (count($l) % 2 == 1) {\n        return $l[count($l) / 2];\n    }\n    $l = array_flip($l);\n    return (float)($l[count($l) / 2 - 1] + $l[count($l) / 2]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp8w9df9zg.php:14\nStack trace:\n#0 /tmp/tmp8w9df9zg.php(23): median(Array)\n#1 /tmp/tmp8w9df9zg.php(27): candidate(Array)\n#2 /tmp/tmp8w9df9zg.php(34): test()\n#3 {main}\n  thrown in /tmp/tmp8w9df9zg.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        if (count($l) % 2 == 0) {\n            return (count($l) / 2 - 1) * $l[count($l) / 2];\n        } else {\n            return $l[count($l) / 2];\n        }\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp99gssxer.php:10\nStack trace:\n#0 /tmp/tmp99gssxer.php(22): median(Array)\n#1 /tmp/tmp99gssxer.php(26): candidate(Array)\n#2 /tmp/tmp99gssxer.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp99gssxer.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_values($l);\n    }\n    if (count($l) == 0) {\n        return null;\n    }\n    $l = array_sort($l);\n    if (count($l) % 2 == 1) {\n        return $l[count($l) / 2];\n    }\n    $l = array_values($l);\n    $l = array_sort($l);\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2.0;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpgs_ljuvb.php:14\nStack trace:\n#0 /tmp/tmpgs_ljuvb.php(24): median(Array)\n#1 /tmp/tmpgs_ljuvb.php(28): candidate(Array)\n#2 /tmp/tmpgs_ljuvb.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpgs_ljuvb.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    $m = floor($n / 2);\n    $l_s = array_slice($l, 0, $m + 1);\n    $l_e = array_slice($l, $m + 1, $n);\n    sort($l_s);\n    sort($l_e);\n    if ($n % 2 == 0) {\n        return (float)(($l_s[$m] + $l_e[$m]) / 2);\n    }\n    return $l_s[$m];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nWarning: Undefined array key 3 in /tmp/tmpnfwy87dg.php on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnfwy87dg.php:32\nStack trace:\n#0 /tmp/tmpnfwy87dg.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpnfwy87dg.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    $m = floor($m);\n    $m = $l[$m];\n    if ($n % 2 == 0) {\n        return $m;\n    } else {\n        return $m + ($l[$m + 1] - $l[$m]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8vz7cor.php:25\nStack trace:\n#0 /tmp/tmpa8vz7cor.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpa8vz7cor.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp4z1apny8.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = $l.length;\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n        return (min($l[$m - 1], $l[$m]) + max($l[$m], $l[$m + 1])) / 2.0;\n    }\n    return $l[$m];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpxixwhpoe.php:8\nStack trace:\n#0 /tmp/tmpxixwhpoe.php(20): median(Array)\n#1 /tmp/tmpxixwhpoe.php(24): candidate(Array)\n#2 /tmp/tmpxixwhpoe.php(31): test()\n#3 {main}\n  thrown in /tmp/tmpxixwhpoe.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $l1 = $l[$m1];\n    $l2 = $l[$m2];\n    if ($n % 2 == 0) {\n        return (($l1 + $l2) / 2);\n    }\n    return $l1;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp78q4imrf.php:28\nStack trace:\n#0 /tmp/tmp78q4imrf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp78q4imrf.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    if ($m1 < 0) {\n        return $l[0];\n    }\n    if ($m2 >= $n) {\n        return $l[$n - 1];\n    }\n    $a = array();\n    $a = array_merge($a, $l);\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 7 in /tmp/tmplal5o4uk.php on line 60\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = floor($m / 2);\n    $m2 = $m - $m1;\n    $m1 = $l[$m1];\n    $m2 = $l[$m2];\n    if ($m % 2 == 0) {\n        return ($m1 + $m2) / 2.0;\n    } else {\n        return $m1;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn0kd7efb.php:29\nStack trace:\n#0 /tmp/tmpn0kd7efb.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpn0kd7efb.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 7 in /tmp/tmpd573xb3t.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp9zc3j8f3.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if ($l.length == 0) {\n        return null;\n    }\n    var l = $l.sort(function(a, b) {\n        return a - b;\n    });\n    var middle = Math.floor(l.length / 2);\n    if (l.length % 2 == 0) {\n        return (l[middle] + l[middle - 1]) / 2.0;\n    } else {\n        return l[middle];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpahztw4w5.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    if ($m1 < 0) {\n        return $l[0];\n    }\n    if ($m2 >= $n) {\n        return $l[$n - 1];\n    }\n    $a = array();\n    $a[0] = $l[0];\n    $a[1] = $l[$m1];\n    $a[2] = $l[$m2];\n    $a[3] = $l[$n - 1];\n    $a[4] = $l[$m];\n    $a[5] = $l[$m1];\n    $a[6] = $l[$m2];\n    $a[7] = $l[0];\n    $a[8] = $l[$m1];\n    $a[9] = $l[$m2];\n    $a[10] = $l[$n - 1];\n    $a[11] = $l[$m];\n    $a[12] = $l[$m1];\n    $a[13] = $l[$m2];\n    $a[14] = $l[0];\n    $a[15] = $l[$m];\n    $a[16] = $l[$m1];\n    $a[17] = $l[$m2];\n    $a[18] = $l[$n - 1];\n    $a[19] = $l[$m];\n    $a[20] = $l[$m1];\n    $a[21] = $l[$m2];\n    $a[22] = $l[0];\n    $a[23] = $l[$m];\n    $a[24] = $l[$m1];\n    $a[25] = $l[$m2];\n    $a[26] = $l[$n - 1];\n    $a[\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmptvn6ya15.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n    }\n    $l = array_sort($l);\n    if (count($l) % 2 == 0) {\n        return (float)($l[count($l) / 2 - 1] + $l[count($l) / 2]) / 2;\n    } else {\n        return $l[count($l) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpnknobahu.php:11\nStack trace:\n#0 /tmp/tmpnknobahu.php(20): median(Array)\n#1 /tmp/tmpnknobahu.php(24): candidate(Array)\n#2 /tmp/tmpnknobahu.php(31): test()\n#3 {main}\n  thrown in /tmp/tmpnknobahu.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n    }\n    if (empty($l)) {\n        return null;\n    }\n    $l = array_flip($l);\n    $l = array_sort($l, function($a, $b) {\n        return $a - $b;\n    });\n    $l = array_flip($l);\n    if (count($l) % 2 == 0) {\n        return (count($l) / 2) - 1;\n    } else {\n        return $l[count($l) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpqci2o64l.php:15\nStack trace:\n#0 /tmp/tmpqci2o64l.php(27): median(Array)\n#1 /tmp/tmpqci2o64l.php(31): candidate(Array)\n#2 /tmp/tmpqci2o64l.php(38): test()\n#3 {main}\n  thrown in /tmp/tmpqci2o64l.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $s = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $s += $l[$i];\n    }\n    return $s / $m;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq3_yfu0f.php:25\nStack trace:\n#0 /tmp/tmpq3_yfu0f.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpq3_yfu0f.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n    }\n    if (empty($l)) {\n        return null;\n    }\n    $m = array_flip(array_sort($l));\n    if (count($m) % 2) {\n        return $m[count($m) / 2];\n    } else {\n        return ($m[count($m) / 2] + $m[count($m) / 2 - 1]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpdr6p7k86.php:14\nStack trace:\n#0 /tmp/tmpdr6p7k86.php(23): median(Array)\n#1 /tmp/tmpdr6p7k86.php(27): candidate(Array)\n#2 /tmp/tmpdr6p7k86.php(34): test()\n#3 {main}\n  thrown in /tmp/tmpdr6p7k86.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_values($l);\n    }\n    $l = array_sort($l);\n    if (count($l) % 2 == 1) {\n        return $l[count($l) / 2];\n    } else {\n        return ($l[count($l) / 2 - 1] + $l[count($l) / 2]) / 2.0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp6etmr9ty.php:11\nStack trace:\n#0 /tmp/tmp6etmr9ty.php(20): median(Array)\n#1 /tmp/tmp6etmr9ty.php(24): candidate(Array)\n#2 /tmp/tmp6etmr9ty.php(31): test()\n#3 {main}\n  thrown in /tmp/tmp6etmr9ty.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    if (count($l) % 2 == 1) {\n        return $l[count($l) / 2];\n    } else {\n        return (float)($l[count($l) / 2 - 1] + $l[count($l) / 2]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpom0az50f.php:9\nStack trace:\n#0 /tmp/tmpom0az50f.php(18): median(Array)\n#1 /tmp/tmpom0az50f.php(22): candidate(Array)\n#2 /tmp/tmpom0az50f.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpom0az50f.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $l1 = array_slice($l, 0, $m1 + 1);\n    $l2 = array_slice($l, $m1 + 1, $n);\n    if ($n % 2 == 0) {\n        return (float)(($l1[$m1] + $l2[$m]) / 2);\n    } else {\n        return $l[$m];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposo0cbqj.php:29\nStack trace:\n#0 /tmp/tmposo0cbqj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmposo0cbqj.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmprf_kdg2a.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    $m = floor($m);\n    $m = $m - 1;\n    $m = $m * 2;\n    $m = $m - 1;\n    $m = $m - $n;\n    $m = $m / 2;\n    $m = $m + 1;\n    $m = $m * $n;\n    $m = $m / 2;\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt1x6_mli.php:27\nStack trace:\n#0 /tmp/tmpt1x6_mli.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpt1x6_mli.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (!$l) {\n        return null;\n    }\n    if ($l.length == 0) {\n        return null;\n    }\n    if ($l.length == 1) {\n        return $l[0];\n    }\n    var l = $l.sort();\n    var mid = Math.floor(l.length / 2);\n    if (l.length % 2 == 1) {\n        return l[mid];\n    }\n    return (l[mid] + l[mid - 1]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpn01dlnyn.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n        return (min($l[$m - 1], $l[$m]) + max($l[$m], $l[$m + 1])) / 2;\n    }\n    return $l[$m];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwvuyff_k.php:24\nStack trace:\n#0 /tmp/tmpwvuyff_k.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpwvuyff_k.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if ($l.length == 0) {\n        return null;\n    }\n    var l = $l.sort(function(a, b) {\n        return a - b;\n    });\n    var half = Math.floor(l.length / 2);\n    if (l.length % 2 == 0) {\n        return (l[half] + l[half - 1]) / 2.0;\n    }\n    return l[half];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp9sz9psji.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    $m = floor($m);\n    $m = $l[$m];\n    if ($n % 2 == 0) {\n        return $m;\n    } else {\n        return $m + ($l[$m + 1] - $l[$m]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8vz7cor.php:25\nStack trace:\n#0 /tmp/tmpa8vz7cor.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpa8vz7cor.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $s = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $s += $l[$i];\n    }\n    $s = $s / $n;\n    if ($n % 2 == 0) {\n        return $s;\n    } else {\n        return $s + $l[$m];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpguhraewf.php:30\nStack trace:\n#0 /tmp/tmpguhraewf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpguhraewf.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m;\n    $m3 = $m + 1;\n    $a = array();\n    $a[0] = $l[$m1];\n    $a[1] = $l[$m2];\n    $a[2] = $l[$m3];\n    sort($a);\n    if ($n % 2 == 0) {\n        return ($a[1] + $a[2]) / 2.0;\n    }\n    return $a[1];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqrb_g5pr.php:35\nStack trace:\n#0 /tmp/tmpqrb_g5pr.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpqrb_g5pr.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n        return (min($l[$m - 1], $l[$m]) + max($l[$m], $l[$m + 1])) / 2;\n    } else {\n        return $l[$m];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp72xwag55.php:25\nStack trace:\n#0 /tmp/tmp72xwag55.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp72xwag55.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        if (count($l) % 2 == 1) {\n            return $l[count($l) / 2];\n        } else {\n            $m = $l[count($l) / 2 - 1];\n            $m += $l[count($l) / 2];\n            return $m / 2;\n        }\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp6c1g90t6.php:10\nStack trace:\n#0 /tmp/tmp6c1g90t6.php(24): median(Array)\n#1 /tmp/tmp6c1g90t6.php(28): candidate(Array)\n#2 /tmp/tmp6c1g90t6.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp6c1g90t6.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmprf_kdg2a.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    if ($m1 < 0) {\n        return $l[0];\n    }\n    if ($m2 >= $n) {\n        return $l[$n - 1];\n    }\n    $a = array();\n    $a[0] = $l[0];\n    $a[1] = $l[$m1];\n    $a[2] = $l[$m2];\n    $a[3] = $l[$n - 1];\n    $a = array_sort($a);\n    $m = floor(count($a) / 2);\n    return $a[$m];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpa7eci9_z.php:26\nStack trace:\n#0 /tmp/tmpa7eci9_z.php(32): median(Array)\n#1 /tmp/tmpa7eci9_z.php(36): candidate(Array)\n#2 /tmp/tmpa7eci9_z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpa7eci9_z.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_values($l);\n    }\n    if (count($l) == 0) {\n        return null;\n    }\n    $l = array_sort($l);\n    if (count($l) % 2 == 1) {\n        return $l[count($l) / 2];\n    } else {\n        return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp6_ief40o.php:14\nStack trace:\n#0 /tmp/tmp6_ief40o.php(23): median(Array)\n#1 /tmp/tmp6_ief40o.php(27): candidate(Array)\n#2 /tmp/tmp6_ief40o.php(34): test()\n#3 {main}\n  thrown in /tmp/tmp6_ief40o.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = $l.length;\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    if ($n % 2 == 0) {\n        return ( $l[($n / 2) - 1] + $l[$n / 2] ) / 2.0;\n    }\n    return $l[$n / 2];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpudgavbko.php:8\nStack trace:\n#0 /tmp/tmpudgavbko.php(22): median(Array)\n#1 /tmp/tmpudgavbko.php(26): candidate(Array)\n#2 /tmp/tmpudgavbko.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpudgavbko.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (!is_array($l)) {\n        return null;\n    }\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp_reyjaox.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = $l.length;\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m;\n    $m3 = $m + 1;\n    $l1 = $l[$m1];\n    $l2 = $l[$m2];\n    $l3 = $l[$m3];\n    if ($l1 < $l2) {\n        if ($l2 < $l3) {\n            return $l2;\n        } else if ($l1 < $l3) {\n            return $l3;\n        } else {\n            return $l1;\n        }\n    } else if ($l1 > $l2) {\n        if ($l1 < $l3) {\n            return $l1;\n        } else if ($l2 < $l3) {\n            return $l3;\n        } else {\n            return $l2;\n        }\n    } else {\n        return $l1;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp7mgb53px.php:8\nStack trace:\n#0 /tmp/tmp7mgb53px.php(44): median(Array)\n#1 /tmp/tmp7mgb53px.php(48): candidate(Array)\n#2 /tmp/tmp7mgb53px.php(55): test()\n#3 {main}\n  thrown in /tmp/tmp7mgb53px.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmprf_kdg2a.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $m1 = $m1 < 0 ? 0 : $m1;\n    $m2 = $m2 > $n - 1 ? $n - 1 : $m2;\n    $a = array();\n    $a = array_merge($a, $l);\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmpu4zcx23q.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return (float)($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpr3d9ty5a.php:9\nStack trace:\n#0 /tmp/tmpr3d9ty5a.php(19): median(Array)\n#1 /tmp/tmpr3d9ty5a.php(23): candidate(Array)\n#2 /tmp/tmpr3d9ty5a.php(30): test()\n#3 {main}\n  thrown in /tmp/tmpr3d9ty5a.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $m1 = $m1 < 0 ? 0 : $m1;\n    $m2 = $m2 > $n - 1 ? $n - 1 : $m2;\n    $m1 = $l[$m1];\n    $m2 = $l[$m2];\n    if ($m1 > $m2) {\n        $t = $m1;\n        $m1 = $m2;\n        $m2 = $t;\n    }\n    $m = $m1 + ($m2 - $m1) / 2.0;\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30dy7vef.php:34\nStack trace:\n#0 /tmp/tmp30dy7vef.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp30dy7vef.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        if (count($l) % 2 == 0) {\n            return (count($l) / 2 - 1) * $l[count($l) / 2];\n        } else {\n            return $l[count($l) / 2];\n        }\n    }\n    return 0;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpimt9_yj_.php:10\nStack trace:\n#0 /tmp/tmpimt9_yj_.php(21): median(Array)\n#1 /tmp/tmpimt9_yj_.php(25): candidate(Array)\n#2 /tmp/tmpimt9_yj_.php(32): test()\n#3 {main}\n  thrown in /tmp/tmpimt9_yj_.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $l1 = array_slice($l, 0, $m1 + 1);\n    $l2 = array_slice($l, $m1 + 1, $n);\n    if ($n % 2 == 0) {\n        return (max($l1) + min($l2)) / 2.0;\n    }\n    return max($l1, $l2);\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6m8u1ftr.php:28\nStack trace:\n#0 /tmp/tmp6m8u1ftr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6m8u1ftr.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        if (count($l) % 2 == 0) {\n            return (count($l) / 2 - 1) * $l[count($l) / 2];\n        } else {\n            return $l[count($l) / 2];\n        }\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp99gssxer.php:10\nStack trace:\n#0 /tmp/tmp99gssxer.php(22): median(Array)\n#1 /tmp/tmp99gssxer.php(26): candidate(Array)\n#2 /tmp/tmp99gssxer.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp99gssxer.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = $l.length;\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    if ($n % 2 == 0) {\n        return (\n            $l[($n / 2) - 1] +\n            $l[($n / 2)]\n        ) / 2.0;\n    }\n    return $l[($n - 1) / 2];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpxkpz4mhj.php:8\nStack trace:\n#0 /tmp/tmpxkpz4mhj.php(25): median(Array)\n#1 /tmp/tmpxkpz4mhj.php(29): candidate(Array)\n#2 /tmp/tmpxkpz4mhj.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpxkpz4mhj.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    if ($n % 2 == 1) {\n        return $l[$m];\n    }\n    $m = $m - 1;\n    $l1 = $l[$m];\n    $l2 = $l[$m + 1];\n    return (float)($l1 + $l2) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy6l16eu8.php:27\nStack trace:\n#0 /tmp/tmpy6l16eu8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpy6l16eu8.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $m1 = $m1 < 0 ? 0 : $m1;\n    $m2 = $m2 > $n - 1 ? $n - 1 : $m2;\n    $m1 = $l[$m1];\n    $m2 = $l[$m2];\n    if ($m1 > $m2) {\n        $t = $m1;\n        $m1 = $m2;\n        $m2 = $t;\n    }\n    $m = ($m1 + $m2) / 2.0;\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxfjvyi9c.php:33\nStack trace:\n#0 /tmp/tmpxfjvyi9c.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpxfjvyi9c.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    if ($m1 < 0) {\n        return $l[0];\n    }\n    if ($m2 >= $n) {\n        return $l[$n - 1];\n    }\n    $a = array();\n    $a[0] = $l[0];\n    $a[1] = $l[$m1];\n    $a[2] = $l[$m2];\n    $a[3] = $l[$n - 1];\n    sort($a);\n    if ($a[1] == $a[2]) {\n        return $a[1];\n    }\n    if ($a[0] == $a[1]) {\n        return $a[0];\n    }\n    if ($a[0] == $a[2]) {\n        return $a[0];\n    }\n    if ($a[1] == $a[3]) {\n        return $a[1];\n    }\n    if ($a[2] == $a[3]) {\n        return $a[2];\n    }\n    return (($a[0] + $a[1]) / 2) + (($a[1] + $a[2]) / 2) + (($a[2] + $a[3]) / 2);\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7l1vyn1b.php:50\nStack trace:\n#0 /tmp/tmp7l1vyn1b.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp7l1vyn1b.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp4z1apny8.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (!is_array($l)) {\n        return false;\n    }\n    $l = array_flip($l);\n    $l = array_sort($l);\n    if (count($l) % 2 == 0) {\n        return (float)($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n    } else {\n        return $l[count($l) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpnd4m1odo.php:12\nStack trace:\n#0 /tmp/tmpnd4m1odo.php(21): median(Array)\n#1 /tmp/tmpnd4m1odo.php(25): candidate(Array)\n#2 /tmp/tmpnd4m1odo.php(32): test()\n#3 {main}\n  thrown in /tmp/tmpnd4m1odo.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    if ($m1 < 0) {\n        return $l[0];\n    }\n    if ($m2 >= $n) {\n        return $l[$n - 1];\n    }\n    $m1 = $l[$m1];\n    $m2 = $l[$m2];\n    if ($m1 > $m2) {\n        $t = $m1;\n        $m1 = $m2;\n        $m2 = $t;\n    }\n    $m = $m1 + (($m2 - $m1) / 2);\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy9f_qm5n.php:37\nStack trace:\n#0 /tmp/tmpy9f_qm5n.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpy9f_qm5n.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (!$l) {\n        return null;\n    }\n    if ($l.length == 0) {\n        return null;\n    }\n    if ($l.length == 1) {\n        return $l[0];\n    }\n    var $l_len = $l.length;\n    var $l_half = Math.floor($l_len / 2);\n    var $l_median = $l[$l_half];\n    var $l_low = $l[0];\n    var $l_high = $l[$l_len - 1];\n    if ($l_half == $l_len / 2) {\n        return $l_median;\n    }\n    if ($l_half < $l_len / 2) {\n        return $l_low;\n    }\n    return $l_high;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4hy1otve.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $s = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $s += $l[$i];\n    }\n    $s /= $n;\n    if ($m == 0) {\n        return $s;\n    }\n    if ($m1 == 0) {\n        return $s;\n    }\n    if ($m2 == 0) {\n        return $s;\n    }\n    $m1 = $m1 * 2;\n    $m2 = $m2 * 2;\n    $m1 = floor($m1);\n    $m2 = floor($m2);\n    $m3 = $m1 + $m2;\n    $m4 = $m1 - $m2;\n    $m5 = $m3 / 2;\n    $m6 = $m4 / 2;\n    $m7 = $m5 + $m6;\n    $m8 = $m5 - $m6;\n    if ($m7 == 0) {\n        return $s;\n    }\n    if ($m8 == 0) {\n        return $s;\n    }\n    if ($m7 > 0) {\n        return $m7;\n    }\n    if ($m8 > 0) {\n        return $m8;\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv93a8wvt.php:59\nStack trace:\n#0 /tmp/tmpv93a8wvt.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpv93a8wvt.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l);\n        $l = array_unshift(0, $l\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp4z1apny8.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if ($l.length == 0) {\n        return null;\n    }\n    var l = $l.sort(function(a, b) {\n        return a - b;\n    });\n    var mid = Math.floor(l.length / 2);\n    if (l.length % 2 == 1) {\n        return l[mid];\n    } else {\n        return (l[mid] + l[mid - 1]) / 2.0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmprebe392y.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $l1 = $l[$m1];\n    $l2 = $l[$m2];\n    if ($n % 2 == 0) {\n        return ($l1 + $l2) / 2.0;\n    }\n    return $l1;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu42jtn1s.php:28\nStack trace:\n#0 /tmp/tmpu42jtn1s.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpu42jtn1s.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp9zc3j8f3.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmprf_kdg2a.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    $m = floor($n / 2);\n    $p = $m;\n    $q = $n - $m;\n    $m = $l[$p];\n    $l[$p] = $l[$q];\n    $l[$q] = $m;\n    $m = $l[$p];\n    $l[$p] = $l[0];\n    $l[0] = $m;\n    $m = $l[$q];\n    $l[$q] = $l[$n - 1];\n    $l[$n - 1] = $m;\n    $m = $l[$p];\n    $l[$p] = $l[$n - 1];\n    $l[$n - 1] = $m;\n    $m = $l[$p];\n    $l[$p] = $l[0];\n    $l[0] = $m;\n    $m = $l[$q];\n    $l[$q] = $l[$n - 1];\n    $l[$n - 1] = $m;\n    $m = $l[$p];\n    $l[$p] = $l[0];\n    $l[0] = $m;\n    $m = $l[$q];\n    $l[$q] = $l[$n - 1];\n    $l[$n - 1] = $m;\n    $m = $l[$p];\n    $l[$p] = $l[0];\n    $l[0] = $m;\n    $m = $l[$q];\n    $l[$q] = $l[$n - 1];\n    $l[$n - 1] = $m;\n    $m = $l[$p];\n    $l[$p] = $l[0];\n    $l[0] = $m;\n    $m = $l[$\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp7butn2y0.php on line 52\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmprf_kdg2a.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $l1 = array_slice($l, 0, $m1 + 1);\n    $l2 = array_slice($l, $m1 + 1, $n);\n    $l3 = array_slice($l, $m2, $n);\n    $l4 = array_slice($l, 0, $m2);\n    $l5 = array_slice($l, $m, $m);\n    $l6 = array_slice($l, $m, $m2);\n    $l7 = array_slice($l, $m2, $n);\n    $l8 = array_slice($l, $m1, $m);\n    $l9 = array_slice($l, $m1, $m2);\n    $l10 = array_slice($l, $m1, $n);\n    $l11 = array_slice($l, $m, $n);\n    $l12 = array_slice($l, $m2, $n);\n    $l13 = array_slice($l, $m1, $n);\n    $l14 = array_slice($l, $m, $m1);\n    $l15 = array_slice($l, $m, $m2);\n    $l16 = array_slice($l, $m2, $m);\n    $l17 = array_slice($l, $m1, $m);\n    $l18 = array_slice($l, $m, $m1);\n    $l19 = array_slice($l, $m, $m2);\n    $l20 = array_slice($l, $m2, $m);\n    $l21 = array_slice($l, $m1, $m2);\n    $l22 = array_slice($l, $m2, $m1);\n    $l23 = array_slice($l, $m, $m1);\n    $l24 = array_slice($l, $m\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp_rnlpv_z.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n    }\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 7 in /tmp/tmp__qjxwiv.php on line 59\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        if (count($l) % 2 == 0) {\n            return (count($l) / 2 - 1) * $l[count($l) / 2];\n        } else {\n            return $l[count($l) / 2];\n        }\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp99gssxer.php:10\nStack trace:\n#0 /tmp/tmp99gssxer.php(22): median(Array)\n#1 /tmp/tmp99gssxer.php(26): candidate(Array)\n#2 /tmp/tmp99gssxer.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp99gssxer.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = $n / 2;\n    $m = floor($m);\n    $m = $l[$m];\n    if ($n % 2 == 0) {\n        return $m;\n    }\n    return $m + ($m - $l[$m - 1]);\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyvqje9io.php:27\nStack trace:\n#0 /tmp/tmpyvqje9io.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyvqje9io.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $s = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $s += $l[$i];\n    }\n    $s /= $n;\n    if ($n % 2 == 1) {\n        return $s;\n    }\n    $m++;\n    $e = $m / 2;\n    $b = $e - 1;\n    $a = $e + 1;\n    $s = $s - $l[$b] - $l[$a];\n    $s /= 2;\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ol4js83.php:36\nStack trace:\n#0 /tmp/tmp0ol4js83.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0ol4js83.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (!$l) {\n        return null;\n    }\n    if ($l.length == 0) {\n        return null;\n    }\n    if ($l.length == 1) {\n        return $l[0];\n    }\n    var l = $l.sort(function(a, b) {\n        return a - b;\n    });\n    var mid = Math.floor(l.length / 2);\n    if (l.length % 2 == 0) {\n        return (l[mid] + l[mid - 1]) / 2;\n    } else {\n        return l[mid];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpkrke6idd.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        if (count($l) % 2 == 1) {\n            return $l[count($l) / 2];\n        } else {\n            return ($l[count($l) / 2 - 1] + $l[count($l) / 2]) / 2.0;\n        }\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpse8y1lre.php:10\nStack trace:\n#0 /tmp/tmpse8y1lre.php(22): median(Array)\n#1 /tmp/tmpse8y1lre.php(26): candidate(Array)\n#2 /tmp/tmpse8y1lre.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpse8y1lre.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_values($l);\n    }\n    if (empty($l)) {\n        return null;\n    }\n    $l = array_sort($l);\n    if (count($l) % 2 == 1) {\n        return $l[count($l) / 2];\n    }\n    $l = array_values($l);\n    $l = array_sort($l);\n    $l = array_unshift($l, 0);\n    return (float)($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpabx0abv5.php:14\nStack trace:\n#0 /tmp/tmpabx0abv5.php(25): median(Array)\n#1 /tmp/tmpabx0abv5.php(29): candidate(Array)\n#2 /tmp/tmpabx0abv5.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpabx0abv5.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $m3 = $m + 2;\n    $l1 = $l[$m1];\n    $l2 = $l[$m2];\n    $l3 = $l[$m3];\n    if ($n % 2 == 0) {\n        return (($l1 + $l2) / 2);\n    } else {\n        return $l3;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpppglu2ox.php:31\nStack trace:\n#0 /tmp/tmpppglu2ox.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpppglu2ox.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        if (count($l) % 2 == 0) {\n            return (count($l) / 2) - 1;\n        } else {\n            return count($l) / 2;\n        }\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpqxej3tp1.php:10\nStack trace:\n#0 /tmp/tmpqxej3tp1.php(22): median(Array)\n#1 /tmp/tmpqxej3tp1.php(26): candidate(Array)\n#2 /tmp/tmpqxej3tp1.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpqxej3tp1.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (!$l) {\n        return null;\n    }\n    $l.sort(function(a, b) {\n        return a - b;\n    });\n    var n = $l.length;\n    if (n % 2 == 1) {\n        return $l[n / 2];\n    }\n    return ($l[n / 2] + $l[n / 2 - 1]) / 2.0;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \",\", expecting variable in /tmp/tmp92w365n5.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $m1 = $m1 < 0 ? 0 : $m1;\n    $m2 = $m2 > $n - 1 ? $n - 1 : $m2;\n    $a = array();\n    $a = array_merge($a, $l);\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmpu4zcx23q.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = $n / 2;\n    $m = floor($m);\n    $m = $l[$m];\n    if ($n % 2 == 0) {\n        return $m;\n    }\n    return $m + ($m - $l[$m - 1]);\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyvqje9io.php:27\nStack trace:\n#0 /tmp/tmpyvqje9io.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyvqje9io.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmprf_kdg2a.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        if (count($l) % 2 == 0) {\n            return (float)($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n        } else {\n            return $l[count($l) / 2];\n        }\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpotfd2b9y.php:10\nStack trace:\n#0 /tmp/tmpotfd2b9y.php(22): median(Array)\n#1 /tmp/tmpotfd2b9y.php(26): candidate(Array)\n#2 /tmp/tmpotfd2b9y.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpotfd2b9y.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    if ($m1 < 0) {\n        return $l[0];\n    }\n    if ($m2 >= $n) {\n        return $l[$n - 1];\n    }\n    $a = $l[$m1];\n    $b = $l[$m2];\n    $c = $a + $b;\n    $d = $a - $b;\n    if ($c - $d == 0) {\n        return $a;\n    }\n    if ($c - $d < 0) {\n        return $b;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp15pod6r3.php:40\nStack trace:\n#0 /tmp/tmp15pod6r3.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp15pod6r3.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp9zc3j8f3.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 7 in /tmp/tmpd573xb3t.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 7 in /tmp/tmpd573xb3t.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $p = array_copy($l);\n    sort($p);\n    if ($n % 2 == 1) {\n        return $p[$m];\n    } else {\n        return (float) $p[$m] + ((float) $p[$m + 1] - (float) $p[$m]) / 2.0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_copy() in /tmp/tmps2qtgef1.php:13\nStack trace:\n#0 /tmp/tmps2qtgef1.php(23): median(Array)\n#1 /tmp/tmps2qtgef1.php(27): candidate(Array)\n#2 /tmp/tmps2qtgef1.php(34): test()\n#3 {main}\n  thrown in /tmp/tmps2qtgef1.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (!$l) {\n        return null;\n    }\n    if ($l.length == 0) {\n        return null;\n    }\n    if ($l.length == 1) {\n        return $l[0];\n    }\n    var l = $l.sort(function(a, b) {\n        return a - b;\n    });\n    var half = Math.floor(l.length / 2);\n    if (l.length % 2 == 0) {\n        return (l[half] + l[half - 1]) / 2;\n    }\n    return l[half];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp265xa_i0.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    if ($m1 < 0) {\n        return $l[0];\n    }\n    if ($m2 >= $n) {\n        return $l[$n - 1];\n    }\n    $a = array();\n    $a = array_merge($a, $l);\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 7 in /tmp/tmplal5o4uk.php on line 60\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    $m = floor($n / 2);\n    $m1 = floor($m);\n    $m2 = $m - $m1;\n    $m1 = $l[$m1];\n    $m2 = $l[$m2];\n    if ($m1 > $m2) {\n        $t = $m1;\n        $m1 = $m2;\n        $m2 = $t;\n    }\n    return $m1 + $m2 / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyf6kazck.php:33\nStack trace:\n#0 /tmp/tmpyf6kazck.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpyf6kazck.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 7 in /tmp/tmpd573xb3t.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $l1 = array_slice($l, 0, $m1 + 1);\n    $l2 = array_slice($l, $m1 + 1, $n);\n    if ($n % 2 == 0) {\n        return (float)(($l1[$m1] + $l2[$m]) / 2);\n    }\n    return $l2[$m];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9v14o32s.php:28\nStack trace:\n#0 /tmp/tmp9v14o32s.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9v14o32s.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmprf_kdg2a.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $m3 = $m2 - 1;\n    $m4 = $m2 + 1;\n    $m5 = $m4 - 1;\n    $m6 = $m4 + 1;\n    $m7 = $m6 - 1;\n    $m8 = $m6 + 1;\n    $m9 = $m8 - 1;\n    $m10 = $m8 + 1;\n    $m11 = $m10 - 1;\n    $m12 = $m10 + 1;\n    $m13 = $m12 - 1;\n    $m14 = $m12 + 1;\n    $m15 = $m14 - 1;\n    $m16 = $m14 + 1;\n    $m17 = $m16 - 1;\n    $m18 = $m16 + 1;\n    $m19 = $m18 - 1;\n    $m20 = $m18 + 1;\n    $m21 = $m20 - 1;\n    $m22 = $m20 + 1;\n    $m23 = $m22 - 1;\n    $m24 = $m22 + 1;\n    $m25 = $m24 - 1;\n    $m26 = $m24 + 1;\n    $m27 = $m26 - 1;\n    $m28 = $m26 + 1;\n    $m29 = $m28 - 1;\n    $m30 = $m28 + 1;\n    $m31 = $m30 - 1;\n    $m32 = $m30 + 1;\n    $m33 = $m32 - 1;\n    $m34 = $m32 + 1;\n    $m35 = $m34 - 1;\n    $m36 = $m34 + 1;\n    $m37 = $m36 - 1;\n    $m38 = $m36 + 1;\n    $m39 = $m38 - 1;\n    $m40 = $m38 +\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpn_4hihca.php on line 53\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return (float)($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpr3d9ty5a.php:9\nStack trace:\n#0 /tmp/tmpr3d9ty5a.php(19): median(Array)\n#1 /tmp/tmpr3d9ty5a.php(23): candidate(Array)\n#2 /tmp/tmpr3d9ty5a.php(30): test()\n#3 {main}\n  thrown in /tmp/tmpr3d9ty5a.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $s = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $s += $l[$i];\n    }\n    $s /= $n;\n    if ($n % 2 == 0) {\n        return $s;\n    }\n    return $s + $l[$m];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3bpcv0jn.php:29\nStack trace:\n#0 /tmp/tmp3bpcv0jn.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3bpcv0jn.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    if ($n % 2 == 0) {\n        return (array_sum($l[0:$m]) + array_sum($l[$m:$n])) / 2.0;\n    } else {\n        return array_sum($l[0:$m]) / 2.0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \":\", expecting \"]\" in /tmp/tmpqcpsmc2a.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = $l.length;\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $a = $l[$m1];\n    $b = $l[$m2];\n    if ($n % 2 == 1) {\n        return $a;\n    }\n    return ($a + $b) / 2.0;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp_qig1j_y.php:8\nStack trace:\n#0 /tmp/tmp_qig1j_y.php(24): median(Array)\n#1 /tmp/tmp_qig1j_y.php(28): candidate(Array)\n#2 /tmp/tmp_qig1j_y.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp_qig1j_y.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    if ($m1 < 0) {\n        return $l[0];\n    }\n    if ($m2 >= $n) {\n        return $l[$n - 1];\n    }\n    $a = $l[$m1];\n    $b = $l[$m2];\n    $c = $a + $b;\n    $c = $c / 2;\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ge_zhom.php:37\nStack trace:\n#0 /tmp/tmp9ge_zhom.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9ge_zhom.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    $m = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 7 in /tmp/tmpqs6zlrxf.php on line 93\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (!is_array($l)) {\n        throw new Exception('median() expects parameter 1 to be array');\n    }\n    if (empty($l)) {\n        throw new Exception('median() expects parameter 1 to have at least one element');\n    }\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp8fz7t1md.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = $l.length;\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    $m = $n / 2;\n    $m1 = $m - 1;\n    $m2 = $m;\n    $m3 = $m + 1;\n    $a = $l[$m1];\n    $b = $l[$m2];\n    $c = $l[$m3];\n    if ($a > $b) {\n        if ($a > $c) {\n            return $a;\n        } else {\n            return $c;\n        }\n    } else {\n        if ($b > $c) {\n            return $b;\n        } else {\n            return $c;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmparwxepll.php:8\nStack trace:\n#0 /tmp/tmparwxepll.php(38): median(Array)\n#1 /tmp/tmparwxepll.php(42): candidate(Array)\n#2 /tmp/tmparwxepll.php(49): test()\n#3 {main}\n  thrown in /tmp/tmparwxepll.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = $n / 2;\n    $m = floor($m);\n    $m = $l[$m];\n    if ($n % 2 == 0) {\n        return $m;\n    }\n    return $m + ($l[$m + 1] - $l[$m]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn89er0w1.php:27\nStack trace:\n#0 /tmp/tmpn89er0w1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpn89er0w1.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    if (count($l) % 2 == 0) {\n        return (float)($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n    } else {\n        return $l[count($l) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpxgm6x1yg.php:9\nStack trace:\n#0 /tmp/tmpxgm6x1yg.php(18): median(Array)\n#1 /tmp/tmpxgm6x1yg.php(22): candidate(Array)\n#2 /tmp/tmpxgm6x1yg.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpxgm6x1yg.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $m1 = $m1 < 0 ? 0 : $m1;\n    $m2 = $m2 > $n - 1 ? $n - 1 : $m2;\n    $a = array_slice($l, $m1, $m2 + 1);\n    $a = array_flip($a);\n    $a = array_sort($a);\n    if ($n % 2 == 0) {\n        return (count($a) % 2 == 0) ? $a[floor($n / 2)] : ($a[floor($n / 2)] + $a[floor($n / 2) - 1]) / 2.0;\n    } else {\n        return $a[floor($n / 2)];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpjl1f34km.php:20\nStack trace:\n#0 /tmp/tmpjl1f34km.php(29): median(Array)\n#1 /tmp/tmpjl1f34km.php(33): candidate(Array)\n#2 /tmp/tmpjl1f34km.php(40): test()\n#3 {main}\n  thrown in /tmp/tmpjl1f34km.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(0, $l);\n    $l = array_unshift(\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmprf_kdg2a.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 7 in /tmp/tmpd573xb3t.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        if (count($l) % 2 == 0) {\n            return (count($l) / 2 - 1) * $l[count($l) / 2];\n        } else {\n            return $l[count($l) / 2];\n        }\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp99gssxer.php:10\nStack trace:\n#0 /tmp/tmp99gssxer.php(22): median(Array)\n#1 /tmp/tmp99gssxer.php(26): candidate(Array)\n#2 /tmp/tmp99gssxer.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp99gssxer.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = $n / 2;\n    $m = floor($m);\n    $m = $l[$m];\n    if ($n % 2 == 0) {\n        return $m;\n    } else {\n        return $m + ($l[$m + 1] - $l[$m]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkqczev2w.php:28\nStack trace:\n#0 /tmp/tmpkqczev2w.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpkqczev2w.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $l1 = $l[$m1];\n    $l2 = $l[$m2];\n    if ($n % 2 == 0) {\n        return ($l1 + $l2) / 2.0;\n    } else {\n        return $l1;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9z5efiyc.php:29\nStack trace:\n#0 /tmp/tmp9z5efiyc.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9z5efiyc.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n    }\n    $l = array_flip($l);\n    $l = array_sort($l);\n    if (count($l) % 2 == 0) {\n        return (float)($l[count($l) / 2 - 1] + $l[count($l) / 2]) / 2;\n    } else {\n        return $l[count($l) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpwa4yhssd.php:12\nStack trace:\n#0 /tmp/tmpwa4yhssd.php(21): median(Array)\n#1 /tmp/tmpwa4yhssd.php(25): candidate(Array)\n#2 /tmp/tmpwa4yhssd.php(32): test()\n#3 {main}\n  thrown in /tmp/tmpwa4yhssd.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = $l.length;\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $m3 = $m + 2;\n    $l1 = $l[$m1];\n    $l2 = $l[$m2];\n    $l3 = $l[$m3];\n    if ($n % 2 == 1) {\n        return $l1;\n    }\n    return (($l1 + $l2) / 2);\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmprpdhye8j.php:8\nStack trace:\n#0 /tmp/tmprpdhye8j.php(26): median(Array)\n#1 /tmp/tmprpdhye8j.php(30): candidate(Array)\n#2 /tmp/tmprpdhye8j.php(37): test()\n#3 {main}\n  thrown in /tmp/tmprpdhye8j.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $m3 = $m2 - 1;\n    $m4 = $m2 + 1;\n    $m5 = $m4 - 1;\n    $m6 = $m4 + 1;\n    $m7 = $m6 - 1;\n    $m8 = $m6 + 1;\n    $m9 = $m8 - 1;\n    $m10 = $m8 + 1;\n    $m11 = $m10 - 1;\n    $m12 = $m10 + 1;\n    $m13 = $m12 - 1;\n    $m14 = $m12 + 1;\n    $m15 = $m14 - 1;\n    $m16 = $m14 + 1;\n    $m17 = $m16 - 1;\n    $m18 = $m16 + 1;\n    $m19 = $m18 - 1;\n    $m20 = $m18 + 1;\n    $m21 = $m20 - 1;\n    $m22 = $m20 + 1;\n    $m23 = $m22 - 1;\n    $m24 = $m22 + 1;\n    $m25 = $m24 - 1;\n    $m26 = $m24 + 1;\n    $m27 = $m26 - 1;\n    $m28 = $m26 + 1;\n    $m29 = $m28 - 1;\n    $m30 = $m28 + 1;\n    $m31 = $m30 - 1;\n    $m32 = $m30 + 1;\n    $m33 = $m32 - 1;\n    $m34 = $m32 + 1;\n    $m35 = $m34 - 1;\n    $m36 = $m34 + 1;\n    $m37 = $m36 - 1;\n    $m38 = $m36 + 1;\n    $m39 = $m38 - 1;\n    $m40 = $m38 +\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpn_4hihca.php on line 53\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = sizeof($l);\n    $m = 0;\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 7 in /tmp/tmprbi8n_vq.php on line 93\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 7 in /tmp/tmpd573xb3t.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if ($l === null || $l === undefined) {\n        return null;\n    }\n    if ($l.length === 0) {\n        return null;\n    }\n    if ($l.length === 1) {\n        return $l[0];\n    }\n    var $sorted = $l.sort();\n    var $middle = Math.floor($sorted.length / 2);\n    if ($sorted.length % 2 === 0) {\n        return ($sorted[$middle] + $sorted[$middle - 1]) / 2.0;\n    } else {\n        return $sorted[$middle];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyotmwjdf.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = $l.length;\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    if ($n % 2 == 0) {\n        return (median($l[0:$n/2]) + median($l[$n/2:$n])) / 2;\n    }\n    return $l[$n/2];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \":\", expecting \"]\" in /tmp/tmpmpi1r6dr.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = $l.length;\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    $m = $n / 2;\n    $m = floor($m);\n    $m = $l[$m];\n    $l = $l[0:$m];\n    $l = $l + $l[$n - $m:$n];\n    $l = $l / 2;\n    return $l;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \":\", expecting \"]\" in /tmp/tmpej5p0p7o.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = $l.length;\n    if ($n == 0) {\n        return null;\n    }\n    if ($n == 1) {\n        return $l[0];\n    }\n    $m = $n / 2;\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $l1 = $l[$m1];\n    $l2 = $l[$m2];\n    if ($l1 > $l2) {\n        $l1 = $l2;\n        $l2 = $l1;\n        $m1 = $m2;\n        $m2 = $m1;\n    }\n    return ($l1 + $l2) / 2.0;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpq4acup35.php:8\nStack trace:\n#0 /tmp/tmpq4acup35.php(30): median(Array)\n#1 /tmp/tmpq4acup35.php(34): candidate(Array)\n#2 /tmp/tmpq4acup35.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpq4acup35.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $l = array_sort($l);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\n    $l = array_unshift($l, 0);\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 7 in /tmp/tmpd573xb3t.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp9zc3j8f3.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp9zc3j8f3.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $a = array();\n    $a[0] = $l[0];\n    $a[$m1] = $l[$m1];\n    $a[$m2] = $l[$m2];\n    $a = sort($a);\n    if ($n % 2 == 0) {\n        return $a[$m];\n    } else {\n        return $a[floor($m - 0.5)];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nWarning: Trying to access array offset on value of type bool in /tmp/tmpk0wasu17.php on line 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk0wasu17.php:32\nStack trace:\n#0 /tmp/tmpk0wasu17.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpk0wasu17.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    $m = floor($m);\n    $m = $l[$m];\n    if ($n % 2 == 1) {\n        return $m;\n    } else {\n        $m = ($m + $l[$m - 1]) / 2;\n        return $m;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptbukgkf8.php:25\nStack trace:\n#0 /tmp/tmptbukgkf8.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptbukgkf8.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $l1 = $l[$m1];\n    $l2 = $l[$m2];\n    if ($n % 2 == 0) {\n        return ($l1 + $l2) / 2.0;\n    }\n    return $l1;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu42jtn1s.php:28\nStack trace:\n#0 /tmp/tmpu42jtn1s.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpu42jtn1s.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $l = array_flip($l);\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n % 2) {\n        return $l[$m];\n    } else {\n        return (float)($l[$m] + $l[$m + 1]) / 2.0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz4agjk5s.php:23\nStack trace:\n#0 /tmp/tmpz4agjk5s.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpz4agjk5s.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        if (count($l) % 2 == 0) {\n            return (count($l) / 2 - 1) * $l[count($l) / 2];\n        } else {\n            return $l[count($l) / 2];\n        }\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp99gssxer.php:10\nStack trace:\n#0 /tmp/tmp99gssxer.php(22): median(Array)\n#1 /tmp/tmp99gssxer.php(26): candidate(Array)\n#2 /tmp/tmp99gssxer.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp99gssxer.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    $m = floor($m);\n    $m = $m + 1;\n    $m = $m - 1;\n    $m = $m * 2;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m = $m - 1;\n    $m =\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpy88c6on_.php on line 60\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $a = array();\n    $a = array_merge($a, $l);\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\n    $a = array_merge($a, array(0));\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: Unclosed '{' on line 7 in /tmp/tmpf_h94ejb.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = sizeof($l);\n    if ($n == 0) {\n        return 0;\n    }\n    $m = $n / 2;\n    $m = floor($m);\n    $m = $l[$m];\n    if ($n % 2 == 1) {\n        return $m;\n    }\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    $m1 = $l[$m1];\n    $m2 = $l[$m2];\n    return (($m1 > $m2) ? $m1 : $m2);\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9czxeta.php:30\nStack trace:\n#0 /tmp/tmpk9czxeta.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpk9czxeta.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = $n / 2;\n    $m1 = floor($m);\n    $m2 = ceil($m);\n    $m1 = $l[$m1];\n    $m2 = $l[$m2];\n    if ($m1 > $m2) {\n        $m = $m2;\n    } else {\n        $m = $m1;\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfy0970v.php:30\nStack trace:\n#0 /tmp/tmptfy0970v.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptfy0970v.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp9zc3j8f3.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        if (count($l) % 2 == 0) {\n            return (float)($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n        } else {\n            return $l[count($l) / 2];\n        }\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpotfd2b9y.php:10\nStack trace:\n#0 /tmp/tmpotfd2b9y.php(22): median(Array)\n#1 /tmp/tmpotfd2b9y.php(26): candidate(Array)\n#2 /tmp/tmpotfd2b9y.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpotfd2b9y.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $s = 0;\n    for ($i = 0; $i < $m; $i++) {\n        $s += $l[$i];\n    }\n    if ($n % 2 == 1) {\n        return $s;\n    }\n    $m++;\n    $s += $l[$m - 1];\n    return $s / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpptx9lre3.php:30\nStack trace:\n#0 /tmp/tmpptx9lre3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpptx9lre3.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        if (count($l) % 2 == 1) {\n            return $l[count($l) / 2];\n        } else {\n            $l = array_sort($l);\n            return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n        }\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpi3x8o2dm.php:10\nStack trace:\n#0 /tmp/tmpi3x8o2dm.php(23): median(Array)\n#1 /tmp/tmpi3x8o2dm.php(27): candidate(Array)\n#2 /tmp/tmpi3x8o2dm.php(34): test()\n#3 {main}\n  thrown in /tmp/tmpi3x8o2dm.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        if (count($l) % 2 == 0) {\n            return (count($l) / 2 - 1) * $l[count($l) / 2];\n        } else {\n            return $l[count($l) / 2];\n        }\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmp99gssxer.php:10\nStack trace:\n#0 /tmp/tmp99gssxer.php(22): median(Array)\n#1 /tmp/tmp99gssxer.php(26): candidate(Array)\n#2 /tmp/tmp99gssxer.php(33): test()\n#3 {main}\n  thrown in /tmp/tmp99gssxer.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n    }\n    $m = floor($n / 2);\n    $m1 = $m - 1;\n    $m2 = $m + 1;\n    if ($m1 < 0) {\n        return $l[0];\n    }\n    if ($m2 >= $n) {\n        return $l[$n - 1];\n    }\n    $a = array();\n    $a[0] = $l[0];\n    $a[1] = $l[$m1];\n    $a[2] = $l[$m2];\n    $a[3] = $l[$n - 1];\n    sort($a);\n    if ($a[1] == $a[2]) {\n        return $a[1];\n    }\n    if ($a[0] == $a[1]) {\n        return $a[0];\n    }\n    if ($a[0] == $a[2]) {\n        return $a[0];\n    }\n    if ($a[1] == $a[2]) {\n        return $a[1];\n    }\n    return (($a[0] + $a[1]) / 2);\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4zbac2rz.php:47\nStack trace:\n#0 /tmp/tmp4zbac2rz.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp4zbac2rz.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp9zc3j8f3.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_values($l);\n    }\n    if (count($l) == 0) {\n        return null;\n    }\n    $l = array_sort($l);\n    if (count($l) % 2 == 1) {\n        return $l[count($l) / 2];\n    }\n    return ($l[count($l) / 2 - 1] + $l[count($l) / 2]) / 2.0;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpm4y8sonc.php:14\nStack trace:\n#0 /tmp/tmpm4y8sonc.php(22): median(Array)\n#1 /tmp/tmpm4y8sonc.php(26): candidate(Array)\n#2 /tmp/tmpm4y8sonc.php(33): test()\n#3 {main}\n  thrown in /tmp/tmpm4y8sonc.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_values($l);\n    }\n    if (count($l) == 0) {\n        return null;\n    }\n    $l = array_sort($l);\n    if (count($l) % 2 == 1) {\n        return $l[count($l) / 2];\n    } else {\n        return ($l[count($l) / 2 - 1] + $l[count($l) / 2]) / 2.0;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpv0kyarj9.php:14\nStack trace:\n#0 /tmp/tmpv0kyarj9.php(23): median(Array)\n#1 /tmp/tmpv0kyarj9.php(27): candidate(Array)\n#2 /tmp/tmpv0kyarj9.php(34): test()\n#3 {main}\n  thrown in /tmp/tmpv0kyarj9.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_values($l);\n    }\n    $l = array_sort($l);\n    if (count($l) % 2 == 0) {\n        return (count($l) / 2 - 1) + $l[count($l) / 2];\n    } else {\n        return $l[count($l) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_sort() in /tmp/tmpvjxp0i8l.php:11\nStack trace:\n#0 /tmp/tmpvjxp0i8l.php(20): median(Array)\n#1 /tmp/tmpvjxp0i8l.php(24): candidate(Array)\n#2 /tmp/tmpvjxp0i8l.php(31): test()\n#3 {main}\n  thrown in /tmp/tmpvjxp0i8l.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Return median of elements in the array l.\n// >>> median(array(3, 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\nfunction median($l) {\n    if (is_array($l)) {\n        $l = array_flip($l);\n        $l = array_sort($l);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $l = array_unshift($l, 0);\n        $\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293296,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp9zc3j8f3.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
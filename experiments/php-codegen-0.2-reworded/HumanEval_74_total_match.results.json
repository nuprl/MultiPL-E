{
  "name": "HumanEval_74_total_match",
  "language": "php",
  "prompt": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n",
  "tests": "function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $result = [];\n    var $len1 = $lst1.length;\n    var $len2 = $lst2.length;\n    for (var $i = 0; $i < $len1; $i++) {\n        for (var $j = 0; $j < $len2; $j++) {\n            if ($lst1[$i] === $lst2[$j]) {\n                $result.push($lst1[$i]);\n                $len1--;\n                $len2--;\n                break;\n            }\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpky2egmrh.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $lst1_len = $lst1.length;\n    var $lst2_len = $lst2.length;\n    var $result = [];\n    for (var $i = 0; $i < $lst1_len; $i++) {\n        for (var $j = 0; $j < $lst2_len; $j++) {\n            if ($lst1[$i] === $lst2[$j]) {\n                $result.push($lst1[$i]);\n                $lst2.splice($j, 1);\n                $lst1_len--;\n                $lst2_len--;\n                break;\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpov3f70yw.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_ukey($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_ukey($lst2, $lst1);\n    $lst1 = array_diff_uassoc_ukey($lst1, $lst2);\n    $lst2 = array_diff_uassoc_ukey($lst2,\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpa0pnwce9.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmpy2w_x6a0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmpy2w_x6a0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmpy2w_x6a0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $result = [];\n    for (var $i = 0; $i < $lst1.length; $i++) {\n        for (var $j = 0; $j < $lst2.length; $j++) {\n            if ($lst1[$i] === $lst2[$j]) {\n                $result.push($lst1[$i]);\n                break;\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpgapgxifm.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_intersect_ukey_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_ukey_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey_ukey($lst2, $lst1);\n    $lst1 = array_intersect_ukey_ukey_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_ukey_ukey_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey_ukey_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey_ukey_ukey($lst2, $lst1);\n    $lst1 = array_intersect_ukey_ukey_ukey_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_ukey_ukey_ukey_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey_ukey_ukey_ukey($lst1, $lst2);\n    $l\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmplc1sqh_f.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $lst1_len = count($lst1);\n    $lst2_len = count($lst2);\n    if ($lst1_len == $lst2_len) {\n        for ($i = 0; $i < $lst1_len; $i++) {\n            if ($lst1[$i] == $lst2[$i]) {\n                $result[$i] = $lst1[$i];\n            }\n        }\n    }\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsz2ruwv5.php:38\nStack trace:\n#0 /tmp/tmpsz2ruwv5.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpsz2ruwv5.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uflip($lst1, $lst2);\n    $lst2 = array_intersect_uflip($lst2, $lst1);\n    $lst1 = array_diff_uflip($lst1, $lst2);\n    $lst2 = array_diff_uflip($lst2, $lst1);\n    $lst1 =\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpizmw47il.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp8rswk068.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmpy2w_x6a0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uflip($lst1, $lst2);\n    $lst2 = array_intersect_uflip($lst2, $lst1);\n    $lst1 = array_diff_uflip($lst1, $lst2);\n    $lst2 = array_diff_uflip($lst2, $lst1);\n    $lst1 =\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpizmw47il.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst2 = array_intersect_values($lst2, $lst1);\n    $lst1 = array_intersect_uvalues($lst1, $lst2);\n    $lst2 = array_intersect_uvalues($lst2, $lst1);\n    $lst1 = array_intersect_deep($lst1, $lst2);\n    $lst2 = array_intersect_deep($lst2, $lst1);\n    $lst1 = array_intersect_udeep($lst1, $lst2);\n    $lst2 = array_intersect_udeep($lst2, $lst1);\n    $lst1 = array_intersect_deep($lst1, $lst2, true);\n    $lst2 = array_intersect_deep($lst2, $lst1, true);\n    $lst1 = array_intersect_udeep($lst1, $lst2, true);\n    $lst2 = array_intersect_udeep($lst2, $lst1, true);\n    $lst1 = array_intersect_deep($lst1, $lst2, true, true);\n    $lst2 = array_intersect_deep($lst2, $lst1, true, true);\n    $lst1 = array_intersect_udeep($lst1, $lst2, true, true);\n    $lst2 = array_intersect_udeep($\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp3phxowsq.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    for($i = 0; $i < $lst1.length; $i++) {\n        if($lst1[$i] < $lst2[$i]) {\n            $result[$i] = $lst1[$i];\n        } else {\n            $result[$i] = $lst2[$i];\n        }\n    }\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpfepuyfof.php:20\nStack trace:\n#0 /tmp/tmpfepuyfof.php(31): total_match(Array, Array)\n#1 /tmp/tmpfepuyfof.php(35): candidate(Array, Array)\n#2 /tmp/tmpfepuyfof.php(46): test()\n#3 {main}\n  thrown in /tmp/tmpfepuyfof.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_values($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_values($lst2, $lst1);\n    $lst1 = array_diff_uassoc_values($lst1, $lst2);\n    $lst2 = array_diff_uassoc_values($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_keys($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_keys($lst2, $lst1);\n    $lst1 = array_diff_uassoc_keys($lst1, $lst2);\n    $lst2 = array_diff_uass\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpggum3fr3.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $count = 0;\n    $result = [];\n    for ($i = 0; $i < $lst1.length; $i++) {\n        if ($lst1[$i] == $lst2[$i]) {\n            $count++;\n        }\n        if ($count == $lst2.length) {\n            $result = array_flip($lst1);\n            break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp82j78kp6.php:21\nStack trace:\n#0 /tmp/tmp82j78kp6.php(34): total_match(Array, Array)\n#1 /tmp/tmp82j78kp6.php(38): candidate(Array, Array)\n#2 /tmp/tmp82j78kp6.php(49): test()\n#3 {main}\n  thrown in /tmp/tmp82j78kp6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $lst1_len = $lst1.length;\n    var $lst2_len = $lst2.length;\n    var $result = [];\n    for (var $i = 0; $i < $lst1_len; $i++) {\n        for (var $j = 0; $j < $lst2_len; $j++) {\n            if ($lst1[$i] === $lst2[$j]) {\n                $result.push($lst1[$i]);\n                $lst2.splice($j, 1);\n                $lst1_len--;\n                $lst2_len--;\n                break;\n            }\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp8o1a0tx2.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst1, $lst2);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey_assoc($lst1, $lst2);\n    $lst2 = array_diff_ukey_assoc($lst1, $lst2);\n    $lst1 = array_intersect_ukey_uassoc($lst1, $lst2);\n    $lst2 = array_diff_ukey_uassoc($lst1, $lst2);\n    $lst1 = array_intersect_uassoc_assoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc_assoc($lst1, $lst2);\n    $lst1 = array_intersect_uassoc_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc_uassoc($lst1, $lst2);\n    $lst1 = array_intersect_uassoc_ukey($lst1, $lst2);\n    $lst2 = array_diff_uassoc_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey_uassoc\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpm9a8igob.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $count = 0;\n    foreach($lst1 as $i) {\n        if($lst2[$count] == $i) {\n            $count++;\n        }\n        if($count == $lst2.length) {\n            $result = array_flip($lst1);\n            break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmpv7qpgqg8.php on line 22\n\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpv7qpgqg8.php:25\nStack trace:\n#0 /tmp/tmpv7qpgqg8.php(34): total_match(Array, Array)\n#1 /tmp/tmpv7qpgqg8.php(39): candidate(Array, Array)\n#2 /tmp/tmpv7qpgqg8.php(49): test()\n#3 {main}\n  thrown in /tmp/tmpv7qpgqg8.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst1, $lst2);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey_assoc($lst1, $lst2);\n    $lst2 = array_diff_ukey_assoc($lst1, $lst2);\n    $lst1 = array_intersect_ukey_uassoc($lst1, $lst2);\n    $lst2 = array_diff_ukey_uassoc($lst1, $lst2);\n    $lst1 = array_intersect_ukey_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey_ukey_assoc($lst1, $lst2);\n    $lst2 = array_diff_ukey_ukey_assoc($lst1, $lst2);\n    $lst1 = array_intersect_ukey_ukey_uassoc($lst1, $lst2);\n    $lst2 = array_diff_ukey_ukey_uassoc($lst1, $lst2);\n    $lst1 = array_intersect_\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpgrbknt64.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_unique($lst1);\n    $lst2 = array_unique($lst2);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    return $lst1;\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnj9q8g_d.php:32\nStack trace:\n#0 /tmp/tmpnj9q8g_d.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpnj9q8g_d.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $result = array_intersect_key($lst1, $lst2);\n    $result = array_diff_key($lst1, $result);\n    $result = array_diff_key($result, $lst2);\n    return $result;\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjx3r639j.php:31\nStack trace:\n#0 /tmp/tmpjx3r639j.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpjx3r639j.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_values($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_values($lst2, $lst1);\n    $lst1 = array_diff_uassoc_values($lst1, $lst2);\n    $lst2 = array_diff_uassoc_values($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_keys($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_keys($lst2, $lst1);\n    $lst1 = array_diff_uassoc_keys($lst1, $lst2);\n    $lst2 = array_diff_uass\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpggum3fr3.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmpy2w_x6a0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_values($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_values($lst2, $lst1);\n    $lst1 = array_diff_uassoc_values($lst1, $lst2);\n    $lst2 = array_diff_uassoc_values($lst2, $lst1\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpc7unl4mo.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst1 = array_intersect_uvalues($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst1 = array_intersect_uvalues($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst1 = array_intersect_uvalues($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst1 = array_intersect_uvalues($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst1 = array_intersect_uvalues\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpmhqs386d.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $lst1_len = $lst1.length;\n    var $lst2_len = $lst2.length;\n    var $lst1_match = [];\n    var $lst2_match = [];\n    for (var $i = 0; $i < $lst1_len; $i++) {\n        for (var $j = 0; $j < $lst2_len; $j++) {\n            if ($lst1[$i] === $lst2[$j]) {\n                $lst1_match.push($lst1[$i]);\n                $lst2_match.push($lst2[$j]);\n                break;\n            }\n        }\n    }\n    if ($lst1_len === $lst2_len) {\n        return $lst1;\n    } else {\n        return $lst1_match;\n    }\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp41_2mm40.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst1, $lst2);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp8pa4as_k.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_diff($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_diff($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_diff($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_diff($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_diff($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_diff($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_diff($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_diff($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_diff($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_diff($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_diff($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp48y7ah0v.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $count = 0;\n    for($i = 0; $i < $lst1.length; $i++) {\n        if($lst1[$i] == $lst2[$i]) {\n            $count++;\n        }\n        if($count == $lst2.length) {\n            $result = array_flip($lst1);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp5n_lfma_.php:21\nStack trace:\n#0 /tmp/tmp5n_lfma_.php(33): total_match(Array, Array)\n#1 /tmp/tmp5n_lfma_.php(37): candidate(Array, Array)\n#2 /tmp/tmp5n_lfma_.php(48): test()\n#3 {main}\n  thrown in /tmp/tmp5n_lfma_.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp8rswk068.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $lst1_len = $lst1.length;\n    var $lst2_len = $lst2.length;\n    var $lst1_match = [];\n    var $lst2_match = [];\n    var $lst1_match_len = 0;\n    var $lst2_match_len = 0;\n    for (var $i = 0; $i < $lst1_len; $i++) {\n        for (var $j = 0; $j < $lst2_len; $j++) {\n            if ($lst1[$i] === $lst2[$j]) {\n                $lst1_match.push($lst1[$i]);\n                $lst2_match.push($lst2[$j]);\n                $lst1_match_len++;\n                $lst2_match_len++;\n            }\n        }\n    }\n    if ($lst1_match_len === $lst2_match_len) {\n        return $lst1;\n    }\n    if ($lst1_match_len < $lst2_match_len) {\n        return $lst2_match;\n    }\n    return $lst1_match;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpxct3l4xw.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uflip($lst1, $lst2);\n    $lst2 = array_intersect_uflip($lst2, $lst1);\n    $lst1 = array_diff_uflip($lst1, $lst2);\n    $lst2 = array_diff_uflip($lst2, $lst1);\n    $lst1 =\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpizmw47il.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    for($i = 0; $i < $lst1.length; $i++) {\n        if($lst1[$i] < $lst2[$i]) {\n            $result[$i] = $lst1[$i];\n        } else {\n            $result[$i] = $lst2[$i];\n        }\n    }\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpfepuyfof.php:20\nStack trace:\n#0 /tmp/tmpfepuyfof.php(31): total_match(Array, Array)\n#1 /tmp/tmpfepuyfof.php(35): candidate(Array, Array)\n#2 /tmp/tmpfepuyfof.php(46): test()\n#3 {main}\n  thrown in /tmp/tmpfepuyfof.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_values($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_values($lst2, $lst1);\n    $lst1 = array_diff_uassoc_values($lst1, $lst2);\n    $lst2 = array_diff_uassoc_values($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_keys($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_keys($lst2, $lst1);\n    $lst1 = array_diff_uassoc_keys($lst1, $lst2);\n    $lst2 = array_diff_uass\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpggum3fr3.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    for($i = 0; $i < count($lst1); $i++) {\n        if(count($lst2) == 0) {\n            $result = array_flip($lst1);\n            break;\n        }\n        if(count($lst1[$i]) < count($lst2[0])) {\n            $result = array_flip($lst1);\n            break;\n        }\n        if(count($lst1[$i]) > count($lst2[0])) {\n            $result = array_flip($lst2);\n            break;\n        }\n        if(count($lst1[$i]) == count($lst2[0])) {\n            $result = array_flip($lst1);\n            break;\n        }\n        $result = array_merge($result, array($lst1[$i]));\n        $lst2 = array_slice($lst2, 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmpuwi29med.php on line 25\n\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /tmp/tmpuwi29med.php:25\nStack trace:\n#0 /tmp/tmpuwi29med.php(44): total_match(Array, Array)\n#1 /tmp/tmpuwi29med.php(49): candidate(Array, Array)\n#2 /tmp/tmpuwi29med.php(59): test()\n#3 {main}\n  thrown in /tmp/tmpuwi29med.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $count = 0;\n    $result = array();\n    foreach($lst1 as $i) {\n        if ($count < count($lst2)) {\n            $count++;\n        } else {\n            $result = array_merge($result, $lst1);\n        }\n    }\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppml8cbjx.php:37\nStack trace:\n#0 /tmp/tmppml8cbjx.php(47): test()\n#1 {main}\n  thrown in /tmp/tmppml8cbjx.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_intersect($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpuo5brkko.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst2 = array_intersect_values($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst2 = array_intersect_values($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst2 = array_intersect_values($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst2 = array_intersect_values($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst2 = array_intersect_values($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp6c91qga_.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $result = array_intersect_key($lst1, $lst2);\n    $result = array_diff_key($lst1, $result);\n    $result = array_diff_key($result, $lst2);\n    return array_flip($result);\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr759s1tc.php:31\nStack trace:\n#0 /tmp/tmpr759s1tc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpr759s1tc.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    for($i = 0; $i < count($lst1); $i++) {\n        if(count($lst2) == 0) {\n            $result = array_flip($lst1);\n            break;\n        }\n        if(count($lst1[$i]) < count($lst2[0])) {\n            $result = array_flip($lst1);\n            break;\n        }\n        if(count($lst1[$i]) > count($lst2[0])) {\n            $result = array_flip($lst2);\n            break;\n        }\n        if(count($lst1[$i]) == count($lst2[0])) {\n            $result = array_flip($lst1);\n            break;\n        }\n        $result = array_merge($result, array_flip($lst1[$i]));\n        $result = array_merge($result, array_flip($lst2[0]));\n        $lst2 = $lst2[1];\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmpoaqyaa42.php on line 25\n\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /tmp/tmpoaqyaa42.php:25\nStack trace:\n#0 /tmp/tmpoaqyaa42.php(44): total_match(Array, Array)\n#1 /tmp/tmpoaqyaa42.php(49): candidate(Array, Array)\n#2 /tmp/tmpoaqyaa42.php(59): test()\n#3 {main}\n  thrown in /tmp/tmpoaqyaa42.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmpy2w_x6a0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $count = 0;\n    for($i = 0; $i < $lst1.length; $i++) {\n        if($lst1[$i] == $lst2[$i]) {\n            $count++;\n        }\n        if($count == $lst2.length) {\n            $result = array_flip($lst1);\n            break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpo36nktd9.php:21\nStack trace:\n#0 /tmp/tmpo36nktd9.php(34): total_match(Array, Array)\n#1 /tmp/tmpo36nktd9.php(38): candidate(Array, Array)\n#2 /tmp/tmpo36nktd9.php(49): test()\n#3 {main}\n  thrown in /tmp/tmpo36nktd9.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst2 = array_intersect_values($lst2, $lst1);\n    $lst1 = array_intersect_uvalues($lst1, $lst2);\n    $lst2 = array_intersect_uvalues($lst2, $lst1);\n    $lst1 = array_intersect_deep($lst1, $lst2);\n    $lst2 = array_intersect_deep($lst2, $lst1);\n    $lst1 = array_intersect_udeep($lst1, $lst2);\n    $lst2 = array_intersect_udeep($lst2, $lst1);\n    $lst1 = array_intersect_deep($lst1, $lst2, true);\n    $lst2 = array_intersect_deep($lst2, $lst1, true);\n    $lst1 = array_intersect_udeep($lst1, $lst2, true);\n    $lst2 = array_intersect_udeep($lst2, $lst1, true);\n    $lst1 = array_intersect_deep($lst1, $lst2, true, true);\n    $lst2 = array_intersect_deep($lst2, $lst1, true, true);\n    $lst1 = array_intersect_udeep($lst1, $lst2, true, true);\n    $lst2 = array_intersect_udeep($\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp3phxowsq.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_values($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_values($lst2, $lst1);\n    $lst1 = array_diff_uassoc_values($lst1, $lst2);\n    $lst2 = array_diff_uassoc_values($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_keys($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_keys($lst2, $lst1);\n    $lst1 = array_diff_uassoc_keys($lst1, $lst2);\n    $lst2 = array_diff_uass\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpggum3fr3.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $lst1_len = $lst1.length;\n    var $lst2_len = $lst2.length;\n    var $lst1_match = [];\n    var $lst2_match = [];\n    var $lst1_match_len = 0;\n    var $lst2_match_len = 0;\n    var $lst1_match_index = 0;\n    var $lst2_match_index = 0;\n    for (var $i = 0; $i < $lst1_len; $i++) {\n        for (var $j = 0; $j < $lst2_len; $j++) {\n            if ($lst1[$i] === $lst2[$j]) {\n                $lst1_match[$lst1_match_index] = $lst1[$i];\n                $lst2_match[$lst2_match_index] = $lst2[$j];\n                $lst1_match_index++;\n                $lst2_match_index++;\n            }\n        }\n    }\n    if ($lst1_match_len === $lst2_match_len) {\n        return $lst1;\n    }\n    for (var $i = 0; $i < $lst1_match_len; $i++) {\n        for (var $j = 0; $j < $lst2_match_len; $j++) {\n            if ($lst1_match[$i] === $lst2_match[$j]) {\n                $lst1_match_len++;\n                $lst2_match_len++;\n            }\n        }\n    }\n    for (var $i = 0; $i < $lst1_match_len; $i++) {\n        for (var $j = 0; $j < $lst2_match_len; $j++) {\n            if ($lst1_match[$i] === $lst2_match[$j]) {\n                $lst1_match_index++;\n                $lst2_match_index++;\n            }\n        }\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp5vi0n4g2.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $result = [];\n    var $len1 = $lst1.length;\n    var $len2 = $lst2.length;\n    var $i = 0;\n    var $j = 0;\n    var $count = 0;\n    while ($i < $len1 && $j < $len2) {\n        if ($lst1[$i] == $lst2[$j]) {\n            $count++;\n            $i++;\n            $j++;\n        } else if ($lst1[$i] > $lst2[$j]) {\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($count == $len2) {\n        $result = $lst1;\n    } else if ($count == $len1) {\n        $result = $lst2;\n    } else {\n        $result = $lst1;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpq703ckf2.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_values($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_values($lst2, $lst1);\n    $lst1 = array_diff_uassoc_values($lst1, $lst2);\n    $lst2 = array_diff_uassoc_values($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_keys($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_keys($lst2, $lst1);\n    $lst1 = array_diff_uassoc_keys($lst1, $lst2);\n    $lst2 = array_diff_uass\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpggum3fr3.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        if (strlen($lst1[$i]) < strlen($lst2[$i])) {\n            $result[$i] = $lst1[$i];\n        } else {\n            $result[$i] = $lst2[$i];\n        }\n    }\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmpvkud2m4r.php on line 21\n\nDeprecated: strlen(): Passing null to parameter #1 ($string) of type string is deprecated in /tmp/tmpvkud2m4r.php on line 21\n\nWarning: Undefined array key 0 in /tmp/tmpvkud2m4r.php on line 21\n\nDeprecated: strlen(): Passing null to parameter #1 ($string) of type string is deprecated in /tmp/tmpvkud2m4r.php on line 21\n\nWarning: Undefined array key 0 in /tmp/tmpvkud2m4r.php on line 24\n\nWarning: Undefined array key 1 in /tmp/tmpvkud2m4r.php on line 21\n\nDeprecated: strlen(): Passing null to parameter #1 ($string) of type string is deprecated in /tmp/tmpvkud2m4r.php on line 21\n\nWarning: Undefined array key 1 in /tmp/tmpvkud2m4r.php on line 21\n\nDeprecated: strlen(): Passing null to parameter #1 ($string) of type string is deprecated in /tmp/tmpvkud2m4r.php on line 21\n\nWarning: Undefined array key 1 in /tmp/tmpvkud2m4r.php on line 24\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmpvkud2m4r.php on line 27\n\nWar",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $result = [];\n    for (var i = 0; i < $lst1.length; i++) {\n        if ($lst2.indexOf($lst1[i]) > -1) {\n            $result.push($lst1[i]);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp6xaz0hl9.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_values($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_values($lst2, $lst1);\n    $lst1 = array_diff_uassoc_values($lst1, $lst2);\n    $lst2 = array_diff_uassoc_values($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_keys($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_keys($lst2, $lst1);\n    $lst1 = array_diff_uassoc_keys($lst1, $lst2);\n    $lst2 = array_diff_uass\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpggum3fr3.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: Unclosed '{' on line 16 in /tmp/tmpz4vbzmvm.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    for($i = 0; $i < $lst1.length; $i++) {\n        if($lst1[$i] < $lst2[$i]) {\n            $result[$i] = $lst1[$i];\n        } else {\n            $result[$i] = $lst2[$i];\n        }\n    }\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpfepuyfof.php:20\nStack trace:\n#0 /tmp/tmpfepuyfof.php(31): total_match(Array, Array)\n#1 /tmp/tmpfepuyfof.php(35): candidate(Array, Array)\n#2 /tmp/tmpfepuyfof.php(46): test()\n#3 {main}\n  thrown in /tmp/tmpfepuyfof.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $result = array_intersect_key($lst1, $lst2);\n    $result = array_diff_key($lst1, $result);\n    $result = array_diff_key($result, $lst2);\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0llbjp3p.php:32\nStack trace:\n#0 /tmp/tmp0llbjp3p.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0llbjp3p.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst2 = array_intersect_values($lst2, $lst1);\n    return array_intersect_key($lst1, $lst2);\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_intersect_values() in /tmp/tmpjpvaqvkv.php:21\nStack trace:\n#0 /tmp/tmpjpvaqvkv.php(26): total_match(Array, Array)\n#1 /tmp/tmpjpvaqvkv.php(30): candidate(Array, Array)\n#2 /tmp/tmpjpvaqvkv.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpjpvaqvkv.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    for($i = 0; $i < $lst1.length; $i++) {\n        if($lst2.indexOf($lst1[$i]) > -1) {\n            $result.push($lst1[$i]);\n        }\n    }\n    return array_flip($result);\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp3sklwqyd.php:20\nStack trace:\n#0 /tmp/tmp3sklwqyd.php(28): total_match(Array, Array)\n#1 /tmp/tmp3sklwqyd.php(32): candidate(Array, Array)\n#2 /tmp/tmp3sklwqyd.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp3sklwqyd.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $count = 0;\n    for($i = 0; $i < count($lst1); $i++) {\n        if($count < count($lst2)) {\n            $count += strlen($lst1[$i]);\n            $result[$i] = $lst1[$i];\n        } else {\n            break;\n        }\n    }\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmp9xkc45bq.php on line 23\n\nDeprecated: strlen(): Passing null to parameter #1 ($string) of type string is deprecated in /tmp/tmp9xkc45bq.php on line 23\n\nWarning: Undefined array key 0 in /tmp/tmp9xkc45bq.php on line 24\n\nWarning: Undefined array key 1 in /tmp/tmp9xkc45bq.php on line 23\n\nDeprecated: strlen(): Passing null to parameter #1 ($string) of type string is deprecated in /tmp/tmp9xkc45bq.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmp9xkc45bq.php on line 24\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp9xkc45bq.php on line 29\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp9xkc45bq.php on line 29\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9xkc45bq.php:38\nStack trace:\n#0 /tmp/tmp9xkc45bq.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp9xkc45bq.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uflip($lst1, $lst2);\n    $lst2 = array_intersect_uflip($lst2, $lst1);\n    $lst1 = array_diff_uflip($lst1, $lst2);\n    $lst2 = array_diff_uflip($lst2, $lst1);\n    $lst1 =\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpizmw47il.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp8rswk068.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst1 = array_diff_key($lst1, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst1 = array_diff_key($lst1, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst1 = array_diff_key($lst1, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst1 = array_diff_key($lst1, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst1 = array_diff_key($lst1, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst1 = array_diff_key($lst1, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst1 = array_diff_key($lst1, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst1 = array_diff_key($lst1, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst1 = array_diff_key($lst1, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst1 = array_diff_key($lst1, $lst1);\n    $lst1 = array_diff_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpluy984n2.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: Unclosed '{' on line 16 in /tmp/tmpz4vbzmvm.php on line 56\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var total = 0;\n    var i = 0;\n    for (i = 0; i < $lst1.length; i++) {\n        total += $lst1[i].length;\n    }\n    for (i = 0; i < $lst2.length; i++) {\n        total -= $lst2[i].length;\n    }\n    if (total < 0) {\n        total = 0;\n    }\n    return $lst1.length == $lst2.length ? $lst1 : $lst2;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp_fuh9zkl.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp01iu_4v5.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $lst1_len = $lst1.length;\n    var $lst2_len = $lst2.length;\n    var $lst1_match = [];\n    var $lst2_match = [];\n    for (var $i = 0; $i < $lst1_len; $i++) {\n        for (var $j = 0; $j < $lst2_len; $j++) {\n            if ($lst1[$i] === $lst2[$j]) {\n                $lst1_match.push($lst1[$i]);\n                $lst2_match.push($lst2[$j]);\n            }\n        }\n    }\n    if ($lst1_len === $lst2_len) {\n        return $lst1;\n    } else {\n        return $lst1_match;\n    }\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpfxxwdn1m.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp8rswk068.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $result = array_intersect_key($lst1, $lst2);\n    $result = array_diff_key($lst1, $result);\n    $result = array_diff_key($result, $lst2);\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0llbjp3p.php:32\nStack trace:\n#0 /tmp/tmp0llbjp3p.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0llbjp3p.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_values($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_values($lst2, $lst1);\n    $lst1 = array_diff_uassoc_values($lst1, $lst2);\n    $lst2 = array_diff_uassoc_values($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_keys($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_keys($lst2, $lst1);\n    $lst1 = array_diff_uassoc_keys($lst1, $lst2);\n    $lst2 = array_diff_uass\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpggum3fr3.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $lst1_len = $lst1.length;\n    var $lst2_len = $lst2.length;\n    var $result = [];\n    for (var $i = 0; $i < $lst1_len; $i++) {\n        for (var $j = 0; $j < $lst2_len; $j++) {\n            if ($lst1[$i] === $lst2[$j]) {\n                $result.push($lst1[$i]);\n                break;\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpfzpc5m4e.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $result = [];\n    for (var $i = 0; $i < $lst1.length; $i++) {\n        for (var $j = 0; $j < $lst2.length; $j++) {\n            if ($lst1[$i] === $lst2[$j]) {\n                $result.push($lst1[$i]);\n                break;\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpgapgxifm.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $result = [];\n    var $len1 = $lst1.length;\n    var $len2 = $lst2.length;\n    var $len = $len1 > $len2 ? $len1 : $len2;\n    for (var $i = 0; $i < $len; $i++) {\n        if ($lst1[$i] === $lst2[$i]) {\n            $result.push($lst1[$i]);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpy4wvml5o.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    return array_flip($lst1);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsdslb28e.php:31\nStack trace:\n#0 /tmp/tmpsdslb28e.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsdslb28e.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $result = [];\n    var $len1 = $lst1.length;\n    var $len2 = $lst2.length;\n    var $i = 0;\n    var $j = 0;\n    var $count = 0;\n    while ($i < $len1 && $j < $len2) {\n        if ($lst1[$i] == $lst2[$j]) {\n            $count++;\n            $i++;\n            $j++;\n        } else if ($lst1[$i] < $lst2[$j]) {\n            $i++;\n        } else {\n            $j++;\n        }\n    }\n    if ($count == $len2) {\n        $result = $lst1;\n    } else if ($count == $len1) {\n        $result = $lst2;\n    } else {\n        $result = $lst1;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpmbmajl1_.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_values($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_values($lst2, $lst1);\n    $lst1 = array_diff_uassoc_values($lst1, $lst2);\n    $lst2 = array_diff_uassoc_values($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_keys($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_keys($lst2, $lst1);\n    $lst1 = array_diff_uassoc_keys($lst1, $lst2);\n    $lst2 = array_diff_uass\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpggum3fr3.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $count = 0;\n    for($i = 0; $i < count($lst1); $i++) {\n        if($count < count($lst2)) {\n            $count += strlen($lst1[$i]);\n            $result[$i] = $lst1[$i];\n        } else {\n            break;\n        }\n    }\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmp9xkc45bq.php on line 23\n\nDeprecated: strlen(): Passing null to parameter #1 ($string) of type string is deprecated in /tmp/tmp9xkc45bq.php on line 23\n\nWarning: Undefined array key 0 in /tmp/tmp9xkc45bq.php on line 24\n\nWarning: Undefined array key 1 in /tmp/tmp9xkc45bq.php on line 23\n\nDeprecated: strlen(): Passing null to parameter #1 ($string) of type string is deprecated in /tmp/tmp9xkc45bq.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmp9xkc45bq.php on line 24\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp9xkc45bq.php on line 29\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp9xkc45bq.php on line 29\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9xkc45bq.php:38\nStack trace:\n#0 /tmp/tmp9xkc45bq.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp9xkc45bq.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_values($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_values($lst2, $lst1);\n    $lst1 = array_diff_uassoc_values($lst1, $lst2);\n    $lst2 = array_diff_uassoc_values($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_keys($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_keys($lst2, $lst1);\n    $lst1 = array_diff_uassoc_keys($lst1, $lst2);\n    $lst2 = array_diff_uass\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpggum3fr3.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmpy2w_x6a0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmpy2w_x6a0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_unique($lst1);\n    $lst2 = array_unique($lst2);\n    $lst1_len = count($lst1);\n    $lst2_len = count($lst2);\n    if ($lst1_len == $lst2_len) {\n        return $lst1;\n    }\n    $lst1_len = count($lst1);\n    $lst2_len = count($lst2);\n    $lst1_len = count($lst1);\n    $lst2_len = count($lst2);\n    $lst1_len = count($lst1);\n    $lst2_len = count($lst2);\n    $lst1_len = count($lst1);\n    $lst2_len = count($lst2);\n    $lst1_len = count($lst1);\n    $lst2_len = count($lst2);\n    $lst1_len = count($lst1);\n    $lst2_len = count($lst2);\n    $lst1_len = count($lst1);\n    $lst2_len = count($lst2);\n    $lst1_len = count($lst1);\n    $lst2_len = count($lst2);\n    $lst1_len = count($lst1);\n    $lst2_len = count($lst2);\n    $lst1_len = count($lst1);\n    $lst2_len = count($lst2);\n    $lst1_len = count($lst1);\n    $lst2_len = count($lst2);\n    $lst1_len = count($lst1);\n    $lst2_len = count($lst2);\n    $lst1_len = count($lst1);\n    $lst2_len = count($lst2);\n    $lst1_len = count($lst1);\n    $lst2_len = count($lst2);\n    $l\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp1u0rsp5m.php on line 53\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp01iu_4v5.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uarr($lst1, $lst2);\n    $lst2 = array_intersect_uarr($lst2, $lst1);\n    $lst1 = array_diff_uarr($lst1, $lst2);\n    $lst2 = array_diff_uarr($lst2, $lst1);\n    $lst1 = array_intersect\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp2651b3iv.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp8rswk068.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $count = 0;\n    foreach($lst1 as $i) {\n        if ($lst2[$count] == $i) {\n            $count++;\n        }\n    }\n    return array_flip($lst1);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmplbatuaw3.php on line 21\n\nWarning: Undefined array key 1 in /tmp/tmplbatuaw3.php on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplbatuaw3.php:34\nStack trace:\n#0 /tmp/tmplbatuaw3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmplbatuaw3.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst2 = array_intersect_values($lst2, $lst1);\n    return array_intersect_key($lst1, $lst2);\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function array_intersect_values() in /tmp/tmpjpvaqvkv.php:21\nStack trace:\n#0 /tmp/tmpjpvaqvkv.php(26): total_match(Array, Array)\n#1 /tmp/tmpjpvaqvkv.php(30): candidate(Array, Array)\n#2 /tmp/tmpjpvaqvkv.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpjpvaqvkv.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_values($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_values($lst2, $lst1);\n    $lst1 = array_diff_uassoc_values($lst1, $lst2);\n    $lst2 = array_diff_uassoc_values($lst2, $lst1\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpc7unl4mo.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $result = [];\n    for (var $i = 0; $i < $lst1.length; $i++) {\n        for (var $j = 0; $j < $lst2.length; $j++) {\n            if ($lst1[$i] === $lst2[$j]) {\n                $result.push($lst1[$i]);\n                break;\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpgapgxifm.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    return array_flip($lst1);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsdslb28e.php:31\nStack trace:\n#0 /tmp/tmpsdslb28e.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsdslb28e.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_values($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_values($lst2, $lst1);\n    $lst1 = array_diff_uassoc_values($lst1, $lst2);\n    $lst2 = array_diff_uassoc_values($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_keys($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_keys($lst2, $lst1);\n    $lst1 = array_diff_uassoc_keys($lst1, $lst2);\n    $lst2 = array_diff_uass\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpggum3fr3.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    for($i = 0; $i < $lst1.length; $i++) {\n        if($lst1[$i] == $lst2[$i]) {\n            $result.push($lst1[$i]);\n        }\n    }\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpll8ga8px.php:20\nStack trace:\n#0 /tmp/tmpll8ga8px.php(29): total_match(Array, Array)\n#1 /tmp/tmpll8ga8px.php(33): candidate(Array, Array)\n#2 /tmp/tmpll8ga8px.php(44): test()\n#3 {main}\n  thrown in /tmp/tmpll8ga8px.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmpy2w_x6a0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_values($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_values($lst2, $lst1);\n    $lst1 = array_diff_uassoc_values($lst1, $lst2);\n    $lst2 = array_diff_uassoc_values($lst2, $lst1\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpc7unl4mo.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uflip($lst1, $lst2);\n    $lst2 = array_intersect_uflip($lst2, $lst1);\n    $lst1 = array_diff_uflip($lst1, $lst2);\n    $lst2 = array_diff_uflip($lst2, $lst1);\n    $lst1 =\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpizmw47il.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp01iu_4v5.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $result = array_intersect_key($lst1, $lst2);\n    $result = array_intersect_key($result, array_diff_key($lst1, $lst2));\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp25ry_ry7.php:31\nStack trace:\n#0 /tmp/tmp25ry_ry7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp25ry_ry7.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $lst1_len = $lst1.length;\n    var $lst2_len = $lst2.length;\n    var $result = [];\n    for (var $i = 0; $i < $lst1_len; $i++) {\n        for (var $j = 0; $j < $lst2_len; $j++) {\n            if ($lst1[$i] === $lst2[$j]) {\n                $result.push($lst1[$i]);\n                $lst2.splice($j, 1);\n                $lst1_len--;\n                $lst2_len--;\n                break;\n            }\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp8o1a0tx2.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $result = array_intersect_key($lst1, $lst2);\n    $result = array_diff_key($result, $lst1);\n    $result = array_diff_key($result, $lst2);\n    return $result;\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55cdvcnn.php:31\nStack trace:\n#0 /tmp/tmp55cdvcnn.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp55cdvcnn.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $count = 0;\n    $result = [];\n    foreach($lst1 as $item1) {\n        foreach($lst2 as $item2) {\n            if($item1 == $item2) {\n                $count++;\n                $result = array_merge($result, $item1);\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught TypeError: array_merge(): Argument #2 must be of type array, int given in /tmp/tmpn0880v4w.php:25\nStack trace:\n#0 /tmp/tmpn0880v4w.php(25): array_merge(Array, 1)\n#1 /tmp/tmpn0880v4w.php(33): total_match(Array, Array)\n#2 /tmp/tmpn0880v4w.php(38): candidate(Array, Array)\n#3 /tmp/tmpn0880v4w.php(48): test()\n#4 {main}\n  thrown in /tmp/tmpn0880v4w.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $count = 0;\n    for($i = 0; $i < count($lst1); $i++) {\n        if($lst1[$i] == $lst2[$i]) {\n            $count++;\n        }\n        if($count == count($lst2)) {\n            $result = array_flip($lst1);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmp6mififhl.php on line 22\n\nWarning: Undefined array key 0 in /tmp/tmp6mififhl.php on line 22\n\nWarning: Undefined array key 1 in /tmp/tmp6mififhl.php on line 22\n\nWarning: Undefined array key 1 in /tmp/tmp6mififhl.php on line 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mififhl.php:38\nStack trace:\n#0 /tmp/tmp6mififhl.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp6mififhl.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $result = array_intersect_key($lst1, $lst2);\n    $result = array_intersect_key($result, array_diff_key($lst1, $lst2));\n    $result = array_intersect_key($result, array_diff_key($lst2, $lst1));\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0e9ipwn0.php:32\nStack trace:\n#0 /tmp/tmp0e9ipwn0.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0e9ipwn0.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp8rswk068.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $result = [];\n    for (var i = 0; i < $lst1.length; i++) {\n        if ($lst2.indexOf($lst1[i]) > -1) {\n            $result.push($lst1[i]);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp6xaz0hl9.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst1, $lst2);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp8pa4as_k.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $count = 0;\n    for($i = 0; $i < $lst1.length; $i++) {\n        $count += strlen($lst1[$i]);\n        if($count < $lst2[$i]) {\n            $result[$i] = $lst1[$i];\n        }\n    }\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpjage0xb7.php:21\nStack trace:\n#0 /tmp/tmpjage0xb7.php(31): total_match(Array, Array)\n#1 /tmp/tmpjage0xb7.php(35): candidate(Array, Array)\n#2 /tmp/tmpjage0xb7.php(46): test()\n#3 {main}\n  thrown in /tmp/tmpjage0xb7.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $result = [];\n    for (var i = 0; i < $lst1.length; i++) {\n        for (var j = 0; j < $lst2.length; j++) {\n            if ($lst1[i] === $lst2[j]) {\n                $result.push($lst1[i]);\n                break;\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpp80mvozb.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp01iu_4v5.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $result = array_intersect_key($lst1, $lst2);\n    $result = array_diff_key($result, $lst1);\n    $result = array_diff_key($result, $lst2);\n    return $result;\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55cdvcnn.php:31\nStack trace:\n#0 /tmp/tmp55cdvcnn.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp55cdvcnn.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst2 = array_intersect_values($lst2, $lst1);\n    $lst1 = array_intersect_uvalues($lst1, $lst2);\n    $lst2 = array_intersect_uvalues($lst2, $lst1);\n    $lst1 = array_intersect_deep($lst1, $lst2);\n    $lst2 = array_intersect_deep($lst2, $lst1);\n    $lst1 = array_intersect_udeep($lst1, $lst2);\n    $lst2 = array_intersect_udeep($lst2, $lst1);\n    $lst1 = array_intersect_deep($lst1, $lst2, true);\n    $lst2 = array_intersect_deep($lst2, $lst1, true);\n    $lst1 = array_intersect_udeep($lst1, $lst2, true);\n    $lst2 = array_intersect_udeep($lst2, $lst1, true);\n    $lst1 = array_intersect_deep($lst1, $lst2, true, true);\n    $lst2 = array_intersect_deep($lst2, $lst1, true, true);\n    $lst1 = array_intersect_udeep($lst1, $lst2, true, true);\n    $lst2 = array_intersect_udeep($\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp3phxowsq.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $count = 0;\n    for($i = 0; $i < $lst1.length; $i++) {\n        if($lst1[$i] == $lst2[$i]) {\n            $count++;\n        }\n        if($count == $lst2.length) {\n            $result = array_flip($lst1);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp5n_lfma_.php:21\nStack trace:\n#0 /tmp/tmp5n_lfma_.php(33): total_match(Array, Array)\n#1 /tmp/tmp5n_lfma_.php(37): candidate(Array, Array)\n#2 /tmp/tmp5n_lfma_.php(48): test()\n#3 {main}\n  thrown in /tmp/tmp5n_lfma_.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $count = 0;\n    for($i = 0; $i < count($lst1); $i++) {\n        if($count < count($lst2)) {\n            $count += strlen($lst1[$i]);\n            $result[$i] = $lst1[$i];\n        } else {\n            break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmpq4uiket9.php on line 23\n\nDeprecated: strlen(): Passing null to parameter #1 ($string) of type string is deprecated in /tmp/tmpq4uiket9.php on line 23\n\nWarning: Undefined array key 0 in /tmp/tmpq4uiket9.php on line 24\n\nWarning: Undefined array key 1 in /tmp/tmpq4uiket9.php on line 23\n\nDeprecated: strlen(): Passing null to parameter #1 ($string) of type string is deprecated in /tmp/tmpq4uiket9.php on line 23\n\nWarning: Undefined array key 1 in /tmp/tmpq4uiket9.php on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4uiket9.php:38\nStack trace:\n#0 /tmp/tmpq4uiket9.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpq4uiket9.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $count = 0;\n    for($i = 0; $i < count($lst1); $i++) {\n        $count += count($lst1[$i]);\n        if($count < count($lst2[$i])) {\n            $result[$i] = $lst1[$i];\n        }\n    }\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmpl6vmopot.php on line 22\n\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /tmp/tmpl6vmopot.php:22\nStack trace:\n#0 /tmp/tmpl6vmopot.php(31): total_match(Array, Array)\n#1 /tmp/tmpl6vmopot.php(36): candidate(Array, Array)\n#2 /tmp/tmpl6vmopot.php(46): test()\n#3 {main}\n  thrown in /tmp/tmpl6vmopot.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp01iu_4v5.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_unique($lst1);\n    $lst2 = array_unique($lst2);\n    $lst1_length = count($lst1);\n    $lst2_length = count($lst2);\n    if ($lst1_length == $lst2_length) {\n        return $lst1;\n    }\n    $lst1_length = count($lst1);\n    $lst2_length = count($lst2);\n    $lst1_length = count($lst1);\n    $lst2_length = count($lst2);\n    $lst1_length = count($lst1);\n    $lst2_length = count($lst2);\n    $lst1_length = count($lst1);\n    $lst2_length = count($lst2);\n    $lst1_length = count($lst1);\n    $lst2_length = count($lst2);\n    $lst1_length = count($lst1);\n    $lst2_length = count($lst2);\n    $lst1_length = count($lst1);\n    $lst2_length = count($lst2);\n    $lst1_length = count($lst1);\n    $lst2_length = count($lst2);\n    $lst1_length = count($lst1);\n    $lst2_length = count($lst2);\n    $lst1_length = count($lst1);\n    $lst2_length = count($lst2);\n    $lst1_length = count($lst1);\n    $lst2_length = count($lst2);\n    $lst1_length = count($lst1);\n    $lst2_length = count($lst2);\n    $lst1_length = count($lst1);\n    $lst2_length = count($lst2);\n    $lst1_length = count($lst1);\n    $lst2_length = count($lst2);\n    $l\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpnobo6uy_.php on line 53\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst2 = array_intersect_values($lst2, $lst1);\n    $lst1 = array_intersect_uvalues($lst1, $lst2);\n    $lst2 = array_intersect_uvalues($lst2, $lst1);\n    $lst1 = array_intersect_deep($lst1, $lst2);\n    $lst2 = array_intersect_deep($lst2, $lst1);\n    $lst1 = array_intersect_udeep($lst1, $lst2);\n    $lst2 = array_intersect_udeep($lst2, $lst1);\n    $lst1 = array_intersect_deep($lst1, $lst2, true);\n    $lst2 = array_intersect_deep($lst2, $lst1, true);\n    $lst1 = array_intersect_udeep($lst1, $lst2, true);\n    $lst2 = array_intersect_udeep($lst2, $lst1, true);\n    $lst1 = array_intersect_deep($lst1, $lst2, true, true);\n    $lst2 = array_intersect_deep($lst2, $lst1, true, true);\n    $lst1 = array_intersect_udeep($lst1, $lst2, true, true);\n    $lst2 = array_intersect_udeep($\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp3phxowsq.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $lst1_len = $lst1.length;\n    var $lst2_len = $lst2.length;\n    var $lst1_match = [];\n    var $lst2_match = [];\n    for (var $i = 0; $i < $lst1_len; $i++) {\n        for (var $j = 0; $j < $lst2_len; $j++) {\n            if ($lst1[$i] === $lst2[$j]) {\n                $lst1_match.push($lst1[$i]);\n                $lst2_match.push($lst2[$j]);\n            }\n        }\n    }\n    if ($lst1_len === $lst2_len) {\n        return $lst1;\n    } else {\n        return $lst1_match;\n    }\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpfxxwdn1m.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst1, $lst2);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst1, $lst2);\n    $lst1 = array_intersect\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp8pa4as_k.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uflip($lst1, $lst2);\n    $lst2 = array_intersect_uflip($lst2, $lst1);\n    $lst1 = array_diff_uflip($lst1, $lst2);\n    $lst2 = array_diff_uflip($lst2, $lst1);\n    $lst1 =\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpizmw47il.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmpy2w_x6a0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uflip($lst1, $lst2);\n    $lst2 = array_intersect_uflip($lst2, $lst1);\n    $lst1 = array_diff_uflip($lst1, $lst2);\n    $lst2 = array_diff_uflip($lst2, $lst1);\n    $lst1 =\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpizmw47il.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uflip($lst1, $lst2);\n    $lst2 = array_intersect_uflip($lst2, $lst1);\n    $lst1 = array_diff_uflip($lst1, $lst2);\n    $lst2 = array_diff_uflip($lst2, $lst1);\n    $lst1 =\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpizmw47il.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $count = 0;\n    for($i = 0; $i < $lst1.length; $i++) {\n        $count = 0;\n        for($j = 0; $j < $lst2.length; $j++) {\n            if($lst1[$i] == $lst2[$j]) {\n                $count++;\n            }\n        }\n        if($count < $lst2.length) {\n            $result[$i] = $lst1[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpepb27l6d.php:21\nStack trace:\n#0 /tmp/tmpepb27l6d.php(36): total_match(Array, Array)\n#1 /tmp/tmpepb27l6d.php(40): candidate(Array, Array)\n#2 /tmp/tmpepb27l6d.php(51): test()\n#3 {main}\n  thrown in /tmp/tmpepb27l6d.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uflip($lst1, $lst2);\n    $lst2 = array_intersect_uflip($lst2, $lst1);\n    $lst1 = array_diff_uflip($lst1, $lst2);\n    $lst2 = array_diff_uflip($lst2, $lst1);\n    $lst1 =\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpizmw47il.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    for($i = 0; $i < $lst1.length; $i++) {\n        if($lst1[$i] < $lst2[$i]) {\n            $result[$i] = $lst1[$i];\n        } else {\n            $result[$i] = $lst2[$i];\n        }\n    }\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpfepuyfof.php:20\nStack trace:\n#0 /tmp/tmpfepuyfof.php(31): total_match(Array, Array)\n#1 /tmp/tmpfepuyfof.php(35): candidate(Array, Array)\n#2 /tmp/tmpfepuyfof.php(46): test()\n#3 {main}\n  thrown in /tmp/tmpfepuyfof.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $count = 0;\n    $result = [];\n    for ($i = 0; $i < $lst1.length; $i++) {\n        if ($lst1[$i] == $lst2[$i]) {\n            $count++;\n        }\n        if ($count == $lst2.length) {\n            $result = array_flip($lst1);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpqmaexmqj.php:21\nStack trace:\n#0 /tmp/tmpqmaexmqj.php(33): total_match(Array, Array)\n#1 /tmp/tmpqmaexmqj.php(37): candidate(Array, Array)\n#2 /tmp/tmpqmaexmqj.php(48): test()\n#3 {main}\n  thrown in /tmp/tmpqmaexmqj.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $result = array_intersect_key($lst1, $lst2);\n    $result = array_diff_key($lst1, $result);\n    $result = array_diff_key($result, $lst2);\n    return $result;\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjx3r639j.php:31\nStack trace:\n#0 /tmp/tmpjx3r639j.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpjx3r639j.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $result = array_intersect_key($lst1, $lst2);\n    $result = array_diff_key($lst1, $result);\n    $result = array_diff_key($result, $lst2);\n    return array_flip($result);\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr759s1tc.php:31\nStack trace:\n#0 /tmp/tmpr759s1tc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpr759s1tc.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $result = [];\n    for (var $i = 0; $i < $lst1.length; $i++) {\n        if ($lst2.indexOf($lst1[$i]) > -1) {\n            $result.push($lst1[$i]);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp0s4k9m9m.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uarr($lst1, $lst2);\n    $lst2 = array_intersect_uarr($lst2, $lst1);\n    $lst1 = array_diff_uarr($lst1, $lst2);\n    $lst2 = array_diff_uarr($lst2, $lst1);\n    $lst1 = array_intersect\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp2651b3iv.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp8rswk068.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uflip($lst1, $lst2);\n    $lst2 = array_intersect_uflip($lst2, $lst1);\n    $lst1 = array_diff_uflip($lst1, $lst2);\n    $lst2 = array_diff_uflip($lst2, $lst1);\n    $lst1 =\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpizmw47il.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $result = array_intersect_key($lst1, $lst2);\n    $result = array_diff_key($lst1, $result);\n    $result = array_diff_key($result, $lst2);\n    return array_flip($result);\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr759s1tc.php:31\nStack trace:\n#0 /tmp/tmpr759s1tc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpr759s1tc.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmpy2w_x6a0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $result = [];\n    for (var $i = 0; $i < $lst1.length; $i++) {\n        if ($lst1[$i].length < $lst2[$i].length) {\n            $result.push($lst1[$i]);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpqzrstmer.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp8rswk068.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst2);\n    $lst2 = array_intersect_u($lst2, $lst1);\n    $lst1 = array_intersect_u($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp01iu_4v5.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $count = 0;\n    foreach($lst1 as $val1) {\n        if ($val1 in $lst2) {\n            $count++;\n        }\n    }\n    foreach($lst2 as $val2) {\n        if ($val2 in $lst1) {\n            $count++;\n        }\n    }\n    return array_flip($lst1);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected identifier \"in\" in /tmp/tmphbomcijc.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmpy2w_x6a0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $count = 0;\n    for($i = 0; $i < $lst1.length; $i++) {\n        $count += strlen($lst1[$i]);\n        if($count > $lst2[$i]) {\n            $count -= strlen($lst1[$i]);\n            continue;\n        }\n        $result[$i] = $lst1[$i];\n    }\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpktkn3891.php:21\nStack trace:\n#0 /tmp/tmpktkn3891.php(33): total_match(Array, Array)\n#1 /tmp/tmpktkn3891.php(37): candidate(Array, Array)\n#2 /tmp/tmpktkn3891.php(48): test()\n#3 {main}\n  thrown in /tmp/tmpktkn3891.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $lst1_len = count($lst1);\n    $lst2_len = count($lst2);\n    if ($lst1_len == $lst2_len) {\n        $result = $lst1;\n    } else {\n        for ($i = 0; $i < $lst1_len; $i++) {\n            if ($lst1[$i] == $lst2[$i]) {\n                $result[$i] = $lst1[$i];\n            }\n        }\n    }\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmp6_0kzg_x.php on line 26\n\nWarning: Undefined array key 0 in /tmp/tmp6_0kzg_x.php on line 26\n\nWarning: Undefined array key 0 in /tmp/tmp6_0kzg_x.php on line 27\n\nWarning: Undefined array key 1 in /tmp/tmp6_0kzg_x.php on line 26\n\nWarning: Undefined array key 1 in /tmp/tmp6_0kzg_x.php on line 26\n\nWarning: Undefined array key 1 in /tmp/tmp6_0kzg_x.php on line 27\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp6_0kzg_x.php on line 31\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmp6_0kzg_x.php on line 31\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6_0kzg_x.php:40\nStack trace:\n#0 /tmp/tmp6_0kzg_x.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp6_0kzg_x.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp8rswk068.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $count = 0;\n    for($i = 0; $i < count($lst1); $i++) {\n        $count = count($lst2);\n        for($j = 0; $j < $count; $j++) {\n            if($lst1[$i] == $lst2[$j]) {\n                $result[$i] = $lst1[$i];\n                $count = $count - 1;\n                break;\n            }\n        }\n    }\n    return array_flip($result);\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmprnpbldmk.php on line 24\n\nWarning: Undefined array key 0 in /tmp/tmprnpbldmk.php on line 24\n\nWarning: Undefined array key 0 in /tmp/tmprnpbldmk.php on line 25\n\nWarning: Undefined array key 1 in /tmp/tmprnpbldmk.php on line 24\n\nWarning: Undefined array key 0 in /tmp/tmprnpbldmk.php on line 24\n\nWarning: Undefined array key 1 in /tmp/tmprnpbldmk.php on line 25\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmprnpbldmk.php on line 31\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmprnpbldmk.php on line 31\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprnpbldmk.php:39\nStack trace:\n#0 /tmp/tmprnpbldmk.php(49): test()\n#1 {main}\n  thrown in /tmp/tmprnpbldmk.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uflip($lst1, $lst2);\n    $lst2 = array_intersect_uflip($lst2, $lst1);\n    $lst1 = array_diff_uflip($lst1, $lst2);\n    $lst2 = array_diff_uflip($lst2, $lst1);\n    $lst1 =\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpizmw47il.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $count = 0;\n    $result = [];\n    for($i = 0; $i < $lst1.length; $i++) {\n        if($lst1[$i] == $lst2[$i]) {\n            $count++;\n        }\n        if($count == $lst2.length) {\n            $result = $lst1;\n            break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpbcs90r8z.php:21\nStack trace:\n#0 /tmp/tmpbcs90r8z.php(34): total_match(Array, Array)\n#1 /tmp/tmpbcs90r8z.php(38): candidate(Array, Array)\n#2 /tmp/tmpbcs90r8z.php(49): test()\n#3 {main}\n  thrown in /tmp/tmpbcs90r8z.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uflip($lst1, $lst2);\n    $lst2 = array_intersect_uflip($lst2, $lst1);\n    $lst1 = array_diff_uflip($lst1, $lst2);\n    $lst2 = array_diff_uflip($lst2, $lst1);\n    $lst1 =\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpizmw47il.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    for($i = 0; $i < count($lst1); $i++) {\n        if($lst1[$i] < $lst2[$i]) {\n            $result[$i] = $lst1[$i];\n        } else {\n            $result[$i] = $lst2[$i];\n        }\n    }\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmplcjzvd7k.php on line 21\n\nWarning: Undefined array key 0 in /tmp/tmplcjzvd7k.php on line 21\n\nWarning: Undefined array key 0 in /tmp/tmplcjzvd7k.php on line 24\n\nWarning: Undefined array key 1 in /tmp/tmplcjzvd7k.php on line 21\n\nWarning: Undefined array key 1 in /tmp/tmplcjzvd7k.php on line 21\n\nWarning: Undefined array key 1 in /tmp/tmplcjzvd7k.php on line 24\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmplcjzvd7k.php on line 27\n\nWarning: array_flip(): Can only flip string and integer values, entry skipped in /tmp/tmplcjzvd7k.php on line 27\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplcjzvd7k.php:36\nStack trace:\n#0 /tmp/tmplcjzvd7k.php(46): test()\n#1 {main}\n  thrown in /tmp/tmplcjzvd7k.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $count = 0;\n    for($i = 0; $i < $lst1.length; $i++) {\n        if($lst1[$i] == $lst2[$i]) {\n            $count++;\n        }\n        if($count == $lst2.length) {\n            $result = array_flip($lst1);\n            break;\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpx6cqs92y.php:21\nStack trace:\n#0 /tmp/tmpx6cqs92y.php(33): total_match(Array, Array)\n#1 /tmp/tmpx6cqs92y.php(37): candidate(Array, Array)\n#2 /tmp/tmpx6cqs92y.php(48): test()\n#3 {main}\n  thrown in /tmp/tmpx6cqs92y.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_values($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_values($lst2, $lst1);\n    $lst1 = array_diff_uassoc_values($lst1, $lst2);\n    $lst2 = array_diff_uassoc_values($lst2, $lst1\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpc7unl4mo.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    for ($i = 0; $i < $lst1.length; $i++) {\n        if ($lst1[$i] == $lst2[$i]) {\n            $result.push($lst1[$i]);\n        }\n    }\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpz_rus93t.php:20\nStack trace:\n#0 /tmp/tmpz_rus93t.php(29): total_match(Array, Array)\n#1 /tmp/tmpz_rus93t.php(33): candidate(Array, Array)\n#2 /tmp/tmpz_rus93t.php(44): test()\n#3 {main}\n  thrown in /tmp/tmpz_rus93t.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $result = [];\n    for (var i = 0; i < $lst1.length; i++) {\n        if ($lst2.indexOf($lst1[i]) > -1) {\n            $result.push($lst1[i]);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp6xaz0hl9.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmpy2w_x6a0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_unique($lst1);\n    $lst2 = array_unique($lst2);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    \nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: Unclosed '{' on line 16 in /tmp/tmp2a8d02ot.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uflip($lst1, $lst2);\n    $lst2 = array_intersect_uflip($lst2, $lst1);\n    $lst1 = array_diff_uflip($lst1, $lst2);\n    $lst2 = array_diff_uflip($lst2, $lst1);\n    $lst1 =\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpizmw47il.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_diff($lst1, $lst2);\n    return array_flip($lst1);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_c_ok5y.php:30\nStack trace:\n#0 /tmp/tmp9_c_ok5y.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp9_c_ok5y.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_values($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_values($lst2, $lst1);\n    $lst1 = array_diff_uassoc_values($lst1, $lst2);\n    $lst2 = array_diff_uassoc_values($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_keys($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_keys($lst2, $lst1);\n    $lst1 = array_diff_uassoc_keys($lst1, $lst2);\n    $lst2 = array_diff_uass\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpggum3fr3.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $count = 0;\n    for($i = 0; $i < $lst1.length; $i++) {\n        if($lst1[$i] == $lst2[$i]) {\n            $count++;\n        }\n        if($count == $lst2.length) {\n            $result = array_flip($lst1);\n            break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpo36nktd9.php:21\nStack trace:\n#0 /tmp/tmpo36nktd9.php(34): total_match(Array, Array)\n#1 /tmp/tmpo36nktd9.php(38): candidate(Array, Array)\n#2 /tmp/tmpo36nktd9.php(49): test()\n#3 {main}\n  thrown in /tmp/tmpo36nktd9.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $lst1_len = $lst1.length;\n    var $lst2_len = $lst2.length;\n    var $result = [];\n    for (var $i = 0; $i < $lst1_len; $i++) {\n        for (var $j = 0; $j < $lst2_len; $j++) {\n            if ($lst1[$i] === $lst2[$j]) {\n                $result.push($lst1[$i]);\n                break;\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpfzpc5m4e.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $result = array_intersect_key($lst1, $lst2);\n    $result = array_diff_key($result, $lst1);\n    $result = array_diff_key($result, $lst2);\n    return $result;\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55cdvcnn.php:31\nStack trace:\n#0 /tmp/tmp55cdvcnn.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp55cdvcnn.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = [];\n    for ($i = 0; $i < $lst1.length; $i++) {\n        if ($lst1[$i] == $lst2[$i]) {\n            $result.push($lst1[$i]);\n        }\n    }\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmp8xv9rfko.php:20\nStack trace:\n#0 /tmp/tmp8xv9rfko.php(29): total_match(Array, Array)\n#1 /tmp/tmp8xv9rfko.php(33): candidate(Array, Array)\n#2 /tmp/tmp8xv9rfko.php(44): test()\n#3 {main}\n  thrown in /tmp/tmp8xv9rfko.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_values($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_values($lst2, $lst1);\n    $lst1 = array_diff_uassoc_values($lst1, $lst2);\n    $lst2 = array_diff_uassoc_values($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_keys($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_keys($lst2, $lst1);\n    $lst1 = array_diff_uassoc_keys($lst1, $lst2);\n    $lst2 = array_diff_uass\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpggum3fr3.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxmkkwy34.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uflip($lst1, $lst2);\n    $lst2 = array_intersect_uflip($lst2, $lst1);\n    $lst1 = array_diff_uflip($lst1, $lst2);\n    $lst2 = array_diff_uflip($lst2, $lst1);\n    $lst1 =\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpizmw47il.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst2 = array_intersect_values($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst2 = array_intersect_values($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst2 = array_intersect_values($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst2 = array_intersect_values($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst2 = array_intersect_values($lst2, $lst1);\n    $lst1 = array_intersect_key($lst1, $lst\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp6c91qga_.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_intersect_values($lst1, $lst2);\n    $lst2 = array_intersect_values($lst2, $lst1);\n    $lst1 = array_intersect_uvalues($lst1, $lst2);\n    $lst2 = array_intersect_uvalues($lst2, $lst1);\n    $lst1 = array_intersect_deep($lst1, $lst2);\n    $lst2 = array_intersect_deep($lst2, $lst1);\n    $lst1 = array_intersect_udeep($lst1, $lst2);\n    $lst2 = array_intersect_udeep($lst2, $lst1);\n    $lst1 = array_intersect_deep($lst1, $lst2, true);\n    $lst2 = array_intersect_deep($lst2, $lst1, true);\n    $lst1 = array_intersect_udeep($lst1, $lst2, true);\n    $lst2 = array_intersect_udeep($lst2, $lst1, true);\n    $lst1 = array_intersect_deep($lst1, $lst2, true, true);\n    $lst2 = array_intersect_deep($lst2, $lst1, true, true);\n    $lst1 = array_intersect_udeep($lst1, $lst2, true, true);\n    $lst2 = array_intersect_udeep($\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp3phxowsq.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_values($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_values($lst2, $lst1);\n    $lst1 = array_diff_uassoc_values($lst1, $lst2);\n    $lst2 = array_diff_uassoc_values($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_keys($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_keys($lst2, $lst1);\n    $lst1 = array_diff_uassoc_keys($lst1, $lst2);\n    $lst2 = array_diff_uass\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpggum3fr3.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $result = array_intersect_key($lst1, $lst2);\n    $result = array_intersect_key($result, array_diff_key($lst1, $lst2));\n    $result = array_intersect_key($result, array_diff_key($lst2, $lst1));\n    return array_flip($result);\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp68ngqlmy.php:32\nStack trace:\n#0 /tmp/tmp68ngqlmy.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp68ngqlmy.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $count = 0;\n    $result = [];\n    foreach($lst1 as $i) {\n        if ($lst2[$count] == $i) {\n            $count++;\n        }\n        if ($count == $lst2.length) {\n            $result = array_flip($lst1);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmpgongj107.php on line 22\n\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpgongj107.php:25\nStack trace:\n#0 /tmp/tmpgongj107.php(33): total_match(Array, Array)\n#1 /tmp/tmpgongj107.php(38): candidate(Array, Array)\n#2 /tmp/tmpgongj107.php(48): test()\n#3 {main}\n  thrown in /tmp/tmpgongj107.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    var $lst1_len = $lst1.length;\n    var $lst2_len = $lst2.length;\n    var $result = [];\n    for (var $i = 0; $i < $lst1_len; $i++) {\n        for (var $j = 0; $j < $lst2_len; $j++) {\n            if ($lst1[$i] === $lst2[$j]) {\n                $result.push($lst1[$i]);\n                break;\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpfzpc5m4e.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $lst1 = array_intersect_key($lst1, $lst2);\n    $lst2 = array_intersect_key($lst2, $lst1);\n    $lst1 = array_diff_key($lst1, $lst2);\n    $lst2 = array_diff_key($lst2, $lst1);\n    $lst1 = array_intersect_assoc($lst1, $lst2);\n    $lst2 = array_intersect_assoc($lst2, $lst1);\n    $lst1 = array_diff_assoc($lst1, $lst2);\n    $lst2 = array_diff_assoc($lst2, $lst1);\n    $lst1 = array_intersect_uassoc($lst1, $lst2);\n    $lst2 = array_intersect_uassoc($lst2, $lst1);\n    $lst1 = array_diff_uassoc($lst1, $lst2);\n    $lst2 = array_diff_uassoc($lst2, $lst1);\n    $lst1 = array_intersect_ukey($lst1, $lst2);\n    $lst2 = array_intersect_ukey($lst2, $lst1);\n    $lst1 = array_diff_ukey($lst1, $lst2);\n    $lst2 = array_diff_ukey($lst2, $lst1);\n    $lst1 = array_intersect_uassoc_ukey($lst1, $lst2);\n    $lst2 = array_intersect_uassoc_ukey($lst2, $lst1);\n    $lst1 = array_diff_uassoc_ukey($lst1, $lst2);\n    $lst2 = array_diff_uassoc_ukey($lst2,\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpa0pnwce9.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_unique($lst1);\n    $lst2 = array_unique($lst2);\n    $lst1 = array_intersect($lst1, $lst2);\n    $lst1 = array_diff($lst1, $lst2);\n    return $lst1;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt_5m0bp2.php:30\nStack trace:\n#0 /tmp/tmpt_5m0bp2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpt_5m0bp2.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that accepts two arrays of strings and returns the array that has \n// total number of chars in the all strings of the array less than the other array.\n// if the two arrays have the same number of chars, return the first array.\n// Examples\n// >>> total_match(array(), array())\n// array()\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\"))\n// array(\"hI\", \"Hi\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\"))\n// array(\"hi\", \"admin\")\n// >>> total_match(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"))\n// array(\"hI\", \"hi\", \"hi\")\n// >>> total_match(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"))\n// array(\"4\")\nfunction total_match($lst1, $lst2) {\n    $lst1 = array_flip($lst1);\n    $lst2 = array_flip($lst2);\n    $result = array();\n    $count = 0;\n    for($i = 0; $i < $lst1.length; $i++) {\n        if($lst1[$i] == $lst2[$i]) {\n            $count++;\n        }\n        if($count == $lst2.length) {\n            $result = array_flip($lst1);\n            break;\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292720,
      "stdout": "\nFatal error: Uncaught Error: Undefined constant \"length\" in /tmp/tmpx6cqs92y.php:21\nStack trace:\n#0 /tmp/tmpx6cqs92y.php(33): total_match(Array, Array)\n#1 /tmp/tmpx6cqs92y.php(37): candidate(Array, Array)\n#2 /tmp/tmpx6cqs92y.php(48): test()\n#3 {main}\n  thrown in /tmp/tmpx6cqs92y.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
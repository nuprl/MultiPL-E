{
  "name": "HumanEval_103_rounded_avg",
  "language": "php",
  "prompt": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n",
  "tests": "function candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = round($sum);\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    if ($sum == 1) {\n        return \"0b\" . $sum;\n    } else {\n        return \"0b\" . $sum;\n    }\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp37bxqajh.php:37\nStack trace:\n#0 /tmp/tmp37bxqajh.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp37bxqajh.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6rb5ixy.php:34\nStack trace:\n#0 /tmp/tmp_6rb5ixy.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_6rb5ixy.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    // your code goes here\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if($avg.length > $m) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmppet3_ocy.php:25\nStack trace:\n#0 /tmp/tmppet3_ocy.php(33): rounded_avg(0, 4)\n#1 /tmp/tmppet3_ocy.php(37): candidate(1, 5)\n#2 /tmp/tmppet3_ocy.php(51): test()\n#3 {main}\n  thrown in /tmp/tmppet3_ocy.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return sprintf(\"0b%d\", $avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz5k6pyc3.php:34\nStack trace:\n#0 /tmp/tmpz5k6pyc3.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpz5k6pyc3.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / $m;\n    $sum = round($sum);\n    $sum = $sum / 2;\n    $sum = intval($sum);\n    $sum = $sum * 2;\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplltyvdr2.php:38\nStack trace:\n#0 /tmp/tmplltyvdr2.php(52): test()\n#1 {main}\n  thrown in /tmp/tmplltyvdr2.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = intval($sum);\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpchrp0ukr.php:39\nStack trace:\n#0 /tmp/tmpchrp0ukr.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpchrp0ukr.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg / 2;\n    $avg = $avg * 2;\n    $avg = $avg + $n;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_n8lpuen.php:39\nStack trace:\n#0 /tmp/tmp_n8lpuen.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp_n8lpuen.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n;\n    $m = $m;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    if ($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpumy8it9f.php:34\nStack trace:\n#0 /tmp/tmpumy8it9f.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpumy8it9f.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = ($n + $m) / 2;\n    if ($n > $m) {\n        return -1;\n    }\n    $avg = round($avg);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmkk496af.php:29\nStack trace:\n#0 /tmp/tmpmkk496af.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmkk496af.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg == 0 ? 1 : $avg;\n    $avg = $avg == 1 ? \"0b1\" : \"0b\" . $avg;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjogutqjb.php:38\nStack trace:\n#0 /tmp/tmpjogutqjb.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpjogutqjb.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = $sum * 2;\n    $sum = $sum - 2;\n    $sum = $sum.toString(2);\n    $sum = $sum.substr($sum.length - 1, 1);\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp32depzei.php:29\nStack trace:\n#0 /tmp/tmp32depzei.php(35): rounded_avg(1, 5)\n#1 /tmp/tmp32depzei.php(39): candidate(1, 5)\n#2 /tmp/tmp32depzei.php(53): test()\n#3 {main}\n  thrown in /tmp/tmp32depzei.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / $m;\n    $avg = floor($avg);\n    $avg = $avg + 1;\n    $avg = $avg / 2;\n    $avg = $avg * 2;\n    $avg = $avg - 1;\n    $avg = $avg.toString(2);\n    $avg = $avg.substr($avg.length - 1, 1);\n    if ($avg == \"1\") {\n        $avg = \"0b1\";\n    } else {\n        $avg = \"0b0\";\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp3x5jh1_t.php:28\nStack trace:\n#0 /tmp/tmp3x5jh1_t.php(39): rounded_avg(0, 4)\n#1 /tmp/tmp3x5jh1_t.php(43): candidate(1, 5)\n#2 /tmp/tmp3x5jh1_t.php(57): test()\n#3 {main}\n  thrown in /tmp/tmp3x5jh1_t.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = intval($sum);\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum + $n;\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphpob5_oh.php:39\nStack trace:\n#0 /tmp/tmphpob5_oh.php(53): test()\n#1 {main}\n  thrown in /tmp/tmphpob5_oh.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpofrld361.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = floor($avg);\n    $avg = intval($avg);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ucc2fx1.php:36\nStack trace:\n#0 /tmp/tmp6ucc2fx1.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp6ucc2fx1.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = round($sum);\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    if ($sum == 0) {\n        $sum = \"0b0\";\n    } else {\n        $sum = \"0b1\";\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzjfm4q_0.php:39\nStack trace:\n#0 /tmp/tmpzjfm4q_0.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpzjfm4q_0.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpvfvpea4_.php:22\nStack trace:\n#0 /tmp/tmpvfvpea4_.php(30): rounded_avg(1, 5)\n#1 /tmp/tmpvfvpea4_.php(34): candidate(1, 5)\n#2 /tmp/tmpvfvpea4_.php(48): test()\n#3 {main}\n  thrown in /tmp/tmpvfvpea4_.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg.toString(2);\n    $avg = $avg.substr($avg.length - 1);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpolk_vh1n.php:28\nStack trace:\n#0 /tmp/tmpolk_vh1n.php(34): rounded_avg(1, 5)\n#1 /tmp/tmpolk_vh1n.php(38): candidate(1, 5)\n#2 /tmp/tmpolk_vh1n.php(52): test()\n#3 {main}\n  thrown in /tmp/tmpolk_vh1n.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg % 2;\n    $avg = $avg ? \"1\" : \"0\";\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwnj954m5.php:38\nStack trace:\n#0 /tmp/tmpwnj954m5.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpwnj954m5.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    // your code goes here\n    var sum = 0;\n    for (var i = $n; i <= $m; i++) {\n        sum += i;\n    }\n    var avg = sum / ($m - $n + 1);\n    var rounded = Math.round(avg);\n    if (avg > 0) {\n        return \"0b\" + String(rounded);\n    } else {\n        return -1;\n    }\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp4iravc4s.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg.length > $m - $n + 1) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpiy9p4y_w.php:22\nStack trace:\n#0 /tmp/tmpiy9p4y_w.php(30): rounded_avg(1, 5)\n#1 /tmp/tmpiy9p4y_w.php(34): candidate(1, 5)\n#2 /tmp/tmpiy9p4y_w.php(48): test()\n#3 {main}\n  thrown in /tmp/tmpiy9p4y_w.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n;\n    $m = $m;\n    $sum = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    \nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpaocjiace.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    if($n > $m) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp53h1t2qk.php:32\nStack trace:\n#0 /tmp/tmp53h1t2qk.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp53h1t2qk.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    // your code goes here\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    $avg = $avg.substr($avg.length - 1);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp73u96gwc.php:26\nStack trace:\n#0 /tmp/tmp73u96gwc.php(32): rounded_avg(1, 5)\n#1 /tmp/tmp73u96gwc.php(36): candidate(1, 5)\n#2 /tmp/tmp73u96gwc.php(50): test()\n#3 {main}\n  thrown in /tmp/tmp73u96gwc.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp375yrvtf.php:22\nStack trace:\n#0 /tmp/tmp375yrvtf.php(30): rounded_avg(1, 5)\n#1 /tmp/tmp375yrvtf.php(34): candidate(1, 5)\n#2 /tmp/tmp375yrvtf.php(48): test()\n#3 {main}\n  thrown in /tmp/tmp375yrvtf.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = round($sum);\n    $sum = $sum + 1;\n    $sum = $sum.toString(2);\n    if ($n > $m) {\n        return -1;\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp93l8_t6r.php:25\nStack trace:\n#0 /tmp/tmp93l8_t6r.php(32): rounded_avg(0, 4)\n#1 /tmp/tmp93l8_t6r.php(36): candidate(1, 5)\n#2 /tmp/tmp93l8_t6r.php(50): test()\n#3 {main}\n  thrown in /tmp/tmp93l8_t6r.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = floor($avg);\n    $avg = intval($avg);\n    $avg = $avg / 2;\n    $avg = floor($avg);\n    $avg = $avg * 2;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphyyymhe0.php:39\nStack trace:\n#0 /tmp/tmphyyymhe0.php(53): test()\n#1 {main}\n  thrown in /tmp/tmphyyymhe0.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg == 0 ? \"0b0\" : $avg == 1 ? \"0b1\" : \"0b\" . $avg;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Unparenthesized `a ? b : c ? d : e` is not supported. Use either `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmpvyz3fe01.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpofrld361.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp375yrvtf.php:22\nStack trace:\n#0 /tmp/tmp375yrvtf.php(30): rounded_avg(1, 5)\n#1 /tmp/tmp375yrvtf.php(34): candidate(1, 5)\n#2 /tmp/tmp375yrvtf.php(48): test()\n#3 {main}\n  thrown in /tmp/tmp375yrvtf.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n;\n    $m = $m;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = $sum.toString(2);\n    if ($n > $m) {\n        return -1;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpcwmzd72b.php:24\nStack trace:\n#0 /tmp/tmpcwmzd72b.php(32): rounded_avg(1, 5)\n#1 /tmp/tmpcwmzd72b.php(36): candidate(1, 5)\n#2 /tmp/tmpcwmzd72b.php(50): test()\n#3 {main}\n  thrown in /tmp/tmpcwmzd72b.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = $n + $m / 2;\n    $avg = round($avg);\n    $avg = $avg - $avg % 2;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6btyidg.php:27\nStack trace:\n#0 /tmp/tmpg6btyidg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpg6btyidg.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp8ew8bt_c.php:24\nStack trace:\n#0 /tmp/tmp8ew8bt_c.php(32): rounded_avg(0, 4)\n#1 /tmp/tmp8ew8bt_c.php(36): candidate(1, 5)\n#2 /tmp/tmp8ew8bt_c.php(50): test()\n#3 {main}\n  thrown in /tmp/tmp8ew8bt_c.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpovmzeh8p.php:37\nStack trace:\n#0 /tmp/tmpovmzeh8p.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpovmzeh8p.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpkfi8sy0o.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsw19xv7i.php:35\nStack trace:\n#0 /tmp/tmpsw19xv7i.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpsw19xv7i.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp375yrvtf.php:22\nStack trace:\n#0 /tmp/tmp375yrvtf.php(30): rounded_avg(1, 5)\n#1 /tmp/tmp375yrvtf.php(34): candidate(1, 5)\n#2 /tmp/tmp375yrvtf.php(48): test()\n#3 {main}\n  thrown in /tmp/tmp375yrvtf.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg == 0 ? \"0b0\" : $avg == 1 ? \"0b1\" : \"0b\" . $avg;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Unparenthesized `a ? b : c ? d : e` is not supported. Use either `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmpvyz3fe01.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $avg += $i;\n    }\n    $avg /= $m - $n + 1;\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg.length > $m - $n + 1) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp3wbt2j_j.php:22\nStack trace:\n#0 /tmp/tmp3wbt2j_j.php(30): rounded_avg(1, 5)\n#1 /tmp/tmp3wbt2j_j.php(34): candidate(1, 5)\n#2 /tmp/tmp3wbt2j_j.php(48): test()\n#3 {main}\n  thrown in /tmp/tmp3wbt2j_j.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = intval($sum);\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpchrp0ukr.php:39\nStack trace:\n#0 /tmp/tmpchrp0ukr.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpchrp0ukr.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpofrld361.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return sprintf(\"0b%d\", $avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz5k6pyc3.php:34\nStack trace:\n#0 /tmp/tmpz5k6pyc3.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpz5k6pyc3.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg / 2;\n    $avg = $avg * 2;\n    $avg = $avg - 1;\n    $avg = $avg + 1;\n    $avg = $avg % 2;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp76okj.php:41\nStack trace:\n#0 /tmp/tmpasp76okj.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpasp76okj.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = round($sum / ($m - $n + 1));\n    return sprintf(\"0b%d\", $sum);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmw4uid9f.php:34\nStack trace:\n#0 /tmp/tmpmw4uid9f.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpmw4uid9f.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    if ($n > $m) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm7oprqgx.php:32\nStack trace:\n#0 /tmp/tmpm7oprqgx.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpm7oprqgx.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = round($sum);\n    $sum = $sum + 1;\n    $sum = $sum.toString(2);\n    if ($n > $m) {\n        return -1;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmplojl5yxv.php:25\nStack trace:\n#0 /tmp/tmplojl5yxv.php(33): rounded_avg(0, 4)\n#1 /tmp/tmplojl5yxv.php(37): candidate(1, 5)\n#2 /tmp/tmplojl5yxv.php(51): test()\n#3 {main}\n  thrown in /tmp/tmplojl5yxv.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = $sum * 2;\n    $sum = $sum - $sum % 2;\n    $sum = $sum / 2;\n    return $sum;\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3trnsoxx.php:32\nStack trace:\n#0 /tmp/tmp3trnsoxx.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp3trnsoxx.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = round($sum / $m);\n    $sum = $sum % 2;\n    $sum = $sum ? \"1\" : \"0\";\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2_jvorvz.php:36\nStack trace:\n#0 /tmp/tmp2_jvorvz.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp2_jvorvz.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6rb5ixy.php:34\nStack trace:\n#0 /tmp/tmp_6rb5ixy.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_6rb5ixy.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = floor($sum);\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk0zc2vit.php:37\nStack trace:\n#0 /tmp/tmpk0zc2vit.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpk0zc2vit.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = $sum.toString(2);\n    if ($n > $m) {\n        return -1;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpffhux9go.php:22\nStack trace:\n#0 /tmp/tmpffhux9go.php(30): rounded_avg(1, 5)\n#1 /tmp/tmpffhux9go.php(34): candidate(1, 5)\n#2 /tmp/tmpffhux9go.php(48): test()\n#3 {main}\n  thrown in /tmp/tmpffhux9go.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = intval($sum);\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpchrp0ukr.php:39\nStack trace:\n#0 /tmp/tmpchrp0ukr.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpchrp0ukr.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpvfvpea4_.php:22\nStack trace:\n#0 /tmp/tmpvfvpea4_.php(30): rounded_avg(1, 5)\n#1 /tmp/tmpvfvpea4_.php(34): candidate(1, 5)\n#2 /tmp/tmpvfvpea4_.php(48): test()\n#3 {main}\n  thrown in /tmp/tmpvfvpea4_.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = $n + $m;\n    $avg = round($avg / 2);\n    $avg = $avg - $avg % 2;\n    $avg = $avg + $avg / 2;\n    $avg = $avg - $avg % 2;\n    $avg = $avg + $avg / 2;\n    $avg = $avg - $avg % 2;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpplr5py2q.php:31\nStack trace:\n#0 /tmp/tmpplr5py2q.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpplr5py2q.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n;\n    $m = $m;\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpv4dcp0gl.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ( $i = $n; $i <= $m; $i++ ) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpmpequ4kd.php:24\nStack trace:\n#0 /tmp/tmpmpequ4kd.php(32): rounded_avg(0, 4)\n#1 /tmp/tmpmpequ4kd.php(36): candidate(1, 5)\n#2 /tmp/tmpmpequ4kd.php(50): test()\n#3 {main}\n  thrown in /tmp/tmpmpequ4kd.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    // your code goes here\n    var sum = 0;\n    for (var i = $n; i <= $m; i++) {\n        sum += i;\n    }\n    return Math.round(sum / ($m - $n + 1));\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpvgihezqg.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n;\n    $m = $m;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    \nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmp3x43jyqx.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = round($sum / ($m - $n + 1));\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphl0n0rbu.php:34\nStack trace:\n#0 /tmp/tmphl0n0rbu.php(48): test()\n#1 {main}\n  thrown in /tmp/tmphl0n0rbu.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum /= $m - $n + 1;\n    $sum = round($sum);\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvlu5fv1f.php:35\nStack trace:\n#0 /tmp/tmpvlu5fv1f.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpvlu5fv1f.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum /= $m - $n + 1;\n    $sum = round($sum);\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqoypkvcj.php:30\nStack trace:\n#0 /tmp/tmpqoypkvcj.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpqoypkvcj.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp375yrvtf.php:22\nStack trace:\n#0 /tmp/tmp375yrvtf.php(30): rounded_avg(1, 5)\n#1 /tmp/tmp375yrvtf.php(34): candidate(1, 5)\n#2 /tmp/tmp375yrvtf.php(48): test()\n#3 {main}\n  thrown in /tmp/tmp375yrvtf.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = $n + $m / 2;\n    $avg = round($avg);\n    $avg = $avg - $avg % 2;\n    $avg = $avg / 2;\n    $avg = $avg.toString(2);\n    $avg = $avg.substr($avg.length - 1);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpi5mcikka.php:20\nStack trace:\n#0 /tmp/tmpi5mcikka.php(26): rounded_avg(1, 5)\n#1 /tmp/tmpi5mcikka.php(30): candidate(1, 5)\n#2 /tmp/tmpi5mcikka.php(44): test()\n#3 {main}\n  thrown in /tmp/tmpi5mcikka.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = $n + $m;\n    $avg = $avg / 2;\n    $avg = round($avg);\n    $avg = $avg - $avg % 2;\n    $avg = $avg + 1;\n    $avg = $avg / 2;\n    $avg = $avg - $avg % 2;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nDeprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmpnt9qe3bv.php on line 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnt9qe3bv.php:31\nStack trace:\n#0 /tmp/tmpnt9qe3bv.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpnt9qe3bv.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6rb5ixy.php:34\nStack trace:\n#0 /tmp/tmp_6rb5ixy.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_6rb5ixy.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n;\n    $m = $m;\n    $avg = ($n + $m) / 2;\n    $avg = round($avg);\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpp5z5imi8.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6rb5ixy.php:34\nStack trace:\n#0 /tmp/tmp_6rb5ixy.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_6rb5ixy.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $n = $n + $m;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    \nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpgi7te709.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / $m;\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($n > $m) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpejlrgmkf.php:24\nStack trace:\n#0 /tmp/tmpejlrgmkf.php(32): rounded_avg(0, 4)\n#1 /tmp/tmpejlrgmkf.php(36): candidate(1, 5)\n#2 /tmp/tmpejlrgmkf.php(50): test()\n#3 {main}\n  thrown in /tmp/tmpejlrgmkf.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    $bin = dec2bin($avg);\n    if($bin[0] == '1') {\n        return $bin;\n    } else {\n        return -1;\n    }\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function dec2bin() in /tmp/tmp6_uxyqrx.php:21\nStack trace:\n#0 /tmp/tmp6_uxyqrx.php(30): rounded_avg(1, 5)\n#1 /tmp/tmp6_uxyqrx.php(34): candidate(1, 5)\n#2 /tmp/tmp6_uxyqrx.php(48): test()\n#3 {main}\n  thrown in /tmp/tmp6_uxyqrx.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = intval($sum);\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ql7mbom.php:38\nStack trace:\n#0 /tmp/tmp8ql7mbom.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp8ql7mbom.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpkfi8sy0o.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / $m;\n    $sum = round($sum);\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum.toString(2);\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpe4s3mw4u.php:29\nStack trace:\n#0 /tmp/tmpe4s3mw4u.php(34): rounded_avg(1, 5)\n#1 /tmp/tmpe4s3mw4u.php(38): candidate(1, 5)\n#2 /tmp/tmpe4s3mw4u.php(52): test()\n#3 {main}\n  thrown in /tmp/tmpe4s3mw4u.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = $n + ($m - $n) / 2;\n    $avg = round($avg);\n    $avg = $avg - $avg % 2;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0igxfuaw.php:27\nStack trace:\n#0 /tmp/tmp0igxfuaw.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp0igxfuaw.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg == 0 ? \"0b0\" : $avg == 1 ? \"0b1\" : \"0b\" . $avg;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Unparenthesized `a ? b : c ? d : e` is not supported. Use either `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmpvyz3fe01.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg.toString(2);\n    $avg = $avg.substr($avg.length - 1);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpolk_vh1n.php:28\nStack trace:\n#0 /tmp/tmpolk_vh1n.php(34): rounded_avg(1, 5)\n#1 /tmp/tmpolk_vh1n.php(38): candidate(1, 5)\n#2 /tmp/tmpolk_vh1n.php(52): test()\n#3 {main}\n  thrown in /tmp/tmpolk_vh1n.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    if ($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcmjqbsm_.php:32\nStack trace:\n#0 /tmp/tmpcmjqbsm_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpcmjqbsm_.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $avg += $i;\n    }\n    $avg = round($avg / ($m - $n + 1));\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbf72ckkg.php:29\nStack trace:\n#0 /tmp/tmpbf72ckkg.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpbf72ckkg.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg / 2;\n    $avg = $avg * 2;\n    $avg = $avg - 1;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8slw1b3.php:39\nStack trace:\n#0 /tmp/tmph8slw1b3.php(53): test()\n#1 {main}\n  thrown in /tmp/tmph8slw1b3.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = round($sum);\n    $sum = $sum + 1;\n    $sum = $sum.toString(2);\n    if ($sum.length > $m) {\n        $sum = \"0b\" + $sum.substr($sum.length - $m);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpsqudc250.php:25\nStack trace:\n#0 /tmp/tmpsqudc250.php(33): rounded_avg(0, 4)\n#1 /tmp/tmpsqudc250.php(37): candidate(1, 5)\n#2 /tmp/tmpsqudc250.php(51): test()\n#3 {main}\n  thrown in /tmp/tmpsqudc250.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ( $i = $n; $i <= $m; $i++ ) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = round($sum);\n    $sum = $sum + 1;\n    $sum = $sum.toString(2);\n    if ($n > $m) {\n        return -1;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpp4bfwk49.php:25\nStack trace:\n#0 /tmp/tmpp4bfwk49.php(33): rounded_avg(0, 4)\n#1 /tmp/tmpp4bfwk49.php(37): candidate(1, 5)\n#2 /tmp/tmpp4bfwk49.php(51): test()\n#3 {main}\n  thrown in /tmp/tmpp4bfwk49.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    // your code goes here\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpbj8sahre.php:25\nStack trace:\n#0 /tmp/tmpbj8sahre.php(33): rounded_avg(0, 4)\n#1 /tmp/tmpbj8sahre.php(37): candidate(1, 5)\n#2 /tmp/tmpbj8sahre.php(51): test()\n#3 {main}\n  thrown in /tmp/tmpbj8sahre.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    return intval($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpai4sak81.php:34\nStack trace:\n#0 /tmp/tmpai4sak81.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpai4sak81.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum.toString(2);\n    $sum = $sum.substr($sum.length - 1);\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmphtwfnpx8.php:29\nStack trace:\n#0 /tmp/tmphtwfnpx8.php(35): rounded_avg(1, 5)\n#1 /tmp/tmphtwfnpx8.php(39): candidate(1, 5)\n#2 /tmp/tmphtwfnpx8.php(53): test()\n#3 {main}\n  thrown in /tmp/tmphtwfnpx8.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    if($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsrazafsz.php:32\nStack trace:\n#0 /tmp/tmpsrazafsz.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpsrazafsz.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdvvgld9i.php:36\nStack trace:\n#0 /tmp/tmpdvvgld9i.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpdvvgld9i.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    // your code goes here\n    if ($n > $m) {\n        return -1;\n    }\n    \n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    \n    $avg = $sum / ($m - $n + 1);\n    \n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91fuvqh5.php:36\nStack trace:\n#0 /tmp/tmp91fuvqh5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp91fuvqh5.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = intval($sum);\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ql7mbom.php:38\nStack trace:\n#0 /tmp/tmp8ql7mbom.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp8ql7mbom.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdvvgld9i.php:36\nStack trace:\n#0 /tmp/tmpdvvgld9i.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpdvvgld9i.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n;\n    $m = $m;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    if ($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpumy8it9f.php:34\nStack trace:\n#0 /tmp/tmpumy8it9f.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpumy8it9f.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6rb5ixy.php:34\nStack trace:\n#0 /tmp/tmp_6rb5ixy.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_6rb5ixy.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp375yrvtf.php:22\nStack trace:\n#0 /tmp/tmp375yrvtf.php(30): rounded_avg(1, 5)\n#1 /tmp/tmp375yrvtf.php(34): candidate(1, 5)\n#2 /tmp/tmp375yrvtf.php(48): test()\n#3 {main}\n  thrown in /tmp/tmp375yrvtf.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg.length > $m - $n + 1) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpiy9p4y_w.php:22\nStack trace:\n#0 /tmp/tmpiy9p4y_w.php(30): rounded_avg(1, 5)\n#1 /tmp/tmpiy9p4y_w.php(34): candidate(1, 5)\n#2 /tmp/tmpiy9p4y_w.php(48): test()\n#3 {main}\n  thrown in /tmp/tmpiy9p4y_w.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = ($n + $m) / 2;\n    $avg = round($avg);\n    $avg = $avg - $avg % 2;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpya0x7zi9.php:27\nStack trace:\n#0 /tmp/tmpya0x7zi9.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpya0x7zi9.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg.length > $m - $n + 1) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp11pyckbb.php:24\nStack trace:\n#0 /tmp/tmp11pyckbb.php(32): rounded_avg(0, 4)\n#1 /tmp/tmp11pyckbb.php(36): candidate(1, 5)\n#2 /tmp/tmp11pyckbb.php(50): test()\n#3 {main}\n  thrown in /tmp/tmp11pyckbb.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum /= $m - $n + 1;\n    return intval($sum);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt78oad1h.php:34\nStack trace:\n#0 /tmp/tmpt78oad1h.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpt78oad1h.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpofrld361.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg == 0 ? \"0b0\" : $avg == 1 ? \"0b1\" : \"0b\" . $avg;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Unparenthesized `a ? b : c ? d : e` is not supported. Use either `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmpvyz3fe01.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpkfi8sy0o.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg % 2;\n    $avg = $avg ? \"1\" : \"0\";\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwnj954m5.php:38\nStack trace:\n#0 /tmp/tmpwnj954m5.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpwnj954m5.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return intval($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzdk_lprr.php:34\nStack trace:\n#0 /tmp/tmpzdk_lprr.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpzdk_lprr.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpofrld361.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg / 2;\n    $avg = $avg * 2;\n    $avg = $avg + $n;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_n8lpuen.php:39\nStack trace:\n#0 /tmp/tmp_n8lpuen.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp_n8lpuen.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdvvgld9i.php:36\nStack trace:\n#0 /tmp/tmpdvvgld9i.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpdvvgld9i.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = $sum.toString(2);\n    if ($n > $m) {\n        return -1;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpffhux9go.php:22\nStack trace:\n#0 /tmp/tmpffhux9go.php(30): rounded_avg(1, 5)\n#1 /tmp/tmpffhux9go.php(34): candidate(1, 5)\n#2 /tmp/tmpffhux9go.php(48): test()\n#3 {main}\n  thrown in /tmp/tmpffhux9go.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum % 2;\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzyecyydu.php:38\nStack trace:\n#0 /tmp/tmpzyecyydu.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpzyecyydu.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg / 2;\n    $avg = $avg * 2;\n    $avg = $avg + $n;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_n8lpuen.php:39\nStack trace:\n#0 /tmp/tmp_n8lpuen.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp_n8lpuen.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = round($sum);\n    $sum = $sum + 1;\n    $sum = $sum.toString(2);\n    if ($n > $m) {\n        return -1;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmplojl5yxv.php:25\nStack trace:\n#0 /tmp/tmplojl5yxv.php(33): rounded_avg(0, 4)\n#1 /tmp/tmplojl5yxv.php(37): candidate(1, 5)\n#2 /tmp/tmplojl5yxv.php(51): test()\n#3 {main}\n  thrown in /tmp/tmplojl5yxv.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpofrld361.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = ($n + $m) / 2;\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($n > $m) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpty4dy_c_.php:18\nStack trace:\n#0 /tmp/tmpty4dy_c_.php(26): rounded_avg(1, 5)\n#1 /tmp/tmpty4dy_c_.php(30): candidate(1, 5)\n#2 /tmp/tmpty4dy_c_.php(44): test()\n#3 {main}\n  thrown in /tmp/tmpty4dy_c_.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaho84y4n.php:29\nStack trace:\n#0 /tmp/tmpaho84y4n.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpaho84y4n.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    // your code goes here\n    var sum = 0;\n    for (var i = $n; i <= $m; i++) {\n        sum += i;\n    }\n    var avg = sum / ($m - $n + 1);\n    return Math.round(avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpacb0042m.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpvfvpea4_.php:22\nStack trace:\n#0 /tmp/tmpvfvpea4_.php(30): rounded_avg(1, 5)\n#1 /tmp/tmpvfvpea4_.php(34): candidate(1, 5)\n#2 /tmp/tmpvfvpea4_.php(48): test()\n#3 {main}\n  thrown in /tmp/tmpvfvpea4_.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum, 1);\n    $sum = intval($sum);\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum + $n;\n    $sum = $sum + $m;\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    return $sum;\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnefqyc40.php:41\nStack trace:\n#0 /tmp/tmpnefqyc40.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpnefqyc40.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = intval($sum);\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5c5msmp_.php:36\nStack trace:\n#0 /tmp/tmp5c5msmp_.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp5c5msmp_.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    $bin = bin($avg);\n    if($bin < $bin.length) {\n        return $bin;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function bin() in /tmp/tmptlz8f6yj.php:21\nStack trace:\n#0 /tmp/tmptlz8f6yj.php(29): rounded_avg(1, 5)\n#1 /tmp/tmptlz8f6yj.php(33): candidate(1, 5)\n#2 /tmp/tmptlz8f6yj.php(47): test()\n#3 {main}\n  thrown in /tmp/tmptlz8f6yj.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n    $n = $n;\n    $m = $m;\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpe3jzwanh.php on line 100\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / $m;\n    $sum = round($sum);\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum.toString(2);\n    $sum = $sum.substr($sum.length - 1);\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpjwg7l8n6.php:29\nStack trace:\n#0 /tmp/tmpjwg7l8n6.php(35): rounded_avg(1, 5)\n#1 /tmp/tmpjwg7l8n6.php(39): candidate(1, 5)\n#2 /tmp/tmpjwg7l8n6.php(53): test()\n#3 {main}\n  thrown in /tmp/tmpjwg7l8n6.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = round($sum);\n    $sum = $sum + 1;\n    $sum = $sum.toString(2);\n    if ($n > $m) {\n        return -1;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmplojl5yxv.php:25\nStack trace:\n#0 /tmp/tmplojl5yxv.php(33): rounded_avg(0, 4)\n#1 /tmp/tmplojl5yxv.php(37): candidate(1, 5)\n#2 /tmp/tmplojl5yxv.php(51): test()\n#3 {main}\n  thrown in /tmp/tmplojl5yxv.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    $bin = dec2bin($avg);\n    return $bin;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function dec2bin() in /tmp/tmpufgtoen3.php:26\nStack trace:\n#0 /tmp/tmpufgtoen3.php(31): rounded_avg(1, 5)\n#1 /tmp/tmpufgtoen3.php(35): candidate(1, 5)\n#2 /tmp/tmpufgtoen3.php(49): test()\n#3 {main}\n  thrown in /tmp/tmpufgtoen3.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg.length > $m - $n + 1) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpiy9p4y_w.php:22\nStack trace:\n#0 /tmp/tmpiy9p4y_w.php(30): rounded_avg(1, 5)\n#1 /tmp/tmpiy9p4y_w.php(34): candidate(1, 5)\n#2 /tmp/tmpiy9p4y_w.php(48): test()\n#3 {main}\n  thrown in /tmp/tmpiy9p4y_w.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp8ew8bt_c.php:24\nStack trace:\n#0 /tmp/tmp8ew8bt_c.php(32): rounded_avg(0, 4)\n#1 /tmp/tmp8ew8bt_c.php(36): candidate(1, 5)\n#2 /tmp/tmp8ew8bt_c.php(50): test()\n#3 {main}\n  thrown in /tmp/tmp8ew8bt_c.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n;\n    $m = $m;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    \nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmp8gjlbhs_.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkqazvxlc.php:35\nStack trace:\n#0 /tmp/tmpkqazvxlc.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkqazvxlc.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6rb5ixy.php:34\nStack trace:\n#0 /tmp/tmp_6rb5ixy.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_6rb5ixy.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    // your code goes here\n    var sum = 0;\n    for (var i = $n; i <= $m; i++) {\n        sum += i;\n    }\n    return Math.round(sum / ($m - $n + 1));\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpvgihezqg.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = (int)($n + $m) / 2;\n    if ($n > $m) {\n        return -1;\n    }\n    $avg = round($avg);\n    $avg = $avg - $avg % 2;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_fknaziv.php:30\nStack trace:\n#0 /tmp/tmp_fknaziv.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_fknaziv.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6rb5ixy.php:34\nStack trace:\n#0 /tmp/tmp_6rb5ixy.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_6rb5ixy.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = $sum * 2;\n    $sum = intval($sum);\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6y517f08.php:37\nStack trace:\n#0 /tmp/tmp6y517f08.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp6y517f08.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n;\n    $m = $m;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    \nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmp3x43jyqx.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdvvgld9i.php:36\nStack trace:\n#0 /tmp/tmpdvvgld9i.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpdvvgld9i.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = intval($sum);\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum + $n;\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphpob5_oh.php:39\nStack trace:\n#0 /tmp/tmphpob5_oh.php(53): test()\n#1 {main}\n  thrown in /tmp/tmphpob5_oh.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    if ($sum == 1) {\n        return \"0b1\";\n    } else {\n        return \"0b0\";\n    }\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk3tnu6mb.php:36\nStack trace:\n#0 /tmp/tmpk3tnu6mb.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpk3tnu6mb.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    // your code goes here\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp_aydu5tx.php:26\nStack trace:\n#0 /tmp/tmp_aydu5tx.php(31): rounded_avg(1, 5)\n#1 /tmp/tmp_aydu5tx.php(35): candidate(1, 5)\n#2 /tmp/tmp_aydu5tx.php(49): test()\n#3 {main}\n  thrown in /tmp/tmp_aydu5tx.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg.toString(2);\n    $avg = $avg.substr($avg.length - 1);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpolk_vh1n.php:28\nStack trace:\n#0 /tmp/tmpolk_vh1n.php(34): rounded_avg(1, 5)\n#1 /tmp/tmpolk_vh1n.php(38): candidate(1, 5)\n#2 /tmp/tmpolk_vh1n.php(52): test()\n#3 {main}\n  thrown in /tmp/tmpolk_vh1n.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg.length > $m - $n + 1) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpiy9p4y_w.php:22\nStack trace:\n#0 /tmp/tmpiy9p4y_w.php(30): rounded_avg(1, 5)\n#1 /tmp/tmpiy9p4y_w.php(34): candidate(1, 5)\n#2 /tmp/tmpiy9p4y_w.php(48): test()\n#3 {main}\n  thrown in /tmp/tmpiy9p4y_w.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = $n + $m / 2;\n    $avg = round($avg);\n    $avg = $avg - $avg % 2;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6btyidg.php:27\nStack trace:\n#0 /tmp/tmpg6btyidg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpg6btyidg.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = round($sum);\n    $sum = $sum + 1;\n    $sum = $sum.toString(2);\n    if ($n > $m) {\n        return -1;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmplojl5yxv.php:25\nStack trace:\n#0 /tmp/tmplojl5yxv.php(33): rounded_avg(0, 4)\n#1 /tmp/tmplojl5yxv.php(37): candidate(1, 5)\n#2 /tmp/tmplojl5yxv.php(51): test()\n#3 {main}\n  thrown in /tmp/tmplojl5yxv.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $avg += $i;\n    }\n    $avg = round($avg / $m);\n    if ($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy3edstn7.php:32\nStack trace:\n#0 /tmp/tmpy3edstn7.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpy3edstn7.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum.toString(2);\n    if($sum.length < $m - $n + 1) {\n        $sum = \"0\".$sum;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpg3rzajmz.php:24\nStack trace:\n#0 /tmp/tmpg3rzajmz.php(32): rounded_avg(1, 5)\n#1 /tmp/tmpg3rzajmz.php(36): candidate(1, 5)\n#2 /tmp/tmpg3rzajmz.php(50): test()\n#3 {main}\n  thrown in /tmp/tmpg3rzajmz.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = round($sum);\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    $sum = $sum + $sum;\n    $sum = $sum % 2;\n    $sum = $sum + $sum;\n    $sum = $sum % 2;\n    $sum = $sum + $sum;\n    $sum = $sum % 2;\n    $sum = $sum + $sum;\n    $sum = $sum % 2;\n    $sum = $sum + $sum;\n    $sum = $sum % 2;\n    $sum = $sum + $sum;\n    $sum = $sum % 2;\n    $sum = $sum + $sum;\n    $sum = $sum % 2;\n    $sum = $sum + $sum;\n    $sum = $sum % 2;\n    $sum = $sum + $sum;\n    $sum = $sum % 2;\n    $sum = $sum + $sum;\n    $sum = $sum % 2;\n    $sum = $sum + $sum;\n    $sum = $sum % 2;\n    $sum = $sum + $sum;\n    $sum = $sum % 2;\n    $sum = $sum + $sum;\n    $sum = $sum % 2;\n    $sum = $sum + $sum;\n    $sum = $sum % 2;\n    $sum = $sum + $sum;\n    $sum = $sum % 2;\n    $sum = $sum + $sum;\n    $sum = $sum % 2;\n    $sum = $sum + $sum;\n    $sum = $sum % 2;\n    $sum = $sum + $sum;\n    $sum = $sum % 2;\n    $sum = $sum + $sum;\n    $sum = $sum % 2;\n    $sum = $sum + $sum;\n    $sum = $sum\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpf4om3k6j.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = intval($sum);\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5c5msmp_.php:36\nStack trace:\n#0 /tmp/tmp5c5msmp_.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp5c5msmp_.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdvvgld9i.php:36\nStack trace:\n#0 /tmp/tmpdvvgld9i.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpdvvgld9i.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    return $sum;\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjaf0mt2o.php:36\nStack trace:\n#0 /tmp/tmpjaf0mt2o.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpjaf0mt2o.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / $m;\n    $sum = round($sum);\n    $sum = intval($sum);\n    $sum = $sum % 2;\n    $sum = $sum ? \"1\" : \"0\";\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwgfg6287.php:38\nStack trace:\n#0 /tmp/tmpwgfg6287.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpwgfg6287.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg / 2;\n    $avg = $avg * 2;\n    $avg = $avg - 1;\n    $avg = $avg % 2;\n    $avg = $avg + 1;\n    $avg = $avg * 2;\n    $avg = $avg - 1;\n    $avg = $avg % 2;\n    $avg = $avg + 1;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ep9myz0.php:45\nStack trace:\n#0 /tmp/tmp4ep9myz0.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp4ep9myz0.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    // your code goes here\n    return $n + $m - 1;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy60jsv6q.php:25\nStack trace:\n#0 /tmp/tmpy60jsv6q.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpy60jsv6q.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return sprintf(\"0b%d\", $avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz5k6pyc3.php:34\nStack trace:\n#0 /tmp/tmpz5k6pyc3.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpz5k6pyc3.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1cvzozr3.php:29\nStack trace:\n#0 /tmp/tmp1cvzozr3.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp1cvzozr3.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = intval($sum);\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5c5msmp_.php:36\nStack trace:\n#0 /tmp/tmp5c5msmp_.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp5c5msmp_.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    return intval($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpai4sak81.php:34\nStack trace:\n#0 /tmp/tmpai4sak81.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpai4sak81.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $avg += $i;\n    }\n    $avg = round($avg / ($m - $n + 1));\n    $avg = $avg.toString(2);\n    if($avg.length < $m - $n + 1) {\n        $avg = $avg.padStart($m - $n + 1, '0');\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpnnyy7hlt.php:21\nStack trace:\n#0 /tmp/tmpnnyy7hlt.php(29): rounded_avg(1, 5)\n#1 /tmp/tmpnnyy7hlt.php(33): candidate(1, 5)\n#2 /tmp/tmpnnyy7hlt.php(47): test()\n#3 {main}\n  thrown in /tmp/tmpnnyy7hlt.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = intval($sum);\n    $sum = $sum.toString(2);\n    $sum = $sum.substr($sum.length - 1, 1);\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpgvukimrn.php:28\nStack trace:\n#0 /tmp/tmpgvukimrn.php(34): rounded_avg(1, 5)\n#1 /tmp/tmpgvukimrn.php(38): candidate(1, 5)\n#2 /tmp/tmpgvukimrn.php(52): test()\n#3 {main}\n  thrown in /tmp/tmpgvukimrn.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n;\n    $m = $m;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum.toString(2);\n    if ($n > $m) {\n        return -1;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp4j9nnfa4.php:26\nStack trace:\n#0 /tmp/tmp4j9nnfa4.php(34): rounded_avg(1, 5)\n#1 /tmp/tmp4j9nnfa4.php(38): candidate(1, 5)\n#2 /tmp/tmp4j9nnfa4.php(52): test()\n#3 {main}\n  thrown in /tmp/tmp4j9nnfa4.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg / 2;\n    $avg = $avg * 2;\n    $avg = $avg - 1;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8slw1b3.php:39\nStack trace:\n#0 /tmp/tmph8slw1b3.php(53): test()\n#1 {main}\n  thrown in /tmp/tmph8slw1b3.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg.length > $m - $n + 1) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpiy9p4y_w.php:22\nStack trace:\n#0 /tmp/tmpiy9p4y_w.php(30): rounded_avg(1, 5)\n#1 /tmp/tmpiy9p4y_w.php(34): candidate(1, 5)\n#2 /tmp/tmpiy9p4y_w.php(48): test()\n#3 {main}\n  thrown in /tmp/tmpiy9p4y_w.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    // your code goes here\n    return $n + $m;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr1hp17p8.php:25\nStack trace:\n#0 /tmp/tmpr1hp17p8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpr1hp17p8.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1cvzozr3.php:29\nStack trace:\n#0 /tmp/tmp1cvzozr3.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp1cvzozr3.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg.toString(2);\n    $avg = $avg.substr($avg.length - 1);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpolk_vh1n.php:28\nStack trace:\n#0 /tmp/tmpolk_vh1n.php(34): rounded_avg(1, 5)\n#1 /tmp/tmpolk_vh1n.php(38): candidate(1, 5)\n#2 /tmp/tmpolk_vh1n.php(52): test()\n#3 {main}\n  thrown in /tmp/tmpolk_vh1n.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsw19xv7i.php:35\nStack trace:\n#0 /tmp/tmpsw19xv7i.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpsw19xv7i.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = intval($avg);\n    $avg = $avg / 2;\n    $avg = $avg * 2;\n    $avg = $avg - 1;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6x4mdksx.php:38\nStack trace:\n#0 /tmp/tmp6x4mdksx.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp6x4mdksx.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    // your code goes here\n    var sum = 0;\n    for (var i = $n; i <= $m; i++) {\n        sum += i;\n    }\n    var avg = sum / (m - n + 1);\n    var rounded = Math.round(avg);\n    return (rounded).toString(2);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpznh2p7dd.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg % 2;\n    $avg = $avg ? \"1\" : \"0\";\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwnj954m5.php:38\nStack trace:\n#0 /tmp/tmpwnj954m5.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpwnj954m5.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpofrld361.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp375yrvtf.php:22\nStack trace:\n#0 /tmp/tmp375yrvtf.php(30): rounded_avg(1, 5)\n#1 /tmp/tmp375yrvtf.php(34): candidate(1, 5)\n#2 /tmp/tmp375yrvtf.php(48): test()\n#3 {main}\n  thrown in /tmp/tmp375yrvtf.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg == 0 ? 1 : $avg;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptl625vx7.php:37\nStack trace:\n#0 /tmp/tmptl625vx7.php(51): test()\n#1 {main}\n  thrown in /tmp/tmptl625vx7.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n;\n    $m = $m;\n    $sum = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    \nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpaocjiace.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg == 0 ? 1 : $avg;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptl625vx7.php:37\nStack trace:\n#0 /tmp/tmptl625vx7.php(51): test()\n#1 {main}\n  thrown in /tmp/tmptl625vx7.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = round($sum);\n    $sum = $sum + 1;\n    $sum = $sum.toString(2);\n    if ($n > $m) {\n        return -1;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmplojl5yxv.php:25\nStack trace:\n#0 /tmp/tmplojl5yxv.php(33): rounded_avg(0, 4)\n#1 /tmp/tmplojl5yxv.php(37): candidate(1, 5)\n#2 /tmp/tmplojl5yxv.php(51): test()\n#3 {main}\n  thrown in /tmp/tmplojl5yxv.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp375yrvtf.php:22\nStack trace:\n#0 /tmp/tmp375yrvtf.php(30): rounded_avg(1, 5)\n#1 /tmp/tmp375yrvtf.php(34): candidate(1, 5)\n#2 /tmp/tmp375yrvtf.php(48): test()\n#3 {main}\n  thrown in /tmp/tmp375yrvtf.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $avg += $i;\n    }\n    $avg = $avg / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg / 2;\n    $avg = $avg * 2;\n    $avg = $avg - 2;\n    $avg = $avg.toString(2);\n    $avg = $avg.substr($avg.length - 1);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp1zv161vh.php:25\nStack trace:\n#0 /tmp/tmp1zv161vh.php(31): rounded_avg(1, 5)\n#1 /tmp/tmp1zv161vh.php(35): candidate(1, 5)\n#2 /tmp/tmp1zv161vh.php(49): test()\n#3 {main}\n  thrown in /tmp/tmp1zv161vh.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    // your code goes here\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    $avg = $avg.substr($avg.length - 1);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp73u96gwc.php:26\nStack trace:\n#0 /tmp/tmp73u96gwc.php(32): rounded_avg(1, 5)\n#1 /tmp/tmp73u96gwc.php(36): candidate(1, 5)\n#2 /tmp/tmp73u96gwc.php(50): test()\n#3 {main}\n  thrown in /tmp/tmp73u96gwc.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $n = $n + $m;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n / 2;\n    $n = $n + 1;\n    \nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpgi7te709.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp2omsqiug.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg.length > $m) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpc7t34rg2.php:24\nStack trace:\n#0 /tmp/tmpc7t34rg2.php(32): rounded_avg(0, 4)\n#1 /tmp/tmpc7t34rg2.php(36): candidate(1, 5)\n#2 /tmp/tmpc7t34rg2.php(50): test()\n#3 {main}\n  thrown in /tmp/tmpc7t34rg2.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = round($sum);\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    if ($sum == 1) {\n        return \"0b\" . $sum;\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfepq8yoc.php:37\nStack trace:\n#0 /tmp/tmpfepq8yoc.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpfepq8yoc.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1cvzozr3.php:29\nStack trace:\n#0 /tmp/tmp1cvzozr3.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp1cvzozr3.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / $m;\n    $sum = round($sum);\n    $sum = intval($sum);\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24fz71qy.php:39\nStack trace:\n#0 /tmp/tmp24fz71qy.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp24fz71qy.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum % 2;\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzyecyydu.php:38\nStack trace:\n#0 /tmp/tmpzyecyydu.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpzyecyydu.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    return $avg;\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7o_oric6.php:35\nStack trace:\n#0 /tmp/tmp7o_oric6.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp7o_oric6.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum / 2;\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp2omsqiug.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg == 0 ? 1 : $avg;\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptl625vx7.php:37\nStack trace:\n#0 /tmp/tmptl625vx7.php(51): test()\n#1 {main}\n  thrown in /tmp/tmptl625vx7.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum /= $m - $n + 1;\n    return sprintf(\"0b%d\", $sum);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9nnpkjt.php:29\nStack trace:\n#0 /tmp/tmph9nnpkjt.php(43): test()\n#1 {main}\n  thrown in /tmp/tmph9nnpkjt.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = $sum + 1;\n    $sum = $sum % 2;\n    if ($sum == 1) {\n        return \"0b\" . $sum;\n    } else {\n        return \"0b\" . $sum;\n    }\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyd77jhpu.php:37\nStack trace:\n#0 /tmp/tmpyd77jhpu.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpyd77jhpu.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp375yrvtf.php:22\nStack trace:\n#0 /tmp/tmp375yrvtf.php(30): rounded_avg(1, 5)\n#1 /tmp/tmp375yrvtf.php(34): candidate(1, 5)\n#2 /tmp/tmp375yrvtf.php(48): test()\n#3 {main}\n  thrown in /tmp/tmp375yrvtf.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum /= $m - $n + 1;\n    $sum = round($sum);\n    $sum = $sum * 2;\n    $sum = $sum - 1;\n    $sum = $sum.toString(2);\n    $sum = $sum.substr($sum.length - 1);\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpmftl3cpk.php:29\nStack trace:\n#0 /tmp/tmpmftl3cpk.php(35): rounded_avg(1, 5)\n#1 /tmp/tmpmftl3cpk.php(39): candidate(1, 5)\n#2 /tmp/tmpmftl3cpk.php(53): test()\n#3 {main}\n  thrown in /tmp/tmpmftl3cpk.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg.length > $m - $n + 1) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpiy9p4y_w.php:22\nStack trace:\n#0 /tmp/tmpiy9p4y_w.php(30): rounded_avg(1, 5)\n#1 /tmp/tmpiy9p4y_w.php(34): candidate(1, 5)\n#2 /tmp/tmpiy9p4y_w.php(48): test()\n#3 {main}\n  thrown in /tmp/tmpiy9p4y_w.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $n = $n < $m ? $n : $m;\n    $m = $n - $m;\n    $n = $n + $m;\n    $n = $n / 2;\n    $n = $n + 1;\n    $n = $n % 2;\n    return $n;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpndp9oka5.php:32\nStack trace:\n#0 /tmp/tmpndp9oka5.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpndp9oka5.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = round($sum / ($m - $n + 1));\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9p9__cgq.php:29\nStack trace:\n#0 /tmp/tmp9p9__cgq.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9p9__cgq.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n;\n    $m = $m;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    \nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmp3x43jyqx.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg.toString(2);\n    $avg = $avg.substr($avg.length - 1);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpolk_vh1n.php:28\nStack trace:\n#0 /tmp/tmpolk_vh1n.php(34): rounded_avg(1, 5)\n#1 /tmp/tmpolk_vh1n.php(38): candidate(1, 5)\n#2 /tmp/tmpolk_vh1n.php(52): test()\n#3 {main}\n  thrown in /tmp/tmpolk_vh1n.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = ($n + $m) / 2;\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($n > $m) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmpty4dy_c_.php:18\nStack trace:\n#0 /tmp/tmpty4dy_c_.php(26): rounded_avg(1, 5)\n#1 /tmp/tmpty4dy_c_.php(30): candidate(1, 5)\n#2 /tmp/tmpty4dy_c_.php(44): test()\n#3 {main}\n  thrown in /tmp/tmpty4dy_c_.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsw19xv7i.php:35\nStack trace:\n#0 /tmp/tmpsw19xv7i.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpsw19xv7i.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp8ew8bt_c.php:24\nStack trace:\n#0 /tmp/tmp8ew8bt_c.php(32): rounded_avg(0, 4)\n#1 /tmp/tmp8ew8bt_c.php(36): candidate(1, 5)\n#2 /tmp/tmp8ew8bt_c.php(50): test()\n#3 {main}\n  thrown in /tmp/tmp8ew8bt_c.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n;\n    $m = $m;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    $avg = $avg;\n    \nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmp3x43jyqx.php on line 87\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = $n - 1;\n    $m = $m - 1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = $sum / 2;\n    $sum = round($sum);\n    $sum = $sum + 1;\n    $sum = $sum.toString(2);\n    if ($n > $m) {\n        return -1;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmplojl5yxv.php:25\nStack trace:\n#0 /tmp/tmplojl5yxv.php(33): rounded_avg(0, 4)\n#1 /tmp/tmplojl5yxv.php(37): candidate(1, 5)\n#2 /tmp/tmplojl5yxv.php(51): test()\n#3 {main}\n  thrown in /tmp/tmplojl5yxv.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = intval($avg);\n    $avg = $avg / 2;\n    $avg = $avg * 2;\n    $avg = $avg - 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n    $avg = $avg + 1;\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nParse error: Unclosed '{' on line 15 in /tmp/tmpr9arbuxa.php on line 81\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    if ($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpow3d_djd.php:33\nStack trace:\n#0 /tmp/tmpow3d_djd.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpow3d_djd.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = $avg.toString(2);\n    if ($avg < 0) {\n        return -1;\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292657,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function toString() in /tmp/tmp375yrvtf.php:22\nStack trace:\n#0 /tmp/tmp375yrvtf.php(30): rounded_avg(1, 5)\n#1 /tmp/tmp375yrvtf.php(34): candidate(1, 5)\n#2 /tmp/tmp375yrvtf.php(48): test()\n#3 {main}\n  thrown in /tmp/tmp375yrvtf.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $n = intval($n);\n    $m = intval($m);\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    $bin = dec2bin($avg);\n    return $bin;\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664292658,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function dec2bin() in /tmp/tmpufgtoen3.php:26\nStack trace:\n#0 /tmp/tmpufgtoen3.php(31): rounded_avg(1, 5)\n#1 /tmp/tmpufgtoen3.php(35): candidate(1, 5)\n#2 /tmp/tmpufgtoen3.php(49): test()\n#3 {main}\n  thrown in /tmp/tmpufgtoen3.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
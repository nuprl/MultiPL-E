{
  "name": "HumanEval_44_change_base",
  "language": "php",
  "prompt": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n",
  "tests": "function candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y = $y * $base + $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = 0;\n    for ( $i = 0; $i < $x; $i++ ) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd_0grn02.php:23\nStack trace:\n#0 /tmp/tmpd_0grn02.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpd_0grn02.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $base * $x % 10;\n        $x = $x / 10;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nDeprecated: Implicit conversion from float 2.4000000000000004 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.24 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.024 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.0024000000000000002 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.00024000000000000003 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000004E-5 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000007E-6 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000003E-7 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000006E-8 t",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50t_khg3.php:23\nStack trace:\n#0 /tmp/tmp50t_khg3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp50t_khg3.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = \"\";\n    while ($x > 0) {\n        $result = $base * $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp9i0cq8yx.php:14\nStack trace:\n#0 /tmp/tmp9i0cq8yx.php(20): change_base(8, 3)\n#1 /tmp/tmp9i0cq8yx.php(24): candidate(8, 3)\n#2 /tmp/tmp9i0cq8yx.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp9i0cq8yx.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = \"\";\n    while($x > 0) {\n        $result = $base * $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpob6la2bs.php:14\nStack trace:\n#0 /tmp/tmpob6la2bs.php(20): change_base(8, 3)\n#1 /tmp/tmpob6la2bs.php(24): candidate(8, 3)\n#2 /tmp/tmpob6la2bs.php(38): test()\n#3 {main}\n  thrown in /tmp/tmpob6la2bs.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y = $y * $base + $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50t_khg3.php:23\nStack trace:\n#0 /tmp/tmp50t_khg3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp50t_khg3.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50t_khg3.php:23\nStack trace:\n#0 /tmp/tmp50t_khg3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp50t_khg3.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    if ($x < 0) {\n        return \"-\" + change_base(-$x, $base);\n    }\n    if ($base < 2 || $base > 36) {\n        return \"\";\n    }\n    var result = \"\";\n    while ($x > 0) {\n        var digit = $x % $base;\n        result = digit + result;\n        $x = $x / $base;\n    }\n    return result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmpyq3ybc22.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = '';\n    while($x > 0) {\n        $result = $base * $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpkflibu2x.php:14\nStack trace:\n#0 /tmp/tmpkflibu2x.php(20): change_base(8, 3)\n#1 /tmp/tmpkflibu2x.php(24): candidate(8, 3)\n#2 /tmp/tmpkflibu2x.php(38): test()\n#3 {main}\n  thrown in /tmp/tmpkflibu2x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y = $y * $base + ($x % $base);\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50t_khg3.php:23\nStack trace:\n#0 /tmp/tmp50t_khg3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp50t_khg3.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl_unl0m.php:24\nStack trace:\n#0 /tmp/tmpsl_unl0m.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsl_unl0m.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = \"\";\n    for ($i = 0; $i < $x; $i++) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: string + int in /tmp/tmpi_acxzp7.php:14\nStack trace:\n#0 /tmp/tmpi_acxzp7.php(19): change_base(8, 3)\n#1 /tmp/tmpi_acxzp7.php(23): candidate(8, 3)\n#2 /tmp/tmpi_acxzp7.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpi_acxzp7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y = $y * 10 + $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = floor($x / $base);\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv7efp_w5.php:24\nStack trace:\n#0 /tmp/tmpv7efp_w5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpv7efp_w5.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = 0;\n    while($x > 0) {\n        $result += pow($base, $x % $base);\n        $x = floor($x / $base);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kwcwbqc.php:24\nStack trace:\n#0 /tmp/tmp1kwcwbqc.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1kwcwbqc.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl_unl0m.php:24\nStack trace:\n#0 /tmp/tmpsl_unl0m.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsl_unl0m.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y = $y * $base + ($x % $base);\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    if ($x < 0) {\n        return \"-\" + change_base(-$x, $base);\n    }\n    if ($base < 2 || $base > 36) {\n        return \"\";\n    }\n    var result = \"\";\n    while ($x > 0) {\n        result = $base * $x % $base + result;\n        $x = $x / $base;\n    }\n    return result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nParse error: syntax error, unexpected token \"var\" in /tmp/tmp3vqrq6dd.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = '';\n    while ($x > 0) {\n        $result = $base * $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpdxr4d_5l.php:14\nStack trace:\n#0 /tmp/tmpdxr4d_5l.php(20): change_base(8, 3)\n#1 /tmp/tmpdxr4d_5l.php(24): candidate(8, 3)\n#2 /tmp/tmpdxr4d_5l.php(38): test()\n#3 {main}\n  thrown in /tmp/tmpdxr4d_5l.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y = $y * $base + $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50t_khg3.php:23\nStack trace:\n#0 /tmp/tmp50t_khg3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp50t_khg3.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $base * $x % 10;\n        $x = $x / 10;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nDeprecated: Implicit conversion from float 2.4000000000000004 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.24 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.024 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.0024000000000000002 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.00024000000000000003 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000004E-5 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000007E-6 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000003E-7 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000006E-8 t",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y = $y * 10 + $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl_unl0m.php:24\nStack trace:\n#0 /tmp/tmpsl_unl0m.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsl_unl0m.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y = $y * $base + $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $base * $x % 10;\n        $x = $x / 10;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nDeprecated: Implicit conversion from float 2.4000000000000004 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.24 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.024 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.0024000000000000002 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.00024000000000000003 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000004E-5 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000007E-6 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000003E-7 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000006E-8 t",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = '';\n    while($x > 0) {\n        $result = $base * $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpkflibu2x.php:14\nStack trace:\n#0 /tmp/tmpkflibu2x.php(20): change_base(8, 3)\n#1 /tmp/tmpkflibu2x.php(24): candidate(8, 3)\n#2 /tmp/tmpkflibu2x.php(38): test()\n#3 {main}\n  thrown in /tmp/tmpkflibu2x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y = $y * 10 + $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50t_khg3.php:23\nStack trace:\n#0 /tmp/tmp50t_khg3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp50t_khg3.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = '';\n    while($x > 0) {\n        $result = $base * $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpkflibu2x.php:14\nStack trace:\n#0 /tmp/tmpkflibu2x.php(20): change_base(8, 3)\n#1 /tmp/tmpkflibu2x.php(24): candidate(8, 3)\n#2 /tmp/tmpkflibu2x.php(38): test()\n#3 {main}\n  thrown in /tmp/tmpkflibu2x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = \"\";\n    for ($i = 0; $i < $x; $i++) {\n        $result = $result + pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: string + int in /tmp/tmpveo1on29.php:14\nStack trace:\n#0 /tmp/tmpveo1on29.php(19): change_base(8, 3)\n#1 /tmp/tmpveo1on29.php(23): candidate(8, 3)\n#2 /tmp/tmpveo1on29.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpveo1on29.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = \"\";\n    while ($x > 0) {\n        $result = $base * $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp9i0cq8yx.php:14\nStack trace:\n#0 /tmp/tmp9i0cq8yx.php(20): change_base(8, 3)\n#1 /tmp/tmp9i0cq8yx.php(24): candidate(8, 3)\n#2 /tmp/tmp9i0cq8yx.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp9i0cq8yx.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpst66es8v.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50t_khg3.php:23\nStack trace:\n#0 /tmp/tmp50t_khg3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp50t_khg3.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y = $y * $base + $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50t_khg3.php:23\nStack trace:\n#0 /tmp/tmp50t_khg3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp50t_khg3.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y = $y * 10 + $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $base * $x % 10;\n        $x = $x / 10;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nDeprecated: Implicit conversion from float 2.4000000000000004 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.24 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.024 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.0024000000000000002 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.00024000000000000003 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000004E-5 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000007E-6 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000003E-7 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000006E-8 t",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    if ($x < 0) {\n        return \"\";\n    }\n    if ($base < 2 || $base > 36) {\n        return \"\";\n    }\n    $n = 0;\n    $s = \"\";\n    while ($x > 0) {\n        $n = $x % $base;\n        $x = $x / $base;\n        $s = $n + $s;\n    }\n    return $s;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmppsmoz4g0.php:23\nStack trace:\n#0 /tmp/tmppsmoz4g0.php(28): change_base(2.6666666666667, 3)\n#1 /tmp/tmppsmoz4g0.php(32): candidate(8, 3)\n#2 /tmp/tmppsmoz4g0.php(46): test()\n#3 {main}\n  thrown in /tmp/tmppsmoz4g0.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = floor($x / $base);\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv7efp_w5.php:24\nStack trace:\n#0 /tmp/tmpv7efp_w5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpv7efp_w5.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    if ($x < 0) {\n        return \"\";\n    }\n    $result = \"\";\n    while ($x > 0) {\n        $remainder = $x % $base;\n        $result = $remainder + $result;\n        $x = $x / $base;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp_afe7yup.php:18\nStack trace:\n#0 /tmp/tmp_afe7yup.php(24): change_base(8, 3)\n#1 /tmp/tmp_afe7yup.php(28): candidate(8, 3)\n#2 /tmp/tmp_afe7yup.php(42): test()\n#3 {main}\n  thrown in /tmp/tmp_afe7yup.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50t_khg3.php:23\nStack trace:\n#0 /tmp/tmp50t_khg3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp50t_khg3.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = 0;\n    for ( $i = 0; $i < $x; $i++ ) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd_0grn02.php:23\nStack trace:\n#0 /tmp/tmpd_0grn02.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpd_0grn02.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = \"\";\n    for ($i = 0; $i < $x; $i++) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: string + int in /tmp/tmpi_acxzp7.php:14\nStack trace:\n#0 /tmp/tmpi_acxzp7.php(19): change_base(8, 3)\n#1 /tmp/tmpi_acxzp7.php(23): candidate(8, 3)\n#2 /tmp/tmpi_acxzp7.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpi_acxzp7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = \"\";\n    for ($i = 0; $i < $x; $i++) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: string + int in /tmp/tmpi_acxzp7.php:14\nStack trace:\n#0 /tmp/tmpi_acxzp7.php(19): change_base(8, 3)\n#1 /tmp/tmpi_acxzp7.php(23): candidate(8, 3)\n#2 /tmp/tmpi_acxzp7.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpi_acxzp7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    if ($x < 0) {\n        return \"\";\n    }\n    if ($base < 2 || $base > 36) {\n        return \"\";\n    }\n    $result = \"\";\n    while ($x > 0) {\n        $remainder = $x % $base;\n        $result = $remainder + $result;\n        $x = $x / $base;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpcf2maz8i.php:21\nStack trace:\n#0 /tmp/tmpcf2maz8i.php(27): change_base(8, 3)\n#1 /tmp/tmpcf2maz8i.php(31): candidate(8, 3)\n#2 /tmp/tmpcf2maz8i.php(45): test()\n#3 {main}\n  thrown in /tmp/tmpcf2maz8i.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = 0;\n    while ($x > 0) {\n        $result += pow($base, $x % $base);\n        $x = floor($x / $base);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjevaa3tj.php:24\nStack trace:\n#0 /tmp/tmpjevaa3tj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjevaa3tj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = \"\";\n    while ($x > 0) {\n        $result = $base * $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp9i0cq8yx.php:14\nStack trace:\n#0 /tmp/tmp9i0cq8yx.php(20): change_base(8, 3)\n#1 /tmp/tmp9i0cq8yx.php(24): candidate(8, 3)\n#2 /tmp/tmp9i0cq8yx.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp9i0cq8yx.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = '';\n    while($x > 0) {\n        $result = $base * $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpkflibu2x.php:14\nStack trace:\n#0 /tmp/tmpkflibu2x.php(20): change_base(8, 3)\n#1 /tmp/tmpkflibu2x.php(24): candidate(8, 3)\n#2 /tmp/tmpkflibu2x.php(38): test()\n#3 {main}\n  thrown in /tmp/tmpkflibu2x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $base * $x % 10;\n        $x = $x / 10;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nDeprecated: Implicit conversion from float 2.4000000000000004 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.24 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.024 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.0024000000000000002 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.00024000000000000003 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000004E-5 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000007E-6 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000003E-7 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000006E-8 t",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $base * $x % 10;\n        $x = $x / 10;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nDeprecated: Implicit conversion from float 2.4000000000000004 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.24 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.024 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.0024000000000000002 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.00024000000000000003 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000004E-5 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000007E-6 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000003E-7 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000006E-8 t",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while($x > 0) {\n        $y = $y * $base + $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmps_8b9wir.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmps_8b9wir.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmps_8b9wir.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmps_8b9wir.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmps_8b9wir.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmps_8b9wir.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmps_8b9wir.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmps_8b9wir.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmps_8b9wir.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmps_8b9wir.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmps_8b9wir.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmps_8b9wir.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmps_8b9wir.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmps_8b9wir.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmps_8b9wir.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmps_8b9wir.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = \"\";\n    while ($x > 0) {\n        $result = $base * $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp9i0cq8yx.php:14\nStack trace:\n#0 /tmp/tmp9i0cq8yx.php(20): change_base(8, 3)\n#1 /tmp/tmp9i0cq8yx.php(24): candidate(8, 3)\n#2 /tmp/tmp9i0cq8yx.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp9i0cq8yx.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = '';\n    while($x > 0) {\n        $result = $base * $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpkflibu2x.php:14\nStack trace:\n#0 /tmp/tmpkflibu2x.php(20): change_base(8, 3)\n#1 /tmp/tmpkflibu2x.php(24): candidate(8, 3)\n#2 /tmp/tmpkflibu2x.php(38): test()\n#3 {main}\n  thrown in /tmp/tmpkflibu2x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y = $y * $base + $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = 0;\n    for ( $i = 0; $i < $x; $i++ ) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd_0grn02.php:23\nStack trace:\n#0 /tmp/tmpd_0grn02.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpd_0grn02.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $base * $x % 10;\n        $x = $x / 10;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nDeprecated: Implicit conversion from float 2.4000000000000004 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.24 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.024 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.0024000000000000002 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.00024000000000000003 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000004E-5 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000007E-6 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000003E-7 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000006E-8 t",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = 0;\n    while ($x > 0) {\n        $result += pow($base, $x % $base);\n        $x = floor($x / $base);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjevaa3tj.php:24\nStack trace:\n#0 /tmp/tmpjevaa3tj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjevaa3tj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = '';\n    while($x > 0) {\n        $result = $base * $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpkflibu2x.php:14\nStack trace:\n#0 /tmp/tmpkflibu2x.php(20): change_base(8, 3)\n#1 /tmp/tmpkflibu2x.php(24): candidate(8, 3)\n#2 /tmp/tmpkflibu2x.php(38): test()\n#3 {main}\n  thrown in /tmp/tmpkflibu2x.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y = $y * $base + $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpqtrb08_8.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = floor($x / $base);\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv7efp_w5.php:24\nStack trace:\n#0 /tmp/tmpv7efp_w5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpv7efp_w5.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y = $y * 10 + $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $base * $x % 10;\n        $x = $x / 10;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nDeprecated: Implicit conversion from float 2.4000000000000004 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.24 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.024 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.0024000000000000002 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.00024000000000000003 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000004E-5 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000007E-6 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000003E-7 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000006E-8 t",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y = $y * 10 + $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y = $y * 10 + $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y = $y * 10 + $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $n = $x;\n    $b = $base;\n    $s = \"\";\n    while($n > 0) {\n        $s = $n % $b + $s;\n        $n = $n / $b;\n    }\n    return $s;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpqomk2g89.php:16\nStack trace:\n#0 /tmp/tmpqomk2g89.php(22): change_base(8, 3)\n#1 /tmp/tmpqomk2g89.php(26): candidate(8, 3)\n#2 /tmp/tmpqomk2g89.php(40): test()\n#3 {main}\n  thrown in /tmp/tmpqomk2g89.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = \"\";\n    for ($i = 0; $i < $x; $i++) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: string + int in /tmp/tmpi_acxzp7.php:14\nStack trace:\n#0 /tmp/tmpi_acxzp7.php(19): change_base(8, 3)\n#1 /tmp/tmpi_acxzp7.php(23): candidate(8, 3)\n#2 /tmp/tmpi_acxzp7.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpi_acxzp7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $base * $x % 10;\n        $x = $x / 10;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nDeprecated: Implicit conversion from float 2.4000000000000004 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.24 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.024 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.0024000000000000002 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 0.00024000000000000003 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000004E-5 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000007E-6 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000003E-7 to int loses precision in /tmp/tmpee3ic91u.php on line 14\n\nDeprecated: Implicit conversion from float 2.4000000000000006E-8 t",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y = $y * 10 + $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = \"\";\n    for ($i = 0; $i < $x; $i++) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: string + int in /tmp/tmpi_acxzp7.php:14\nStack trace:\n#0 /tmp/tmpi_acxzp7.php(19): change_base(8, 3)\n#1 /tmp/tmpi_acxzp7.php(23): candidate(8, 3)\n#2 /tmp/tmpi_acxzp7.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpi_acxzp7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = \"\";\n    for ($i = 0; $i < $x; $i++) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: string + int in /tmp/tmpi_acxzp7.php:14\nStack trace:\n#0 /tmp/tmpi_acxzp7.php(19): change_base(8, 3)\n#1 /tmp/tmpi_acxzp7.php(23): candidate(8, 3)\n#2 /tmp/tmpi_acxzp7.php(37): test()\n#3 {main}\n  thrown in /tmp/tmpi_acxzp7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = floor($x / $base);\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv7efp_w5.php:24\nStack trace:\n#0 /tmp/tmpv7efp_w5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpv7efp_w5.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y = $y * $base + ($x % $base);\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpb8orlr0a.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y = $y * 10 + $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpl94tl2fa.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50t_khg3.php:23\nStack trace:\n#0 /tmp/tmp50t_khg3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp50t_khg3.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = ($x - ($x % $base)) / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6eh1rqr.php:24\nStack trace:\n#0 /tmp/tmpg6eh1rqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6eh1rqr.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += $x % $base;\n        $x = $x / $base;\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293245,
      "stdout": "\nDeprecated: Implicit conversion from float 2.6666666666666665 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.8888888888888888 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.2962962962962963 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.09876543209876543 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.03292181069958847 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.010973936899862825 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.003657978966620942 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0012193263222069807 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0004064421074023269 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 0.0001354807024674423 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses precision in /tmp/tmpaaidihbc.php on line 14\n\nDeprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = 0;\n    for ( $i = 0; $i < $x; $i++ ) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd_0grn02.php:23\nStack trace:\n#0 /tmp/tmpd_0grn02.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpd_0grn02.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = \"\";\n    while ($x > 0) {\n        $result = $base * $x % 10 + $result;\n        $x = $x / 10;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp9i0cq8yx.php:14\nStack trace:\n#0 /tmp/tmp9i0cq8yx.php(20): change_base(8, 3)\n#1 /tmp/tmp9i0cq8yx.php(24): candidate(8, 3)\n#2 /tmp/tmp9i0cq8yx.php(38): test()\n#3 {main}\n  thrown in /tmp/tmp9i0cq8yx.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $y = 0;\n    while ($x > 0) {\n        $y += ($x % $base);\n        $x = floor($x / $base);\n    }\n    return $y;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv7efp_w5.php:24\nStack trace:\n#0 /tmp/tmpv7efp_w5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpv7efp_w5.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Change numerical base of input number x to base.\n// return string representation after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result = 0;\n    for ($i = 0; $i < $x; $i++) {\n        $result += pow($base, $i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293243,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50t_khg3.php:23\nStack trace:\n#0 /tmp/tmp50t_khg3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp50t_khg3.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
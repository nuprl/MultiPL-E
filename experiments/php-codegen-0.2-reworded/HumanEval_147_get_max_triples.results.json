{
  "name": "HumanEval_147_get_max_triples",
  "language": "php",
  "prompt": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n",
  "tests": "function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6u_sfk8k.php:35\nStack trace:\n#0 /tmp/tmp6u_sfk8k.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6u_sfk8k.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $j = $i + 1;\n        $k = $n - $i;\n        if ($j <= $k) {\n            $result += $i * $i - $i + 1;\n            $result += $j * $j - $j + 1;\n            $result += $k * $k - $k + 1;\n            $result %= 3;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9cpu5an7.php:33\nStack trace:\n#0 /tmp/tmp9cpu5an7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9cpu5an7.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i=0; $i<$n; $i++) {\n        $a[$i] = $i*$i - $i + 1;\n    }\n    $count = 0;\n    for($i=0; $i<$n-2; $i++) {\n        for($j=$i+1; $j<$n-1; $j++) {\n            for($k=$j+1; $k<$n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpei_4ib74.php:35\nStack trace:\n#0 /tmp/tmpei_4ib74.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpei_4ib74.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $result = 0;\n    for (var i = 1; i <= $n - 2; i++) {\n        for (var j = i + 1; j <= $n - 1; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if (i * j * k == $a[i] + $a[j] + $a[k]) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpauth9thd.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    var $count = 0;\n    for (var i = 1; i < $n; i++) {\n        for (var j = i + 1; j < $n; j++) {\n            for (var k = j + 1; k < $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpya1_slor.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $max = 0;\n    for (var i = 1; i <= $n; i++) {\n        for (var j = i + 1; j <= $n; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $max = max($max, $a[i] * $a[j] * $a[k]);\n                }\n            }\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmphmtc7t_b.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    for (var i = 1; i <= $n; i++) {\n        for (var j = i + 1; j <= $n; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if (i * i - i + 1 == j * j - j + 1 && j * j - j + 1 == k * k - k + 1) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp2yym0ka3.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 0; i < $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $count = 0;\n    for (var i = 0; i < $n - 2; i++) {\n        for (var j = i + 1; j < $n - 1; j++) {\n            for (var k = j + 1; k < $n; k++) {\n                if (($a[i] + $a[j] + $a[k]) % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpol6wunb6.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $count = 0;\n    for (var i = 1; i <= $n - 2; i++) {\n        for (var j = i + 1; j <= $n - 1; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpvbgjs85j.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array(1, 3, 7, 13, 21);\n    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nWarning: Undefined array key 5 in /tmp/tmp9_jboycn.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp9_jboycn.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp9_jboycn.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp9_jboycn.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp9_jboycn.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp9_jboycn.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_jboycn.php:32\nStack trace:\n#0 /tmp/tmp9_jboycn.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9_jboycn.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    var $result = 0;\n    for (var i = 1; i < $n; i++) {\n        for (var j = i + 1; j < $n; j++) {\n            for (var k = j + 1; k < $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmphgh71hgz.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for($i = 1; $i <= $n; $i++) {\n        for($j = $i + 1; $j <= $n; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn7o2_7j5.php:35\nStack trace:\n#0 /tmp/tmpn7o2_7j5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpn7o2_7j5.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array(1, 3, 7, 13, 21);\n    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nWarning: Undefined array key 5 in /tmp/tmp9_jboycn.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp9_jboycn.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp9_jboycn.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp9_jboycn.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp9_jboycn.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp9_jboycn.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_jboycn.php:32\nStack trace:\n#0 /tmp/tmp9_jboycn.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9_jboycn.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    for($i = 1; $i <= $n; $i++) {\n        $j = $i;\n        $k = $i;\n        while($j < $n && $k < $n) {\n            if($j + $k > $n) {\n                break;\n            }\n            $result += $i * $j * $k;\n            $j++;\n            $k++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpliv6ih7z.php:34\nStack trace:\n#0 /tmp/tmpliv6ih7z.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpliv6ih7z.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $max = 0;\n    for($i = 1; $i <= $n; $i++) {\n        for($j = $i + 1; $j <= $n; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $max = max($max, $a[$i] * $a[$j] * $a[$k]);\n                }\n            }\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_ac28fw.php:35\nStack trace:\n#0 /tmp/tmpn_ac28fw.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpn_ac28fw.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 0; $i < $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0yb_8w47.php:35\nStack trace:\n#0 /tmp/tmp0yb_8w47.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp0yb_8w47.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw75pnnph.php:35\nStack trace:\n#0 /tmp/tmpw75pnnph.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpw75pnnph.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $count = 0;\n    for (var i = 1; i <= $n - 2; i++) {\n        for (var j = i + 1; j <= $n - 1; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if (i * j * k == $a[i] + $a[j] + $a[k]) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp8trdjcga.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $result = 0;\n    for (var i = 1; i <= $n; i++) {\n        for (var j = i + 1; j <= $n; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpdhwcpe_b.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    var $count = 0;\n    for (var i = 1; i <= $n - 2; i++) {\n        for (var j = i + 1; j <= $n - 1; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmphn8mhby4.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    for (var i = 1; i <= $n; i++) {\n        for (var j = i + 1; j <= $n; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if (i * i - i + 1 == j * j - j + 1 && j * j - j + 1 == k * k - k + 1) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp2yym0ka3.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for($i = 1; $i <= $n; $i++) {\n        for($j = $i + 1; $j <= $n; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxh2l0k9b.php:35\nStack trace:\n#0 /tmp/tmpxh2l0k9b.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxh2l0k9b.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    for($i = 1; $i <= $n; $i++) {\n        $j = $i;\n        while($j <= $n) {\n            $k = $j + $i;\n            if($k > $n) {\n                break;\n            }\n            if($k % 3 == 0) {\n                $result++;\n            }\n            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkx7485nj.php:37\nStack trace:\n#0 /tmp/tmpkx7485nj.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkx7485nj.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($i * $i - $i + 1 == $j * $j - $j + 1 && $j * $j - $j + 1 == $k * $k - $k + 1) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpod8kwomt.php:31\nStack trace:\n#0 /tmp/tmpod8kwomt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpod8kwomt.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $result += $i * $i - $i + 1;\n    }\n    $result = $result / 3;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprl81sso5.php:26\nStack trace:\n#0 /tmp/tmprl81sso5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmprl81sso5.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $result = 0;\n    for (var i = 1; i <= $n - 2; i++) {\n        for (var j = i + 1; j <= $n - 1; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpxrywmh8_.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    for($i = 1; $i <= $n; $i++) {\n        $j = $i + 1;\n        $k = $n - $i;\n        while($j <= $k) {\n            if($j * $j - $j + 1 == $i * $i + $i + 1 && $i + $j + $k % 3 == 0) {\n                $result++;\n            }\n            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfxl02c2x.php:32\nStack trace:\n#0 /tmp/tmpfxl02c2x.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfxl02c2x.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for($i = 1; $i <= $n; $i++) {\n        for($j = $i + 1; $j <= $n; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisey1iw0.php:35\nStack trace:\n#0 /tmp/tmpisey1iw0.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpisey1iw0.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 0; $i < $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0yb_8w47.php:35\nStack trace:\n#0 /tmp/tmp0yb_8w47.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp0yb_8w47.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ( $i = 1; $i <= $n; $i++ ) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ( $i = 1; $i <= $n; $i++ ) {\n        for ( $j = $i + 1; $j <= $n; $j++ ) {\n            for ( $k = $j + 1; $k <= $n; $k++ ) {\n                if ( $a[$i] + $a[$j] + $a[$k] % 3 == 0 ) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yr0nc7i.php:35\nStack trace:\n#0 /tmp/tmp8yr0nc7i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8yr0nc7i.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($i * $i - $i + 1 == $j * $j - $j + 1 && $j * $j - $j + 1 == $k * $k - $k + 1) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpod8kwomt.php:31\nStack trace:\n#0 /tmp/tmpod8kwomt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpod8kwomt.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array(1, 3, 7, 13, 21);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ph0_kn5.php:32\nStack trace:\n#0 /tmp/tmp3ph0_kn5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp3ph0_kn5.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for($i = 1; $i <= $n - 2; $i++) {\n        for($j = $i + 1; $j <= $n - 1; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcf7h3pvm.php:35\nStack trace:\n#0 /tmp/tmpcf7h3pvm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcf7h3pvm.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array(1);\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7vqfuw6t.php:35\nStack trace:\n#0 /tmp/tmp7vqfuw6t.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp7vqfuw6t.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for($i = 1; $i <= $n; $i++) {\n        for($j = $i + 1; $j <= $n; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxh2l0k9b.php:35\nStack trace:\n#0 /tmp/tmpxh2l0k9b.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxh2l0k9b.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyj_02sb.php:35\nStack trace:\n#0 /tmp/tmpyyj_02sb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyyj_02sb.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ($i = 0; $i < $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0wsu0j1.php:35\nStack trace:\n#0 /tmp/tmpf0wsu0j1.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpf0wsu0j1.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i=1; $i<$n; $i++) {\n        $a[$i] = $i*$i - $i + 1;\n    }\n    $result = 0;\n    for($i=0; $i<$n-2; $i++) {\n        for($j=$i+1; $j<$n-1; $j++) {\n            for($k=$j+1; $k<$n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] == 3 * $a[$i] * $a[$j] * $a[$k]) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmp3yg3m6_j.php on line 21\n\nWarning: Undefined array key 0 in /tmp/tmp3yg3m6_j.php on line 21\n\nWarning: Undefined array key 0 in /tmp/tmp3yg3m6_j.php on line 21\n\nWarning: Undefined array key 0 in /tmp/tmp3yg3m6_j.php on line 21\n\nWarning: Undefined array key 0 in /tmp/tmp3yg3m6_j.php on line 21\n\nWarning: Undefined array key 0 in /tmp/tmp3yg3m6_j.php on line 21\n\nWarning: Undefined array key 0 in /tmp/tmp3yg3m6_j.php on line 21\n\nWarning: Undefined array key 0 in /tmp/tmp3yg3m6_j.php on line 21\n\nWarning: Undefined array key 0 in /tmp/tmp3yg3m6_j.php on line 21\n\nWarning: Undefined array key 0 in /tmp/tmp3yg3m6_j.php on line 21\n\nWarning: Undefined array key 0 in /tmp/tmp3yg3m6_j.php on line 21\n\nWarning: Undefined array key 0 in /tmp/tmp3yg3m6_j.php on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3yg3m6_j.php:35\nStack trace:\n#0 /tmp/tmp3yg3m6_j.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3yg3m6_j.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for($i = 1; $i <= $n; $i++) {\n        for($j = $i + 1; $j <= $n; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn7o2_7j5.php:35\nStack trace:\n#0 /tmp/tmpn7o2_7j5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpn7o2_7j5.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    for($i = 1; $i <= $n; $i++) {\n        $result += $i * $i - $i + 1;\n    }\n    for($i = 1; $i <= $n; $i++) {\n        for($j = $i + 1; $j <= $n; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($i * $i + $j * $j + $k * $k == $result) {\n                    return $i * $j * $k;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70th4r_5.php:34\nStack trace:\n#0 /tmp/tmp70th4r_5.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp70th4r_5.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array(1);\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx4sj_py3.php:35\nStack trace:\n#0 /tmp/tmpx4sj_py3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpx4sj_py3.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    var $count = 0;\n    for (var i = 1; i <= $n - 2; i++) {\n        for (var j = i + 1; j <= $n - 1; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmphn8mhby4.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 0; $i < $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for($i = 0; $i < $n; $i++) {\n        for($j = $i + 1; $j < $n; $j++) {\n            for($k = $j + 1; $k < $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2r0dxxvz.php:35\nStack trace:\n#0 /tmp/tmp2r0dxxvz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2r0dxxvz.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyj_02sb.php:35\nStack trace:\n#0 /tmp/tmpyyj_02sb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyyj_02sb.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for($i = 1; $i <= $n - 2; $i++) {\n        for($j = $i + 1; $j <= $n - 1; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcf7h3pvm.php:35\nStack trace:\n#0 /tmp/tmpcf7h3pvm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcf7h3pvm.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    for($i = 1; $i <= $n; $i++) {\n        $result += $i * $i - $i + 1;\n    }\n    $result = $result / 3;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s90z62j.php:26\nStack trace:\n#0 /tmp/tmp6s90z62j.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6s90z62j.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for($i = 1; $i <= $n - 2; $i++) {\n        for($j = $i + 1; $j <= $n - 1; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcf7h3pvm.php:35\nStack trace:\n#0 /tmp/tmpcf7h3pvm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcf7h3pvm.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ( $i = 1; $i <= $n; $i++ ) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ( $i = 1; $i <= $n; $i++ ) {\n        for ( $j = $i + 1; $j <= $n; $j++ ) {\n            for ( $k = $j + 1; $k <= $n; $k++ ) {\n                if ( $a[$i] + $a[$j] + $a[$k] % 3 == 0 ) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yr0nc7i.php:35\nStack trace:\n#0 /tmp/tmp8yr0nc7i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8yr0nc7i.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array(1);\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx4sj_py3.php:35\nStack trace:\n#0 /tmp/tmpx4sj_py3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpx4sj_py3.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ( $i = 1; $i <= $n; $i++ ) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ( $i = 1; $i <= $n; $i++ ) {\n        for ( $j = $i + 1; $j <= $n; $j++ ) {\n            for ( $k = $j + 1; $k <= $n; $k++ ) {\n                if ( $a[$i] + $a[$j] + $a[$k] % 3 == 0 ) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fzwhiq9.php:35\nStack trace:\n#0 /tmp/tmp1fzwhiq9.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1fzwhiq9.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for($i = 1; $i <= $n - 2; $i++) {\n        for($j = $i + 1; $j <= $n - 1; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcf7h3pvm.php:35\nStack trace:\n#0 /tmp/tmpcf7h3pvm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcf7h3pvm.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyj_02sb.php:35\nStack trace:\n#0 /tmp/tmpyyj_02sb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyyj_02sb.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 0; $i < $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tfiwk_m.php:35\nStack trace:\n#0 /tmp/tmp5tfiwk_m.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp5tfiwk_m.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    for($i = 1; $i <= $n; $i++) {\n        for($j = $i + 1; $j <= $n; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($i * $i - $i + 1 == $j * $j - $j + 1 && $j * $j - $j + 1 == $k * $k - $k + 1) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobmlgbbw.php:31\nStack trace:\n#0 /tmp/tmpobmlgbbw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpobmlgbbw.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6u_sfk8k.php:35\nStack trace:\n#0 /tmp/tmp6u_sfk8k.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6u_sfk8k.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 0; i < $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $count = 0;\n    for (var i = 0; i < $n - 2; i++) {\n        for (var j = i + 1; j < $n - 1; j++) {\n            for (var k = j + 1; k < $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp70awwod0.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for($i = 1; $i <= $n; $i++) {\n        for($j = $i + 1; $j <= $n; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxh2l0k9b.php:35\nStack trace:\n#0 /tmp/tmpxh2l0k9b.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxh2l0k9b.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6u_sfk8k.php:35\nStack trace:\n#0 /tmp/tmp6u_sfk8k.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6u_sfk8k.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyj_02sb.php:35\nStack trace:\n#0 /tmp/tmpyyj_02sb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyyj_02sb.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ( $i = 1; $i <= $n; $i++ ) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ( $i = 1; $i <= $n; $i++ ) {\n        for ( $j = $i + 1; $j <= $n; $j++ ) {\n            for ( $k = $j + 1; $k <= $n; $k++ ) {\n                if ( $a[$i] + $a[$j] + $a[$k] % 3 == 0 ) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yr0nc7i.php:35\nStack trace:\n#0 /tmp/tmp8yr0nc7i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8yr0nc7i.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array(1, 3, 7, 13, 21);\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] == $a[$i] * $a[$j] * $a[$k]) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nWarning: Undefined array key 5 in /tmp/tmpu1v0m8nh.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmpu1v0m8nh.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmpu1v0m8nh.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmpu1v0m8nh.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmpu1v0m8nh.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmpu1v0m8nh.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmpu1v0m8nh.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmpu1v0m8nh.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmpu1v0m8nh.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmpu1v0m8nh.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmpu1v0m8nh.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmpu1v0m8nh.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu1v0m8nh.php:32\nStack trace:\n#0 /tmp/tmpu1v0m8nh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpu1v0m8nh.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $result = 0;\n    for (var i = 1; i <= $n; i++) {\n        for (var j = i + 1; j <= $n; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if (i * j * k % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpkkte2bl3.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var $i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpmgf03hpy.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $count = 0;\n    for (var i = 1; i <= $n; i++) {\n        for (var j = i + 1; j <= $n; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp37df9o__.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw75pnnph.php:35\nStack trace:\n#0 /tmp/tmpw75pnnph.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpw75pnnph.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for($i = 1; $i <= $n; $i++) {\n        for($j = $i + 1; $j <= $n; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxh2l0k9b.php:35\nStack trace:\n#0 /tmp/tmpxh2l0k9b.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxh2l0k9b.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $result = 0;\n    for (var i = 1; i <= $n; i++) {\n        for (var j = i + 1; j <= $n; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpdhwcpe_b.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $i = 1;\n    while($i <= $n) {\n        $j = $i + 1;\n        while($j <= $n) {\n            $k = $j + 1;\n            while($k <= $n) {\n                if($i * $i - $i + 1 == $j * $j - $j + 1 && $j * $j - $j + 1 == $k * $k - $k + 1) {\n                    $result++;\n                }\n                $k++;\n            }\n            $j++;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnk57gt3l.php:37\nStack trace:\n#0 /tmp/tmpnk57gt3l.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpnk57gt3l.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    var $count = 0;\n    for (var i = 1; i < $n; i++) {\n        for (var j = i + 1; j < $n; j++) {\n            for (var k = j + 1; k < $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpya1_slor.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for($i = 1; $i <= $n - 2; $i++) {\n        for($j = $i + 1; $j <= $n - 1; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcf7h3pvm.php:35\nStack trace:\n#0 /tmp/tmpcf7h3pvm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcf7h3pvm.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($i * $i - $i + 1 == $j * $j - $j + 1 && $j * $j - $j + 1 == $k * $k - $k + 1) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpod8kwomt.php:31\nStack trace:\n#0 /tmp/tmpod8kwomt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpod8kwomt.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    for (var i = 1; i <= $n; i++) {\n        for (var j = i + 1; j <= $n; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if (i * i - i + 1 == j * j - j + 1 && j * j - j + 1 == k * k - k + 1) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp2yym0ka3.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for($i = 1; $i <= $n; $i++) {\n        for($j = $i + 1; $j <= $n; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn7o2_7j5.php:35\nStack trace:\n#0 /tmp/tmpn7o2_7j5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpn7o2_7j5.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    var $count = 0;\n    for (var i = 1; i <= $n; i++) {\n        for (var j = i + 1; j <= $n; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpowwcx7rh.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for($i = 1; $i <= $n - 2; $i++) {\n        for($j = $i + 1; $j <= $n - 1; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0j2io13.php:35\nStack trace:\n#0 /tmp/tmpf0j2io13.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpf0j2io13.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 0; i < $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $result = 0;\n    for (var i = 0; i < $n; i++) {\n        for (var j = i + 1; j < $n; j++) {\n            for (var k = j + 1; k < $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpc20z6k55.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for($i = 1; $i <= $n - 2; $i++) {\n        for($j = $i + 1; $j <= $n - 1; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcf7h3pvm.php:35\nStack trace:\n#0 /tmp/tmpcf7h3pvm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcf7h3pvm.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw75pnnph.php:35\nStack trace:\n#0 /tmp/tmpw75pnnph.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpw75pnnph.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyj_02sb.php:35\nStack trace:\n#0 /tmp/tmpyyj_02sb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyyj_02sb.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $count = 0;\n    for (var i = 1; i <= $n; i++) {\n        for (var j = i + 1; j <= $n; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp37df9o__.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $result = 0;\n    for (var i = 1; i <= $n - 2; i++) {\n        for (var j = i + 1; j <= $n - 1; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if (i * j * k == $a[i] + $a[j] + $a[k]) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpauth9thd.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $result = 0;\n    for (var i = 1; i <= $n; i++) {\n        for (var j = i + 1; j <= $n; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpdhwcpe_b.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ( $i = 1; $i <= $n; $i++ ) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ( $i = 1; $i <= $n; $i++ ) {\n        for ( $j = $i + 1; $j <= $n; $j++ ) {\n            for ( $k = $j + 1; $k <= $n; $k++ ) {\n                if ( $a[$i] + $a[$j] + $a[$k] % 3 == 0 ) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpluehgjb7.php:35\nStack trace:\n#0 /tmp/tmpluehgjb7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpluehgjb7.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ( $i = 1; $i <= $n; $i++ ) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ( $i = 1; $i <= $n; $i++ ) {\n        for ( $j = $i + 1; $j <= $n; $j++ ) {\n            for ( $k = $j + 1; $k <= $n; $k++ ) {\n                if ( $a[$i] + $a[$j] + $a[$k] % 3 == 0 ) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fzwhiq9.php:35\nStack trace:\n#0 /tmp/tmp1fzwhiq9.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1fzwhiq9.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array(1, 3, 7, 13, 21);\n    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] == $a[$i] * $a[$j] * $a[$k] && $a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nWarning: Undefined array key 5 in /tmp/tmp_znyrrp4.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp_znyrrp4.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp_znyrrp4.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp_znyrrp4.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp_znyrrp4.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp_znyrrp4.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp_znyrrp4.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp_znyrrp4.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp_znyrrp4.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp_znyrrp4.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp_znyrrp4.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmp_znyrrp4.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_znyrrp4.php:32\nStack trace:\n#0 /tmp/tmp_znyrrp4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_znyrrp4.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    for($i = 1; $i <= $n; $i++) {\n        $result += $i * $i - $i + 1;\n    }\n    for($i = 1; $i <= $n - 2; $i++) {\n        for($j = $i + 1; $j <= $n - 1; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($i * $i + $j * $j + $k * $k == $result) {\n                    return $i * $j * $k;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_2k90__9.php:34\nStack trace:\n#0 /tmp/tmp_2k90__9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_2k90__9.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ( $i = 1; $i <= $n; $i++ ) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ( $i = 1; $i <= $n; $i++ ) {\n        for ( $j = $i + 1; $j <= $n; $j++ ) {\n            for ( $k = $j + 1; $k <= $n; $k++ ) {\n                if ( $a[$i] + $a[$j] + $a[$k] % 3 == 0 ) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpluehgjb7.php:35\nStack trace:\n#0 /tmp/tmpluehgjb7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpluehgjb7.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $result += $i * $i - $i + 1;\n    }\n    $result /= 3;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5d9otf9r.php:26\nStack trace:\n#0 /tmp/tmp5d9otf9r.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp5d9otf9r.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyj_02sb.php:35\nStack trace:\n#0 /tmp/tmpyyj_02sb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyyj_02sb.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyj_02sb.php:35\nStack trace:\n#0 /tmp/tmpyyj_02sb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyyj_02sb.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array(1, 3, 7, 13, 21);\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nWarning: Undefined array key 5 in /tmp/tmplqd0tmxm.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmplqd0tmxm.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmplqd0tmxm.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmplqd0tmxm.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmplqd0tmxm.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmplqd0tmxm.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqd0tmxm.php:32\nStack trace:\n#0 /tmp/tmplqd0tmxm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplqd0tmxm.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $count = 0;\n    for (var i = 1; i <= $n - 2; i++) {\n        for (var j = i + 1; j <= $n - 1; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpvbgjs85j.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $i = 0;\n    while ($i < $n) {\n        $j = $i + 1;\n        while ($j < $n) {\n            $k = $j + 1;\n            while ($k < $n) {\n                if ((($i * $i - $i + 1) * ($j * $j - $j + 1) * ($k * $k - $k + 1)) % 3 == 0) {\n                    $result++;\n                }\n                $k++;\n            }\n            $j++;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3emfwwwf.php:37\nStack trace:\n#0 /tmp/tmp3emfwwwf.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp3emfwwwf.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ( $i = 1; $i <= $n; $i++ ) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ( $i = 1; $i <= $n; $i++ ) {\n        for ( $j = $i + 1; $j <= $n; $j++ ) {\n            for ( $k = $j + 1; $k <= $n; $k++ ) {\n                if ( $a[$i] + $a[$j] + $a[$k] % 3 == 0 ) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fzwhiq9.php:35\nStack trace:\n#0 /tmp/tmp1fzwhiq9.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1fzwhiq9.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ( $i = 1; $i <= $n; $i++ ) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ( $i = 1; $i <= $n; $i++ ) {\n        for ( $j = $i + 1; $j <= $n; $j++ ) {\n            for ( $k = $j + 1; $k <= $n; $k++ ) {\n                if ( $a[$i] + $a[$j] + $a[$k] % 3 == 0 ) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yr0nc7i.php:35\nStack trace:\n#0 /tmp/tmp8yr0nc7i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8yr0nc7i.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyj_02sb.php:35\nStack trace:\n#0 /tmp/tmpyyj_02sb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyyj_02sb.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $count = 0;\n    for (var i = 1; i <= $n; i++) {\n        for (var j = i + 1; j <= $n; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if (i * j * k == $a[i] + $a[j] + $a[k]) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpg4bhy_fa.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ( $i = 1; $i <= $n; $i++ ) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ( $i = 1; $i <= $n; $i++ ) {\n        for ( $j = $i + 1; $j <= $n; $j++ ) {\n            for ( $k = $j + 1; $k <= $n; $k++ ) {\n                if ( $a[$i] + $a[$j] + $a[$k] % 3 == 0 ) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yr0nc7i.php:35\nStack trace:\n#0 /tmp/tmp8yr0nc7i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8yr0nc7i.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array(1, 3, 7, 13, 21);\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nWarning: Undefined array key 5 in /tmp/tmplqd0tmxm.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmplqd0tmxm.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmplqd0tmxm.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmplqd0tmxm.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmplqd0tmxm.php on line 18\n\nWarning: Undefined array key 5 in /tmp/tmplqd0tmxm.php on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqd0tmxm.php:32\nStack trace:\n#0 /tmp/tmplqd0tmxm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplqd0tmxm.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $i = 0;\n    while($i < $n) {\n        $j = $i + 1;\n        while($j < $n) {\n            $k = $j + 1;\n            while($k < $n) {\n                if($i * $i - $i + 1 == $j * $j - $j + 1 && $j * $j - $j + 1 == $k * $k - $k + 1) {\n                    $result++;\n                }\n                $k++;\n            }\n            $j++;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeir8jo7a.php:37\nStack trace:\n#0 /tmp/tmpeir8jo7a.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpeir8jo7a.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $result = 0;\n    for (var i = 1; i <= $n; i++) {\n        for (var j = i + 1; j <= $n; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpdhwcpe_b.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw75pnnph.php:35\nStack trace:\n#0 /tmp/tmpw75pnnph.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpw75pnnph.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $max = 0;\n    for($i = 1; $i <= $n; $i++) {\n        for($j = $i + 1; $j <= $n; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $max = max($max, $a[$i] * $a[$j] * $a[$k]);\n                }\n            }\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_ac28fw.php:35\nStack trace:\n#0 /tmp/tmpn_ac28fw.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpn_ac28fw.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ( $i = 1; $i <= $n; $i++ ) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ( $i = 1; $i <= $n; $i++ ) {\n        for ( $j = $i + 1; $j <= $n; $j++ ) {\n            for ( $k = $j + 1; $k <= $n; $k++ ) {\n                if ( $a[$i] + $a[$j] + $a[$k] % 3 == 0 ) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yr0nc7i.php:35\nStack trace:\n#0 /tmp/tmp8yr0nc7i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8yr0nc7i.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for($i = 1; $i <= $n - 2; $i++) {\n        for($j = $i + 1; $j <= $n - 1; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0j2io13.php:35\nStack trace:\n#0 /tmp/tmpf0j2io13.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpf0j2io13.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ( $i = 1; $i <= $n; $i++ ) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ( $i = 1; $i <= $n; $i++ ) {\n        for ( $j = $i + 1; $j <= $n; $j++ ) {\n            for ( $k = $j + 1; $k <= $n; $k++ ) {\n                if ( $a[$i] + $a[$j] + $a[$k] % 3 == 0 ) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yr0nc7i.php:35\nStack trace:\n#0 /tmp/tmp8yr0nc7i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8yr0nc7i.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for($i = 1; $i <= $n; $i++) {\n        for($j = $i + 1; $j <= $n; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn7o2_7j5.php:35\nStack trace:\n#0 /tmp/tmpn7o2_7j5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpn7o2_7j5.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for($i = 1; $i <= $n; $i++) {\n        for($j = $i + 1; $j <= $n; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisey1iw0.php:35\nStack trace:\n#0 /tmp/tmpisey1iw0.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpisey1iw0.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i=1; $i<$n; $i++) {\n        $a[$i] = $i*$i - $i + 1;\n    }\n    $result = 0;\n    for($i=0; $i<$n-2; $i++) {\n        for($j=$i+1; $j<$n-1; $j++) {\n            for($k=$j+1; $k<$n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nWarning: Undefined array key 0 in /tmp/tmpya7j2kdq.php on line 21\n\nWarning: Undefined array key 0 in /tmp/tmpya7j2kdq.php on line 21\n\nWarning: Undefined array key 0 in /tmp/tmpya7j2kdq.php on line 21\n\nWarning: Undefined array key 0 in /tmp/tmpya7j2kdq.php on line 21\n\nWarning: Undefined array key 0 in /tmp/tmpya7j2kdq.php on line 21\n\nWarning: Undefined array key 0 in /tmp/tmpya7j2kdq.php on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpya7j2kdq.php:35\nStack trace:\n#0 /tmp/tmpya7j2kdq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpya7j2kdq.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    var $count = 0;\n    for (var i = 1; i <= $n - 2; i++) {\n        for (var j = i + 1; j <= $n - 1; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmphn8mhby4.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw75pnnph.php:35\nStack trace:\n#0 /tmp/tmpw75pnnph.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpw75pnnph.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ( $i = 1; $i <= $n; $i++ ) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ( $i = 1; $i <= $n; $i++ ) {\n        for ( $j = $i + 1; $j <= $n; $j++ ) {\n            for ( $k = $j + 1; $k <= $n; $k++ ) {\n                if ( $a[$i] + $a[$j] + $a[$k] % 3 == 0 ) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yr0nc7i.php:35\nStack trace:\n#0 /tmp/tmp8yr0nc7i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8yr0nc7i.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $count = 0;\n    for (var i = 1; i <= $n - 2; i++) {\n        for (var j = i + 1; j <= $n - 1; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpvbgjs85j.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $max = 0;\n    for($i = 1; $i <= $n - 2; $i++) {\n        for($j = $i + 1; $j <= $n - 1; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $max = max($max, $i * $j * $k);\n                }\n            }\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8a93710u.php:35\nStack trace:\n#0 /tmp/tmp8a93710u.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8a93710u.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for($i = 1; $i <= $n; $i++) {\n        for($j = $i + 1; $j <= $n; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn7o2_7j5.php:35\nStack trace:\n#0 /tmp/tmpn7o2_7j5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpn7o2_7j5.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw75pnnph.php:35\nStack trace:\n#0 /tmp/tmpw75pnnph.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpw75pnnph.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $result = 0;\n    for (var i = 1; i <= $n - 2; i++) {\n        for (var j = i + 1; j <= $n - 1; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpxrywmh8_.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ( $i = 1; $i <= $n; $i++ ) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ( $i = 1; $i <= $n; $i++ ) {\n        for ( $j = $i + 1; $j <= $n; $j++ ) {\n            for ( $k = $j + 1; $k <= $n; $k++ ) {\n                if ( $a[$i] + $a[$j] + $a[$k] % 3 == 0 ) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpluehgjb7.php:35\nStack trace:\n#0 /tmp/tmpluehgjb7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpluehgjb7.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var $i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $max = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $max++;\n                }\n            }\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpf_qccajb.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ( $i = 1; $i <= $n; $i++ ) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ( $i = 1; $i <= $n; $i++ ) {\n        for ( $j = $i + 1; $j <= $n; $j++ ) {\n            for ( $k = $j + 1; $k <= $n; $k++ ) {\n                if ( $a[$i] + $a[$j] + $a[$k] % 3 == 0 ) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yr0nc7i.php:35\nStack trace:\n#0 /tmp/tmp8yr0nc7i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8yr0nc7i.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for($i = 1; $i <= $n - 2; $i++) {\n        for($j = $i + 1; $j <= $n - 1; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcf7h3pvm.php:35\nStack trace:\n#0 /tmp/tmpcf7h3pvm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcf7h3pvm.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    var result = 0;\n    for (var i = 1; i < $n; i++) {\n        for (var j = i + 1; j < $n; j++) {\n            for (var k = j + 1; k < $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    result++;\n                }\n            }\n        }\n    }\n    return result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpytbab1nr.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpadtahnme.php:35\nStack trace:\n#0 /tmp/tmpadtahnme.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpadtahnme.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6u_sfk8k.php:35\nStack trace:\n#0 /tmp/tmp6u_sfk8k.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6u_sfk8k.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    for($i = 1; $i <= $n; $i++) {\n        $result += $i * $i - $i + 1;\n    }\n    $result = $result / 3;\n    $result = $result % $n;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpksvu1ush.php:27\nStack trace:\n#0 /tmp/tmpksvu1ush.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpksvu1ush.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for($i = 1; $i <= $n - 2; $i++) {\n        for($j = $i + 1; $j <= $n - 1; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsih63fu_.php:35\nStack trace:\n#0 /tmp/tmpsih63fu_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsih63fu_.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ( $i = 1; $i <= $n; $i++ ) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ( $i = 1; $i <= $n; $i++ ) {\n        for ( $j = $i + 1; $j <= $n; $j++ ) {\n            for ( $k = $j + 1; $k <= $n; $k++ ) {\n                if ( $a[$i] + $a[$j] + $a[$k] % 3 == 0 ) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yr0nc7i.php:35\nStack trace:\n#0 /tmp/tmp8yr0nc7i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8yr0nc7i.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyj_02sb.php:35\nStack trace:\n#0 /tmp/tmpyyj_02sb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyyj_02sb.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6u_sfk8k.php:35\nStack trace:\n#0 /tmp/tmp6u_sfk8k.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6u_sfk8k.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for($i = 1; $i <= $n - 2; $i++) {\n        for($j = $i + 1; $j <= $n - 1; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0j2io13.php:35\nStack trace:\n#0 /tmp/tmpf0j2io13.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpf0j2io13.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyj_02sb.php:35\nStack trace:\n#0 /tmp/tmpyyj_02sb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyyj_02sb.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $result = 0;\n    for (var i = 1; i <= $n - 2; i++) {\n        for (var j = i + 1; j <= $n - 1; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpxrywmh8_.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw75pnnph.php:35\nStack trace:\n#0 /tmp/tmpw75pnnph.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpw75pnnph.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyj_02sb.php:35\nStack trace:\n#0 /tmp/tmpyyj_02sb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyyj_02sb.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $count = 0;\n    for (i = 1; i <= $n; i++) {\n        for (j = i + 1; j <= $n; j++) {\n            for (k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"=\", expecting \";\" in /tmp/tmplpxpp0u_.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($i * $i - $i + 1 == $j * $j - $j + 1 && $j * $j - $j + 1 == $k * $k - $k + 1) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpod8kwomt.php:31\nStack trace:\n#0 /tmp/tmpod8kwomt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpod8kwomt.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $result = 0;\n    for (var i = 1; i <= $n; i++) {\n        for (var j = i + 1; j <= $n; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpdhwcpe_b.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyj_02sb.php:35\nStack trace:\n#0 /tmp/tmpyyj_02sb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyyj_02sb.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ( $i = 1; $i <= $n; $i++ ) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ( $i = 1; $i <= $n; $i++ ) {\n        for ( $j = $i + 1; $j <= $n; $j++ ) {\n            for ( $k = $j + 1; $k <= $n; $k++ ) {\n                if ( $a[$i] + $a[$j] + $a[$k] % 3 == 0 ) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yr0nc7i.php:35\nStack trace:\n#0 /tmp/tmp8yr0nc7i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8yr0nc7i.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw75pnnph.php:35\nStack trace:\n#0 /tmp/tmpw75pnnph.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpw75pnnph.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for($i = 1; $i <= $n; $i++) {\n        for($j = $i + 1; $j <= $n; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn7o2_7j5.php:35\nStack trace:\n#0 /tmp/tmpn7o2_7j5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpn7o2_7j5.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $count = 0;\n    for (var i = 1; i <= $n; i++) {\n        for (var j = i + 1; j <= $n; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmp37df9o__.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpadtahnme.php:35\nStack trace:\n#0 /tmp/tmpadtahnme.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpadtahnme.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqndn6ons.php:35\nStack trace:\n#0 /tmp/tmpqndn6ons.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqndn6ons.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    var $count = 0;\n    for (var i = 1; i < $n; i++) {\n        for (var j = i + 1; j < $n; j++) {\n            for (var k = j + 1; k < $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpya1_slor.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for($i = 1; $i <= $n; $i++) {\n        for($j = $i + 1; $j <= $n; $j++) {\n            for($k = $j + 1; $k <= $n; $k++) {\n                if($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn7o2_7j5.php:35\nStack trace:\n#0 /tmp/tmpn7o2_7j5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpn7o2_7j5.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $result += $i * $i - $i + 1;\n    }\n    $result = $result / 3;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprl81sso5.php:26\nStack trace:\n#0 /tmp/tmprl81sso5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmprl81sso5.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw75pnnph.php:35\nStack trace:\n#0 /tmp/tmpw75pnnph.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpw75pnnph.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    for($i = 1; $i <= $n; $i++) {\n        $result += $i * $i - $i + 1;\n    }\n    $result = $result / 3;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s90z62j.php:26\nStack trace:\n#0 /tmp/tmp6s90z62j.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6s90z62j.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyj_02sb.php:35\nStack trace:\n#0 /tmp/tmpyyj_02sb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyyj_02sb.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for (var i = 1; i <= $n; i++) {\n        $a[i] = i * i - i + 1;\n    }\n    $result = 0;\n    for (var i = 1; i <= $n - 2; i++) {\n        for (var j = i + 1; j <= $n - 1; j++) {\n            for (var k = j + 1; k <= $n; k++) {\n                if ($a[i] + $a[j] + $a[k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting \";\" in /tmp/tmpxrywmh8_.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result = 0;\n    $a = array();\n    for ( $i = 1; $i <= $n; $i++ ) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ( $i = 1; $i <= $n; $i++ ) {\n        for ( $j = $i + 1; $j <= $n; $j++ ) {\n            for ( $k = $j + 1; $k <= $n; $k++ ) {\n                if ( $a[$i] + $a[$j] + $a[$k] % 3 == 0 ) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yr0nc7i.php:35\nStack trace:\n#0 /tmp/tmp8yr0nc7i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8yr0nc7i.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9l2a44l.php:35\nStack trace:\n#0 /tmp/tmpm9l2a44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm9l2a44l.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// You are given a positive integer n. You have to create an integer array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $result++;\n                }\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1664293475,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyj_02sb.php:35\nStack trace:\n#0 /tmp/tmpyyj_02sb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyyj_02sb.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
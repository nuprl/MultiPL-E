name: HumanEval_46_fib4
language: lua
prompt: "-- The Fib4 number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n-- fib4(0) -> 0\n-- fib4(1) -> 0\n-- fib4(2) -> 2\n\
  -- fib4(3) -> 0\n-- fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
  -- Please write a function to efficiently compute the n-th element of the fib4 number\
  \ sequence.  Do not use recursion.\n-- >>> fib4(5)\n-- 4\n-- >>> fib4(6)\n-- 8\n\
  -- >>> fib4(7)\n-- 14\nlocal function fib4(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib4\n\
  \    lu.assertEquals(candidate(5), 4)\n    lu.assertEquals(candidate(8), 28)\n \
  \   lu.assertEquals(candidate(10), 104)\n    lu.assertEquals(candidate(12), 386)\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if n < 4 then return n end\n  local fib4 = 0\n  while fib4 <= n do\n\
    \    fib4 = fib4 + fib4 + fib4 + fib4\n  end\n  return fib4\nend", "  if n==0\
    \ then return 0 end\n  if n==1 then return 0 end\n  return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4)\n\
    end", "    if n < 0 then\n        return nil\n    elseif n == 0 then\n       \
    \ return 0\n    elseif n == 1 then\n        return 1\n    else\n        return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n    end\nend", "    if\
    \ n < 1 then\n        -- base case: fib series has 0 at 0 and 1 at 1\n       \
    \ return 0\n    end\n    if n < 3 then\n        return fib4(n-1) + fib4(n-2) +\
    \ fib4(n-3)\n    else\n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n\
    \    end\nend", "  if n==0 then\n    return 0\n  elseif n==1 then\n    return\
    \ 0\n  else\n    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n  end\n\
    end", "  if n < 4 then\n    return n\n  else\n    return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4)\n  end\nend", "    if n < 4 then\n        return 1\n\
    \    elseif n < 8 then\n        return fib4(n - 1) + fib4(n - 2) + fib4(n - 3)\
    \ + fib4(n - 4)\n    else\n        return fib4(n - 5) + fib4(n - 6) + fib4(n -\
    \ 7) + fib4(n - 8)\n    end\nend", "  local fib4number = 0\n  if n <= 0 then return\
    \ 0 end\n  if n == 1 then return 1 end\n  if n == 2 then return 2 end\n  if n\
    \ == 3 then return 3 end\n  if n == 4 then return 4 end\n  if n == 5 then return\
    \ 5 end\n  fib4number = fib4number + fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n\
    \  return fib4number\nend", "\tlocal fib4, fib5, fib6, fib7 = 0, 5, 7, 0\n\tfor\
    \ _ = 1, n do\n\t\tfib6, fib7, fib5 = fib7, fib5 + fib6, fib5\n\tend\n\treturn\
    \ fib5\nend", "\tif n < 0 then return nil end\n\tif n == 0 then return 0 end\n\
    \tif n == 1 then return 0 end\n\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3)\
    \ + fib4(n - 4)\nend", "  if n == 0 then\n    return 0\n  elseif n == 1 then\n\
    \    return 1\n  elseif n == 2 then\n    return 2\n  elseif n == 3 then\n    return\
    \ 0\n  else\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n\
    \  end\nend\n</cell>\n<cell>", "  local fib4 = 0\n  if n < 0 then\n    return\
    \ 0\n  end\n  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return\
    \ 0\n  end\n  if n > 1 then\n    fib4 = fib4(n - 1) + fib4(n - 2)\n  end\n  return\
    \ fib4\nend", "  -- Your code here\n  return n\nend", "  if n <= 0 then\n    return\
    \ 0\n  else\n    if n == 1 then\n      return 0\n    elseif n == 2 then\n    \
    \  return 2\n    elseif n == 3 then\n      return 0\n    elseif n == 4 then\n\
    \      return 0\n    elseif n == 5 then\n      return 4\n    elseif n == 6 then\n\
    \      return 0\n    elseif n == 7 then\n      return 8\n    elseif n == 8 then\n\
    \      return 0\n    elseif n == 9 and (n ~= 10 or (n % 10)) then\n      return\
    \ 14\n    else\n      return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n\
    \ - 4)\n    end\n  end\nend", "  if n < 0 then return nil end\n  if n < 4 then\
    \ return n end\n  local fib4a = fib4(n - 4)\n  if fib4a ~= nil then return fib4a\
    \ + fib4(n - 3) end\n  return fib4(n - 3) + fib4(n - 2) + fib4(n - 1) + fib4(n\
    \ - 4)\nend", "\tlocal fib4 = 0\n\twhile n > 1 do\n\t\tfib4 = fib4 + 1\n\t\tn\
    \ = n - 1\n\tend\n\treturn fib4\nend", "  if n < 0 then\n    return nil\n  end",
  "\tif n == 1 then\n\t\treturn 0\n\telse\n\t\treturn fib4(n - 1) + fib4(n - 2) +\
    \ fib4(n - 3) + fib4(n - 4)\n\tend\nend", "    if n <= 0 then\n        return\
    \ 0\n    elseif n == 1 then\n        return 1\n    else\n        return fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n    end\nend", "  if n < 0 then\n\
    \    return \"fib4(\" .. n .. \"): Invalid input - fib4 sequence is only defined\
    \ for positive integers\"\n  end", "  if n < 4 then return n else return fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4) end\nend", "    if n == 0 then\n\
    \        return 0\n    elseif n == 1 then\n        return 1\n    else\n      \
    \  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n    end\nend",
  "  if n <= 1 then\n    return 0\n  else\n    return fib4(n - 1) + fib4(n - 2) +\
    \ fib4(n - 3) + fib4(n - 4)\n  end\nend", "  if n < 0 then\n    return nil\n \
    \ end\n  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return 0\n\
    \  end\n  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend",
  "   local fib4 = function(n)\n      if n <= 0 then return 0 end\n      if n == 1\
    \ then return 0 end\n      if n == 2 then return 2 end\n      local fib4 = fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\n      fib4 = fib4 + 4\n      return fib4\n\
    \   end\n   return fib4(n)\nend", "    local fib4n = 1\n    for _ = 1, n do\n\
    \        fib4n = fib4n + 2\n    end\n    return fib4n\nend", "\tlocal n2, fib4s,\
    \ f4, n3\n\tif n <= 0 then\n\t\treturn 0\n\telseif n < 4 then\n\t\treturn n\n\t\
    else\n\t\tn2 = n / 2\n\t\tfib4s = {n2, n2+fib4s[n2], n2+fib4s[n2]+fib4s[n2+1]}\n\
    \t\tf4 = fib4s[n2] + fib4s[n2+1] + fib4s[n2+2]\n\t\treturn f4 / 4\n\tend\nend",
  "  if n < 0 then\n    error(\"fib4 number sequence index out of range\", 0)\n  end\n\
    \  -- The Fibbonacci sequence is defined:\n  --   fib4(0) -> 0\n  --   fib4(1)\
    \ -> 1\n  --   fib4(2) -> 1\n  --   fib4(3) -> 2\n  --   fib4(n) -> fib4(n-1)\
    \ + fib4(n-2).\n  -- The first case happens because fib4(0) = fib4(1) = fib4(2)\
    \ = fib4(3) = 0.\n  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n\
    \  if n == 2 then return 2 end\n  if n == 3 then return 0 end\n  local result\
    \ = fib4(n-1) + fib4(n-2)\n  return result\nend", "  if n < 1 then return 0 end\n\
    \  if n < 3 then return n end\n  return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n\
    end", "  if n < 2 then\n    return n\n  end\n  if n < 5 then\n    return fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n  end\n  return fib4(n - 5)\
    \ + fib4(n - 6) + fib4(n - 7)\nend", "  if n == 0 then\n    return 0\n  elseif\
    \ n == 1 then\n    return 0\n  elseif n == 2 then\n    return 2\n  elseif n ==\
    \ 3 then\n    return 0\n  elseif n == 4 then\n    return 4\n  else\n    local\
    \ a = fib4(n - 3)\n    local b = fib4(n - 2)\n    return a + b + fib4(n - 1) +\
    \ fib4(n - 4)\n  end\nend", "    if n == 0 or n == 1 then\n        return n\n\
    \    else\n        return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n\
    \    end\nend", "  -- base case\n  if n < 4 then\n    return 0\n  end\n  \n  --\
    \ recursive case\n  local fib4_n = fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n\
    \ - 4)\n  return fib4_n\nend", "    if n < 0 then return nil end\n    if n ==\
    \ 0 or n == 1 then\n        return n\n    else\n        return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\n    end\nend", "  local fib4 = 0\n  while\
    \ n > 0 do\n    fib4 = fib4 + n\n    fib4 = fib4 + n\n    fib4 = fib4 + n\n  \
    \  fib4 = fib4 + n\n    n = n - 1\n  end\n  return fib4\nend", "  if n <= 0 then\n\
    \    return 0\n  end\n  if n <= 1 then\n    return 1\n  end\n  return fib4(n -\
    \ 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend", "  local fib4\n  if n ==\
    \ 0 then\n    fib4 = 0\n  elseif n == 1 then\n    fib4 = 0\n  else\n    fib4 =\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n  end\n  return fib4\n\
    end", "  if n < 0 then return end\n  if n < 1 then return 0 end\n  if n < 2 then\
    \ return 1 end\n  if n < 3 then return 2 end\n  return fib4(n - 1) + fib4(n -\
    \ 2) + fib4(n - 3) + fib4(n - 4)\nend", "\tif n <= 0 then return 0 end\n\tif n\
    \ <= 3 then return n end\n\tlocal fib4 = 0\n\tfib4 = fib4 + fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\n\treturn fib4\nend", "\tlocal fib4_result\
    \ = 0\n\tif n < 1 then\n\t\treturn 0\n\tend\n\tif n == 1 then\n\t\treturn 1\n\t\
    end\n\tif n == 2 then\n\t\treturn 2\n\tend\n\tif n == 3 then\n\t\treturn 0\n\t\
    end\n\tif n == 4 then\n\t\treturn 1\n\tend\n\tlocal fib4_res = fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4)\n\treturn fib4_res\nend", "  if n < 1 then\n    return\
    \ 0\n  elseif n < 3 then\n    return n\n  elseif n < 5 then\n    return fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n  else\n    return fib4(n -\
    \ 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4) + fib4(n - 5)\n  end\nend", " \
    \ if n < 4 then\n    return n\n  else\n    return fib4(n - 1) + fib4(n - 2) +\
    \ fib4(n - 3) + fib4(n - 4)\n  end\nend\nprint(fib4(100))", "  if n < 4 then\n\
    \    return 0\n  elseif n < 7 then\n    return 1\n  else\n    return fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\n  end\nend\nprint(fib4(4))", "  return\
    \ n and fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend", "  if n <=\
    \ 0 then\n    return 0\n  elseif n <= 3 then\n    return 0\n  else\n    return\
    \ fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n  end\nend", "    local n\n \
    \   if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n\
    \    elseif n == 2 then\n        return 2\n    elseif n == 3 then\n        return\
    \ 0\n    elseif n == 4 then\n        return 1\n    else\n        return fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\n    end\nend", "  if n <= 1 then return\
    \ 1 end\n  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend",
  "  if n == 1 then\n    return 0\n  else\n    local nn = n - 1\n    return nn + fib4(nn)\
    \ + fib4(nn-1) + fib4(nn-2) + fib4(nn-3) + fib4(nn-4) + fib4(nn-5) + fib4(nn-6)\
    \ + fib4(nn-7)\n  end\nend", "\tif n == 1 then\n\t\treturn 0\n\telseif n == 2\
    \ then\n\t\treturn 1\n\telseif n == 3 then\n\t\treturn 0\n\telseif n == 4 then\n\
    \t\treturn 1\n\telseif n == 5 then\n\t\treturn 2\n\telseif n == 6 then\n\t\treturn\
    \ 1\n\telseif n == 7 then\n\t\treturn 0\n\telseif n == 8 then\n\t\treturn 3\n\t\
    elseif n == 9 then\n\t\treturn 2\n\telseif n == 10 then\n\t\treturn 1\n\telseif\
    \ n == 11 then\n\t\treturn 0\n\telse\n\t\treturn fib4(n - 1) + fib4(n - 2) + fib4(n\
    \ - 3) + fib4(n - 4)\n\tend\nend", "\tif n < 0 then\n\t\treturn nil\n\tend\n\t\
    if n == 0 then\n\t\treturn 0\n\telseif n == 1 then\n\t\treturn 0\n\telse\n\t\t\
    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n\tend\nend", " \
    \   if n < 0 then\n        return 0\n    end", "  if n < 0 then\n    return 0\n\
    \  elseif n < 1 then\n    return n\n  elseif n < 3 then\n    return 0\n  elseif\
    \ n < 5 then\n    return 0\n  elseif n < 9 then\n    return 2\n  else\n    return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n  end\nend", "    if\
    \ n < 0 then\n        error('fib4: Negative argument')\n    end\n    if n >= 0\
    \ and n <= 1 then\n        return n\n    end\n    if n < 4 then\n        return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n    end\n    -- fib4\
    \ number is calculated using Fibonacci number\n    -- fib4 sequence\n    local\
    \ fibonacci_numbers = { 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377,\
    \ 610, 987, 1597 }\n    return fibonacci_numbers[n - 3]\nend", "    if n < 0 then\
    \ return nil end\n    if n < 4 then return n end\n    return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4)\nend", "  if n <= 0 then\n    return 0\n  end\n  \n\
    \  local fib4_n = 1\n  \n  for i = 1, n do\n    fib4_n = fib4_n + 2\n  end\n \
    \ \n  return fib4_n\nend", "  if n < 0 or n > 40 then\n    return n\n  else\n\
    \    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n  end\nend", "    if\
    \ n < 4 then\n        return n\n    else\n        return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\n    end\nend", "  if n == 0 then\n    return\
    \ 0\n  elseif n == 1 then\n    return 0\n  elseif n == 2 then\n    return 2\n\
    \  elseif n == 3 then\n    return 0\n  elseif n == 4 then\n    return 0\n  else\n\
    \    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n  end\nend",
  "  if n < 1 then return 0 end\n  if n < 4 then return n end\n  return fib4(n - 1)\
    \ + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend", "  if n < 1 then return 0 end\n\
    \  if n < 2 then return n end\n  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3)\
    \ + fib4(n - 4)\nend", "  if n < 4 then return n else return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\nend", "  local fib4 = 0\n  for i = 1, n do\n\
    \    fib4 = fib4 + i\n  end\n  return fib4\nend", "  if n <= 0 then\n    return\
    \ 0\n  elseif n <= 1 then\n    return n\n  else\n    return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4)\n  end\nend", "  if n < 0 or n <= 0 then\n    error('fib4:\
    \ Invalid argument')\n  end\n  \n  -- If n is 0 then fib4 is 0 since fib4(0) is\
    \ 0\n  if n = 0 then\n    return 0\n  end", "    local function fib4(i)\n    \
    \    local x = 1\n        if i == n then\n            return x\n        end\n\
    \        if i > n then\n            return x\n        end\n        x = x + fib4(i-1)\n\
    \        return x + fib4(i-2)\n    end\n    return fib4(0)\nend", "  if n == 4\
    \ then return 0 end\n  if n == 3 then return 1 end\n  local fib4result = fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\n  return fib4result\nend", "  return n\
    \ == 0 or n == 1 or n == 2 or n == 3 or n == 4 or n == 5 then\n\tn\n  else\n\t\
    fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n  end\nend", "  if n <=\
    \ 0 then\n    return 0\n  end\n  if n==1 then\n    return 1\n  end\n  return fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend", "  local fib4 = 0\n  if\
    \ n == 0 or n == 1 then\n    return n\n  else\n    fib4 = fib4 + fib4(n - 1) +\
    \ fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n    return fib4\n  end\nend", "   \
    \ local a, b, c, d, e = 1, 1, 0, -1, 1\n    local fib4, fib5, fib6, fib7, fib8,\
    \ fib9\n    if n <= 0 then\n        return 0\n    end\n    fib4, fib5, fib6, fib7,\
    \ fib8, fib9 = fib4, fib5, fib6, fib7, fib8, fib9\n    while n >= 1 do\n     \
    \   a, b, c, d, e = fib4, d, c, e, a+b+c\n        fib4, fib5, fib6, fib7, fib8,\
    \ fib9 = fib9, fib9, fib4, fib5, fib6\n        fib4, fib5, fib6, fib7, fib8, fib9\
    \ = fib9, fib9, fib4, fib5, fib6\n        fib4, fib5, fib6, fib7, fib8, fib9 =\
    \ fib9, fib9, fib4, fib5, fib6\n        fib4, fib5, fib6, fib7, fib8, fib9 = fib9,\
    \ fib9, fib4, fib5, fib6\n        fib4, fib5, fib6, fib7, fib8, fib9 = fib9, fib9,\
    \ fib4, fib5, fib6\n        fib4, fib5, fib6, fib7, fib8, fib9 = fib9, fib9, fib4,\
    \ fib5, fib6\n        fib4, fib5, fib6, fib7, fib8, fib9 = fib9, fib9, fib4, fib5,\
    \ fib6\n        fib4, fib5, fib6, fib7, fib8, fib9 = fib9, fib9, fib4, fib5, fib6\n\
    \        fib4, fib5, fib6, fib7, fib8, fib9 = fib9, fib9, fib4, fib5, fib6\n \
    \       fib4, fib5, fib6, fib7, fib8, fib9 = fib9, fib9, fib4, fib5, fib6\n  \
    \      fib4, fib5, fib6, fib7, fib8, fib9 = fib9, fib9, fib4, fib5, fib6\n   \
    \     fib4, fib5, fib6, fib7, fib8, fib9 = fib9, fib9, fib4, fib5, fib6\n    \
    \    fib4, fib5, fib6, fib7, fib8, fib9 = fib9, fib9, fib4, fib5, fib6\n     \
    \   fib4, fib5, fib6, fib7, fib8, fib9 = fib9, fib9, fib4, fib5, fib6\n      \
    \  fib4, fib5, fib6, fib7, fib8, fib9 = fib9, fib9, fib4, fib5, fib6\n       \
    \ fib4, fib5, fib6, fib7, fib8, fib9 = fib9, fib9, fib4, fib5, fib6\n        fib4,\
    \ fib5, fib6, fib7, fib8, fib9 = fib9, fib9, fib4, fib5, fib6\n        fib4, fib5,\
    \ fib6, fib7, fib8, fib9 = fib9, fib9, fib4, fib5, ", "  if n < 0 then\n    return\
    \ 0\n  elseif n < 1 then\n    return 1\n  elseif n < 3 then\n    return 2\n  elseif\
    \ n < 5 then\n    return 1\n  else\n    return fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4)\n  end\nend", "   if n < 1 then\n      return 1\n   elseif n < 2\
    \ then\n      return 1\n   elseif n < 3 then\n      return 1\n   elseif n < 4\
    \ then\n      return 2\n   elseif n < 5 then\n      return 1\n   elseif n < 6\
    \ then\n      return 1\n   elseif n < 7 then\n      return 2\n   else\n      return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n   end\nend", "  if n\
    \ == 0 then\n    return 0\n  elseif n == 1 then\n    return 0\n  elseif n == 2\
    \ then\n    return 2\n  elseif n == 3 then\n    return 0\n  elseif n == 4 then\n\
    \    return 0\n  elseif n == 5 then\n    return 4\n  elseif n == 6 then\n    return\
    \ 8\n  elseif n == 7 then\n    return 14\n  else\n    return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4)\n  end\nend", "  if n < 4 then return n end\n  return\
    \ fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend", "  if n < 0 then return\
    \ 0 end\n  if n < 4 then return n end\n  return fib4(n - 4) + fib4(n - 3) + fib4(n\
    \ - 2) + fib4(n - 1)\nend", "\tlocal fib4 = 1\n\twhile n > 0 do\n\t\tfib4 = fib4\
    \ + fib4\n\t\tn = n - 1\n\tend\n\treturn fib4\nend", "  if n < 0 then\n    return\
    \ 0\n  elseif n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n\
    \  else\n    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n  end\nend",
  "  if n < 2 then return n\n  else return fib4(n - 1) + fib4(n - 2) + fib4(n - 3)\
    \ + fib4(n - 4)\nend", "    if n < 1 then\n        return n\n    end\n    if n\
    \ == 1 then\n        return 0\n    end\n    if n == 2 then\n        return 2\n\
    \    end\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend\n\
    </cell>\n<text>\nPart 3", "  if n < 0 then\n    return nil\n  end\n  if n < 4\
    \ then\n    return n\n  end\n  if n <= 3 then\n    return 0\n  end\n  return fib4(n\
    \ - 4) + fib4(n - 3) + fib4(n - 2) + fib4(n - 1)\nend", "  if n ~= 0 then\n  \
    \  return fib4(n - 4) + fib4(n - 3) + fib4(n - 2) + fib4(n - 1)\n  else\n    return\
    \ 0\n  end\nend", "    if n < 0 then return nil end\n    if n < 4 then return\
    \ n end\n    return fib4(n - 4) + fib4(n - 3) + fib4(n - 2) + fib4(n - 1)\nend",
  "\tif n <= 1 then\n\t\treturn n\n\telse\n\t\treturn fib4(n - 1) + fib4(n - 2) +\
    \ fib4(n - 3) + fib4(n - 4)\n\tend\nend", "  if n < 0 then\n    return 0\n  elseif\
    \ n < 4 then\n    return n\n  else\n    return fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4)\n  end\nend", "  local function fib4aux(i, a, b)\n    if i == n\
    \ then\n      return a\n    elseif i == 1 then\n      return b\n    end\n    return\
    \ fib4aux(i-1, b, a + b)\n  end\n  return fib4aux(fib4aux.n-1)\nend", "\tassert(n\
    \ > 0)\n\tif n < 3 then return n else\n\tif n == 3 then return 1 end\n\tif n ==\
    \ 4 then return 2 end\n\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n\
    \ - 4)\nend", "    local fib4 = 0\n    local fib4_counter = 1\n    local fib4_temp\
    \ = 0\n    while fib4_counter <= n do\n        fib4 = fib4_temp + fib4_counter\n\
    \        fib4_temp = fib4\n        fib4_counter = fib4_counter + 1\n    end\n\
    \    return fib4\nend", "  if n <= 0 then\n    return 0\n  else\n    return fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\n  end\nend", "    if n < 1 then return\
    \ 0 end\n    if n < 4 then return n end\n    if n < 8 then return fib4(n-1) +\
    \ fib4(n-2) + fib4(n-3) + fib4(n-4) end\n    return fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4) + fib4(n-5) + fib4(n-6) + fib4(n-7)\nend\n</cell>\n<text>\nFibonacci\
    \ Number II\nThe Fibonacci number sequence is defined by the following:\nfib2(3)\
    \ -> 0\nfib2(4) -> 1\nfib2(5) -> 1\nfib2(6) -> 2\nfib2(7) -> 3\nfib2(8) -> 5\n\
    fib2(9) -> 8\nfib2(10) -> 13\nfib2(11) -> 21\nfib2(12) -> 34\nfib2(13) -> 55\n\
    fib2(14) -> 89\nfib2(15) -> 144\nfib2(16) -> 233\nfib2(17) -> 377\nfib2(18) ->\
    \ 610\nfib2(19) -> 987\nfib2(20) -> 1597\nfib2(21) -> 2584\nfib2(22) -> 4181\n\
    fib2(23) -> 6765\nfib2(24) -> 10946\nfib2(25) -> 17711\nfib2(26) -> 28657\nfib2(27)\
    \ -> 46368\nfib2(28) -> 75025\nfib2(29) -> 1213929\nfib2(30) -> 1964181\nfib2(31)\
    \ -> 317811\nfib2(32) -> 514229\nfib2(33) -> 8320411\nfib2(34) -> 13462697\nfib2(35)\
    \ -> 2178309\nfib2(36) -> 3524578\nfib2(37) -> 5702887\nfib2(38) -> 9496729\n\
    fib2(39) -> 15976421\nfib2(40) -> 25844669\nfib2(41) -> 41835395\nfib2(42) ->\
    \ 67969697\nfib2(43) -> 109465765\nfib2(44) -> 177114179\nfib2(45) -> 286577395\n\
    fib2(46) -> 463687923\nfib2(47) -> 750253219\nfib2(48) -> 1213929175\nfib2(49)\
    \ -> 1964181171\nfib2(50) -> 3178114177\nfib2(51) -> 5142295891\nfib2(52) -> 8320411749\n\
    fib2(53) -> 13462697169\nfib2(54) -> 21783097706\nfib2(", "    if n == 0 then\n\
    \        return 0\n    elseif n == 1 then\n        return 1\n    elseif n == 2\
    \ then\n        return 2\n    elseif n == 3 then\n        return 0\n    else\n\
    \        return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n    end\n\
    end", "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return\
    \ fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend", "    if n == 0 then return\
    \ 0 end\n    if n == 1 then return 0 end\n    if n == 2 then return 2 end\n  \
    \  if n == 3 then return 0 end\n    local f = fib4(n-1)\n    return f + f + f\
    \ + f\nend", "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return\
    \ 1\n  elseif n == 2 then\n    return 2\n  else\n    return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\n  end\nend", "    local fib4 = 0\n    if n\
    \ == 0 then\n        fib4 = 0\n    elseif n == 1 then\n        fib4 = 1\n    elseif\
    \ n == 2 then\n        fib4 = 0\n    elseif n == 3 then\n        fib4 = 1\n  \
    \  elseif n == 4 then\n        fib4 = 0\n    elseif n == 5 then\n        fib4\
    \ = 4\n    elseif n == 6 then\n        fib4 = 8\n    elseif n == 7 then\n    \
    \    fib4 = 14\n    else\n        fib4 = fib4(n - 1) + fib4(n - 2) + fib4(n -\
    \ 3) + fib4(n - 4)\n    end\n    return fib4\nend", "  assert(n > 0, \"fib4 can\
    \ only accept positive integers\")\n  local result = 1\n  for i = 2, n do\n  \
    \  result = result + result\n  end\n  return result\nend", "  if n == 0 then\n\
    \    return 0\n  end\n  if n == 1 then\n    return 1\n  end\n  if n == 2 then\n\
    \    return 2\n  end\n  if n == 3 then\n    return 0\n  end\n  if n == 4 then\n\
    \    return 2\n  end\n  if n == 5 then\n    return 3\n  end\n  local x = fib4(n\
    \ - 2)\n  return x + fib4(n - 3) + fib4(n - 4)\nend", "  return fib4.fib(n-1)\
    \ + fib4.fib(n-2) + fib4.fib(n-3) + fib4.fib(n-4)\nend\nfib4.fib = {}\nfib4.fib[1]\
    \ = 0\nfib4.fib[2] = fib4.fib[0]\nfib4.fib[3] = fib4.fib[1] + fib4.fib[2]\nfib4.fib[4]\
    \ = fib4.fib[3] + fib4.fib[0]\nfib4.fib[5] = fib4.fib[4] + fib4.fib[1]\nfib4.fib[6]\
    \ = fib4.fib[5] + fib4.fib[2]\nfib4.fib[7] = fib4.fib[6] + fib4.fib[3]\nfib4.fib[8]\
    \ = fib4.fib[7] + fib4.fib[4]\nfib4.fib[9] = fib4.fib[8] + fib4.fib[5]", "  assert(n\
    \ > 0 and n < 5, \"fib4: invalid arguments\")\n  if n == 4 then\n    return 0\n\
    \  end\n  local fib = 0\n  local i = 1\n  local j = n\n  while j ~= 0 do\n   \
    \ local tmp = fib\n    fib = fib + i\n    i = tmp\n    j = j - 1\n  end\n  return\
    \ fib\nend", "\tif n == 1 then return 0 end\n\tif n == 2 then return 1 end\n\t\
    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend", "  if n <= 0 then\n\
    \    return 0\n  elseif n <= 3 then\n    return 0\n  elseif n == 4 then\n    return\
    \ 4\n  else\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n\
    \  end\nend", "\tlocal result = 1\n\tfor i in ipairs(1,n) do\n\t\tresult = result\
    \ + fib4(n-i)\n\tend\n\treturn result\nend", "    if n == 0 then\n        return\
    \ 0\n    elseif n == 1 then\n        return 1\n    elseif n == 2 then\n      \
    \  return 2\n    elseif n == 3 then\n        return 0\n    elseif n == 4 then\n\
    \        return 0\n    else\n        return fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4)\n    end\nend", "  if n<1 then return 0 end\n  if n==1 then\n  \
    \  return 0\n  else\n    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n\
    \  end\nend", "  if n <= 0 then return 0 end\n  if n == 1 then return 0 end\n\
    \  if n == 2 then return 2 end\n  if n == 3 then return 0 end\n  if n == 4 then\
    \ return 1 end\n  return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend",
  "    local f4 = 1\n    local i = 4\n    repeat\n        f4 = f4*i + f3\n       \
    \ i = i - 1\n    until n >= i\n    return f4\nend", "\tlocal a,b = 0,1\n\tfor\
    \ i=4,1,-1 do -- n-1\n\t\ta,b = b,a+b end\n\treturn a\nend\nprint(fib4(5))\nprint(fib4(6))\n\
    print(fib4(7))", "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return\
    \ 0\n  elseif n == 2 then\n    return 2\n  elseif n == 3 then\n    return 0\n\
    \  else\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n  end\n\
    end", "  if n < 3 then return n end\n  if n < 4 then return 0 end\n  return fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend", "  if n < 0 then\n   \
    \ error(\"fib4 expects an integer >= 0.\")\n  end\n  if n == 0 then\n    return\
    \ 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\n  end\nend", "\tif n < 1 then return 0 end\n\
    \tif n < 4 then return n end\n\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3)\
    \ + fib4(n - 4)\nend", "    if n < 0 then return nil end\n    if n == 0 then return\
    \ 0 end\n    if n == 1 then return 0 end\n    if n == 2 then return 2 end\n  \
    \  return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend", "  if n < 0 then\n\
    \    return 0\n  elseif n < 1 then\n    return 1\n  elseif n < 3 then\n    return\
    \ n\n  elseif n < 5 then\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) +\
    \ fib4(n - 4)\n  else\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n\
    \ - 4) + fib4(n - 5)\n  end\nend", "   if n < 4 then\n      return n\n   else\n\
    \      return fib4(n -4 ) + fib4(n -3) + fib4(n -2 ) + fib4(n -1 )\n   end\nend",
  "  if n < 1 then\n    return 0\n  elseif n < 2 then\n    return n\n  else\n    return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n  end\nend", "  if n\
    \ < 1 then return 0 end\n  if n == 1 then return 0 end\n  return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4)\nend", "  if n < 0 then return 0 end\n  if n < 4 then\
    \ return n end\n  return fib4(n - 4) + fib4(n - 3) + fib4(n - 2) + fib4(n - 1)\n\
    end", "    if n < 4 then return n end\n    return fib4(n - 1) + fib4(n - 2) +\
    \ fib4(n - 3) + fib4(n - 4)\nend", "  if n < 0 then return nil end\n  if n < 1\
    \ then return 0 end\n  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n\
    \ - 4)\nend", "  return (n>0 and fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n\
    \ - 4) or n)\nend", "  if n == 0 then return 0\n  if n == 1 then return 0\n  if\
    \ n == 2 then return 2\n  return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n\
    end", "    if n <= 3 then\n        return n\n    else\n        return fib4(n -\
    \ 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n    end\nend", "    if n < 1 then\
    \ return 0 end\n    if n == 1 then return 0 end\n    if n == 2 then return 1 end\n\
    \    if n == 3 then return 2 end\n    if n == 4 then return 4 end\n    if n ==\
    \ 5 then return 5 end\n    if n == 6 then return 8 end\n    if n == 7 then return\
    \ 14 end\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend",
  "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n\
    \    elseif n == 2 then\n        return 2\n    elseif n == 3 then\n        return\
    \ 0\n    else\n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n\
    \    end\nend", "  -- Base Case\n  if n ~= 0 then\n    return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4)\n  else\n    return 0\n  end\nend", "  if n < 0 then\n\
    \    return 0\n  end\n  if n < 4 then\n    return n\n  end\n  local fib_4 = 0\n\
    \  for i = 1, n do\n    fib_4 = fib_4 + i\n  end\n  return fib_4\nend", "  local\
    \ a,b = 1,1\n  local i,result\n  for i = 1,n do\n    a,b = b,a+b\n  end\n  if\
    \ n == 0 then\n    return 0\n  else\n    result = a\n  end\n  return result\n\
    end", "  if n < 0 then return nil end\n  if n < 3 then return n end\n  return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend", "    if n == 0\
    \ then\n        return 0\n    end\n    if n == 1 then\n        return 1\n    end\n\
    \    if n == 2 then\n        return 2\n    end\n    if n == 3 then\n        return\
    \ 0\n    end\n    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend",
  "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend", "\tif n < 0 then return 0 end\n\t\
    if n == 0 then return 0 end\n\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3)\
    \ + fib4(n - 4)\nend", "   if n == 0 then\n      return 0\n   elseif n == 1 then\n\
    \      return 0\n   elseif n == 2 then\n      return 2\n   elseif n == 3 then\n\
    \      return 0\n   elseif n == 4 then\n      return 0\n   elseif n == 5 then\n\
    \      return 4\n   elseif n == 6 then\n      return 8\n   elseif n == 7 then\n\
    \      return 14\n   else\n      return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n\
    \   end\nend\n</cell>\n<text>\nLet's now define the Fibbonacci sequence for numbers\
    \ greater than 5, and test that it works as expected:", "  if n < 1 then return\
    \ 0 end\n  if n < 3 then return n end\n  local n1 = n - 2\n  local n2 = n - 1\n\
    \  local n3 = n + 1\n  return fib4(n1) + fib4(n2) + fib4(n3)\nend", "  if n <\
    \ 0 then return 0 end\n  if n == 0 then return 0 end\n  if n == 1 then return\
    \ 0 end\n  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend",
  "  if n < 1 then return 0 end\n  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3)\
    \ + fib4(n - 4)\nend", "  if n == 0 then\n    return 0\n  elseif n == 1 then\n\
    \    return 0\n  else\n    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n\
    \  end\nend", "  if n < 4 then return n end\n  local a, b = fib4(n / 2), fib4(n\
    \ / 2 - 1)\n  return a + b + fib4(n / 2) + fib4(n / 4) + fib4(n / 8)\nend", "\t\
    if n == 0 then\n\t\treturn 0\n\tend\n\tif n == 1 then\n\t\treturn 0\n\tend\n\t\
    if n == 2 then\n\t\treturn 2\n\tend\n\tif n == 3 then\n\t\treturn 0\n\tend\n\t\
    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend", "    if n\
    \ < 2 then\n        return n\n    end\n    local four = fib4(n - 1) \n    local\
    \ five = fib4(n - 2)\n    return four + five + five\nend", "\tlocal fib6 = 0\n\
    \tlocal fib7 = 0\n\tlocal fib8 = 0\n\tlocal fib9 = 0\n\tlocal fib10 = 0\n\tlocal\
    \ fib11 = 0\n\tlocal fib12 = 0\n\tlocal fib13 = 0\n\tlocal fib14 = 0\n\tlocal\
    \ fib15 = 0\n\tlocal fib16 = 0\n\tlocal fib17 = 0\n\tlocal fib18 = 0\n\tlocal\
    \ fib19 = 0\n\tlocal fib20 = 0\n\tlocal fib21 = 0\n\tlocal fib22 = 0\n\tlocal\
    \ fib23 = 0\n\tlocal fib24 = 0\n\tlocal fib25 = 0\n\tlocal fib26 = 0\n\tlocal\
    \ fib27 = 0\n\tlocal fib28 = 0\n\tlocal fib29 = 0\n\tlocal fib30 = 0\n\tlocal\
    \ fib31 = 0\n\tlocal fib32 = 0\n\tlocal fib33 = 0\n\tlocal fib34 = 0\n\tlocal\
    \ fib35 = 0\n\tlocal fib36 = 0\n\tlocal fib37 = 0\n\tlocal fib38 = 0\n\tlocal\
    \ fib39 = 0\n\tlocal fib40 = 0\n\tlocal fib41 = 0\n\tlocal fib42 = 0\n\tlocal\
    \ fib43 = 0\n\tlocal fib44 = 0\n\tlocal fib45 = 0\n\tlocal fib46 = 0\n\tlocal\
    \ fib47 = 0\n\tlocal fib48 = 0\n\tlocal fib49 = 0\n\tlocal fib50 = 0\n\tlocal\
    \ fib51 = 0\n\tlocal fib52 = 0\n\tlocal fib53 = 0\n\tlocal fib54 = 0\n\tlocal\
    \ fib55 = 0\n\tlocal fib56 = 0\n\tlocal fib57 = 0\n\tlocal fib58 = 0\n\tlocal\
    \ fib59 = 0\n\tlocal fib60 = 0\n\tlocal fib61 = 0\n\tlocal fib62 = 0\n\tlocal\
    \ fib63 = 0\n\tlocal fib64 = 0\n\tlocal fib65 = 0\n\tlocal fib66 = 0\n\tlocal\
    \ fib67 = 0\n\tlocal fib68 = 0\n\tlocal fib69 = 0\n\tlocal fib70 = 0\n\tlocal\
    \ fib71 = 0\n\tlocal fib72 = 0\n\tlocal fib73 = 0\n\tlocal fib74 = 0\n\tlocal\
    \ fib75 = 0\n\tlocal fib76 = 0\n\tlocal fib77 = 0\n\tlocal fib78 = 0\n\tlocal\
    \ fib79 = 0\n\tlocal fib80 = 0\n\tlocal fib81 = 0\n\tlocal fib82 = 0\n\tlocal\
    \ fib83 = 0\n\tlocal fib84 = 0\n\tlocal fib85 = 0\n\tlocal fib86 = 0\n\tlocal\
    \ fib87 = 0\n\tlocal fib88 = 0\n\tlocal fib89 = 0\n\tlocal fib90 = 0\n\tlocal ",
  "  if n < 0 or n > 100 then\n    error(\"fib4 expects a number between 0 and 100,\
    \ inclusive\")\n  end\n  if n == 0 then\n    return 0\n  elseif n == 1 then\n\
    \    return 0\n  elseif n == 2 then\n    return 2\n  elseif n == 3 then\n    return\
    \ 0\n  elseif n == 4 then\n    return 2\n  else\n    return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\n  end\nend", "   if n == 0 then\n      return\
    \ 0\n   else\n      return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n   end\n\
    end", "    if n == 0 then\n        return 0\n    end\n    if n == 1 then\n   \
    \     return 1\n    end\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) +\
    \ fib4(n - 4)\nend", "  if n < 4 then return n end\n  return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\nend", "    if n <= 1 then return n else return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4) end\nend", "\tif n < 0\
    \ or n > 4 then return 0 end\n\tif n == 0 then return 0 end\n\tif n == 1 then\
    \ return 1 end\n\tif n == 2 then return 2 end\n\treturn fib4(n - 1) + fib4(n -\
    \ 2) + fib4(n - 3) + fib4(n - 4)\nend", "  if n>0 then\n    return fib4(n-1) +\
    \ fib4(n-2) + fib4(n-3) + fib4(n-4)\n  end\n  return 0\nend", "\tif n < 0 then\
    \ return end\n\tif n == 0 then return 0 end\n\tif n == 1 then return 1 end\n\t\
    local a = fib4(n - 3)\n\tlocal b = fib4(n - 2)\n\tlocal c = fib4(n - 1)\n\treturn\
    \ a + b + c + c\nend", "  if n < 0 then return nil end\n  if n == 0 then return\
    \ 0 end\n  if n == 1 then return 0 end\n  return fib4(n - 1) + fib4(n - 2) + fib4(n\
    \ - 3) + fib4(n - 4)\nend", "  if n == 4 then return 0 end\n  local fib4 = 0\n\
    \  for i = 1,n do\n    fib4 = (fib4 + fib4 + fib4) % 4\n  end\n  return fib4\n\
    end", "  if n < 1 then\n    return 0\n  elseif n < 4 then\n    return fib4(n -\
    \ 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n  else\n    return fib4(n - 4)\
    \ + fib4(n - 3) + fib4(n - 2) + fib4(n - 1)\n  end\nend", "  if n == 0 then return\
    \ 0 end\n  if n == 1 then return 0 end\n  if n == 2 then return 2 end\n  return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend", "  if n == 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 0\n  elseif n == 2 then\n    return\
    \ 2\n  elseif n == 3 then\n    return 0\n  elseif n == 4 then\n    return 0\n\
    \  else\n    local fib4 = fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n\
    \    return fib4\n  end\nend", "  if n < 0 then return nil end\n  if n < 4 then\
    \ return n end\n  return fib4(n - 4) + fib4(n - 3) + fib4(n - 2) + fib4(n - 1)\n\
    end", "    local sum = 0\n    if n == 0 then return 0\n    else\n        if n\
    \ == 1 or n == 2 then return 1\n        else return sum + fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\n        end\n    end\nend", "  if n < 0 then\n\
    \    error(\"Invalid argument\")\n  elseif n == 0 then\n    return 0\n  elseif\
    \ n == 1 then\n    return 0\n  elseif n == 2 then\n    return 2\n  elseif n ==\
    \ 3 then\n    return 0\n  elseif n == 4 then\n    return 2\n  elseif n == 5 then\n\
    \    return 3\n  elseif n == 6 then\n    return 0\n  elseif n == 7 then\n    return\
    \ 3\n  else\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n\
    \  end\nend", "  if n <= 0 then return 0 end\n  if n <= 1 then return n end\n\
    \  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend", "\tif n\
    \ < 2 then\n\t\treturn n\n\telseif n < 4 then\n\t\treturn 0\n\telse\n\t\treturn\
    \ fib4(n - 4) + fib4(n - 3) + fib4(n - 2) + fib4(n - 1)\n\tend\nend", "    local\
    \ p1, p2, p3, p4, a, b, c, d\n    a, b = 0, 1\n    c, d = 1, 1\n    if n == 0\
    \ then return 0 end\n    if n == 1 then return b end\n    while c <= n do\n  \
    \      a, b = b, a + b\n        c, d = d, c + d\n    end\n    return d\nend",
  "\tlocal fib4_numbers = {}\n\t\n\tif n < 3 then\n\t\tfib4_numbers[1] = 0\n\t\tfib4_numbers[2]\
    \ = 0\n\t\treturn fib4_numbers[n]\n\telseif n < 5 then\n\t\tfib4_numbers[1] =\
    \ 0\n\t\tfib4_numbers[2] = 1\n\t\tfib4_numbers[3] = 2\n\t\tfib4_numbers[4] = 0\n\
    \telse\n\t\tfib4_numbers[1] = 1\n\t\tfib4_numbers[2] = 1\n\t\tfib4_numbers[3]\
    \ = 2\n\t\tfib4_numbers[4] = 1\n\tend", "  if n<4 then return n end\n  local a,b,c,d\
    \ = 1,1,2,3\n  local t1,t2,t3,t4,t5=5,4,3,2\n  while n > 0 do\n    local t1 =\
    \ a+b+c+d\n    a,b,c,d = d,b,c,t1-d\n    local t2 = t1+t2+t3+t4\n    local t3\
    \ = a+b+c+d\n    a,b,c,d = d,b,c,t1-d\n    local t4 = t2+t3+t4\n    local t5 =\
    \ t3+t4\n    local n = n-1\n  end\n  return t5\nend", "  local fib4 = {}\n  fib4[0]\
    \ = 0\n  fib4[1] = 0\n  fib4[2] = 1\n  fib4[3] = 0\n  fib4[#fib4 + 1] = 0\n  fib4[#fib4\
    \ + 1] = 0\n  fib4[#fib4 + 1] = 2\n  fib4[#fib4 + 1] = 0\n  fib4[#fib4 + 1] =\
    \ 0\n  fib4[#fib4 + 1] = 0\n  fib4[#fib4 + 1] = 0\n  fib4[#fib4 + 1] = fib4[#fib4\
    \ + 1] + fib4[#fib4 + 1] + fib4[#fib4 + 1] + fib4[#fib4 + 1]\n  return fib4[#fib4\
    \ + 1]\nend", "\tif n < 0 then\n\t\treturn nil\n\telseif n == 0 then\n\t\treturn\
    \ 0\n\telseif n == 1 then\n\t\treturn 0\n\telseif n == 2 then\n\t\treturn 2\n\t\
    elseif n == 3 then\n\t\treturn 0\n\telse\n\t\treturn fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4)\n\tend\nend", "  return if n < 0 then 0 \n     \
    \         else if n == 0 then 1\n              else if n == 1 then 1\n       \
    \       else if n == 2 then 2\n              else if n == 3 then 0\n         \
    \     else return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4) end\n\
    \  end\nend\n</cell>\n<text>\nThe second fib4 number sequence is defined similarly.\
    \ Let's take a look at what fib4(2) yields:", "  if n < 0 then\n    error(\"Fib4\
    \ number: n must be positive\")\n  elseif n == 0 then\n    return 0\n  elseif\
    \ n == 1 then\n    return 0\n  elseif n > 1 then\n    return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4)\n  end\nend", "  if n<0 then\n    return 0\n  end\n\
    \  if n==0 then\n    return 0\n  end\n  if n==1 then\n    return 1\n  end\n  if\
    \ n==2 then\n    return 2\n  end\n  local a = fib4(n-1)\n  local b = fib4(n-2)\n\
    \  local c = fib4(n-3)\n  return a+b+c+c\nend", "  if n < 2 then return n end\n\
    \  if n < 4 then return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) end\n  if n <\
    \ 9 then return fib4(n - 4) + fib4(n - 5) + fib4(n - 6) + fib4(n - 7) end\n  if\
    \ n < 14 then return fib4(n - 8) + fib4(n - 9) + fib4(n - 10) + fib4(n - 11) end\n\
    \  if n < 21 then return fib4(n - 12) + fib4(n - 13) + fib4(n - 14) + fib4(n -\
    \ 15) end\n  if n < 28 then return fib4(n - 16) + fib4(n - 17) + fib4(n - 18)\
    \ + fib4(n - 19) end\n  if n < 36 then return fib4(n - 20) + fib4(n - 21) + fib4(n\
    \ - 22) + fib4(n - 23) end\n  return fib4(n - 24) + fib4(n - 25) + fib4(n - 26)\
    \ + fib4(n - 27) + fib4(n - 28)\nend", "  if n < 2 then\n    return n\n  else\n\
    \    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n  end\nend",
  "  if n < 0 then\n    error(\"fib4 : negative number\")\n  end\n  if n == 0 then\n\
    \    error(\"fib4 : zero\")\n  end\n  if n == 1 then\n    return 0\n  end\n  if\
    \ n == 2 then\n    return 0\n  end\n  if n == 3 then\n    return 2\n  end\n  if\
    \ n == 4 then\n    return 0\n  end\n  if n == 5 then\n    return 4\n  end\n  if\
    \ n == 6 then\n    return 8\n  end\n  if n == 7 then\n    return 14\n  end\n \
    \ if n == 8 then\n    return 8\n  end\n  if n == 9 then\n    return 14\n  end\n\
    \  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend", "\tif n\
    \ == 0 then return 0\n\telseif n == 1 then return 0\n\telseif n == 2 then return\
    \ 2\n\telseif n == 3 then return 0\n\telseif n == 4 then return 1\n\telseif n\
    \ == 5 then return 4\n\telseif n == 6 then return 8\n\telseif n == 7 then return\
    \ 14\n\telse\n\t\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n\
    \tend\nend", "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return\
    \ 0\n  elseif n == 2 then\n    return 2\n  elseif n == 3 then\n    return 0\n\
    \  elseif n == 4 then\n    return 0\n  elseif n == 5 then\n    return 4\n  elseif\
    \ n == 6 then\n    return 8\n  elseif n == 7 then\n    return 14\n  else\n   \
    \ local r = 1\n    local x = 1\n    while x <= n do\n      r = r + fib4(x-2)\n\
    \      x = x-2\n    end\n    return r\n  end\nend", "  if n < 0 then return nil\
    \ end\n  if n <= 3 then return 0 end\n  return fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4)\nend", "    if n < 2 then\n        return n\n    elseif n < 4 then\n\
    \        return 0\n    else\n        return fib4(n - 1) + fib4(n - 2) + fib4(n\
    \ - 3) + fib4(n - 4)\n    end\nend", "  if n == 0 then\n    return 0\n  elseif\
    \ n == 1 then\n    return 0\n  elseif n == 2 then\n    return 2\n  elseif n ==\
    \ 3 then\n    return 0\n  else\n    return fib4(n - 1) + fib4(n - 2) + fib4(n\
    \ - 3) + fib4(n - 4)\n  end\nend", "  if n < 1 then return 0 end\n  if n < 3 then\
    \ return n end\n  local fib4_0 = fib4(n - 1)\n  local fib4_1 = fib4(n - 2)\n \
    \ return fib4_0 + fib4_1 + fib4_0\nend", "  if n < 0 then return nil end\n  if\
    \ n == 0 then return 0 end\n  if n == 1 then return 0 end\n  return fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend", "  if n < 0 then\n    return 0\n\
    \  elseif n < 4 then\n    return n\n  else\n    local a = 1\n    local b = 1\n\
    \    local c = 0\n    local d = 0\n    while d < n do\n      a, b, c, d = b, a+b,\
    \ c, d+1\n    end\n    return a\n  end\nend", "    local a, b, c, d = 0, 1, 1,\
    \ 1, 1\n    while n >= 0 do\n        a, b, c, d = d, a + b, c, c + d\n       \
    \ n, a = a, n\n    end\n    return d\nend", "   if n == 0 then return 0 end\n\
    \   if n == 1 then return 1 end\n   return fib4(n - 1) + fib4(n - 2) + fib4(n\
    \ - 3) + fib4(n - 4)\nend", "   if n < 0 then\n      return nil\n   elseif n <\
    \ 4 then\n      return n\n   else\n      return fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4)\n   end\nend", "    if n == 0 then\n        return 0\n    elseif\
    \ n == 1 then\n        return 1\n    else\n        return fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\n    end\nend", "  if n < 4 then return n end\n\
    \  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend", "  local\
    \ fib4seq = {}\n  fib4seq[1] = 0\n  fib4seq[2] = 0\n  fib4seq[3] = 0\n  for i=4,n,1\
    \ do\n    fib4seq[i] = fib4seq[i - 1] + fib4seq[i - 2] + fib4seq[i - 3] + fib4seq[i\
    \ - 4]\n  end\n  return fib4seq[n]\nend", "  if n == 0 or n == 1 or n == 2 or\
    \ n == 3 then\n    return 0\n  elseif n == 4 then\n    return 4\n  elseif n >\
    \ 4 then\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n \
    \ else\n    return -1\n  end\nend", "\tassert(n > 0, \"fib4 requires a non-negative\
    \ integer\")\n\tif n == 1 then\n\t\treturn 0\n\telse\n\t\treturn fib4(n - 1) +\
    \ fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n\tend\nend", "  if n < 4 then return\
    \ n end\n  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend",
  "  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return 0\n  end\n\
    \  if n == 2 then\n    return 2\n  end\n  return fib4(n - 1) + fib4(n - 2) + fib4(n\
    \ - 3) + fib4(n - 4)\nend", "    if n<0 or n~=math.floor(n) then return nil end\n\
    \    if n<3 then return n\n    elseif n==3 then return 0\n    else\n        return\
    \ fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n    end\nend", "  if n < 1 then\
    \ return 0 end\n  if n < 4 then return n end\n  return fib4(n - 1) + fib4(n -\
    \ 2) + fib4(n - 3) + fib4(n - 4)\nend", "  if n < 4 then return n end\n  return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend", "  if n < 0 then\n\
    \    print('Error: fib4 not defined for n = ', n)\n    return nil\n  elseif n\
    \ < 4 then\n    return n\n  else\n    return fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4)\n  end\nend", "  if n==0 then\n    return 0\n  elseif n==1 then\n\
    \    return 0\n  elseif n==2 then\n    return 2\n  elseif n==3 then\n    return\
    \ 0\n  else\n    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n  end\n\
    end", "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  elseif\
    \ n == 2 then\n    return 2\n  elseif n == 3 then\n    return 0\n  elseif n ==\
    \ 4 then\n    return 0\n  elseif n == 5 then\n    return 4\n  elseif n == 6 then\n\
    \    return 8\n  elseif n == 7 then\n    return 14\n  else\n    return fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4) + fib4(n-5) + fib4(n-6) + fib4(n-7)\n  end\n\
    end", "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return\
    \ fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nend", "    if n < 0 or n > 100\
    \ then return nil end\n    if n < 4 then return n end\n    return fib4(n - 1)\
    \ + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\nend", "  if n == 0 then\n    return\
    \ 0\n  elseif n == 1 then\n    return 0\n  elseif n == 2 then\n    return 2\n\
    \  elseif n == 3 then\n    return 0\n  else\n    return fib4(n - 1) + fib4(n -\
    \ 2) + fib4(n - 3) + fib4(n - 4)\n  end\nend", "  if n < 0 then\n    return 0\n\
    \  end\n  if n < 1 then\n    return 1\n  end\n  local function fib4helper(k)\n\
    \    if k < 0 then\n      return 0\n    end\n    if k < 1 then\n      return 1\n\
    \    end\n    local t = fib4helper(k - 1)\n    return t + fib4helper(k - 2) +\
    \ fib4helper(k - 3) + fib4helper(k - 4)\n  end\n  return fib4helper(n)\nend",
  "  return fib(n-1) + fib(n-2) + fib(n-3) + fib(n-4)\nend", "  if n==0 then\n   \
    \ 0\n  elseif n==1 then\n    1\n  elseif n==2 then\n    2\n  elseif n>0 and n<=5\
    \ then\n    fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n  else\n    return\
    \ nil\n  end\nend", "  if n <= 0 then\n    return 0\n  end\n  if n <= 2 then\n\
    \    return 1\n  end\n  return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n\
    end", "\tif n < 1 then return 0 end\n\tif n < 3 then return 1 end\n\tif n < 5\
    \ then return 2 end\n\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n\
    \ - 4)\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"
